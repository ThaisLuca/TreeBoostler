Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), tempadvisedby(F, E) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(I, B), ta(J, A, K) )
%   | | | then return 0.7248156017661783;  // std dev = 1.862, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.4751702116952566;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   else return -0.14185106490048804;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3861400788776212;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7289931222161078;  // std dev = 0.104, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.17952207340358387;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.6189976143448207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.2733331822658218;  // std dev = 1.400, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5432012004602015;  // std dev = 3.388, 66.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   else return -0.1254446385283914;  // std dev = 0.000, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, E) )
%   | | | then return 0.303602461290583;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5736257435024834;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5711166968164066;  // std dev = 0.161, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(I, J) )
%   | | | then return 0.3798442498306727;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08582192980170869;  // std dev = 2.767, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.531780015311692;  // std dev = 1.315, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.3612749553179581;  // std dev = 3.473, 57.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=39 */
%   else return -0.11231637819360638;  // std dev = 7.30e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( publication(C, F) )
%   | | | then return 0.16218809707491913;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43322289990576746;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.429809839328362;  // std dev = 0.164, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return -0.23454900478574695;  // std dev = 0.190, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.224731353196344;  // std dev = 2.160, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( projectmember(L, B) )
%   | | | then return 0.4731880535983076;  // std dev = 1.099, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.326434455188414;  // std dev = 3.572, 72.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=53 */
%   else return -0.10159632948783649;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( sameperson(B, D) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.23370199076541995;  // std dev = 0.499, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5647028828547322;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B), publication(G, A) )
%   | | | then return 0.33642673007313983;  // std dev = 0.240, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.2694293876120034;  // std dev = 3.616, 77.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.33126801712556897;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10883892332154003;  // std dev = 1.597, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.3799459608497321;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( publication(I, A) )
%   | then return -0.09425897667016826;  // std dev = 0.170, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return -0.08967429368284828;  // std dev = 0.083, 77.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.20312844281716547;  // std dev = 3.837, 114.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=91 */
%   | | | else return -0.03274461493548617;  // std dev = 1.457, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.15504426477896097;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | then return 0.15862300422615033;  // std dev = 1.045, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(K, A), projectmember(L, B) )
%   | | | then return 0.1964546337237072;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07215731297037227;  // std dev = 2.156, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else return -0.08519386958379048;  // std dev = 0.002, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), professor(D) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.16559697068873144;  // std dev = 1.680, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.020823869141617664;  // std dev = 2.452, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.42306292745316404;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( ta(H, A, G) )
%   | | | then return 0.07540559150504184;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.31510884283353713;  // std dev = 0.959, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | | then return 0.0456496179768369;  // std dev = 1.664, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.20110973194685963;  // std dev = 2.238, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   else return -0.0787572625105888;  // std dev = 0.002, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( ta(E, C, F) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.32978839031766594;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12076065811720875;  // std dev = 0.400, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(D, B), ta(G, A, H) )
%   | | | then return 0.017114899123071108;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15090379138590224;  // std dev = 1.455, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( publication(I, B), publication(I, A) )
%   | | then return 0.19881630368808215;  // std dev = 0.114, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.26462319782384935;  // std dev = 0.813, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.08489555387962967;  // std dev = 4.126, 89.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=60 */
%   else return -0.07328241276142214;  // std dev = 0.002, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(F, D) )
%   | | | then return 0.2160524368436735;  // std dev = 0.184, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11199050848719881;  // std dev = 0.950, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( ta(G, D, H) )
%   | | | then return 0.054062424734780436;  // std dev = 2.148, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | | else return -0.09381219386455086;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | else if ( hasposition(I, C), tempadvisedby(J, I) )
%   | | then if ( ta(K, A, L) )
%   | | | then return 0.13816388933927512;  // std dev = 1.454, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.29747138616857316;  // std dev = 0.633, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.11444825977600853;  // std dev = 1.244, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.030406561154797195;  // std dev = 1.307, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.06779667916890446;  // std dev = 0.052, 190.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.27007534465649236;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10244899114538542;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(G, A), ta(H, C, I) )
%   | | | then return 0.14633014876214934;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23948824556765233;  // std dev = 1.237, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( ta(J, A, K), publication(L, A) )
%   | | then if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.06025921763158479;  // std dev = 1.041, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.24902178230471517;  // std dev = 1.178, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(Q, B), projectmember(R, B) )
%   | | | then return -0.11108283624030231;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09599330412815478;  // std dev = 3.576, 98.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=77 */
%   else return -0.06422284821640017;  // std dev = 0.002, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 326

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.006 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.574 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [4.21e-08, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [5.27e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [7.45e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [7.45e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan], 'true,true,true': [1.6148698540002277e-16, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'true': [-2.0185873175002846e-16, nan]}, {'': [1.6148698540002277e-16, 0.0], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}, {'': [-6.055761952500853e-17, 0.0], 'false': [0.0, nan], 'true': [-6.055761952500853e-17, nan], 'true,true': [-6.055761952500853e-17, nan]}, {'': [4.0371746350005693e-17, 2.523234146875356e-18], 'true': [4.0371746350005693e-17, nan], 'true,true': [4.0371746350005693e-17, nan]}, {'': [-2.5232341468753557e-17, 0.0], 'true': [-2.5232341468753557e-17, nan], 'true,true': [-2.5232341468753557e-17, nan], 'true,true,true': [-2.5232341468753557e-17, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan]}, {'': [2.523234146875356e-18, 2.523234146875356e-18], 'true': [2.523234146875356e-18, nan], 'true,true': [2.523234146875356e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.934397
   AUC PR    = 0.886866
   CLL	      = -0.257513
   Precision = 0.857895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.923513


Total learning time: 0.689 seconds
Total inference time: 0.834 seconds
AUC ROC: 0.934397


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.457 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.726 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0
Total revision time: 2.726
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.726, 'Inference time': 1.516, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.006, 'Inference time': 1.516}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253573;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.1527438580936709;  // std dev = 2.58e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.031 seconds
Total inference time: 1.274 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.518 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [5.96e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [7.3e-08, 0, 22], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 22], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [3.65e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [2.11e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.18e-08, 22, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [2.11e-08, 0, 22], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [2.58e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 22, 0]}]]
[{'': [1.6148698540002277e-16, 5.046468293750712e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}, {'': [2.4223047810003414e-16, -2.523234146875356e-18], 'true': [2.4223047810003414e-16, nan], 'true,true': [2.4223047810003414e-16, nan], 'true,true,true': [2.4223047810003414e-16, nan]}, {'': [-2.8260222445003984e-16, 7.569702440626067e-18], 'true': [-2.8260222445003984e-16, nan]}, {'': [6.055761952500853e-17, -1.261617073437678e-18], 'true': [6.055761952500853e-17, nan], 'true,true': [6.055761952500853e-17, nan]}, {'': [2.0185873175002847e-17, 6.308085367188389e-18], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan], 'false': [6.308085367188389e-18, nan]}, {'': [0.0, 1.0092936587501423e-17], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [2.0185873175002847e-17, 0.0], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan], 'true,true,true': [2.0185873175002847e-17, nan]}, {'': [-3.027880976250427e-17, -1.8924256101565167e-18], 'true': [-3.027880976250427e-17, nan], 'true,true': [-3.027880976250427e-17, nan]}, {'': [3.027880976250427e-17, -3.784851220313033e-18], 'true': [3.027880976250427e-17, nan], 'true,true': [3.027880976250427e-17, nan]}, {'': [2.523234146875356e-18, 1.261617073437678e-18], 'true': [2.523234146875356e-18, nan], 'true,true': [2.523234146875356e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253573;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936709;  // std dev = 2.58e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.934397
   AUC PR    = 0.886866
   CLL	      = -0.257513
   Precision = 0.857895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.923513


Total learning time: 0.704 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.934397


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.471 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.724 seconds
Total inference time: 1.274 seconds
AUC ROC: 1.0
Total revision time: 2.724
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.724, 'Inference time': 1.274, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.031, 'Inference time': 1.274}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 7.45e-09, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831014;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253545;  // std dev = 4.71e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.166 seconds
Total inference time: 1.162 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.598 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.23e-07, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [0.0, 0, 33], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.45e-09, 0, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 33, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.17e-08, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [4.71e-08, 0, 33], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 33, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}]]
[{'': [1.5072118637335459e-15, 3.027880976250427e-17], 'true': [1.5072118637335459e-15, nan], 'true,true': [1.5072118637335459e-15, nan]}, {'': [-6.459479416000911e-16, -3.3643121958338078e-18], 'true': [-6.459479416000911e-16, nan], 'true,true': [-6.459479416000911e-16, nan], 'true,true,true': [-6.459479416000911e-16, nan]}, {'': [1.0765799026668185e-16, -1.1775092685418327e-17], 'true': [1.0765799026668185e-16, nan]}, {'': [-2.691449756667046e-16, 0.0], 'true': [-2.691449756667046e-16, nan], 'true,true': [-2.691449756667046e-16, nan]}, {'': [0.0, -5.046468293750712e-18], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false': [-5.046468293750712e-18, nan]}, {'': [0.0, 1.4298326832293682e-17], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [6.728624391667616e-17, 0.0], 'true': [6.728624391667616e-17, nan], 'true,true': [6.728624391667616e-17, nan], 'true,true,true': [6.728624391667616e-17, nan]}, {'': [-4.710037074167331e-17, 2.523234146875356e-18], 'true': [-4.710037074167331e-17, nan], 'true,true': [-4.710037074167331e-17, nan]}, {'': [-4.0371746350005693e-17, -3.3643121958338078e-18], 'true': [-4.0371746350005693e-17, nan], 'true,true': [-4.0371746350005693e-17, nan]}, {'': [-6.7286243916676156e-18, -1.6821560979169039e-18], 'true': [-6.7286243916676156e-18, nan], 'true,true': [-6.7286243916676156e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109547;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 5.96e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415831014;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601494;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253545;  // std dev = 4.71e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.07877675473109179;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1770964977452775;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367083;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else return -0.06419184008202623;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.934397
   AUC PR    = 0.886866
   CLL	      = -0.257513
   Precision = 0.857895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.923513


Total learning time: 0.822 seconds
Total inference time: 0.75 seconds
AUC ROC: 0.934397


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.517 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1029999999999998 seconds
Total inference time: 1.162 seconds
AUC ROC: 1.0
Total revision time: 3.1029999999999998
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1029999999999998, 'Inference time': 1.162, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.166, 'Inference time': 1.162}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.38e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109551;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253548;  // std dev = 5.77e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801106;  // std dev = 3.23e-09, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.159 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.685 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.38e-07, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [0.0, 0, 44], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 44], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [2.98e-08, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 44, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [5.77e-08, 0, 44], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [3.23e-09, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}]]
[{'': [1.2918958832001822e-15, 4.794144879063176e-17], 'true': [1.2918958832001822e-15, nan], 'true,true': [1.2918958832001822e-15, nan]}, {'': [-1.049665405100148e-15, -2.7755575615628914e-17], 'true': [-1.049665405100148e-15, nan], 'true,true': [-1.049665405100148e-15, nan], 'true,true,true': [-1.049665405100148e-15, nan]}, {'': [-4.0371746350005693e-17, 5.046468293750712e-18], 'true': [-4.0371746350005693e-17, nan]}, {'': [-4.037174635000569e-16, 1.261617073437678e-18], 'true': [-4.037174635000569e-16, nan], 'true,true': [-4.037174635000569e-16, nan]}, {'': [2.0185873175002847e-17, -1.6401021954689813e-17], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan], 'false': [-1.6401021954689813e-17, nan]}, {'': [-2.0185873175002847e-17, 1.1354553660939102e-17], 'true': [-2.0185873175002847e-17, nan], 'true,true': [-2.0185873175002847e-17, nan]}, {'': [7.569702440626067e-17, 0.0], 'true': [7.569702440626067e-17, nan], 'true,true': [7.569702440626067e-17, nan], 'true,true,true': [7.569702440626067e-17, nan]}, {'': [-8.074349270001139e-17, 3.1540426835941946e-18], 'true': [-8.074349270001139e-17, nan], 'true,true': [-8.074349270001139e-17, nan]}, {'': [-4.5418214643756407e-17, 1.8924256101565167e-18], 'true': [-4.5418214643756407e-17, nan], 'true,true': [-4.5418214643756407e-17, nan]}, {'': [1.5139404881252134e-17, -2.523234146875356e-18], 'true': [1.5139404881252134e-17, nan], 'true,true': [1.5139404881252134e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 2.38e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109551;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462839;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415831025;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.32071184716014944;  // std dev = 2.98e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694896;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253548;  // std dev = 5.77e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527753;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367083;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801106;  // std dev = 2.58e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   else return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 0.934397
   AUC PR    = 0.886866
   CLL	      = -0.257513
   Precision = 0.857895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.923513


Total learning time: 0.857 seconds
Total inference time: 0.85 seconds
AUC ROC: 0.934397


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.554 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.255 seconds
Total inference time: 1.446 seconds
AUC ROC: 1.0
Total revision time: 3.255
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.255, 'Inference time': 1.446, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122771, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.159, 'Inference time': 1.446}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3134591607855986;  // std dev = 0.410, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.24990077906742722;  // std dev = 0.050, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2118412579273839;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1521485017637875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17314659197100657;  // std dev = 0.309, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.1546155007348445;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.1548770712484999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1307097179558536;  // std dev = 0.036, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.302 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.65 seconds
Parameter learned model CLL: -0.096499


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.41, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 55, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.05, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.309, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [1.49e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.036, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.012304599783948732, -3.633457171500512e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.007683847065712494, 2.62416351275037e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004644692439814939, 2.62416351275037e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan]}, {'': [0.0029456817402654088, -2.0185873175002845e-18], 'true': [0.0029456817402654088, nan], 'true,true': [0.0029456817402654088, nan], 'false': [-2.0185873175002845e-18, nan]}, {'': [0.002478210910026975, 6.0557619525008536e-18], 'true': [0.002478210910026975, nan], 'true,true': [0.002478210910026975, nan]}, {'': [0.0022835821880460763, 4.037174635000569e-18], 'true': [0.0022835821880460763, nan], 'true,true': [0.0022835821880460763, nan], 'true,true,true': [-1.2688263138573217e-16, 0.0]}, {'': [0.0016796060194094323, 3.0278809762504268e-18], 'true': [0.0016796060194094323, nan], 'true,true': [0.0016796060194094323, nan]}, {'': [0.00165096845747014, 4.037174635000569e-18], 'true': [3.96508223080413e-18, 0.0], 'true,true': [3.96508223080413e-18, nan], 'true,false': [0.0, nan]}, {'': [0.0012671118158583195, -3.0278809762504268e-18], 'true': [0.0012671118158583195, nan], 'true,true': [0.0012671118158583195, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3069317430485025;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2451424254180163;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.20158404065795077;  // std dev = 0.065, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16980053446281318;  // std dev = 0.065, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1554123324522015;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20460628370031336;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13369765816718182;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12792553824385322;  // std dev = 0.056, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116559
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.373 seconds
Total inference time: 0.824 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.636 seconds
Refined model CLL: -0.097264


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.9610000000000003 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0
Total revision time: 3.9610000000000003
Best scored revision CLL: -0.096499


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111796, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.9610000000000003, 'Inference time': 1.427, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111796, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.302, 'Inference time': 1.427}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 324

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.91 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.47 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [4.21e-08, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [4.21e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [5.27e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [7.45e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [7.45e-09, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan], 'true,true,true': [1.6148698540002277e-16, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'true': [-2.0185873175002846e-16, nan]}, {'': [1.6148698540002277e-16, 0.0], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}, {'': [-6.055761952500853e-17, 0.0], 'false': [0.0, nan], 'true': [-6.055761952500853e-17, nan], 'true,true': [-6.055761952500853e-17, nan]}, {'': [4.0371746350005693e-17, 2.523234146875356e-18], 'true': [4.0371746350005693e-17, nan], 'true,true': [4.0371746350005693e-17, nan]}, {'': [-2.5232341468753557e-17, 0.0], 'true': [-2.5232341468753557e-17, nan], 'true,true': [-2.5232341468753557e-17, nan], 'true,true,true': [-2.5232341468753557e-17, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan]}, {'': [2.523234146875356e-18, 2.523234146875356e-18], 'true': [2.523234146875356e-18, nan], 'true,true': [2.523234146875356e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.935723
   AUC PR    = 0.889029
   CLL	      = -0.255332
   Precision = 0.859416 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.924394


Total learning time: 0.743 seconds
Total inference time: 0.795 seconds
AUC ROC: 0.935723


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.412 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5349999999999997 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0
Total revision time: 2.5349999999999997
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.5349999999999997, 'Inference time': 1.477, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.91, 'Inference time': 1.477}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.1527438580936709;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.016 seconds
Total inference time: 1.437 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.499 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [8.43e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [5.96e-08, 0, 23], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [4.21e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [2.98e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.18e-08, 23, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.49e-08, 0, 23], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [2.58e-08, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}]]
[{'': [3.089316242435218e-16, 9.654113257610057e-18], 'true': [3.089316242435218e-16, nan], 'true,true': [3.089316242435218e-16, nan]}, {'': [1.544658121217609e-16, -2.413528314402514e-18], 'true': [1.544658121217609e-16, nan], 'true,true': [1.544658121217609e-16, nan], 'true,true,true': [1.544658121217609e-16, nan]}, {'': [-2.703151712130816e-16, 4.827056628805028e-18], 'true': [-2.703151712130816e-16, nan]}, {'': [7.723290606088045e-17, -2.413528314402514e-18], 'true': [7.723290606088045e-17, nan], 'true,true': [7.723290606088045e-17, nan]}, {'': [3.8616453030440226e-17, 6.033820786006285e-18], 'true': [3.8616453030440226e-17, nan], 'true,true': [3.8616453030440226e-17, nan], 'false': [6.033820786006285e-18, nan]}, {'': [-9.654113257610057e-18, 1.0860877414811314e-17], 'true': [-9.654113257610057e-18, nan], 'true,true': [-9.654113257610057e-18, nan]}, {'': [9.654113257610057e-18, -4.827056628805028e-18], 'true': [9.654113257610057e-18, nan], 'true,true': [9.654113257610057e-18, nan], 'true,true,true': [9.654113257610057e-18, nan]}, {'': [-2.896233977283017e-17, -1.206764157201257e-18], 'true': [-2.896233977283017e-17, nan], 'true,true': [-2.896233977283017e-17, nan]}, {'': [2.896233977283017e-17, -3.620292471603771e-18], 'true': [2.896233977283017e-17, nan], 'true,true': [2.896233977283017e-17, nan]}, {'': [0.0, -1.8101462358018856e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.32071184716014955;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936709;  // std dev = 2.58e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.935723
   AUC PR    = 0.889029
   CLL	      = -0.255332
   Precision = 0.859416 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.924394


Total learning time: 0.788 seconds
Total inference time: 0.798 seconds
AUC ROC: 0.935723


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.7969999999999997 seconds
Total inference time: 1.437 seconds
AUC ROC: 1.0
Total revision time: 2.7969999999999997
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.7969999999999997, 'Inference time': 1.437, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.016, 'Inference time': 1.437}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462844;  // std dev = 1.29e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601495;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20975771563253542;  // std dev = 4.94e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.1527438580936709;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801115;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.03 seconds
Total inference time: 1.371 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.51 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.38e-07, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 34, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [0.0, 0, 34], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 34, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.29e-08, 0, 34], 'true,false': [0.0, 0, 0], 'false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [2.11e-08, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 34, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 34, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [4.94e-08, 0, 34], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 34, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [3.33e-08, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 34, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 34, 0]}]]
[{'': [1.6718652606120004e-15, 3.2653618371328135e-17], 'true': [1.6718652606120004e-15, nan], 'true,true': [1.6718652606120004e-15, nan]}, {'': [-7.314410515177502e-16, 3.2653618371328133e-18], 'true': [-7.314410515177502e-16, nan], 'true,true': [-7.314410515177502e-16, nan], 'true,true,true': [-7.314410515177502e-16, nan]}, {'': [1.5673736818237505e-16, -1.1428766429964846e-17], 'true': [1.5673736818237505e-16, nan]}, {'': [-2.873518416676876e-16, 0.0], 'true': [-2.873518416676876e-16, nan], 'true,true': [-2.873518416676876e-16, nan]}, {'': [1.3061447348531253e-17, -6.530723674265627e-18], 'true': [1.3061447348531253e-17, nan], 'true,true': [1.3061447348531253e-17, nan], 'false': [-6.530723674265627e-18, nan]}, {'': [-1.3061447348531253e-17, 1.469412826709766e-17], 'true': [-1.3061447348531253e-17, nan], 'true,true': [-1.3061447348531253e-17, nan]}, {'': [7.18379604169219e-17, 0.0], 'true': [7.18379604169219e-17, nan], 'true,true': [7.18379604169219e-17, nan], 'true,true,true': [7.18379604169219e-17, nan]}, {'': [-5.224578939412501e-17, 1.6326809185664067e-18], 'true': [-5.224578939412501e-17, nan], 'true,true': [-5.224578939412501e-17, nan]}, {'': [3.2653618371328135e-17, -2.44902137784961e-18], 'true': [3.2653618371328135e-17, nan], 'true,true': [3.2653618371328135e-17, nan]}, {'': [-3.2653618371328133e-18, -8.163404592832033e-19], 'true': [-3.2653618371328133e-18, nan], 'true,true': [-3.2653618371328133e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462844;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583102;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601495;  // std dev = 2.11e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.09269127618926098;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253542;  // std dev = 4.94e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.1770964977452775;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936709;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.06842697784420274;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801115;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.935723
   AUC PR    = 0.889029
   CLL	      = -0.255332
   Precision = 0.859416 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.924394


Total learning time: 0.775 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.935723


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.557 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12252
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.872 seconds
Total inference time: 1.371 seconds
AUC ROC: 1.0
Total revision time: 2.872
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.872, 'Inference time': 1.371, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.12252, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.03, 'Inference time': 1.371}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.31191603602505563;  // std dev = 0.409, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926101;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.24877708755046007;  // std dev = 0.055, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21228686384783058;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.15180480327462992;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17230625894577106;  // std dev = 0.309, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15501609696692115;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.15446345857128285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1300097931752996;  // std dev = 0.039, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.129 seconds
Total inference time: 1.192 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.604 seconds
Parameter learned model CLL: -0.096895


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.06e-07, 0, 46], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 45, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 46], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 45, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 46], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 45, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 45, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.409, 1, 46], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 45, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.055, 1, 46], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 45, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 46], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 45, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.309, 1, 46], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 45, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 45, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.039, 1, 46], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 45, 0]}]]
[{'': [0.020823902218199193, 4.9343245538895844e-17], 'true': [9.267948727305654e-16, 0.0], 'true,true': [9.267948727305654e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01486590293046463, -2.960594732333751e-17], 'true': [-9.267948727305654e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.267948727305654e-16, nan], 'true,true,true': [-9.267948727305654e-16, nan]}, {'': [0.00928330271744616, 7.401486830834377e-18], 'true': [-3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005611523183568028, 2.4671622769447924e-18], 'true': [-3.8616453030440226e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.8616453030440226e-16, nan]}, {'': [0.0035588495021150893, -1.7270135938613546e-17], 'true': [0.0035588495021150893, nan], 'true,true': [0.0035588495021150893, nan], 'false': [-1.7270135938613546e-17, nan]}, {'': [0.0029961004997067398, 9.86864910777917e-18], 'true': [0.0029961004997067398, nan], 'true,true': [0.0029961004997067398, nan]}, {'': [0.0027604735786004877, 0.0], 'true': [0.0027604735786004877, nan], 'true,true': [0.0027604735786004877, nan], 'true,true,true': [-4.827056628805028e-17, 0.0]}, {'': [0.002029977981813794, 2.4671622769447924e-18], 'true': [0.002029977981813794, nan], 'true,true': [0.002029977981813794, nan]}, {'': [0.001994463279140624, 2.4671622769447924e-18], 'true': [-3.37893964016352e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.37893964016352e-17, nan]}, {'': [0.0015307564058324003, -1.8503717077085942e-18], 'true': [0.0015307564058324003, nan], 'true,true': [0.0015307564058324003, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.307376262535975;  // std dev = 0.073, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else return -0.09269127618926101;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.24546690070815452;  // std dev = 0.067, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.20184769147963888;  // std dev = 0.064, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.17003431361336319;  // std dev = 0.064, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else return -0.07324622576333704;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15599468306984474;  // std dev = 0.016, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.20481246199897948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13363022319470574;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.12804262231559527;  // std dev = 0.055, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.26 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.541 seconds
Refined model CLL: -0.097837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111911
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5340000000000003 seconds
Total inference time: 1.192 seconds
AUC ROC: 1.0
Total revision time: 3.5340000000000003
Best scored revision CLL: -0.096895


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111911, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.5340000000000003, 'Inference time': 1.192, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111911, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.129, 'Inference time': 1.192}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3069317430485027;  // std dev = 0.575, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.24514242541801626;  // std dev = 0.068, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21373170940834993;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15069835310362514;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.16959199586382004;  // std dev = 0.434, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15631575938540837;  // std dev = 2.58e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.15313251145947387;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12775276095820626;  // std dev = 0.049, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.391 seconds
Total inference time: 1.543 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098175
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.641 seconds
Parameter learned model CLL: -0.098175


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.29e-08, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.575, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.068, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [4.21e-08, 0, 58], 'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.434, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [2.58e-08, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.049, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}]]
[{'': [0.03222222222222181, 5.947623346206196e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.0230030098461001, -3.766828119263924e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.014364677666239759, 2.7755575615628914e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan]}, {'': [0.005506846810506941, -9.912705577010326e-19], 'true': [0.005506846810506941, nan], 'true,true': [0.005506846810506941, nan], 'false': [-9.912705577010326e-19, nan]}, {'': [0.004646288451887763, 5.9476233462061954e-18], 'true': [0.004646288451887763, nan], 'true,true': [0.004646288451887763, nan]}, {'': [0.004279409826013336, 5.9476233462061954e-18], 'true': [0.004279409826013336, nan], 'true,true': [0.004279409826013336, nan], 'true,true,true': [3.062684205862501e-17, 0.0]}, {'': [0.003144967578891152, 2.9738116731030977e-18], 'true': [0.003144967578891152, nan], 'true,true': [0.003144967578891152, nan]}, {'': [0.0030855430417086123, 4.956352788505163e-18], 'true': [1.1485065771984378e-17, 0.0], 'true,true': [1.1485065771984378e-17, nan], 'true,false': [0.0, nan]}, {'': [0.00236817537820736, -2.9738116731030977e-18], 'true': [0.00236817537820736, nan], 'true,true': [0.00236817537820736, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.301025984143511;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24082547962947035;  // std dev = 0.081, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24746228307832957;  // std dev = 0.060, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1980808906521145;  // std dev = 0.078, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.2034701240301653;  // std dev = 0.058, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1667038041752725;  // std dev = 0.077, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.17147516912973995;  // std dev = 0.057, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15788566611417781;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2039834552072307;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12522094847761073;  // std dev = 0.066, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1289531262194369;  // std dev = 0.049, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.375 seconds
Total inference time: 0.819 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.586 seconds
Refined model CLL: -0.099687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.993 seconds
Total inference time: 1.543 seconds
AUC ROC: 1.0
Total revision time: 3.993
Best scored revision CLL: -0.098175


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.112475, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.993, 'Inference time': 1.543, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.112475, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.391, 'Inference time': 1.543}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 204

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462844;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.28891160690250256;  // std dev = 0.562, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.010659504648091683;  // std dev = 1.187, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21582529433383663;  // std dev = 0.144, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09359163688281417;  // std dev = 1.29e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23804166813760308;  // std dev = 0.142, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.12247979091316266;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08594835015102613;  // std dev = 1.49e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1464218009422166;  // std dev = 0.754, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07943204881754462;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16250551505665187;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14772843812674666;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.00915444690865499;  // std dev = 0.821, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11483099856641735;  // std dev = 0.108, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07319097636208323;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.211 seconds
Total inference time: 0.981 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122128
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.616 seconds
Parameter learned model CLL: -0.122128


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.38e-07, 0, 35], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.58e-08, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.49e-08, 0, 35], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.562, 2, 24], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.187, 33, 11], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.144, 7, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.142, 0, 35], 'true,true,true,false': [0.037, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 28, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.754, 7, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 28, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 24], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.821, 33, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.108, 7, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}]]
[{'': [0.13888888888889064, 2.3790493384824782e-17], 'true': [1.6240976817373718e-15, -7.93016446160826e-18], 'true,true': [1.6240976817373718e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.09915090450905215, -5.9476233462061954e-18], 'true': [-7.105427357601002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-7.105427357601002e-16, nan], 'true,true,true': [-7.105427357601002e-16, nan]}, {'': [0.06191671407861943, -5.9476233462061954e-18], 'true': [2.5376526277146434e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.037427097561903946, -1.982541115402065e-18], 'true': [-2.791417890486108e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.791417890486108e-16, nan]}, {'': [0.012135063365328888, 0.03204415169907144], 'false': [0.03204415169907144, nan], 'true': [0.012135063365328888, nan], 'true,true': [0.012135063365328888, nan]}, {'': [0.020703439641545602, 5.9476233462061954e-18], 'true': [0.020703439641545602, nan], 'true,true': [0.020703439641545602, nan]}, {'': [0.018565161772632472, 7.93016446160826e-18], 'true': [0.018565161772632472, nan], 'true,true': [0.018565161772632472, nan], 'true,true,true': [0.0005759345830564033, 0.00019819569043533214]}, {'': [0.013540975675817489, 9.912705577010326e-19], 'true': [0.013540975675817489, nan], 'true,true': [0.013540975675817489, nan]}, {'': [0.006833972002920615, 0.015317258741298372], 'true': [-3.23815048849004e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.23815048849004e-17, nan]}, {'': [0.011710412098786609, -5.9476233462061954e-18], 'true': [0.011710412098786609, nan], 'true,true': [0.011710412098786609, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109548;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462844;  // std dev = 9.42e-08, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601495;  // std dev = 2.98e-08, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17128645291738528;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.156325406305938;  // std dev = 0.112, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18418418896654412;  // std dev = 0.006, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.09125010655480795;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1583412695223222;  // std dev = 0.004, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.08420753631998919;  // std dev = 0.000816, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15757289286119094;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.08386141764646111;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13817460649681484;  // std dev = 0.005, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07772433221593975;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.254 seconds
Total inference time: 0.773 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097802
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.613 seconds
Refined model CLL: -0.097802


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.694 seconds
Total inference time: 0.773 seconds
AUC ROC: 1.0
Total revision time: 3.694
Best scored revision CLL: -0.097802


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096837, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.694, 'Inference time': 0.773, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.108002, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.211, 'Inference time': 0.981}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210954;  // std dev = 1.88e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 3.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 2.98e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.25765035376786666;  // std dev = 1.142, 59.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.01190469477866209;  // std dev = 1.637, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21081646424716627;  // std dev = 0.152, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09369732262300444;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2417591937195681;  // std dev = 0.177, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | | else return -0.12844669557478292;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08603791326636877;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14237774545790488;  // std dev = 1.150, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07950885716111394;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16754793859589312;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14199591838146378;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.006838736238662392;  // std dev = 1.126, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11111635832218045;  // std dev = 0.113, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073414385367192;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110141
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.52 seconds
Total inference time: 1.09 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.669 seconds
Parameter learned model CLL: -0.124324


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 71], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [1.88e-07, 0, 71], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.73e-08, 0, 71], 'true,false,true,true': [1.39e-08, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 71], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.142, 9, 50], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.637, 62, 21], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.152, 16, 71], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.177, 0, 71], 'true,true,true,false': [0.054, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.15, 16, 71], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 50], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.126, 62, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.113, 16, 71], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}]]
[{'': [0.15008587660192782, 4.844609562000683e-17], 'true': [-1.3009937415325778e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-1.3009937415325778e-15, nan]}, {'': [0.10714428301763047, -3.431598439750484e-17], 'true': [5.003822082817607e-16, 3.469446951953614e-18], 'true,true': [5.003822082817607e-16, nan], 'true,true,true': [5.003822082817607e-16, nan], 'true,false': [3.469446951953614e-18, nan], 'true,false,true': [3.469446951953614e-18, nan]}, {'': [0.06690833502336412, 2.2204460492503132e-17], 'true': [1.3510319623607538e-15, 1.214306433183765e-17], 'true,false': [1.214306433183765e-17, nan], 'true,false,true': [1.214306433183765e-17, nan]}, {'': [0.04044440697295899, 1.6148698540002276e-17], 'true': [-1.0007644165635214e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,true': [-1.0007644165635214e-16, nan]}, {'': [0.022093066382582995, 0.03229998394518119], 'false': [0.03229998394518119, nan], 'true': [0.022093066382582995, nan], 'true,true': [0.022093066382582995, nan]}, {'': [0.0231767198625282, -1.1102230246251566e-17], 'true': [0.0231767198625282, nan], 'true,true': [0.0231767198625282, nan]}, {'': [0.020964468192577544, -1.0092936587501423e-17], 'true': [0.020964468192577544, nan], 'true,true': [0.020964468192577544, nan], 'true,true,true': [0.000443058913556599, 0.00018086056658118618]}, {'': [0.015205978545922249, -1.0092936587501423e-18], 'true': [0.015205978545922249, nan], 'true,true': [0.015205978545922249, nan]}, {'': [0.01238662158189834, 0.015276513696242713], 'true': [-5.773159728050814e-17, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan], 'true,true': [-5.773159728050814e-17, nan]}, {'': [0.012710164460115308, -7.065055611250995e-18], 'true': [0.012710164460115308, nan], 'true,true': [0.012710164460115308, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210954;  // std dev = 1.88e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.10e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1123163781936063;  // std dev = 3.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.10159632948783624;  // std dev = 2.98e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014994;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.08518475138839683;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839679;  // std dev = 1.97e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14563894444061837;  // std dev = 0.120, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | else return 0.16853850558058875;  // std dev = 0.101, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18488500800440213;  // std dev = 0.015, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.09072556317811403;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1582209879209751;  // std dev = 0.010, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return -0.08324559560424193;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15959497554338078;  // std dev = 0.006, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.08385909797749881;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13858369661249534;  // std dev = 0.011, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.07734020131564334;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096946
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.689 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098108
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.697 seconds
Refined model CLL: -0.098108


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096946
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.575 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0
Total revision time: 4.575
Best scored revision CLL: -0.098108


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096946, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.575, 'Inference time': 0.75, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.110141, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.52, 'Inference time': 1.09}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995111;  // std dev = 4.92e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.28e-08, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830964;  // std dev = 2.80e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.48e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.253309164005355;  // std dev = 1.465, 92.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.00721447862018003;  // std dev = 1.939, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2055688809993619;  // std dev = 0.156, 132.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09329979649046807;  // std dev = 1.05e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.242507806874448;  // std dev = 0.213, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | | else return -0.1277522832596385;  // std dev = 0.068, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08570095520441053;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13879920045613114;  // std dev = 1.453, 132.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07921982935085911;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16928720365926772;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14048308085830813;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.009507641239602587;  // std dev = 1.343, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10790168860615579;  // std dev = 0.115, 132.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07298457046006765;  // std dev = 3.33e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.711 seconds
Total inference time: 1.066 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.672 seconds
Parameter learned model CLL: -0.125065


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [4.92e-07, 0, 106], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 106], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.28e-08, 0, 106], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [2.8e-07, 0, 106], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.48e-08, 80, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.465, 15, 77], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.939, 91, 29], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.156, 26, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.213, 0, 106], 'true,true,true,false': [0.068, 26, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.453, 26, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 77], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.343, 91, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.115, 26, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 80, 0]}]]
[{'': [0.1581726354453658, 6.106226635438361e-17], 'true': [2.2790993411173024e-15, 1.708035422500241e-17], 'true,true': [2.2790993411173024e-15, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [1.708035422500241e-17, nan]}, {'': [0.11291731108551578, -2.7755575615628914e-17], 'true': [-6.032910020604624e-16, -4.270088556250602e-18], 'true,false': [-4.270088556250602e-18, nan], 'true,false,true': [-4.270088556250602e-18, nan], 'true,true': [-6.032910020604624e-16, nan], 'true,true,true': [-6.032910020604624e-16, nan]}, {'': [0.07051341487631282, 4.718447854656915e-17], 'true': [1.8098730061813873e-15, -2.135044278125301e-18], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [-2.135044278125301e-18, nan]}, {'': [0.04262358714074715, 3.7470027081099036e-17], 'true': [7.373556691850097e-16, -2.135044278125301e-18], 'true,true': [7.373556691850097e-16, nan], 'true,false': [-2.135044278125301e-18, nan]}, {'': [0.023321358041857015, 0.0313201912347593], 'false': [0.031320191234759306, nan], 'true': [0.023321358041857015, nan], 'true,true': [0.023321358041857015, nan]}, {'': [0.02433809035382066, 1.3877787807814458e-18], 'true': [0.02433809035382066, nan], 'true,true': [0.02433809035382066, nan]}, {'': [0.022062950919058005, -2.0816681711721685e-17], 'true': [0.022062950919058005, nan], 'true,true': [0.022062950919058005, nan], 'true,true,true': [0.0004280577956200285, 0.00017728656162474971]}, {'': [0.015993790294237094, -1.3877787807814457e-17], 'true': [0.015993790294237094, nan], 'true,true': [0.015993790294237094, nan]}, {'': [0.01309440709965321, 0.015031559256200928], 'true': [-1.1534784671430197e-16, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan], 'true,true': [-1.1534784671430197e-16, nan]}, {'': [0.013270749053364072, 1.3877787807814457e-17], 'true': [0.013270749053364072, nan], 'true,true': [0.013270749053364072, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995111;  // std dev = 4.92e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109547;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.12544463852839152;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.38e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830964;  // std dev = 2.80e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783617;  // std dev = 5.48e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.3207118471601502;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   else return -0.09269127618926105;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.08518475138839682;  // std dev = 1.05e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14418169964080252;  // std dev = 0.121, 66.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   | | else return 0.16166863723859812;  // std dev = 0.108, 66.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 3.94e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18548519185005047;  // std dev = 0.014, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.09050586958605529;  // std dev = 0.004, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15874278685740106;  // std dev = 0.010, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.08320692072078799;  // std dev = 0.002, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.16029249949233826;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.08276119177006196;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.05941041722393818;  // std dev = 0.446, 90.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1399879784442524;  // std dev = 0.054, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.07759225586725921;  // std dev = 0.006, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06473560918054411;  // std dev = 3.07e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.937 seconds
Total inference time: 0.725 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.667 seconds
Refined model CLL: -0.0991


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.987 seconds
Total inference time: 0.725 seconds
AUC ROC: 1.0
Total revision time: 4.987
Best scored revision CLL: -0.0991


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.097602, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.987, 'Inference time': 0.725, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.110863, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.711, 'Inference time': 1.066}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995101;  // std dev = 8.68e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109558;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830897;  // std dev = 4.26e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 2.98e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.26465718636701013;  // std dev = 1.537, 118.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=102 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.006923934256380552;  // std dev = 2.278, 166.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20991532978586488;  // std dev = 0.151, 174.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09327522081029234;  // std dev = 4.34e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.24066884912180767;  // std dev = 0.259, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return -0.12682684559797466;  // std dev = 0.080, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08568011717832857;  // std dev = 2.11e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14198715594002156;  // std dev = 1.617, 174.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07920195037264871;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16690388811826815;  // std dev = 4.21e-08, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14289190776277289;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010174290981545878;  // std dev = 1.576, 166.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11067918038509492;  // std dev = 0.112, 174.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0729241141167842;  // std dev = 3.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.377 seconds
Total inference time: 1.034 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.729 seconds
Parameter learned model CLL: -0.123689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [8.68e-07, 0, 142], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 142], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.21e-08, 0, 142], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [4.26e-07, 0, 142], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 110, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.537, 16, 102], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.278, 126, 40], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.151, 32, 142], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.34e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.259, 0, 142], 'true,true,true,false': [0.08, 32, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.617, 32, 142], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [4.21e-08, 0, 102], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.576, 126, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.112, 32, 142], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 110, 0]}]]
[{'': [0.15008587660193404, 6.863196879500968e-17], 'true': [5.304051407786663e-15, 2.7755575615628914e-17], 'true,true': [5.304051407786663e-15, nan], 'true,false': [2.7755575615628914e-17, nan], 'true,false,true': [2.7755575615628914e-17, nan]}, {'': [0.10714428301762749, -8.074349270001138e-18], 'true': [-2.201681716439747e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-2.201681716439747e-15, nan], 'true,true,true': [-2.201681716439747e-15, nan]}, {'': [0.0669083350233662, 6.257620684250882e-17], 'true': [1.8013759498143385e-15, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [-1.0408340855860843e-17, nan]}, {'': [0.04044440697295946, 8.074349270001138e-18], 'true': [1.2759746311184898e-15, -1.734723475976807e-18], 'true,true': [1.2759746311184898e-15, nan], 'true,false': [-1.734723475976807e-18, nan]}, {'': [0.02003104685354186, 0.031258048979207684], 'false': [0.03125804897920769, nan], 'true': [0.02003104685354186, nan], 'true,true': [0.02003104685354186, nan]}, {'': [0.022896771739381334, 1.715799219875242e-17], 'true': [0.022896771739381334, nan], 'true,true': [0.022896771739381334, nan]}, {'': [0.020693021939500112, 4.037174635000569e-18], 'true': [0.020693021939500112, nan], 'true,true': [0.020693021939500112, nan], 'true,true,true': [0.00047333152440648944, 0.00020216160167508754]}, {'': [0.01503288245502903, -9.08364292875128e-18], 'true': [0.01503288245502903, nan], 'true,true': [0.01503288245502903, nan]}, {'': [0.01124882549249973, 0.014955746600901649], 'true': [1.7415263131375004e-17, -6.938893903907228e-18], 'true,true': [1.7415263131375004e-17, nan], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.012613689876433763, 9.08364292875128e-18], 'true': [0.012613689876433763, nan], 'true,true': [0.012613689876433763, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995101;  // std dev = 8.68e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109558;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839136;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 5.06e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830897;  // std dev = 4.26e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1015963294878363;  // std dev = 2.98e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926105;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.3207118471601499;  // std dev = 2.46e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return -0.09269127618926086;  // std dev = 6.58e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694902;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839683;  // std dev = 5.48e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15337741682585024;  // std dev = 0.114, 87.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=70 */
%   | | else return 0.16001039315604856;  // std dev = 0.109, 87.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=72 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5.87e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18495608005442232;  // std dev = 0.006, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.09090841002082749;  // std dev = 0.002, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.07324622576333707;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15854774135133032;  // std dev = 0.004, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.08359009793349757;  // std dev = 0.000943, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1591294162107019;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.08343115110846046;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06060116772477809;  // std dev = 0.502, 125.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1396175947212951;  // std dev = 0.061, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.07800199361750035;  // std dev = 0.005, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06466355265332235;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097478
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.419 seconds
Total inference time: 0.659 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.73 seconds
Refined model CLL: -0.098828


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097478
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.255000000000001 seconds
Total inference time: 0.659 seconds
AUC ROC: 1.0
Total revision time: 6.255000000000001
Best scored revision CLL: -0.098828


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.097478, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.255000000000001, 'Inference time': 0.659, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.109775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.377, 'Inference time': 1.034}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.43e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 4.41e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 9.19e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783631;  // std dev = 1.32e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.2581574271796464;  // std dev = 1.826, 152.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.006606532850548731;  // std dev = 2.522, 204.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2048377483180582;  // std dev = 0.156, 222.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09324838006622832;  // std dev = 6.14e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2421327045641984;  // std dev = 0.282, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12648622880899893;  // std dev = 0.091, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08565735767662853;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13840313070830304;  // std dev = 1.882, 222.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07918242210222466;  // std dev = 2.79e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16881718525345357;  // std dev = 9.42e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14108634334410242;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010257995393389409;  // std dev = 1.754, 204.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10762382396006326;  // std dev = 0.115, 222.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07290167357884308;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.981 seconds
Total inference time: 1.083 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.839 seconds
Parameter learned model CLL: -0.125042


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.41e-08, 0, 178], 'true,false,true,true': [1.49e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.19e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [3.77e-07, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.826, 23, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.522, 155, 49], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.156, 44, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.282, 0, 178], 'true,true,true,false': [0.091, 44, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.882, 44, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [9.42e-08, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.754, 155, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.115, 44, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}]]
[{'': [0.15891567242919188, -1.3256394323882466e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.11344775516652696, 5.3025577295529864e-17], 'true': [-3.193450497798203e-15, -2.7755575615628914e-17], 'true,false': [-2.7755575615628914e-17, nan], 'true,false,true': [-2.7755575615628914e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.0708446610173501, 6.296787303844171e-17], 'true': [1.9559884299013994e-15, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.04282381710808391, -2.816983793825024e-17], 'true': [7.983626244495507e-16, 1.261617073437678e-18], 'true,true': [7.983626244495507e-16, nan], 'true,false': [1.261617073437678e-18, nan]}, {'': [0.02194713714015385, 0.031189969518704227], 'false': [0.031189969518704234, nan], 'true': [0.02194713714015385, nan], 'true,true': [0.02194713714015385, nan]}, {'': [0.02427678440088714, 2.816983793825024e-17], 'true': [0.02427678440088714, nan], 'true,true': [0.02427678440088714, nan]}, {'': [0.0219905363930275, -8.28524645242654e-18], 'true': [0.0219905363930275, nan], 'true,true': [0.0219905363930275, nan], 'true,true,true': [0.00044834180105796784, 0.00018974231006751996]}, {'': [0.015953657383930238, 5.799672516698579e-18], 'true': [0.015953657383930238, nan], 'true,true': [0.015953657383930238, nan]}, {'': [0.012333416923884294, 0.01507565523927953], 'true': [6.885104028683141e-17, -9.654113257610057e-18], 'true,true': [6.885104028683141e-17, nan], 'true,false': [-9.654113257610057e-18, nan]}, {'': [0.013305454307821039, -1.1599345033397157e-17], 'true': [0.013305454307821039, nan], 'true,true': [0.013305454307821039, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048782;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839108;  // std dev = 8.43e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.11231637819360622;  // std dev = 9.19e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783638;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.09269127618926074;  // std dev = 8.02e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839682;  // std dev = 6.58e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14847605821017254;  // std dev = 0.118, 113.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | | else return 0.1568156109786593;  // std dev = 0.112, 109.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 7.15e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18557445653565288;  // std dev = 0.008, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09056047747981438;  // std dev = 0.002, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333707;  // std dev = 1.83e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15899396506300115;  // std dev = 0.006, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08330535684570343;  // std dev = 0.001, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1597033472800389;  // std dev = 4.21e-08, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.08308360864627552;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.059240242301885765;  // std dev = 0.592, 153.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14009002000539866;  // std dev = 0.072, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07770151820066667;  // std dev = 0.007, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06474591316910143;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.202 seconds
Total inference time: 0.775 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.801 seconds
Refined model CLL: -0.099174


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.823 seconds
Total inference time: 0.775 seconds
AUC ROC: 1.0
Total revision time: 5.823
Best scored revision CLL: -0.099174


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.097652, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.823, 'Inference time': 0.775, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.110691, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.981, 'Inference time': 1.083}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 337

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2551722425694894;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119404
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.876 seconds
Total inference time: 1.301 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.513 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [2.98e-08, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [3.33e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [5.27e-09, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [7.45e-09, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}]]
[{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, nan], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [9.868649107779169e-17, 0.0], 'true': [9.868649107779169e-17, nan], 'true,true': [9.868649107779169e-17, nan], 'true,true,true': [9.868649107779169e-17, nan]}, {'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [-1.4802973661668753e-16, nan]}, {'': [1.2335811384723962e-16, 3.0839528461809902e-18], 'true': [1.2335811384723962e-16, nan], 'true,true': [1.2335811384723962e-16, nan]}, {'': [-3.700743415417188e-17, 0.0], 'false': [0.0, nan], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [3.700743415417188e-17, 1.5419764230904951e-18], 'true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan]}, {'': [-2.4671622769447922e-17, 0.0], 'true': [-2.4671622769447922e-17, nan], 'true,true': [-2.4671622769447922e-17, nan], 'true,true,true': [-2.4671622769447922e-17, nan]}, {'': [6.1679056923619804e-18, 7.709882115452476e-19], 'true': [6.1679056923619804e-18, nan], 'true,true': [6.1679056923619804e-18, nan]}, {'': [-3.0839528461809902e-18, 0.0], 'true': [-3.0839528461809902e-18, nan], 'true,true': [-3.0839528461809902e-18, nan]}, {'': [0.0, 7.709882115452476e-19], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.947472
   AUC PR    = 0.908066
   CLL	      = -0.233818
   Precision = 0.875325 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.933518


Total learning time: 0.755 seconds
Total inference time: 0.726 seconds
AUC ROC: 0.947472


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.469 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119404
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.613 seconds
Total inference time: 1.301 seconds
AUC ROC: 1.0
Total revision time: 2.613
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.119404, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.613, 'Inference time': 1.301, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.119404, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.876, 'Inference time': 1.301}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 5.58e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.27937153482520855;  // std dev = 0.555, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.22489667661481788;  // std dev = 0.115, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22187542121770634;  // std dev = 2.98e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14468136879935864;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15457301512543445;  // std dev = 0.421, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16366343667920846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.1459097542530484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11536276013322615;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114428
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.011 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.587 seconds
Parameter learned model CLL: -0.105257


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [7.3e-08, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 18], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.39e-08, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [5.58e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.555, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 16, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.115, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [2.98e-08, 0, 18], 'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.421, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.081, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 16, 0]}]]
[{'': [0.08999999999999968, -6.938893903907228e-18], 'true': [-2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [0.06424978612186587, 3.469446951953614e-18], 'true': [2.9605947323337506e-16, 0.0], 'true,true': [2.9605947323337506e-16, nan], 'true,true,true': [2.9605947323337506e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.040122030722944804, 1.214306433183765e-17], 'true': [-2.4671622769447924e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02425275922011396, -6.938893903907228e-18], 'true': [1.7270135938613546e-16, 0.0], 'true,true': [1.7270135938613546e-16, nan], 'true,false': [0.0, nan]}, {'': [0.015381192815554334, 5.204170427930421e-18], 'true': [0.015381192815554334, nan], 'true,true': [0.015381192815554334, nan], 'false': [5.204170427930421e-18, nan]}, {'': [0.013141326387003471, 6.938893903907228e-18], 'true': [0.013141326387003471, nan], 'true,true': [0.013141326387003471, nan]}, {'': [0.012092749227685351, -1.734723475976807e-18], 'true': [0.012092749227685351, nan], 'true,true': [0.012092749227685351, nan], 'true,true,true': [4.9343245538895844e-17, 0.0]}, {'': [0.008851916008755987, 0.0], 'true': [0.008851916008755987, nan], 'true,true': [0.008851916008755987, nan]}, {'': [0.008625200448958157, 0.0], 'true': [-9.25185853854297e-18, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.25185853854297e-18, nan]}, {'': [0.006615741538304171, 3.469446951953614e-18], 'true': [0.006615741538304171, nan], 'true,true': [0.006615741538304171, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583098;  // std dev = 5.58e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2616542581102339;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2889116069025027;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21174042082252867;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.23193407077531364;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17465795081010935;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.19089030757939185;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14641065144459467;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.1604008421910807;  // std dev = 0.096, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.16849900111434277;  // std dev = 0.022, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.1903956507918643;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10840211414097252;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.11901097827818172;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120579
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.137 seconds
Total inference time: 0.851 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.47 seconds
Refined model CLL: -0.109668


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114428
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.205 seconds
Total inference time: 1.427 seconds
AUC ROC: 1.0
Total revision time: 3.205
Best scored revision CLL: -0.105257


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114428, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.205, 'Inference time': 1.427, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114428, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.011, 'Inference time': 1.427}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.25611760913680415;  // std dev = 0.849, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20760505620315042;  // std dev = 0.140, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22895433382434874;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.13973583711423695;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14186262264858854;  // std dev = 0.647, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.17008259807148424;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.1399916933771496;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10499995627270577;  // std dev = 0.099, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117369
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.069 seconds
Total inference time: 1.394 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.566 seconds
Parameter learned model CLL: -0.11125


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 27], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.849, 5, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.18e-08, 22, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.14, 5, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.49e-08, 0, 27], 'true,true,true,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.647, 5, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.099, 5, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 22, 0]}]]
[{'': [0.13183593750000117, 5.046468293750712e-18], 'true': [9.210739167260557e-16, -2.7755575615628915e-18], 'true,true': [9.210739167260557e-16, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.09411589763945183, -2.523234146875356e-18], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.631639762074445e-16, nan], 'true,true,true': [-2.631639762074445e-16, nan]}, {'': [0.05877250594181391, 7.569702440626067e-18], 'true': [-2.631639762074445e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03552650276383865, -1.261617073437678e-18], 'true': [-9.868649107779169e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.868649107779169e-17, nan]}, {'': [0.022531044163409578, 6.308085367188389e-18], 'true': [0.022531044163409578, nan], 'true,true': [0.022531044163409578, nan], 'false': [6.308085367188389e-18, nan]}, {'': [0.01946384800660681, 1.0092936587501423e-17], 'true': [0.01946384800660681, nan], 'true,true': [0.01946384800660681, nan]}, {'': [0.01792078094707778, 0.0], 'true': [0.01792078094707778, nan], 'true,true': [0.01792078094707778, nan], 'true,true,true': [8.22387425648264e-18, 0.0]}, {'': [0.013066602710799378, -1.261617073437678e-18], 'true': [0.013066602710799378, nan], 'true,true': [0.013066602710799378, nan]}, {'': [0.012675506776704345, -3.784851220313033e-18], 'true': [-2.4671622769447922e-17, 5.551115123125783e-18], 'true,false': [5.551115123125783e-18, nan], 'true,true': [-2.4671622769447922e-17, nan]}, {'': [0.009708841168341248, 1.261617073437678e-18], 'true': [0.009708841168341248, nan], 'true,true': [0.009708841168341248, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1572969028391488;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.16853850558058886;  // std dev = 0.101, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18374634981882332;  // std dev = 0.004, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.09153539565177438;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15777004807283745;  // std dev = 0.004, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.08420290818322906;  // std dev = 0.000949, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13791884427999868;  // std dev = 0.003, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07793302317045726;  // std dev = 0.000884, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106598
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.102 seconds
Total inference time: 0.853 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097609
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.545 seconds
Refined model CLL: -0.097609


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106598
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.282 seconds
Total inference time: 0.853 seconds
AUC ROC: 1.0
Total revision time: 3.282
Best scored revision CLL: -0.097609


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.106598, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.282, 'Inference time': 0.853, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.117369, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.069, 'Inference time': 1.394}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462843;  // std dev = 1.67e-08, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.2616542581102338;  // std dev = 0.938, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21174042082252842;  // std dev = 0.134, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22725136988260974;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.14090256362489298;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14489370258441955;  // std dev = 0.713, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.16853551038169962;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.14138637989628908;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10746157020690122;  // std dev = 0.095, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116657
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.158 seconds
Total inference time: 1.428 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.584 seconds
Parameter learned model CLL: -0.109821


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.53e-07, 0, 36], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.79e-08, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 36], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.67e-08, 0, 36], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 36], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.938, 6, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 30, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.134, 6, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.04e-08, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 36], 'true,true,true,false': [0.0, 6, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 30, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.713, 6, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 30, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 36], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.095, 6, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 30, 0]}]]
[{'': [0.12244897959183858, 2.590520390792032e-17], 'true': [1.7763568394002505e-15, -6.938893903907228e-18], 'true,true': [1.7763568394002505e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.08741467499573567, -7.401486830834377e-18], 'true': [-6.908054375445419e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-6.908054375445419e-16, nan], 'true,true,true': [-6.908054375445419e-16, nan]}, {'': [0.054587796901966565, -7.401486830834377e-18], 'true': [2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03299695131988261, 0.0], 'true': [-3.20731096002823e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.20731096002823e-16, nan]}, {'': [0.020926792946332373, -1.8503717077085942e-18], 'true': [0.020926792946332373, nan], 'true,true': [0.020926792946332373, nan], 'false': [-1.8503717077085942e-18, nan]}, {'': [0.018029806968281298, 1.3877787807814457e-17], 'true': [0.018029806968281298, nan], 'true,true': [0.018029806968281298, nan]}, {'': [0.016596406378413846, 9.251858538542971e-19], 'true': [0.016596406378413846, nan], 'true,true': [0.016596406378413846, nan], 'true,true,true': [-3.700743415417188e-17, 0.0]}, {'': [0.012112867694889043, 9.251858538542971e-19], 'true': [0.012112867694889043, nan], 'true,true': [0.012112867694889043, nan]}, {'': [0.011761417723283433, -5.551115123125783e-18], 'true': [-3.700743415417188e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0090123420599409, -4.625929269271486e-19], 'true': [0.0090123420599409, nan], 'true,true': [0.0090123420599409, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462843;  // std dev = 1.03e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601495;  // std dev = 2.11e-08, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1616686372385977;  // std dev = 0.108, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.17128645291738526;  // std dev = 0.098, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18317312660186041;  // std dev = 0.004, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.09187145716126076;  // std dev = 0.000925, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15733820030385326;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.08448855019613334;  // std dev = 0.000858, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13758367017070083;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.07817861986964021;  // std dev = 0.000799, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.044 seconds
Total inference time: 0.869 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.586 seconds
Refined model CLL: -0.097357


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.372 seconds
Total inference time: 0.869 seconds
AUC ROC: 1.0
Total revision time: 3.372
Best scored revision CLL: -0.097357


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.106451, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.372, 'Inference time': 0.869, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.116657, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.158, 'Inference time': 1.428}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.26506142670926736;  // std dev = 1.017, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21427948012352444;  // std dev = 0.131, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2262088574398694;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14162388684965377;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14675733151251166;  // std dev = 0.774, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.1675893197125864;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.1422490908834542;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10897800335023623;  // std dev = 0.093, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116222
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.274 seconds
Total inference time: 1.568 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108942
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.6 seconds
Parameter learned model CLL: -0.108942


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.017, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.131, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 7, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.774, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.093, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}]]
[{'': [0.11649408284023735, 4.0902953538821554e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -2.0451476769410777e-17], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, -8.764918615461762e-18], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan]}, {'': [0.019909088333742615, -1.1686558153949016e-17], 'true': [0.019909088333742615, nan], 'true,true': [0.019909088333742615, nan], 'false': [-1.1686558153949016e-17, nan]}, {'': [0.017125042750526866, 1.3147377923192643e-17], 'true': [0.017125042750526866, nan], 'true,true': [0.017125042750526866, nan]}, {'': [0.01576175748818122, 0.0], 'true': [0.01576175748818122, nan], 'true,true': [0.01576175748818122, nan], 'true,true,true': [0.0, 0.0]}, {'': [0.011510494413290209, 2.1912296538654404e-18], 'true': [0.011510494413290209, nan], 'true,true': [0.011510494413290209, nan]}, {'': [0.01118341339290468, -7.304098846218135e-19], 'true': [-5.427757009278543e-17, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan], 'true,true': [-5.427757009278543e-17, nan]}, {'': [0.008571382930306641, -1.460819769243627e-18], 'true': [0.008571382930306641, nan], 'true,true': [0.008571382930306641, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783634;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16536779711505448;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.1727661168679679;  // std dev = 0.096, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18282245564766772;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09208593007239638;  // std dev = 0.000738, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15707387504164655;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08467076625919705;  // std dev = 0.000684, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13737842400479225;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07833523090282739;  // std dev = 0.000638, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.13 seconds
Total inference time: 0.924 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097202
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.596 seconds
Refined model CLL: -0.097202


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.6 seconds
Total inference time: 0.924 seconds
AUC ROC: 1.0
Total revision time: 3.6
Best scored revision CLL: -0.097202


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.106335, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.6, 'Inference time': 0.924, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.116222, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.274, 'Inference time': 1.568}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 337

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.0513509638543199;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.26370870442337424;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08846206664884307;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21589729984347633;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18166870747836517;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07567575240209222;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15026949547709767;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.043077330963778915;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14087095305633823;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06777642748180945;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120108
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.934 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.537 seconds
Parameter learned model CLL: -0.09966


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [2.98e-08, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [3.33e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.392, 9, 1], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.024, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.064, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.057, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.261, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.025, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, nan], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [9.868649107779169e-17, 0.0], 'true': [9.868649107779169e-17, nan], 'true,true': [9.868649107779169e-17, nan], 'true,true,true': [9.868649107779169e-17, nan]}, {'': [-1.4802973661668753e-16, -1.5419764230904951e-18], 'true': [-1.4802973661668753e-16, nan]}, {'': [1.2335811384723962e-16, 3.0839528461809902e-18], 'true': [1.2335811384723962e-16, nan], 'true,true': [1.2335811384723962e-16, nan]}, {'': [-4.163336342344337e-17, 0.015381192815554324], 'false': [0.015381192815554324, nan], 'true': [-4.163336342344337e-17, nan], 'true,true': [-4.163336342344337e-17, nan]}, {'': [0.0005829694478626739, 3.0839528461809902e-18], 'true': [0.0005829694478626739, nan], 'true,true': [0.0005829694478626739, nan]}, {'': [0.0004561501591060933, 1.5419764230904951e-18], 'true': [0.0004561501591060933, nan], 'true,true': [0.0004561501591060933, nan], 'true,true,true': [0.0004561501591060933, nan]}, {'': [0.00035921358558751076, 0.0], 'true': [0.00035921358558751076, nan], 'true,true': [0.00035921358558751076, nan]}, {'': [-3.469446951953614e-18, 0.00679241831626312], 'true': [-3.469446951953614e-18, nan], 'true,true': [-3.469446951953614e-18, nan]}, {'': [0.0006193223970441993, 0.0], 'true': [0.0006193223970441993, nan], 'true,true': [0.0006193223970441993, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.04510976492720925;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2613714275830341;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08771154683784219;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21419358349483436;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08094391942870338;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.18038569884826297;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07512437777177212;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15095057621875585;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.011733142239637284;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0680092267424537;  // std dev = 4.56e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13875639752273514;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06700059008257815;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.94392
   AUC PR    = 0.898233
   CLL	      = -0.249405
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 0.913 seconds
Total inference time: 0.814 seconds
AUC ROC: 0.94392


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.402 seconds
Refined model CLL: -0.098233


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94392
   AUC PR    = 0.898233
   CLL	      = -0.249405
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 2.7860000000000005 seconds
Total inference time: 0.814 seconds
AUC ROC: 0.94392
Total revision time: 2.7860000000000005
Best scored revision CLL: -0.098233


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:09
{'AUC ROC': 0.94392, 'AUC PR': 0.898233, 'CLL': -0.249405, 'Precision': [0.861893, 0.5], 'Recall': 1.0, 'F1': 0.925824, 'Learning time': 2.7860000000000005, 'Inference time': 0.814, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120108, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.934, 'Inference time': 1.474}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583098;  // std dev = 5.58e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.03363368713934517;  // std dev = 0.663, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2673240176465371;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08990118177427148;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2184688991871148;  // std dev = 0.102, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0828117120696383;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18356411492302138;  // std dev = 0.090, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07673523952139188;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.14924039006484754;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03268897484444612;  // std dev = 0.435, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14360374992889963;  // std dev = 0.028, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06933308669654938;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120074
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.048 seconds
Total inference time: 1.408 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101679
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.578 seconds
Parameter learned model CLL: -0.101679


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [7.3e-08, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 18], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [5.58e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.663, 18, 3], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.027, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.102, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.09, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.435, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.028, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 18, 0]}]]
[{'': [-2.9605947323337506e-16, -3.0839528461809902e-18], 'true': [-2.9605947323337506e-16, nan], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [2.9605947323337506e-16, 0.0], 'true': [2.9605947323337506e-16, nan], 'true,true': [2.9605947323337506e-16, nan], 'true,true,true': [2.9605947323337506e-16, nan]}, {'': [-2.4671622769447924e-16, 1.5419764230904953e-17], 'true': [-2.4671622769447924e-16, nan]}, {'': [1.7270135938613546e-16, -4.625929269271485e-18], 'true': [1.7270135938613546e-16, nan], 'true,true': [1.7270135938613546e-16, nan]}, {'': [-1.4802973661668754e-17, 0.020926792946332387], 'false': [0.020926792946332387, nan], 'true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, nan]}, {'': [0.0007383281876157789, 1.5419764230904951e-18], 'true': [0.0007383281876157789, nan], 'true,true': [0.0007383281876157789, nan]}, {'': [0.0005744152197417751, -5.396917480816733e-18], 'true': [0.0005744152197417751, nan], 'true,true': [0.0005744152197417751, nan], 'true,true,true': [0.0005744152197417751, nan]}, {'': [0.00045007194423469295, -1.5419764230904951e-18], 'true': [0.00045007194423469295, nan], 'true,true': [0.00045007194423469295, nan]}, {'': [-3.7007434154171884e-18, 0.00902487847066049], 'true': [-3.7007434154171884e-18, nan], 'true,true': [-3.7007434154171884e-18, nan]}, {'': [0.000761106790033035, 7.709882115452476e-19], 'true': [0.000761106790033035, nan], 'true,true': [0.000761106790033035, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 5.58e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1.49e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527744;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.919881
   AUC PR    = 0.861893
   CLL	      = -0.260668
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 0.93 seconds
Total inference time: 0.827 seconds
AUC ROC: 0.919881


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.485 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.919881
   AUC PR    = 0.861893
   CLL	      = -0.260668
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 3.041 seconds
Total inference time: 0.827 seconds
AUC ROC: 0.919881
Total revision time: 3.041
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:15
{'AUC ROC': 0.919881, 'AUC PR': 0.861893, 'CLL': -0.260668, 'Precision': [0.861893, 0.5], 'Recall': 1.0, 'F1': 0.925824, 'Learning time': 3.041, 'Inference time': 0.827, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120074, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.048, 'Inference time': 1.408}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return 0.0018008662906042582;  // std dev = 1.027, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.27447517656574033;  // std dev = 0.030, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09284283946226633;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22350433950249418;  // std dev = 0.136, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08531336674826394;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18724094284443818;  // std dev = 0.119, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07888718323469225;  // std dev = 1.29e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.14723743421689672;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.012708613443887616;  // std dev = 0.659, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1487199208914099;  // std dev = 0.029, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07248296798808539;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.971 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.53 seconds
Parameter learned model CLL: -0.105505


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.58e-07, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.36e-08, 27, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [0.0, 0, 27], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 27], 'true,false': [0.0, 0, 0], 'false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [1.49e-08, 0, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.027, 27, 8], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.03, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 27, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.136, 0, 27], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.119, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 27, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.659, 27, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.029, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 27, 0]}]]
[{'': [9.210739167260557e-16, 2.05596856412066e-17], 'true': [9.210739167260557e-16, nan], 'true,true': [9.210739167260557e-16, nan]}, {'': [-2.631639762074445e-16, -4.11193712824132e-18], 'true': [-2.631639762074445e-16, nan], 'true,true': [-2.631639762074445e-16, nan], 'true,true,true': [-2.631639762074445e-16, nan]}, {'': [-2.631639762074445e-16, -4.11193712824132e-18], 'true': [-2.631639762074445e-16, nan]}, {'': [-9.868649107779169e-17, -2.05596856412066e-18], 'true': [-9.868649107779169e-17, nan], 'true,true': [-9.868649107779169e-17, nan]}, {'': [1.1686558153949016e-17, 0.030134581842718645], 'false': [0.030134581842718645, nan], 'true': [1.1686558153949016e-17, nan], 'true,true': [1.1686558153949016e-17, nan]}, {'': [0.000884932744551152, 4.11193712824132e-18], 'true': [0.000884932744551152, nan], 'true,true': [0.000884932744551152, nan]}, {'': [0.0006806008507450818, -4.11193712824132e-18], 'true': [0.0006806008507450818, nan], 'true,true': [0.0006806008507450818, nan], 'true,true,true': [0.0006806008507450818, nan]}, {'': [0.0005279520473565531, 6.1679056923619804e-18], 'true': [0.0005279520473565531, nan], 'true,true': [0.0005279520473565531, nan]}, {'': [-5.843279076974508e-18, 0.01240788105889221], 'true': [-5.843279076974508e-18, nan], 'true,true': [-5.843279076974508e-18, nan]}, {'': [0.000859767615497586, -5.13992141030165e-18], 'true': [0.000859767615497586, nan], 'true,true': [0.000859767615497586, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.3207118471601494;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.3207118471601494;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.07877675473109175;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( actor(B) )
%   | then return -0.06842697784420276;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 7.45e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.919881
   AUC PR    = 0.861893
   CLL	      = -0.260668
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 0.883 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.919881


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.444 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.919881
   AUC PR    = 0.861893
   CLL	      = -0.260668
   Precision = 0.861893 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925824


Total learning time: 2.828 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.919881
Total revision time: 2.828
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:21
{'AUC ROC': 0.919881, 'AUC PR': 0.861893, 'CLL': -0.260668, 'Precision': [0.861893, 0.5], 'Recall': 1.0, 'F1': 0.925824, 'Learning time': 2.828, 'Inference time': 0.72, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120134, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.971, 'Inference time': 1.463}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462843;  // std dev = 1.67e-08, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3059474498976706;  // std dev = 0.406, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.008131546413245148;  // std dev = 1.106, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2634118236359784;  // std dev = 0.070, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09200967760417532;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22508248632956057;  // std dev = 0.148, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.15292402792188395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08460598082976645;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1796540657739114;  // std dev = 0.344, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0782795477013917;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15127983487832972;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.156418804974261;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01779876999030244;  // std dev = 0.720, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14165397644178332;  // std dev = 0.054, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0716221831496949;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109324
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.197 seconds
Total inference time: 1.422 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.665 seconds
Parameter learned model CLL: -0.107268


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.53e-07, 0, 36], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 36], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [1.67e-08, 0, 36], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 36], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.406, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.106, 35, 9], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.07, 1, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.148, 0, 36], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 35, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.344, 1, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.72, 35, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.054, 1, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 35, 0]}]]
[{'': [0.026296566837109174, 3.489272363107635e-17], 'true': [1.7763568394002505e-15, 0.0], 'true,true': [1.7763568394002505e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.018772764389149398, 6.3441315692866086e-18], 'true': [-6.908054375445419e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-6.908054375445419e-16, nan], 'true,true,true': [-6.908054375445419e-16, nan]}, {'': [0.011723018472738126, -1.2688263138573217e-17], 'true': [2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.007086270042399688, -1.5860328923216522e-18], 'true': [-3.20731096002823e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.20731096002823e-16, nan]}, {'': [0.005885660516156006, 0.02780690849919424], 'false': [0.02780690849919424, nan], 'true': [0.005885660516156006, nan], 'true,true': [0.005885660516156006, nan]}, {'': [0.00488133094346676, -3.1720657846433043e-18], 'true': [0.00488133094346676, nan], 'true,true': [0.00488133094346676, nan]}, {'': [0.00434947702814758, 3.1720657846433043e-18], 'true': [0.00434947702814758, nan], 'true,true': [0.00434947702814758, nan], 'true,true,true': [0.000608433001605889, 0.0]}, {'': [0.003195283525756559, -2.3790493384824783e-18], 'true': [0.003195283525756559, nan], 'true,true': [0.003195283525756559, nan]}, {'': [0.0032606099873885297, 0.011770716402286495], 'true': [-2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.4671622769447922e-17, nan]}, {'': [0.0029522155044100946, 3.1720657846433043e-18], 'true': [0.0029522155044100946, nan], 'true,true': [0.0029522155044100946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462843;  // std dev = 1.03e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(A) )
%   | then return 0.2989537880364964;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23930806077071334;  // std dev = 0.085, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.25517224256948945;  // std dev = 1.49e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.19685146881630855;  // std dev = 0.082, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.20975771563253562;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16562113928070193;  // std dev = 0.080, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.17709649774527744;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.07324622576333704;  // std dev = 9.13e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15669104380502183;  // std dev = 0.021, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.20093289141485912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.15729830314522958;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12447545809060945;  // std dev = 0.070, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.1335340121160525;  // std dev = 0.000124, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else return -0.06419184008202623;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.319 seconds
Total inference time: 0.861 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.582 seconds
Refined model CLL: -0.098642


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.763 seconds
Total inference time: 0.861 seconds
AUC ROC: 1.0
Total revision time: 3.763
Best scored revision CLL: -0.098642


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111804, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.763, 'Inference time': 0.861, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.109324, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.197, 'Inference time': 1.422}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;false;true
0;true,true,false;publication(C, E), tempadvisedby(F, E).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
2;true,true,true;ta(G, F, E).;false;false
2;true,false;publication(H, A).;true;true
2;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
3;true,true,true;publication(C, F).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
3;true,false,false;projectmember(L, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;sameperson(B, D).;true;true
4;true,true,true;publication(F, B).;false;false
4;true,true,false;publication(G, B), publication(G, A).;false;false
4;true,false;publication(H, B).;true;false
4;true,false,true;publication(H, A).;false;false
4;false;publication(I, A).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G).;false;false
5;true,false;tempadvisedby(H, B), ta(I, A, J).;false;true
5;true,false,false;publication(K, A), projectmember(L, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;false
6;true,true,true;publication(C, B).;false;false
6;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
6;true,false,true;ta(H, A, G).;false;false
6;true,false,false;publication(I, B), tempadvisedby(J, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;ta(E, C, F).;true;true
7;true,true,true;publication(D, B).;false;false
7;true,true,false;publication(D, B), ta(G, A, H).;false;false
7;true,false;publication(I, B), publication(I, A).;false;true
7;true,false,false;projectmember(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
8;true;tempadvisedby(D, B).;true;true
8;true,true;publication(E, A), publication(E, B).;true;true
8;true,true,true;publication(F, D).;false;false
8;true,true,false;ta(G, D, H).;false;false
8;true,false;hasposition(I, C), tempadvisedby(J, I).;true;true
8;true,false,true;ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(D, B).;true;true
9;true,true,true;ta(E, A, F).;false;false
9;true,true,false;publication(G, A), ta(H, C, I).;false;false
9;true,false;ta(J, A, K), publication(L, A).;true;true
9;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
9;true,false,false;publication(Q, B), projectmember(R, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.30922842706711035;  // std dev = 0.408, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then return -0.016135142235666408;  // std dev = 1.180, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.26364839711485755;  // std dev = 0.064, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09134320586811744;  // std dev = 1.83e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22338443755159518;  // std dev = 0.165, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15338024184782478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0840394658105961;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18014771031839585;  // std dev = 0.350, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07779242839778723;  // std dev = 1.67e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.15098307969465483;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(G, C) )
%   | | then return -0.15688846488840605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02239863691098661;  // std dev = 0.771, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14165879107813792;  // std dev = 0.050, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0709018874070697;  // std dev = 5.27e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.22 seconds
Total inference time: 1.685 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105868
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.679 seconds
Parameter learned model CLL: -0.105868


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'false': 'movie(F, A)'}, {'true,true,true': [0.408, 1, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.18, 44, 10], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.064, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.165, 0, 45], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.35, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,true': 'movie(E, F)', 'true,false': 'genre(G, C)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.771, 44, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.05, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 44, 0]}]]
[{'': [0.021266540642723226, 4.794144879063176e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015181896531630958, -2.7755575615628914e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.009480631078200644, 5.046468293750712e-18], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005730803218362994, 1.261617073437678e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.144832625267251e-16, nan]}, {'': [0.00461541279616256, 0.025787703242051072], 'false': [0.025787703242051072, nan], 'true': [0.00461541279616256, nan], 'true,true': [0.00461541279616256, nan]}, {'': [0.004064224080967743, 7.569702440626067e-18], 'true': [0.004064224080967743, nan], 'true,true': [0.004064224080967743, nan]}, {'': [0.003608894559489882, 1.261617073437678e-18], 'true': [0.003608894559489882, nan], 'true,true': [0.003608894559489882, nan], 'true,true,true': [0.0006031873545642065, 0.0]}, {'': [0.0026597138542140213, 6.308085367188389e-18], 'true': [0.0026597138542140213, nan], 'true,true': [0.0026597138542140213, nan]}, {'': [0.0025597770669279147, 0.010996925749275478], 'true': [-9.516197353929913e-18, 0.0], 'true,false': [0.0, nan], 'true,true': [-9.516197353929913e-18, nan]}, {'': [0.0025221937910538225, 6.30808536718839e-19], 'true': [0.0025221937910538225, nan], 'true,true': [0.0025221937910538225, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(A) )
%   | then return 0.30348671702059077;  // std dev = 0.083, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2426255838682655;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.19954063868168115;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.20975771563253573;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16799206488148732;  // std dev = 0.072, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.07324622576333704;  // std dev = 1.05e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15588263546834602;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2030138000039193;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.1566211713212108;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1264262742717197;  // std dev = 0.062, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13362765282866798;  // std dev = 0.000155, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111541
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.362 seconds
Total inference time: 0.818 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097878
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.611 seconds
Refined model CLL: -0.097878


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111541
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.872 seconds
Total inference time: 0.818 seconds
AUC ROC: 1.0
Total revision time: 3.872
Best scored revision CLL: -0.097878


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111541, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.872, 'Inference time': 0.818, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.109086, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.22, 'Inference time': 1.685}}


