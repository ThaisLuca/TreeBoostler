Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), publication(F, D) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(J, B), ta(K, A, L) )
%   | | | then return 0.7581489350995123;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.5630669678863971;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   else return -0.14185106490048816;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(E, A) )
%   | then if ( publication(D, A) )
%   | | then if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.6397850622531219;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7294294965142802;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( hasposition(I, C), publication(E, I) )
%   | | | then return -0.02090495588706188;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.3021099437596265;  // std dev = 1.869, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(L, K), ta(M, K, N) )
%   | | | then return 0.26607403782031747;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6797273718699987;  // std dev = 1.385, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( projectmember(P, B) )
%   | | | then return 0.6270550414572897;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4655003437111128;  // std dev = 2.875, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   else return -0.12213750992395955;  // std dev = 0.068, 182.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=1 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then return 0.5668847761573015;  // std dev = 0.080, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(E, F), student(F) )
%   | | | then return 0.2177195370145936;  // std dev = 3.245, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return 0.6221246806060703;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(H, I) )
%   | | | then return 0.38410329835670637;  // std dev = 1.672, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.5434307834306717;  // std dev = 1.948, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.24134997492328641;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.49920518387725954;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( student(B) )
%   | then return -0.1126465265652708;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return -0.08580336491904966;  // std dev = 0.175, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.35542435878795237;  // std dev = 0.963, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.03877407202005634;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4333303032164873;  // std dev = 0.134, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(G, I), ta(J, I, K) )
%   | | | then return 0.12142557794204473;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.11197443925748751;  // std dev = 1.572, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.28123759136307613;  // std dev = 3.650, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | | else return 0.1099730473232814;  // std dev = 2.554, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   else return -0.10213673034849204;  // std dev = 0.010, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.3497261568006782;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1402134919597701;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.33169839556621156;  // std dev = 0.122, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(J, K), student(K) )
%   | | | then return -0.021487765956620115;  // std dev = 2.319, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.538862890241326;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.28961369357041244;  // std dev = 2.166, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.17783649572111593;  // std dev = 3.495, 54.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.09321816096213427;  // std dev = 0.011, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.29523406518212175;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4024772209975453;  // std dev = 0.705, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.22125325838791912;  // std dev = 0.421, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.2105870452509005;  // std dev = 3.569, 98.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=78 */
%   | | | else return -0.34551944154861414;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.2849552746488527;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.23097486154125246;  // std dev = 1.762, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.08556772147509538;  // std dev = 0.009, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.07404819409405367;  // std dev = 1.173, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.25950254207000034;  // std dev = 1.568, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else if ( ta(H, A, I), publication(J, A) )
%   | | | then return 0.2094398123259394;  // std dev = 1.114, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.06268191051856614;  // std dev = 3.040, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | else if ( ta(K, A, L) )
%   | | then if ( ta(K, M, N), tempadvisedby(M, P) )
%   | | | then return 0.27541260123090777;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4852546812872429;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(Q, A), publication(Q, B) )
%   | | | then return 0.25504037012489283;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12677970049741477;  // std dev = 2.379, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   else return -0.07919969098958636;  // std dev = 0.010, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( publication(D, A) )
%   | then if ( publication(C, A), student(A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.09569070717035241;  // std dev = 1.288, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.21000936727152134;  // std dev = 0.114, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.1656482082015223;  // std dev = 1.557, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.057127848402586424;  // std dev = 1.552, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( publication(C, H), tempadvisedby(H, B) )
%   | | then return 0.42373378242314247;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, I), student(I) )
%   | | | then return 0.17542886393257207;  // std dev = 2.301, 46.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | | else return 0.31983502039069195;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( publication(J, A), professor(B) )
%   | then return -0.1862384835713237;  // std dev = 0.455, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return -0.06207127949610744;  // std dev = 0.143, 178.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( projectmember(C, B) )
%   then if ( publication(D, B) )
%   | then return 0.1197177801060405;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.42960694977228137;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(B), publication(E, B) )
%   | then if ( publication(E, A), student(A) )
%   | | then return 0.1875055229482277;  // std dev = 0.172, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.2379941721879043;  // std dev = 1.599, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.033247732449965685;  // std dev = 3.777, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   | else if ( professor(B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.37979200550073156;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.014986381664450724;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.0766054916325965;  // std dev = 0.934, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07086543703634766;  // std dev = 1.453, 168.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.15924730216399482;  // std dev = 0.075, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, C, F) )
%   | | | then return 0.05620398150286346;  // std dev = 2.179, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return -0.039417570698184745;  // std dev = 2.656, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.13024073202373218;  // std dev = 1.283, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.2589028081263105;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.01141353854376903;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17138154989282237;  // std dev = 1.848, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else return -0.06622614820632057;  // std dev = 0.080, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 56

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 326

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04215844012473407;  // std dev = 0.519, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1473675055130077;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07116374470309766;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.912 seconds
Total inference time: 0.994 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.476 seconds
Parameter learned model CLL: -0.103975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.29e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.519, 11, 11], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan], 'true,true,true': [-1.6148698540002277e-16, nan]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'false': [5.046468293750712e-18, nan], 'true': [-2.0185873175002846e-16, nan], 'true,true': [-2.0185873175002846e-16, nan]}, {'': [1.6148698540002277e-16, 0.0], 'true': [1.6148698540002277e-16, nan]}, {'': [-6.055761952500853e-17, -1.261617073437678e-18], 'true': [-6.055761952500853e-17, nan]}, {'': [4.0371746350005693e-17, 2.523234146875356e-18], 'true': [4.0371746350005693e-17, nan], 'true,true': [4.0371746350005693e-17, nan]}, {'': [-2.5232341468753557e-17, 0.0], 'true': [-2.5232341468753557e-17, nan], 'true,true': [-2.5232341468753557e-17, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan], 'false': [nan, 6.30808536718839e-19]}, {'': [0.012229134667364477, nan]}, {'': [0.0, -6.30808536718839e-19], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.388 seconds
Total inference time: 0.994 seconds
AUC ROC: 1.0
Total revision time: 1.388
Best scored revision CLL: -0.103975


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.388, 'Inference time': 0.994, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.912, 'Inference time': 0.994}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253573;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04215844012473414;  // std dev = 0.734, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14736750551300765;  // std dev = 1.97e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711637447030977;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.067 seconds
Total inference time: 0.894 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.52 seconds
Parameter learned model CLL: -0.103975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [5.96e-08, 0, 22], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.29e-08, 22, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [9.13e-09, 0, 22], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [6.45e-09, 0, 22], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.11e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.734, 22, 22], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.97e-08, 0, 22], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}]]
[{'': [1.6148698540002277e-16, 5.046468293750712e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan], 'true,true,true': [1.6148698540002277e-16, nan]}, {'': [2.4223047810003414e-16, -2.523234146875356e-18], 'true': [2.4223047810003414e-16, nan], 'true,true': [2.4223047810003414e-16, nan]}, {'': [-2.8260222445003984e-16, 7.569702440626067e-18], 'false': [7.569702440626067e-18, nan], 'true': [-2.8260222445003984e-16, nan], 'true,true': [-2.8260222445003984e-16, nan]}, {'': [6.055761952500853e-17, -1.261617073437678e-18], 'true': [6.055761952500853e-17, nan]}, {'': [2.0185873175002847e-17, 6.308085367188389e-18], 'true': [2.0185873175002847e-17, nan]}, {'': [0.0, 1.0092936587501423e-17], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [2.0185873175002847e-17, 0.0], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan]}, {'': [-3.027880976250427e-17, -1.8924256101565167e-18], 'false': [nan, -1.8924256101565167e-18], 'true': [-3.027880976250427e-17, nan], 'true,true': [-3.027880976250427e-17, nan]}, {'': [0.012229134667364477, nan]}, {'': [1.766263902812749e-17, -1.261617073437678e-18], 'true': [1.766263902812749e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.587 seconds
Total inference time: 0.894 seconds
AUC ROC: 1.0
Total revision time: 1.587
Best scored revision CLL: -0.103975


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.587, 'Inference time': 0.894, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.067, 'Inference time': 0.894}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109547;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462845;  // std dev = 5.96e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831014;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253545;  // std dev = 4.71e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04215844012473412;  // std dev = 0.898, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1473675055130076;  // std dev = 3.33e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711637447030977;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.094 seconds
Total inference time: 0.904 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.583 seconds
Parameter learned model CLL: -0.103975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [2.23e-07, 0, 33], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 33, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [5.96e-08, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 33, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.17e-08, 33, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [4.71e-08, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 33], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.13e-09, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.898, 33, 33], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.33e-08, 0, 33], 'true,false': [0.0, 0, 0], 'false': [0.0, 33, 0]}]]
[{'': [1.5072118637335459e-15, 3.027880976250427e-17], 'true': [1.5072118637335459e-15, nan], 'true,true': [1.5072118637335459e-15, nan], 'true,true,true': [1.5072118637335459e-15, nan]}, {'': [-6.459479416000911e-16, -3.3643121958338078e-18], 'true': [-6.459479416000911e-16, nan], 'true,true': [-6.459479416000911e-16, nan]}, {'': [1.0765799026668185e-16, -1.1775092685418327e-17], 'true': [1.0765799026668185e-16, nan], 'true,true': [1.0765799026668185e-16, nan], 'false': [-1.1775092685418327e-17, nan]}, {'': [-2.691449756667046e-16, 0.0], 'true': [-2.691449756667046e-16, nan]}, {'': [0.0, -1.6821560979169039e-18], 'true': [0.0, nan]}, {'': [0.0, 1.4298326832293682e-17], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [6.728624391667616e-17, 0.0], 'true': [6.728624391667616e-17, nan], 'true,true': [6.728624391667616e-17, nan]}, {'': [-4.710037074167331e-17, 2.523234146875356e-18], 'false': [nan, 2.523234146875356e-18], 'true': [-4.710037074167331e-17, nan], 'true,true': [-4.710037074167331e-17, nan]}, {'': [0.012229134667364432, nan]}, {'': [3.364312195833808e-17, 0.0], 'true': [3.364312195833808e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.677 seconds
Total inference time: 0.904 seconds
AUC ROC: 1.0
Total revision time: 1.677
Best scored revision CLL: -0.103975


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.677, 'Inference time': 0.904, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.094, 'Inference time': 0.904}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.858148935099512;  // std dev = 2.38e-07, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109551;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 3.73e-09, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253548;  // std dev = 5.77e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.042158440124734124;  // std dev = 1.037, 88.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14736750551300756;  // std dev = 4.21e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711637447030977;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.148 seconds
Total inference time: 0.904 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.589 seconds
Parameter learned model CLL: -0.103975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [2.38e-07, 0, 44], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.49e-08, 44, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 44], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.73e-09, 0, 44], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [5.77e-08, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 44], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.037, 44, 44], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [4.21e-08, 0, 44], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}]]
[{'': [1.2918958832001822e-15, 4.794144879063176e-17], 'true': [1.2918958832001822e-15, nan], 'true,true': [1.2918958832001822e-15, nan], 'true,true,true': [1.2918958832001822e-15, nan]}, {'': [-1.049665405100148e-15, -2.7755575615628914e-17], 'true': [-1.049665405100148e-15, nan], 'true,true': [-1.049665405100148e-15, nan]}, {'': [-4.0371746350005693e-17, 5.046468293750712e-18], 'false': [5.046468293750712e-18, nan], 'true': [-4.0371746350005693e-17, nan], 'true,true': [-4.0371746350005693e-17, nan]}, {'': [-4.037174635000569e-16, 1.261617073437678e-18], 'true': [-4.037174635000569e-16, nan]}, {'': [2.0185873175002847e-17, -1.5139404881252134e-17], 'true': [2.0185873175002847e-17, nan]}, {'': [-2.0185873175002847e-17, 1.1354553660939102e-17], 'true': [-2.0185873175002847e-17, nan], 'true,true': [-2.0185873175002847e-17, nan]}, {'': [7.569702440626067e-17, 0.0], 'true': [7.569702440626067e-17, nan], 'true,true': [7.569702440626067e-17, nan]}, {'': [-8.074349270001139e-17, 3.1540426835941946e-18], 'false': [nan, 3.1540426835941946e-18], 'true': [-8.074349270001139e-17, nan], 'true,true': [-8.074349270001139e-17, nan]}, {'': [0.012229134667364376, nan]}, {'': [4.0371746350005693e-17, -6.30808536718839e-19], 'true': [4.0371746350005693e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7369999999999999 seconds
Total inference time: 0.904 seconds
AUC ROC: 1.0
Total revision time: 1.7369999999999999
Best scored revision CLL: -0.103975


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.7369999999999999, 'Inference time': 0.904, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.143962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.148, 'Inference time': 0.904}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20469570738054216;  // std dev = 0.286, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1778354072548556;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09497157366234624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04227172130668966;  // std dev = 1.175, 112.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14789725609489676;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09053758666154055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07117123289251027;  // std dev = 1.29e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.255 seconds
Total inference time: 0.991 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104379
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.624 seconds
Parameter learned model CLL: -0.104379


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [1.03e-07, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.8e-08, 55, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.286, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 55, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 55, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.175, 56, 56], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 55, 0]}]]
[{'': [0.017236072637734554, 6.055761952500853e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan], 'true,true,true': [-1.2688263138573217e-16, nan]}, {'': [0.012304599783948732, -3.633457171500512e-17], 'true': [0.012304599783948732, nan], 'true,true': [-1.9032394707859825e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.007683847065712494, 2.62416351275037e-17], 'true': [0.007683847065712494, nan], 'true,true': [1.9032394707859825e-16, 0.0], 'false': [2.62416351275037e-17, nan], 'true,true,false': [0.0, nan]}, {'': [0.004644692439814939, 2.62416351275037e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0029456817402654088, -3.0278809762504268e-18], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.001996676351744731, 6.0557619525008536e-18], 'true': [0.001996676351744731, nan], 'true,true': [-3.172065784643304e-17, 0.0]}, {'': [0.0014349399424219715, 4.037174635000569e-18], 'true': [0.0014349399424219715, nan], 'true,true': [0.0014349399424219715, nan]}, {'': [0.001282771417322517, 2.0185873175002845e-18], 'true': [0.001282771417322517, nan], 'true,true': [-1.1895246692412391e-17, 0.0], 'false': [nan, 2.0185873175002845e-18]}, {'': [0.012331266479904434, nan]}, {'': [0.000979890968746096, 3.0278809762504268e-18], 'true': [-3.96508223080413e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.879 seconds
Total inference time: 0.991 seconds
AUC ROC: 1.0
Total revision time: 1.879
Best scored revision CLL: -0.104379


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.136649, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.879, 'Inference time': 0.991, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.136649, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.255, 'Inference time': 0.991}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 58

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 324

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04215844012473407;  // std dev = 0.519, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1473675055130077;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07116374470309768;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.926 seconds
Total inference time: 0.993 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.45 seconds
Parameter learned model CLL: -0.103975


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.29e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.519, 11, 11], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.0, 11, 0]}]]
[{'': [-1.6148698540002277e-16, -1.0092936587501423e-17], 'true': [-1.6148698540002277e-16, nan], 'true,true': [-1.6148698540002277e-16, nan], 'true,true,true': [-1.6148698540002277e-16, nan]}, {'': [1.6148698540002277e-16, 2.523234146875356e-18], 'true': [1.6148698540002277e-16, nan], 'true,true': [1.6148698540002277e-16, nan]}, {'': [-2.0185873175002846e-16, 5.046468293750712e-18], 'false': [5.046468293750712e-18, nan], 'true': [-2.0185873175002846e-16, nan], 'true,true': [-2.0185873175002846e-16, nan]}, {'': [1.6148698540002277e-16, 0.0], 'true': [1.6148698540002277e-16, nan]}, {'': [-6.055761952500853e-17, 0.0], 'true': [-6.055761952500853e-17, nan]}, {'': [4.0371746350005693e-17, 2.523234146875356e-18], 'true': [4.0371746350005693e-17, nan], 'true,true': [4.0371746350005693e-17, nan]}, {'': [-2.5232341468753557e-17, 0.0], 'true': [-2.5232341468753557e-17, nan], 'true,true': [-2.5232341468753557e-17, nan]}, {'': [5.046468293750712e-18, 6.30808536718839e-19], 'true': [5.046468293750712e-18, nan], 'true,true': [5.046468293750712e-18, nan], 'false': [nan, 6.30808536718839e-19]}, {'': [0.012229134667364477, nan]}, {'': [0.0, -2.523234146875356e-18], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.3760000000000001 seconds
Total inference time: 0.993 seconds
AUC ROC: 1.0
Total revision time: 1.3760000000000001
Best scored revision CLL: -0.103975


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.144018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.3760000000000001, 'Inference time': 0.993, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.144018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.926, 'Inference time': 0.993}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.19773544603405127;  // std dev = 0.282, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1788553498439941;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.09437500964526115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04242959654577849;  // std dev = 0.757, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14862746545972333;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09002789276265678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07118167008205377;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.123 seconds
Total inference time: 1.025 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104935
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.563 seconds
Parameter learned model CLL: -0.104935


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [8.43e-08, 0, 23], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [1.05e-08, 0, 23], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.29e-08, 22, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [7.45e-09, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [6.45e-09, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.282, 1, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.757, 23, 23], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 23], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}]]
[{'': [0.039930555555556024, 5.046468293750712e-18], 'true': [3.089316242435218e-16, 0.0], 'true,true': [3.089316242435218e-16, nan], 'true,true,true': [3.089316242435218e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.028505885046352653, -2.523234146875356e-18], 'true': [0.028505885046352653, nan], 'true,true': [1.544658121217609e-16, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.017801055297602637, 7.569702440626067e-18], 'true': [0.017801055297602637, nan], 'true,true': [-2.703151712130816e-16, 0.0], 'false': [7.569702440626067e-18, nan], 'true,true,false': [0.0, nan]}, {'': [0.010760290549047499, -1.261617073437678e-18], 'true': [7.723290606088045e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006824217491468961, 6.308085367188389e-18], 'true': [3.8616453030440226e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004625670688765839, 1.0092936587501423e-17], 'true': [0.004625670688765839, nan], 'true,true': [-9.654113257610057e-18, 0.0]}, {'': [0.0033243042248688134, 0.0], 'true': [0.0033243042248688134, nan], 'true,true': [0.0033243042248688134, nan]}, {'': [0.0029810088107159877, -1.8924256101565167e-18], 'true': [0.0029810088107159877, nan], 'true,true': [-4.827056628805028e-17, 0.0], 'false': [nan, -1.8924256101565167e-18]}, {'': [0.012471978534993626, nan]}, {'': [0.002274299896162832, -3.1540426835941946e-18], 'true': [-3.37893964016352e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.686 seconds
Total inference time: 1.025 seconds
AUC ROC: 1.0
Total revision time: 1.686
Best scored revision CLL: -0.104935


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137347, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.686, 'Inference time': 1.025, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137347, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.123, 'Inference time': 1.025}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462844;  // std dev = 7.30e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601495;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.19372802283455617;  // std dev = 0.397, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17944466214934143;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.09403305803145981;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04252160320456314;  // std dev = 0.924, 68.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14904883391433718;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08973557282130537;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711877533275764;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137243
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.178 seconds
Total inference time: 1.063 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105255
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.576 seconds
Parameter learned model CLL: -0.105255


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.38e-07, 0, 34], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 32, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [7.3e-08, 0, 34], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 32, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 34], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 34], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [2.17e-08, 32, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.397, 2, 34], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 32, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 34], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 32, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.924, 34, 34], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 34], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 32, 0]}]]
[{'': [0.05246913580247073, 2.7755575615628914e-17], 'true': [1.6718652606120004e-15, 0.0], 'true,true': [1.6718652606120004e-15, nan], 'true,true,true': [1.6718652606120004e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.037457008370086003, -6.938893903907228e-18], 'true': [0.037457008370086003, nan], 'true,true': [-7.314410515177502e-16, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.023390758651922985, -1.0408340855860843e-17], 'true': [0.023390758651922985, nan], 'true,true': [1.5673736818237505e-16, 0.0], 'true,true,false': [0.0, nan], 'false': [-1.0408340855860843e-17, nan]}, {'': [0.014139125745607975, -1.734723475976807e-18], 'true': [-2.873518416676876e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008967087718258679, 0.0], 'true': [1.3061447348531253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006078175977508728, 1.474514954580286e-17], 'true': [0.006078175977508728, nan], 'true,true': [-1.3061447348531253e-17, 0.0]}, {'': [0.004368167870359072, 0.0], 'true': [0.004368167870359072, nan], 'true,true': [0.004368167870359072, nan]}, {'': [0.003924169995061406, 1.734723475976807e-18], 'true': [0.003924169995061406, nan], 'true,true': [-4.5715065719859385e-17, 0.0], 'false': [nan, 1.734723475976807e-18]}, {'': [0.012553144684384076, nan]}, {'': [0.0029916848126591506, -6.071532165918825e-18], 'true': [-3.918434204559376e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137243
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.754 seconds
Total inference time: 1.063 seconds
AUC ROC: 1.0
Total revision time: 1.754
Best scored revision CLL: -0.105255


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137243, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.754, 'Inference time': 1.063, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137243, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.178, 'Inference time': 1.063}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 3.73e-09, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.092691276189261;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.19773544603405105;  // std dev = 0.399, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17885534984399412;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.09437500964526115;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04242959654577829;  // std dev = 1.071, 92.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1486274654597234;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09002789276265674;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07118167008205371;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.312 seconds
Total inference time: 1.051 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104935
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.595 seconds
Parameter learned model CLL: -0.104935


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.06e-07, 0, 46], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.49e-08, 44, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 46], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [3.73e-09, 0, 46], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.399, 2, 46], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 46], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.071, 46, 46], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 46], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}]]
[{'': [0.03993055555555639, 4.794144879063176e-17], 'true': [9.267948727305654e-16, 0.0], 'true,true': [9.267948727305654e-16, nan], 'true,true,true': [9.267948727305654e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.028505885046351837, -2.7755575615628914e-17], 'true': [0.028505885046351837, nan], 'true,true': [-9.267948727305654e-16, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.017801055297603008, 5.046468293750712e-18], 'true': [0.017801055297603008, nan], 'true,true': [-3.8616453030440226e-17, 0.0], 'false': [5.046468293750712e-18, nan], 'true,true,false': [0.0, nan]}, {'': [0.010760290549047091, 1.261617073437678e-18], 'true': [-3.8616453030440226e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006824217491468924, -8.831319514063745e-18], 'true': [1.9308226515220113e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004625670688765811, 1.1354553660939102e-17], 'true': [0.004625670688765811, nan], 'true,true': [-1.9308226515220113e-17, 0.0]}, {'': [0.00332430422486886, 0.0], 'true': [0.00332430422486886, nan], 'true,true': [0.00332430422486886, nan]}, {'': [0.0029810088107160107, 3.1540426835941946e-18], 'true': [0.0029810088107160107, nan], 'true,true': [-2.896233977283017e-17, 0.0], 'false': [nan, 3.1540426835941946e-18]}, {'': [0.012471978534993556, nan]}, {'': [0.0022742998961628063, 0.0], 'true': [-6.275173617446536e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.907 seconds
Total inference time: 1.051 seconds
AUC ROC: 1.0
Total revision time: 1.907
Best scored revision CLL: -0.104935


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137007, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.907, 'Inference time': 1.051, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137007, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.312, 'Inference time': 1.051}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20013989995374806;  // std dev = 0.401, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.17850248968197865;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09458071492239328;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.042374781342262184;  // std dev = 1.200, 116.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14837497564304064;  // std dev = 6.50e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09020368439106116;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07117804606883382;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136866
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.308 seconds
Total inference time: 1.074 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104743
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.104743


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [1.19e-07, 0, 58], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.94e-08, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.8e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.401, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [7.45e-09, 0, 58], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 56, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.2, 58, 58], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [6.5e-08, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 56, 0]}]]
[{'': [0.03222222222222181, 5.947623346206196e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.675221047035001e-16, nan], 'true,true,true': [-3.675221047035001e-16, nan]}, {'': [0.0230030098461001, -3.766828119263924e-17], 'true': [0.0230030098461001, nan], 'true,true': [-1.2250736823450003e-16, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.014364677666239759, 2.7755575615628914e-17], 'true': [0.014364677666239759, nan], 'true,true': [2.4501473646900006e-16, 0.0], 'false': [2.7755575615628914e-17, nan], 'true,true,false': [0.0, nan]}, {'': [0.008683086634361459, 2.577303450022685e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005506846810506941, -1.982541115402065e-18], 'true': [-1.5313421029312505e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0037327151297170975, 5.9476233462061954e-18], 'true': [0.0037327151297170975, nan], 'true,true': [-3.062684205862501e-17, 0.0]}, {'': [0.002682568974502808, 5.9476233462061954e-18], 'true': [0.002682568974502808, nan], 'true,true': [0.002682568974502808, nan]}, {'': [0.002402954069414291, 9.912705577010326e-19], 'true': [0.002402954069414291, nan], 'true,true': [5.74253288599219e-17, 0.0], 'false': [nan, 9.912705577010326e-19]}, {'': [0.012423331762641527, nan]}, {'': [0.0018340817040960282, -5.9476233462061954e-18], 'true': [7.273874988923439e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136866
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.947 seconds
Total inference time: 1.074 seconds
AUC ROC: 1.0
Total revision time: 1.947
Best scored revision CLL: -0.104743


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.136866, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.947, 'Inference time': 1.074, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.136866, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.308, 'Inference time': 1.074}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 178

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 204

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07104793141099162;  // std dev = 2.341, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1334488206450772;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.4254589170428388;  // std dev = 1.531, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.47237590616907027;  // std dev = 0.087, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.16525547269521204;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11875721644009528;  // std dev = 1.83e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3615543759492718;  // std dev = 0.083, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.14392514864739053;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10688048396482279;  // std dev = 1.67e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.28502529865649673;  // std dev = 0.445, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.1272403079415709;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0970983145685267;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.17434025566206093;  // std dev = 0.927, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08891235676166902;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.20306075589287478;  // std dev = 0.061, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.13251234645925472;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08196822539692647;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04418671298085816;  // std dev = 1.131, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16670697675950258;  // std dev = 0.314, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12277235325145362;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07916972003977853;  // std dev = 1.05e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.237 seconds
Total inference time: 0.921 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121566
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.581 seconds
Parameter learned model CLL: -0.121566


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.38e-07, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.58e-08, 28, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.341, 33, 10]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 28, 0], 'false,false': [1.531, 5, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.087, 0, 35], 'true,false,true,true': [0.107, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 28, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.083, 0, 35], 'true,false,true,true': [0.094, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.445, 0, 35], 'true,true,false': [0.085, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.927, 7, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.061, 0, 35], 'true,true,false': [0.033, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.27e-09, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.131, 35, 35], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.314, 0, 35], 'true,false,true,true': [0.082, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 28, 0]}]]
[{'': [0.13888888888889064, 2.3790493384824782e-17], 'true': [1.6240976817373718e-15, -7.93016446160826e-18], 'true,true': [1.6240976817373718e-15, nan], 'true,true,true': [1.6240976817373718e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.04896340963409988, 0.1274107891365647], 'true': [0.04896340963409988, nan], 'true,true': [-7.105427357601002e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.030576155100552255, 0.12544108193142878], 'false': [-1.9825411154020653e-17, 0.15618892962371161], 'true': [0.030576155100552255, nan], 'true,true': [-2.842170943040401e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06300931728961406, 1.1895246692412391e-17], 'true': [0.007524685941030665, 0.0016209946055588675], 'true,false': [0.0016209946055588675, nan], 'true,false,true': [0.0016209946055588675, nan]}, {'': [0.04148046820319369, 9.912705577010326e-18], 'true': [0.006936703652537091, 0.0012746661344205537], 'true,false': [0.0012746661344205537, nan], 'true,false,true': [0.0012746661344205537, nan]}, {'': [0.028499510050552696, -1.982541115402065e-18], 'true': [0.028499510050552696, nan], 'true,true': [0.005667487208047652, 0.0010238489433506376]}, {'': [0.020478269716560162, -2.9738116731030977e-18], 'true': [0.020478269716560162, nan], 'true,true': [0.020478269716560162, nan]}, {'': [0.018947221493326498, 9.912705577010326e-19], 'true': [0.018947221493326498, nan], 'true,true': [0.00374824875535577, 0.0011009959979860681], 'false': [nan, 9.912705577010326e-19]}, {'': [0.018261399874976523, nan]}, {'': [0.014146944456040042, 3.96508223080413e-18], 'true': [0.0028179359326523253, 0.0009600849866518971], 'true,false': [0.0009600849866518971, nan], 'true,false,true': [0.0009600849866518971, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.818 seconds
Total inference time: 0.921 seconds
AUC ROC: 1.0
Total revision time: 1.818
Best scored revision CLL: -0.121566


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102258, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.818, 'Inference time': 0.921, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102258, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.237, 'Inference time': 0.921}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 5.16e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109547;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08087255990796069;  // std dev = 3.366, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462838;  // std dev = 4.21e-08, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.134589039992455;  // std dev = 3.94e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0.38266201653713194;  // std dev = 2.373, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.47662020638566593;  // std dev = 0.091, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.15414977258393026;  // std dev = 0.163, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1232697829376131;  // std dev = 0.111, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3648957276743991;  // std dev = 0.088, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.13531992422216377;  // std dev = 0.145, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11057831438215666;  // std dev = 0.102, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2875489600099948;  // std dev = 0.670, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else return -0.12040651647083239;  // std dev = 0.131, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10018042238723596;  // std dev = 0.094, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.17095971618507272;  // std dev = 1.377, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09151878054958859;  // std dev = 0.087, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.20541301105914644;  // std dev = 0.065, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else return -0.1264167658646778;  // std dev = 0.031, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08157669012758678;  // std dev = 2.58e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04445466162250727;  // std dev = 1.636, 142.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16845195774885896;  // std dev = 0.473, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11715209214150281;  // std dev = 0.128, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08112160592269169;  // std dev = 0.071, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101568
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.466 seconds
Total inference time: 0.835 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.666 seconds
Parameter learned model CLL: -0.12315


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [0.0, 0, 71], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 50], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [3.366, 65, 21]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [4.21e-08, 0, 50], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.94e-08, 52, 0], 'false,false': [2.373, 13, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.091, 0, 71], 'true,false,true,true': [0.163, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.111, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.088, 0, 71], 'true,false,true,true': [0.145, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.102, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.67, 0, 71], 'true,true,false': [0.131, 16, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.377, 16, 71], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 55, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.065, 0, 71], 'true,true,false': [0.031, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.58e-08, 52, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.636, 71, 71], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.473, 0, 71], 'true,false,true,true': [0.128, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.071, 55, 0]}]]
[{'': [0.15008587660192782, 4.844609562000683e-17], 'true': [-1.3009937415325778e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-1.3009937415325778e-15, nan], 'true,true,true': [-1.3009937415325778e-15, nan]}, {'': [0.06829271484041836, 0.13175433876621961], 'true': [0.06829271484041836, nan], 'true,true': [-6.394884621840901e-16, -2.3129646346357427e-18], 'true,true,false': [0.0, 0.0]}, {'': [0.04264671632966117, 0.12943679963970542], 'false': [2.9890619893754213e-17, 0.1656253581548892], 'true': [0.04264671632966117, nan], 'true,true': [3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06680785678300305, 0.00022472680801334546], 'true': [0.008318078074112818, 0.0016571186287526324], 'true,false': [0.0016571186287526324, nan], 'true,false,true': [0.0016571186287526324, nan]}, {'': [0.04409289220431974, 0.000188639331220817], 'true': [0.007714531308211047, 0.0013228504444399922], 'true,false': [0.0013228504444399922, nan], 'true,false,true': [0.0013228504444399922, nan]}, {'': [0.0303313461220683, 0.00016024497593839404], 'true': [0.0303313461220683, nan], 'true,true': [0.006316661328615583, 0.0010762268339385723]}, {'': [0.021809272704566215, 0.00013759450121258505], 'true': [0.021809272704566215, nan], 'true,true': [0.021809272704566215, nan]}, {'': [0.02185805183881946, 1.2810265668751807e-17], 'true': [0.02185805183881946, nan], 'true,true': [0.004199007374550689, 0.00098176761399843], 'false': [nan, 1.2810265668751807e-17]}, {'': [0.01885434928438008, nan]}, {'': [0.01500452926571505, 9.036825226555618e-05], 'true': [0.003153567681932425, 0.0010248172100938997], 'true,false': [0.0010248172100938997, nan], 'true,false,true': [0.0010248172100938997, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101568
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.132 seconds
Total inference time: 0.835 seconds
AUC ROC: 1.0
Total revision time: 2.132
Best scored revision CLL: -0.12315


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.101568, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.132, 'Inference time': 0.835, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.101568, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.466, 'Inference time': 0.835}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995111;  // std dev = 4.92e-07, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.719473412210954;  // std dev = 2.36e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0705763492431367;  // std dev = 3.987, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462836;  // std dev = 3.48e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.13339429619940016;  // std dev = 3.33e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0.36280468005024785;  // std dev = 2.884, 49.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.47412764748710334;  // std dev = 0.092, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.14933791848717456;  // std dev = 0.195, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12256864256175627;  // std dev = 0.135, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3632440233066408;  // std dev = 0.089, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.13153530222144894;  // std dev = 0.175, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11000903476546282;  // std dev = 0.124, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.286505154755364;  // std dev = 0.834, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return -0.11736201769195334;  // std dev = 0.158, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09970984022612038;  // std dev = 0.114, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16852566203100108;  // std dev = 1.703, 131.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=106 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09112378989227986;  // std dev = 0.106, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.20522965350871605;  // std dev = 0.066, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else return -0.12335077759001047;  // std dev = 0.030, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08105634200856277;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04463058834997941;  // std dev = 2.000, 212.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1683410257792445;  // std dev = 0.594, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11456407470557747;  // std dev = 0.155, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08083544061595814;  // std dev = 0.086, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.84 seconds
Total inference time: 0.932 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122965
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.701 seconds
Parameter learned model CLL: -0.122965


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [4.92e-07, 0, 106], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 81, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [2.36e-08, 0, 77], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false': [3.987, 96, 29]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [3.48e-07, 0, 77], 'true,true,false,true': [0.0, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.33e-08, 76, 0], 'false,false': [2.884, 20, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.092, 0, 106], 'true,false,true,true': [0.195, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.135, 81, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.089, 0, 106], 'true,false,true,true': [0.175, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.124, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.834, 0, 106], 'true,true,false': [0.158, 25, 0], 'true,false': [0.0, 0, 0], 'false': [0.114, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.703, 25, 106], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.106, 81, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.066, 0, 106], 'true,true,false': [0.03, 30, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [2.0, 106, 106], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.594, 0, 106], 'true,false,true,true': [0.155, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.086, 81, 0]}]]
[{'': [0.15441990559990978, 6.579099405186112e-17], 'true': [2.2790993411173024e-15, 1.3322676295501878e-17], 'true,true': [2.2790993411173024e-15, nan], 'true,true,true': [2.2790993411173024e-15, nan], 'true,false': [1.3322676295501878e-17, nan], 'true,false,true': [1.3322676295501878e-17, nan]}, {'': [0.07262420591864066, 0.12719744324499505], 'true': [0.07262420591864066, nan], 'true,true': [5.536696642286495e-16, 2.7755575615628915e-18], 'true,true,false': [-1.982541115402065e-18, 0.0]}, {'': [0.04535160032393583, 0.12524404829902377], 'false': [1.460819769243627e-17, 0.1698023614008274], 'true': [0.04535160032393583, nan], 'true,true': [1.5687307153145068e-15, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06720057897173633, 0.00022589530490766971], 'true': [0.00851023161475554, 0.0015195062134545046], 'true,false': [0.0015195062134545046, nan], 'true,false,true': [0.0015195062134545046, nan]}, {'': [0.044473358244978556, 0.00018956871381520726], 'true': [0.007955765014653456, 0.001220185733743302], 'true,false': [0.001220185733743302, nan], 'true,false,true': [0.001220185733743302, nan]}, {'': [0.030687807126528455, 0.00016100574015167322], 'true': [0.030687807126528455, nan], 'true,true': [0.006562558296181079, 0.0009977823508446515]}, {'': [0.022126381682525495, 0.00013823132151103142], 'true': [0.022126381682525495, nan], 'true,true': [0.022126381682525495, nan]}, {'': [0.022200653998072896, -1.241696803857083e-17], 'true': [0.022200653998072896, nan], 'true,true': [0.004412751489257668, 0.0009019739779311031], 'false': [nan, -1.241696803857083e-17]}, {'': [0.018861724273056865, nan]}, {'': [0.015234681980702788, 9.133050792744348e-05], 'true': [0.0033284422432206537, 0.0009557540148431754], 'true,false': [0.0009557540148431754, nan], 'true,false,true': [0.0009557540148431754, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.541 seconds
Total inference time: 0.932 seconds
AUC ROC: 1.0
Total revision time: 2.541
Best scored revision CLL: -0.122965


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102021, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.541, 'Inference time': 0.932, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102021, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.84, 'Inference time': 0.932}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995101;  // std dev = 8.68e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07671366809022452;  // std dev = 4.602, 163.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=39 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462845;  // std dev = 2.67e-07, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1341053695071537;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0.3845564071312843;  // std dev = 3.229, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.47254518602811363;  // std dev = 0.089, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.1445996717827769;  // std dev = 0.255, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1224280320411913;  // std dev = 0.144, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.36189561389315344;  // std dev = 0.086, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.1278328683391711;  // std dev = 0.229, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10989179275155198;  // std dev = 0.132, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.28541812655805243;  // std dev = 0.931, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | else return -0.11440236438983217;  // std dev = 0.208, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0996106084938478;  // std dev = 0.122, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16295605955206072;  // std dev = 2.008, 179.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09103871464023879;  // std dev = 0.113, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.20526872364618948;  // std dev = 0.064, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | | else return -0.12058690088060738;  // std dev = 0.033, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08149453331788338;  // std dev = 3.16e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04458893695602644;  // std dev = 2.308, 284.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=142 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16831485086558787;  // std dev = 0.664, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11168220064205167;  // std dev = 0.204, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08080257680169568;  // std dev = 0.093, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.967 seconds
Total inference time: 0.853 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122914
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.774 seconds
Parameter learned model CLL: -0.122914


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [8.68e-07, 0, 142], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.8e-08, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 103], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false': [4.602, 124, 39]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [2.67e-07, 0, 103], 'true,true,false,true': [1.67e-08, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 100, 0], 'false,false': [3.229, 24, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.089, 0, 142], 'true,false,true,true': [0.255, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.144, 105, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.086, 0, 142], 'true,false,true,true': [0.229, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.132, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.931, 0, 142], 'true,true,false': [0.208, 37, 0], 'true,false': [0.0, 0, 0], 'false': [0.122, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.008, 37, 142], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.113, 105, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.064, 0, 142], 'true,true,false': [0.033, 42, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.16e-08, 100, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [2.308, 142, 142], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.664, 0, 142], 'true,false,true,true': [0.204, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.093, 105, 0]}]]
[{'': [0.16397740395119262, 7.190015778524824e-17], 'true': [5.304051407786663e-15, 3.900783600034334e-17], 'true,true': [5.304051407786663e-15, nan], 'true,true,true': [5.304051407786663e-15, nan], 'true,false': [3.900783600034334e-17, nan], 'true,false,true': [3.900783600034334e-17, nan]}, {'': [0.09039994495665861, 0.12993922143406275], 'true': [0.09039994495665861, nan], 'true,true': [-2.7593892650877675e-16, -3.0839528461809902e-18], 'true,true,false': [0.0, 0.0]}, {'': [0.05645200689110517, 0.12777075320140446], 'false': [-2.2204460492503132e-17, 0.16554463910507045], 'true': [0.05645200689110517, nan], 'true,true': [6.898473162719419e-16, 1.5419764230904953e-17], 'true,true,false': [1.5419764230904953e-17, nan]}, {'': [0.06916085431074491, 0.00019789377416029542], 'true': [0.00799828594996852, 0.0017519565301918503], 'true,false': [0.0017519565301918503, nan], 'true,false,true': [0.0017519565301918503, nan]}, {'': [0.04551743932643382, 0.00016628965653834473], 'true': [0.007433378864794599, 0.0014185241435012174], 'true,false': [0.0014185241435012174, nan], 'true,false,true': [0.0014185241435012174, nan]}, {'': [0.03130120084150823, 0.00014139092538482904], 'true': [0.03130120084150823, nan], 'true,true': [0.006109849397761017, 0.0011680457973829213]}, {'': [0.022530169775923068, 0.00012150555359617426], 'true': [0.022530169775923068, nan], 'true,true': [0.022530169775923068, nan]}, {'': [0.02213795952999155, 9.992007221626408e-18], 'true': [0.02213795952999155, nan], 'true,true': [0.004117391240931528, 0.001119924852371657], 'false': [nan, 9.992007221626408e-18]}, {'': [0.018764379512606014, nan]}, {'': [0.015547551120350363, 8.227369762503912e-05], 'true': [0.003101765525648307, 0.0011193544379745428], 'true,false': [0.0011193544379745428, nan], 'true,false,true': [0.0011193544379745428, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.741 seconds
Total inference time: 0.853 seconds
AUC ROC: 1.0
Total revision time: 2.741
Best scored revision CLL: -0.122914


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102654, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.741, 'Inference time': 0.853, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102654, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.967, 'Inference time': 0.853}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.1254446385283914;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07750136385507818;  // std dev = 5.155, 204.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462834;  // std dev = 4.92e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1341968639863237;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return 0.39209171539836446;  // std dev = 3.576, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4721305443743393;  // std dev = 0.089, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.1421660979342372;  // std dev = 0.282, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12337017776034843;  // std dev = 0.184, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3615377871088698;  // std dev = 0.085, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.12591347384948273;  // std dev = 0.254, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11066294109674506;  // std dev = 0.169, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2851269704834993;  // std dev = 1.032, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11285555113336197;  // std dev = 0.231, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10025274415582043;  // std dev = 0.156, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16587609293904462;  // std dev = 2.198, 222.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09158132276170415;  // std dev = 0.144, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.20457603363830193;  // std dev = 0.063, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12006951100333009;  // std dev = 0.034, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08132987066176862;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04449538047500889;  // std dev = 2.574, 356.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16780893590357215;  // std dev = 0.734, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.11064374429043929;  // std dev = 0.227, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08120925549488382;  // std dev = 0.119, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.728 seconds
Total inference time: 0.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.795 seconds
Parameter learned model CLL: -0.122495


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [1.09e-06, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.59e-08, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [7.45e-09, 12, 0], 'true,true,false,false': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false': [5.155, 155, 49]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [4.92e-07, 0, 129], 'true,true,false,true': [1.05e-08, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 126, 0], 'false,false': [3.576, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.089, 0, 178], 'true,false,true,true': [0.282, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.184, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.085, 0, 178], 'true,false,true,true': [0.254, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.169, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.032, 0, 178], 'true,true,false': [0.231, 44, 0], 'true,false': [0.0, 0, 0], 'false': [0.156, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.198, 44, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.144, 134, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.063, 0, 178], 'true,true,false': [0.034, 52, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [2.574, 178, 178], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.734, 0, 178], 'true,false,true,true': [0.227, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.119, 134, 0]}]]
[{'': [0.15891567242919188, -1.3256394323882466e-17], 'true': [6.706246045376226e-15, 4.794144879063176e-17], 'true,true': [6.706246045376226e-15, nan], 'true,true,true': [6.706246045376226e-15, nan], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [4.794144879063176e-17, nan]}, {'': [0.09167682143715958, 0.13028566085575385], 'true': [0.09167682143715958, nan], 'true,true': [-1.6524249668839539e-15, -7.240584943207542e-18], 'true,true,false': [4.625929269271485e-18, 2.523234146875356e-18]}, {'': [0.057249377286753195, 0.1280891607932672], 'false': [-3.52451753849256e-18, 0.16392674275371205], 'true': [0.057249377286753195, nan], 'true,true': [1.8727482958018146e-15, 4.827056628805028e-18], 'true,true,false': [4.827056628805028e-18, nan]}, {'': [0.06662249913071089, 0.0002538391521771013], 'true': [0.007853236577098164, 0.001802659074822703], 'true,false': [0.001802659074822703, nan], 'true,false,true': [0.001802659074822703, nan]}, {'': [0.043891842013176044, 0.00021307636394093902], 'true': [0.007285657421632839, 0.001465388571773716], 'true,false': [0.001465388571773716, nan], 'true,false,true': [0.001465388571773716, nan]}, {'': [0.030206859885971105, 0.00018100160188007797], 'true': [0.030206859885971105, nan], 'true,true': [0.005981817315209506, 0.0012107109126089871]}, {'': [0.021755943972348042, 0.0001554145084785193], 'true': [0.021755943972348042, nan], 'true,true': [0.021755943972348042, nan]}, {'': [0.02180323624954417, -1.76225876924628e-17], 'true': [0.02180323624954417, nan], 'true,true': [0.004014173400425368, 0.0011302107771457208], 'false': [nan, -1.76225876924628e-17]}, {'': [0.018606862044355483, nan]}, {'': [0.01497759697436356, 0.00010560256591533267], 'true': [0.0030234328631994272, 0.0011692041136905059], 'true,false': [0.0011692041136905059, nan], 'true,false,true': [0.0011692041136905059, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.523 seconds
Total inference time: 0.855 seconds
AUC ROC: 1.0
Total revision time: 2.523
Best scored revision CLL: -0.122495


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102505, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.523, 'Inference time': 0.855, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102505, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.728, 'Inference time': 0.855}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 337

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.1572969028391488;  // std dev = 0.369, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18487171392520652;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.09097502623219046;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04339505140443363;  // std dev = 0.489, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15291094650009884;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08711605919092621;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07124552740776526;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.969 seconds
Total inference time: 1.09 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.469 seconds
Parameter learned model CLL: -0.108165


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [1.05e-08, 0, 9], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [1.05e-08, 0, 9], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 9], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.83e-08, 0, 9], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.369, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.489, 9, 9], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [7.45e-09, 0, 9], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 7, 0]}]]
[{'': [0.14876033057851218, -7.93016446160826e-18], 'true': [-2.9605947323337506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.9605947323337506e-16, nan], 'true,true,true': [-2.9605947323337506e-16, nan]}, {'': [0.10619799358986085, -1.982541115402065e-18], 'true': [0.10619799358986085, nan], 'true,true': [9.868649107779169e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.06631740615362812, -1.982541115402065e-18], 'true': [0.06631740615362812, nan], 'true,true': [-1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan], 'false': [-1.982541115402065e-18, nan]}, {'': [0.040087205322502296, 0.0], 'true': [1.2335811384723962e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.025423459199263334, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01723282562023866, 9.912705577010326e-19], 'true': [0.01723282562023866, nan], 'true,true': [3.700743415417188e-17, 0.0]}, {'': [0.012384615955242468, -9.912705577010326e-19], 'true': [0.012384615955242468, nan], 'true,true': [0.012384615955242468, nan]}, {'': [0.011319385396680372, 9.912705577010326e-19], 'true': [0.011319385396680372, nan], 'true,true': [0.0, 0.0], 'false': [nan, 9.912705577010326e-19]}, {'': [0.01329630708810321, nan]}, {'': [0.008570523490066024, 1.982541115402065e-18], 'true': [6.1679056923619804e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.438 seconds
Total inference time: 1.09 seconds
AUC ROC: 1.0
Total revision time: 1.438
Best scored revision CLL: -0.108165


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138228, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.438, 'Inference time': 1.09, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138228, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.969, 'Inference time': 1.09}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.83e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1.29e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.14703283077087748;  // std dev = 0.571, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18642345516077835;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.09012975821844335;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04365313030859455;  // std dev = 0.697, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.154009235148261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08639028574321882;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0712626062759225;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138841
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.056 seconds
Total inference time: 1.055 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Parameter learned model CLL: -0.108984


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [0.0, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [1.83e-08, 0, 18], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.05e-08, 13, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [1.29e-08, 0, 18], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [5.27e-09, 0, 18], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.49e-08, 0, 18], 'true,true,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.571, 5, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.697, 18, 18], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 18], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}]]
[{'': [0.17013232514177654, -1.2810265668751807e-17], 'true': [-2.9605947323337506e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,true': [-2.9605947323337506e-16, nan], 'true,true,true': [-2.9605947323337506e-16, nan]}, {'': [0.12145517225305434, 4.270088556250602e-18], 'true': [0.12145517225305434, nan], 'true,true': [2.9605947323337506e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.07584504862560477, 8.540177112501205e-18], 'true': [0.07584504862560477, nan], 'true,true': [-2.4671622769447924e-16, 0.0], 'false': [8.540177112501205e-18, nan], 'true,true,false': [0.0, nan]}, {'': [0.04584642574690717, -2.135044278125301e-18], 'true': [1.7270135938613546e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.029075978857380582, 2.135044278125301e-18], 'true': [2.4671622769447922e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.019708619093089578, 4.270088556250602e-18], 'true': [0.019708619093089578, nan], 'true,true': [1.2335811384723961e-17, 0.0]}, {'': [0.014163880251269745, 1.0675221390626506e-18], 'true': [0.014163880251269745, nan], 'true,true': [0.014163880251269745, nan]}, {'': [0.013012006020290328, 0.0], 'true': [0.013012006020290328, nan], 'true,true': [-2.4671622769447922e-17, -1.3877787807814458e-18], 'false': [nan, 0.0]}, {'': [0.013507493555199555, nan]}, {'': [0.009832275364908816, -2.135044278125301e-18], 'true': [-1.2335811384723961e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138841
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.57 seconds
Total inference time: 1.055 seconds
AUC ROC: 1.0
Total revision time: 1.57
Best scored revision CLL: -0.108984


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138841, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.57, 'Inference time': 1.055, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138841, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.056, 'Inference time': 1.055}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.15035355996943586;  // std dev = 0.680, 34.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18592032536447045;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.09040245011690733;  // std dev = 1.32e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04356905931005763;  // std dev = 0.852, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15365341940812183;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08662450969374816;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0712570423007244;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.119 seconds
Total inference time: 1.042 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.108719


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [1.58e-07, 0, 27], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.49e-08, 20, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.68, 7, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 27], 'true,true,false': [1.32e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.852, 27, 27], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 27], 'true,false,true,true': [3.73e-09, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}]]
[{'': [0.16349480968858257, 2.7755575615628915e-18], 'true': [9.210739167260557e-16, -7.93016446160826e-18], 'true,true': [9.210739167260557e-16, nan], 'true,true,true': [9.210739167260557e-16, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.11671673949473892, 0.0], 'true': [0.11671673949473892, nan], 'true,true': [-2.631639762074445e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.07288604197074786, 1.1102230246251566e-17], 'true': [0.07288604197074786, nan], 'true,true': [-2.631639762074445e-16, -1.982541115402065e-18], 'false': [1.1102230246251566e-17, nan], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.044057780590172235, -1.3877787807814458e-18], 'true': [-9.868649107779169e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027941613246249115, 6.938893903907228e-18], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.018939710164803808, 9.714451465470119e-18], 'true': [0.018939710164803808, nan], 'true,true': [-1.644774851296528e-17, 9.912705577010326e-19]}, {'': [0.013611292881605145, 0.0], 'true': [0.013611292881605145, nan], 'true,true': [0.013611292881605145, nan]}, {'': [0.012483527864359275, -1.3877787807814458e-18], 'true': [0.012483527864359275, nan], 'true,true': [-2.4671622769447922e-17, 0.0], 'false': [nan, -1.3877787807814458e-18]}, {'': [0.01343907793319601, nan]}, {'': [0.009439124850647337, 0.0], 'true': [-4.11193712824132e-18, 1.982541115402065e-18], 'true,false': [1.982541115402065e-18, nan], 'true,false,true': [1.982541115402065e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.641 seconds
Total inference time: 1.042 seconds
AUC ROC: 1.0
Total revision time: 1.641
Best scored revision CLL: -0.108719


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138642, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.641, 'Inference time': 1.042, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.138642, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.119, 'Inference time': 1.042}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462843;  // std dev = 1.03e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601495;  // std dev = 3.73e-09, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 9.13e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1.97e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16278698789892176;  // std dev = 0.698, 43.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18404582108661702;  // std dev = 6.97e-09, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.09143006911349431;  // std dev = 1.32e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.043259168036346995;  // std dev = 0.974, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15232531977281016;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08750646278701434;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07123653658317373;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.181 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.576 seconds
Parameter learned model CLL: -0.107726


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.53e-07, 0, 36], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.58e-08, 29, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 36], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 29, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [1.03e-07, 0, 36], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 29, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 36], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 29, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [3.73e-09, 0, 36], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 29, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 36], 'true,true,false': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [1.97e-08, 29, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.698, 7, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [6.97e-09, 0, 36], 'true,true,false': [1.32e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.974, 36, 36], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.0, 0, 36], 'true,false,true,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 29, 0]}]]
[{'': [0.13628988642509646, 2.2970131543968756e-17], 'true': [1.7763568394002505e-15, -7.93016446160826e-18], 'true,true': [1.7763568394002505e-15, nan], 'true,true,true': [1.7763568394002505e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.09729551170428562, -5.742532885992189e-18], 'true': [0.09729551170428562, nan], 'true,true': [-6.908054375445419e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.060758077893048774, -7.656710514656252e-18], 'true': [0.060758077893048774, nan], 'true,true': [2.9605947323337506e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan], 'false': [-7.656710514656252e-18, nan]}, {'': [0.036726731106716336, 0.0], 'true': [-3.20731096002823e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.023292233576826405, 2.8712664429960945e-18], 'true': [1.2335811384723961e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015788213413025567, 1.3399243400648442e-17], 'true': [0.015788213413025567, nan], 'true,true': [-1.2335811384723961e-17, 9.912705577010326e-19]}, {'': [0.011346424785387135, 9.570888143320315e-19], 'true': [0.011346424785387135, nan], 'true,true': [0.011346424785387135, nan]}, {'': [0.01034262598839865, 1.914177628664063e-18], 'true': [0.01034262598839865, nan], 'true,true': [5.551115123125783e-17, 1.982541115402065e-18], 'false': [nan, 1.914177628664063e-18]}, {'': [0.013183682875684362, nan]}, {'': [0.00783929667350313, -6.699621700324221e-18], 'true': [-5.551115123125783e-17, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [9.912705577010326e-19, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7570000000000001 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0
Total revision time: 1.7570000000000001
Best scored revision CLL: -0.107726


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.7570000000000001, 'Inference time': 1.088, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.181, 'Inference time': 1.088}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.17091653692973957;  // std dev = 0.710, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1828281171291931;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09210764254450075;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04306072540871061;  // std dev = 1.082, 90.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15146049152237698;  // std dev = 4.47e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.08808738633114707;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07122340836044598;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.238 seconds
Total inference time: 1.041 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.587 seconds
Parameter learned model CLL: -0.107077


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.23e-07, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [3.73e-09, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [2.24e-08, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.71, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.082, 45, 45], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [4.47e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}]]
[{'': [0.11649408284023735, 4.0902953538821554e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,true': [1.105288700071267e-15, nan], 'true,true,true': [1.105288700071267e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -2.0451476769410777e-17], 'true': [0.0831635545216455, nan], 'true,true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan]}, {'': [0.05193310189730332, -8.764918615461762e-18], 'true': [0.05193310189730332, nan], 'true,true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan], 'false': [-8.764918615461762e-18, nan]}, {'': [0.0313922549076915, -8.764918615461762e-18], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.019909088333742615, -8.764918615461762e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.013495010447801522, 1.3147377923192643e-17], 'true': [0.013495010447801522, nan], 'true,true': [-2.960594732333751e-17, 9.912705577010326e-19]}, {'': [0.00969838176228774, 0.0], 'true': [0.00969838176228774, nan], 'true,true': [0.00969838176228774, nan]}, {'': [0.008805749505701023, 2.921639538487254e-18], 'true': [0.008805749505701023, nan], 'true,true': [-1.4802973661668754e-17, -2.9738116731030977e-18], 'false': [nan, 2.921639538487254e-18]}, {'': [0.0130173330672613, nan]}, {'': [0.0066848015983728155, 0.0], 'true': [4.4408920985006264e-17, -2.9738116731030977e-18], 'true,false': [-2.9738116731030977e-18, nan], 'true,false,true': [-2.9738116731030977e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.825 seconds
Total inference time: 1.041 seconds
AUC ROC: 1.0
Total revision time: 1.825
Best scored revision CLL: -0.107077


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.825, 'Inference time': 1.041, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.137419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.238, 'Inference time': 1.041}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 45

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 337

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02817682524239876;  // std dev = 1.081, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12856863286290568;  // std dev = 9.13e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.713751437030325;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4469138742586812;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11483854555956644;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3419460593931805;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10367134304711113;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.27038191232976827;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09442598090598958;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.22092516565657874;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08665501776193098;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1855529051585016;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08003778522696657;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04249788391650503;  // std dev = 0.505, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1537672406489623;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0773168726829865;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.902 seconds
Total inference time: 0.92 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110105
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.466 seconds
Parameter learned model CLL: -0.110105


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.081, 9, 2]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 9, 0], 'false,false': [0.0, 0, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.055, 0, 9], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.052, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.139, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.123, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.036, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.505, 9, 9], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.095, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [-2.9605947323337506e-16, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, nan], 'true,true': [-2.9605947323337506e-16, nan], 'true,true,true': [-2.9605947323337506e-16, nan]}, {'': [6.344131569286608e-17, 0.10619799358986079], 'true': [6.344131569286608e-17, nan], 'true,true': [6.344131569286608e-17, nan]}, {'': [-6.344131569286608e-17, 0.10554591572404015], 'false': [9.25185853854297e-18, 0.0], 'true': [-6.344131569286608e-17, nan], 'true,true': [-6.344131569286608e-17, nan]}, {'': [0.003025319702951057, 4.625929269271485e-18], 'true': [0.003025319702951057, nan]}, {'': [0.0026671634961038648, -1.5419764230904951e-18], 'true': [0.0026671634961038648, nan]}, {'': [0.0021376300476002954, 3.0839528461809902e-18], 'true': [0.0021376300476002954, nan], 'true,true': [0.0021376300476002954, nan]}, {'': [0.0016745409286466925, 3.0839528461809902e-18], 'true': [0.0016745409286466925, nan], 'true,true': [0.0016745409286466925, nan]}, {'': [0.001317527733516794, 7.709882115452476e-19], 'true': [0.001317527733516794, nan], 'true,true': [0.001317527733516794, nan], 'false': [nan, 7.709882115452476e-19]}, {'': [0.014176233766551607, nan]}, {'': [0.0009947417553891798, 0.0], 'true': [0.0009947417553891798, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.368 seconds
Total inference time: 0.92 seconds
AUC ROC: 1.0
Total revision time: 1.368
Best scored revision CLL: -0.110105


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.123394, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.368, 'Inference time': 0.92, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.123394, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.902, 'Inference time': 0.92}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0047420598513419916;  // std dev = 1.355, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1249253186631733;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.7204295120324534;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.44064484081036137;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11189605379777665;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33750872177263014;  // std dev = 0.049, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.101249791234836;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.26728212577743987;  // std dev = 0.186, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09240104709335999;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2187048296332193;  // std dev = 0.165, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08493838150103339;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1839094374971703;  // std dev = 0.035, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07856516018820987;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04250861897676716;  // std dev = 0.706, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1525436772016526;  // std dev = 0.128, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07599427505300761;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124169
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.944 seconds
Total inference time: 1.041 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.477 seconds
Parameter learned model CLL: -0.108908


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)'}, {'true,true,true,true': [0.0, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.49e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.355, 18, 3]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 18, 0], 'false,false': [0.0, 0, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.052, 0, 18], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.049, 0, 18], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.186, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.165, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.035, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.27e-09, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.706, 18, 18], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.128, 0, 18], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 18, 0]}]]
[{'': [-2.9605947323337506e-16, -3.0839528461809902e-18], 'true': [-2.9605947323337506e-16, nan], 'true,true': [-2.9605947323337506e-16, nan], 'true,true,true': [-2.9605947323337506e-16, nan]}, {'': [1.7763568394002506e-16, 0.08741467499573574], 'true': [1.7763568394002506e-16, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 0.0875050762996446], 'false': [-1.5419764230904953e-17, -7.401486830834377e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0026752751715154823, -4.625929269271485e-18], 'true': [0.0026752751715154823, nan]}, {'': [0.0023794966189066478, -4.625929269271485e-18], 'true': [0.0023794966189066478, nan]}, {'': [0.0019255352559048743, -6.1679056923619804e-18], 'true': [0.0019255352559048743, nan], 'true,true': [0.0019255352559048743, nan]}, {'': [0.0015212343897065025, 0.0], 'true': [0.0015212343897065025, nan], 'true,true': [0.0015212343897065025, nan]}, {'': [0.0012053176149382134, 1.5419764230904951e-18], 'true': [0.0012053176149382134, nan], 'true,true': [0.0012053176149382134, nan], 'false': [nan, 1.5419764230904951e-18]}, {'': [0.013840084808310659, nan]}, {'': [0.0009159696119821018, 7.709882115452476e-19], 'true': [0.0009159696119821018, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124169
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.4209999999999998 seconds
Total inference time: 1.041 seconds
AUC ROC: 1.0
Total revision time: 1.4209999999999998
Best scored revision CLL: -0.108908


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.124169, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.4209999999999998, 'Inference time': 1.041, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.124169, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.944, 'Inference time': 1.041}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010832466429567632;  // std dev = 1.730, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12663787953975747;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.7172818913389338;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.44264656499072247;  // std dev = 0.053, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11328101992108439;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33892055108480196;  // std dev = 0.050, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10239083874054833;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.26826603972908575;  // std dev = 0.232, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09335611777569125;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.20875880960660956;  // std dev = 0.358, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08574870775568291;  // std dev = 9.13e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18602321329108287;  // std dev = 0.035, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.09532138050471574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0792607987162674;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04275174889621951;  // std dev = 0.875, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15406624321513313;  // std dev = 0.160, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09088346046759121;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07663701691897754;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.101 seconds
Total inference time: 1.052 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110153
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.55 seconds
Parameter learned model CLL: -0.110153


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [1.58e-07, 0, 27], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 26, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [1.49e-08, 0, 22], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [1.73, 26, 5]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 22], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 26, 0], 'false,false': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.053, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.05, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 26, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.232, 0, 27], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.358, 1, 27], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.035, 0, 27], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [0.875, 27, 27], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.16, 0, 27], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 26, 0]}]]
[{'': [0.03443877551020513, 1.708035422500241e-17], 'true': [9.210739167260557e-16, 0.0], 'true,true': [9.210739167260557e-16, nan], 'true,true,true': [9.210739167260557e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.029689042106302396, 0.09657153654575754], 'true': [0.029689042106302396, nan], 'true,true': [2.4223047810003414e-16, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.01853990077514764, 0.09634347071632925], 'false': [-2.135044278125301e-18, 0.0], 'true': [0.01853990077514764, nan], 'true,true': [-2.8260222445003984e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012880848286885849, -8.540177112501205e-18], 'true': [0.002779333592298555, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008790533539205463, 2.135044278125301e-18], 'true': [0.0024629385182274926, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006217098531304461, -5.337610695313253e-18], 'true': [0.006217098531304461, nan], 'true,true': [0.0019856663776722135, 0.0]}, {'': [0.004570019958639585, 3.2025664171879517e-18], 'true': [0.004570019958639585, nan], 'true,true': [0.004570019958639585, nan]}, {'': [0.00393229558396744, -6.4051328343759035e-18], 'true': [0.00393229558396744, nan], 'true,true': [0.0012509797162184506, 0.0], 'false': [nan, -6.4051328343759035e-18]}, {'': [0.014175507215342796, nan]}, {'': [0.0029800678857664986, -3.2025664171879517e-18], 'true': [0.0009475708656297165, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.651 seconds
Total inference time: 1.052 seconds
AUC ROC: 1.0
Total revision time: 1.651
Best scored revision CLL: -0.110153


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114647, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.651, 'Inference time': 1.052, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114647, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.101, 'Inference time': 1.052}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015375036594833028;  // std dev = 2.041, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1271411437851588;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.7163598014530212;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.44372917992522015;  // std dev = 0.053, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11368739609887521;  // std dev = 1.83e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.339689693938339;  // std dev = 0.050, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10272521288149859;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.26880540351871124;  // std dev = 0.270, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09363568474590962;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.21172646036644902;  // std dev = 0.380, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08598568016892441;  // std dev = 1.67e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.1859252823068381;  // std dev = 0.036, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.09557760402807369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0794640639464957;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04269144029230786;  // std dev = 1.010, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15400609383782024;  // std dev = 0.186, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.09110274329370245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07681542155667946;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.208 seconds
Total inference time: 1.095 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110153
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.596 seconds
Parameter learned model CLL: -0.110153


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.53e-07, 0, 36], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 35, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 29], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [2.041, 35, 7]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 29], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 35, 0], 'false,false': [2.98e-08, 0, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.053, 0, 36], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 35, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.05, 0, 36], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.27, 0, 36], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.38, 1, 36], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.036, 0, 36], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.01, 36, 36], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.186, 0, 36], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 35, 0]}]]
[{'': [0.026296566837109174, 3.489272363107635e-17], 'true': [1.7763568394002505e-15, 0.0], 'true,true': [1.7763568394002505e-15, nan], 'true,true,true': [1.7763568394002505e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.023003009846099806, 0.09915090450905233], 'true': [0.023003009846099806, nan], 'true,true': [-3.675221047035001e-16, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.014364677666239405, 0.09881858953023659], 'false': [-1.2688263138573217e-17, 1.2688263138573217e-16], 'true': [0.014364677666239405, nan], 'true,true': [-2.4501473646900006e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010590328586672745, 9.516197353929913e-18], 'true': [0.002847209483000743, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.007367878180616956, -1.1102230246251566e-17], 'true': [0.002519749481560924, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005268766950507213, -4.758098676964957e-18], 'true': [0.005268766950507213, nan], 'true,true': [0.0020283910536656644, 0.0]}, {'': [0.0038963567601286, 7.93016446160826e-18], 'true': [0.0038963567601286, nan], 'true,true': [0.0038963567601286, nan]}, {'': [0.003320487437696976, -1.2688263138573217e-17], 'true': [0.003320487437696976, nan], 'true,true': [0.0012709968481015392, 0.0], 'false': [nan, -1.2688263138573217e-17]}, {'': [0.01417991750150793, nan]}, {'': [0.0025157626187921043, -1.5860328923216522e-18], 'true': [0.000961905939705385, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8039999999999998 seconds
Total inference time: 1.095 seconds
AUC ROC: 1.0
Total revision time: 1.8039999999999998
Best scored revision CLL: -0.110153


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114376, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.8039999999999998, 'Inference time': 1.095, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.114376, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.208, 'Inference time': 1.095}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;false
0;true,true,true;publication(F, E), publication(F, D).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;publication(G, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
1;true;publication(D, B), publication(E, A).;true;true
1;true,true;publication(D, A).;true;true
1;true,true,true;ta(F, A, G), tempadvisedby(H, B).;false;false
1;true,true,false;hasposition(I, C), publication(E, I).;false;false
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true,false,true;publication(L, K), ta(M, K, N).;false;false
1;true,false,false;projectmember(P, B).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
2;true;tempadvisedby(D, B), publication(E, B).;true;true
2;true,true;publication(E, A).;false;true
2;true,true,false;publication(E, F), student(F).;false;false
2;true,false;publication(G, B).;true;true
2;true,false,true;publication(G, H), tempadvisedby(H, I).;false;false
2;true,false,false;ta(J, A, K).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B).;false;false
3;true,false;publication(G, B), publication(H, A).;true;true
3;true,false,true;publication(G, I), ta(J, I, K).;false;false
3;true,false,false;publication(L, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;true;true
4;true,true;ta(D, A, E).;true;false
4;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;true,false;publication(I, A), publication(J, B).;true;true
4;true,false,true;publication(J, K), student(K).;false;false
4;true,false,false;publication(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, A), ta(D, A, E).;true;true
5;true,true;tempadvisedby(F, B).;true;false
5;true,true,true;publication(C, B).;false;false
5;true,false;publication(G, B).;true;true
5;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
5;true,false,false;ta(J, A, K).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B).;true;true
6;true,true;ta(D, C, E), publication(F, B).;true;true
6;true,true,true;publication(G, A).;false;false
6;true,true,false;ta(H, A, I), publication(J, A).;false;false
6;true,false;ta(K, A, L).;true;true
6;true,false,true;ta(K, M, N), tempadvisedby(M, P).;false;false
6;true,false,false;publication(Q, A), publication(Q, B).;false;false
7;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
7;true;publication(D, A).;true;true
7;true,true;publication(C, A), student(A).;true;true
7;true,true,true;ta(E, A, F).;false;false
7;true,true,false;tempadvisedby(G, B).;false;false
7;true,false;publication(C, H), tempadvisedby(H, B).;false;true
7;true,false,false;publication(C, I), student(I).;false;false
7;false;publication(J, A), professor(B).;false;false
8;;advisedby(A, B) :- projectmember(C, B).;true;true
8;true;publication(D, B).;false;false
8;false;professor(B), publication(E, B).;true;true
8;false,true;publication(E, A), student(A).;false;true
8;false,true,false;tempadvisedby(F, B), publication(G, F).;false;false
8;false,false;professor(B), publication(H, A).;true;true
8;false,false,true;tempadvisedby(I, B).;false;false
8;false,false,false;tempadvisedby(J, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B).;true;true
9;true,true;publication(D, A), publication(D, B).;false;true
9;true,true,false;ta(E, C, F).;false;false
9;true,false;publication(G, B), publication(H, A).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;publication(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.7194734122109548;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031021667164079857;  // std dev = 2.412, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(D, E), actor(E) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1288877022997532;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0.7131698531954208;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4467893717873298;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(D, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11509554186167746;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.34184992037834716;  // std dev = 0.051, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F), actor(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10388235553570947;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.27030956574892506;  // std dev = 0.309, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09460208660444365;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.21435597355293345;  // std dev = 0.403, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08680405920233711;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A), actor(A) )
%   | | then return 0.18648764518377614;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09580514763561195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08016545365938911;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B) )
%   then return 0.04264543907136464;  // std dev = 1.135, 90.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15443059067240023;  // std dev = 0.211, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.0912980126426865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0774419871154821;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113881
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.228 seconds
Total inference time: 0.97 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.59 seconds
Parameter learned model CLL: -0.110605


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,true,true': [2.23e-07, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 44, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(E, A)', 'true,true': 'movie(D, A)', 'true,true,false': 'genre(F, C), movie(E, F)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [2.412, 44, 10]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true': 'movie(D, A)', 'true,true,false': 'movie(D, E), actor(E)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 35], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 44, 0], 'false,false': [2.98e-08, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(D, F)'}, {'true,true': [0.055, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(E, F), actor(F)'}, {'true,true': [0.051, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.309, 0, 45], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.403, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A), actor(A)', 'false': 'movie(E, A), director(B)'}, {'true,true,true': [0.036, 0, 45], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 44, 0]}], ['workedunder(A, B)', {'': 'movie(C, B)'}, {'true': [1.135, 45, 45], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true': [0.211, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 44, 0]}]]
[{'': [0.021266540642723226, 4.794144879063176e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.019279342543426163, 0.1077195011950198], 'true': [0.019279342543426163, nan], 'true,true': [-7.105427357601002e-16, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.012039361070842395, 0.1069913606917912], 'false': [-2.0185873175002847e-17, 8.881784197001253e-17], 'true': [0.012039361070842395, nan], 'true,true': [-2.0301221021717148e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.009329959474031885, -2.523234146875356e-18], 'true': [0.002999751094547815, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0066016639481267505, -3.784851220313033e-18], 'true': [0.0026434534280617445, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004759625067549591, -1.261617073437678e-18], 'true': [0.004759625067549591, nan], 'true,true': [0.0021180856109531514, 0.0]}, {'': [0.0035324026903509717, -2.523234146875356e-18], 'true': [0.0035324026903509717, nan], 'true,true': [0.0035324026903509717, nan]}, {'': [0.0029811884278190598, -3.784851220313033e-18], 'true': [0.0029811884278190598, nan], 'true,true': [0.001315062692640328, 0.0], 'false': [nan, -3.784851220313033e-18]}, {'': [0.014306953462209518, nan]}, {'': [0.0022548147645467024, -1.0092936587501423e-17], 'true': [0.000992257705245203, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113881
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.818 seconds
Total inference time: 0.97 seconds
AUC ROC: 1.0
Total revision time: 1.818
Best scored revision CLL: -0.110605


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.113881, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.818, 'Inference time': 0.97, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.113881, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.228, 'Inference time': 0.97}}


