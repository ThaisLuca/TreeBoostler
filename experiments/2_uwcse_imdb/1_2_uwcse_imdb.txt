Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 113

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.7797175625504926;  // std dev = 1.920, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 7.30e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.5256950918092174;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7301171791188743;  // std dev = 0.063, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.6522008798821627;  // std dev = 0.936, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.35278351751188713;  // std dev = 1.611, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6574000232806397;  // std dev = 1.921, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return 0.5014287972424673;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839158;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( ta(H, G, I) )
%   | | | then return 0.5740907886965937;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.42002402141130357;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5643707136081546;  // std dev = 0.049, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( hasposition(L, C), publication(J, L) )
%   | | | then return 0.1985208063281498;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6731354881141801;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return 0.5164220270078069;  // std dev = 2.094, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.40630208150804425;  // std dev = 1.265, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( student(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06374087151318292;  // std dev = 0.237, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.27417551664975753;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4347825529487518;  // std dev = 0.150, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, I), student(I) )
%   | | | then return 0.3576424234795141;  // std dev = 1.395, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.12147999793897314;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.4567679526913589;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3672870535557314;  // std dev = 2.189, 50.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=44 */
%   else return -0.10200726556038733;  // std dev = 0.013, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G), ta(F, A, H) )
%   | | | then return 0.39362251646552204;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30569544546480387;  // std dev = 0.918, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.3436192711164175;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return 0.1025534934951799;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.3529223099965027;  // std dev = 0.992, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.2557426972417478;  // std dev = 2.492, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else if ( professor(B) )
%   | then if ( publication(N, B) )
%   | | then return -0.09682213755590421;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.02334694599493986;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09265672241251545;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.27292580875191014;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.155783670665047;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26597968417128487;  // std dev = 0.066, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return 0.3113920800807907;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.38642884078299305;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.2471693601088693;  // std dev = 1.310, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.20141966246229714;  // std dev = 2.168, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   else return -0.08557886151110185;  // std dev = 0.016, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( ta(E, A, F), tempadvisedby(G, B) )
%   | | then if ( publication(H, G) )
%   | | | then return 0.2811844143193269;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1464266499222372;  // std dev = 0.885, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.21739524279527486;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( hasposition(K, C), publication(I, K) )
%   | | | then return 4.624959349161295E-4;  // std dev = 1.145, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3138786501810606;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.19084745649290352;  // std dev = 2.066, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0.11125586806964789;  // std dev = 1.267, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.06286717560581362;  // std dev = 0.217, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return -0.07872085748719007;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( ta(D, A, F) )
%   | | then return 0.03500850322592843;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1925550148223566;  // std dev = 0.143, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(H, A), publication(I, G) )
%   | | | then return 0.22184312266282058;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0649418771213305;  // std dev = 1.612, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.16148073169942698;  // std dev = 1.651, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.11780276363131667;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.0736702809649471;  // std dev = 0.017, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | then return 0.1883105277452774;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.11686716971826112;  // std dev = 0.892, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1595391581019701;  // std dev = 0.067, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( hasposition(K, C), publication(I, K) )
%   | | | then return -0.17128496596181186;  // std dev = 1.115, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.24023594255942668;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( hasposition(L, C), tempadvisedby(M, L) )
%   | | | then return 0.13748516675924471;  // std dev = 1.930, 59.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return 0.03407432953731157;  // std dev = 1.249, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( student(B) )
%   | then return -0.06835443054570069;  // std dev = 4.53e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.05732245214805025;  // std dev = 0.216, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.16168799121288033;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.028927905567131207;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1393437721852531;  // std dev = 0.063, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(I, K), publication(J, K) )
%   | | | then return -0.19140662734360928;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16568574072550055;  // std dev = 0.485, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.12321114056421432;  // std dev = 1.454, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.07567531007347178;  // std dev = 1.929, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else return -0.06461074388684773;  // std dev = 0.017, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 326

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 56

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0.38844573301131186;  // std dev = 1.416, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.37421895287890883;  // std dev = 1.423, 72.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10351534611988594;  // std dev = 0.077, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3302161215608504;  // std dev = 1.12e-08, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( movie(E, F) )
%   | | then return -0.14119583009902062;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2285252249076344;  // std dev = 1.187, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09253001374878875;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27690270763746727;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.19882171254184847;  // std dev = 0.169, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08813354341685159;  // std dev = 0.124, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2117637536631787;  // std dev = 3.65e-08, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10476085792590187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10476085792590187;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.14511771922839858;  // std dev = 0.977, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | else return -0.07843587250112398;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19367082186180395;  // std dev = 0.197, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.18039840489362655;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07674162006004091;  // std dev = 0.153, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15190193267737587;  // std dev = 2.98e-08, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08087109333822373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08087109333822373;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06792757369396127;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0.10049767165521904;  // std dev = 0.848, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14756215304360873;  // std dev = 0.023, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07506000342233171;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1781881846450363;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0679827868453157;  // std dev = 0.171, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.513 seconds
Total inference time: 1.704 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.19 seconds
Parameter learned model CLL: -0.107762


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 58, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.19e-07, 0, 65], 'true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 58, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [0.0, 0, 47], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.94e-08, 56, 0], 'false,false': [1.416, 6, 18]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.423, 7, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 58, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.12e-08, 0, 47], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.187, 6, 18], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.025, 0, 65], 'true,false,true,true': [0.169, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.124, 58, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [3.65e-08, 0, 47], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.977, 6, 18], 'false,false': [0.0, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.197, 0, 65], 'true,true,false': [0.195, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.153, 58, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [2.98e-08, 0, 47], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 56, 0], 'false,false': [0.848, 6, 18]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.023, 0, 65], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.179, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.171, 58, 0]}]]
[{'': [0.08777006172839415, 3.062684205862501e-17], 'true': [-8.745141363201234e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.06265786326613752, 2.2970131543968756e-17], 'true': [0.06265786326613752, nan], 'true,true': [2.1862853408003084e-16, -1.982541115402065e-18]}, {'': [0.02514313925304563, 0.0777364345257058], 'false': [2.7755575615628914e-17, 0.08358756400613525], 'true': [0.0, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.02812809302894766, 0.00010311349535433177], 'true': [0.02812809302894766, nan], 'true,true': [0.02812809302894766, nan]}, {'': [0.01253372846866224, 0.03926450909003408], 'false': [0.05872817057866769, -2.9738116731030977e-18], 'false,true': [0.05872817057866769, nan], 'true': [1.1338447911065428e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.020810331623885743, 0.00026659823483175566], 'true': [0.0006076718512712767, 0.004095457291217456], 'true,false': [0.004095457291217456, nan], 'true,false,true': [0.004095457291217456, nan]}, {'': [0.0056505935974273, 0.022435915234249572], 'false': [0.039803038251545984, -4.956352788505163e-18], 'true': [2.834611977766357e-17, -2.3129646346357427e-18], 'true,true': [2.834611977766357e-17, nan], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.01334687304229299, 0.00040244726152366503], 'true': [0.01334687304229299, nan], 'true,true': [0.0005957051084070331, 0.00542687922508403]}, {'': [0.0030559370845219093, 0.014946819912363796], 'false': [-5.9476233462061954e-18, 0.02996578875156053], 'true': [1.8897413185109047e-17, 0.0], 'true,true': [1.8897413185109047e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.009536101514561907, 0.0005014168430739945], 'true': [0.0005274499674943166, 0.0058603344404526735], 'true,false': [0.0058603344404526735, nan], 'true,false,true': [0.0, 0.005317710881151502]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601494;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014933;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.32071184716014933;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.20975771563253554;  // std dev = 6.97e-09, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253542;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20975771563253542;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.14848590077286425;  // std dev = 0.080, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else return 0.15679843908241678;  // std dev = 0.068, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333704;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15648334367460892;  // std dev = 3.23e-09, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.15538924979738047;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.08420038716497628;  // std dev = 0.000524, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420271;  // std dev = 1.32e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06842697784420272;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15648334367460892;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1553892497973801;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07901388649160879;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13691966379657522;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.13606887445561405;  // std dev = 3.23e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.07791782570314891;  // std dev = 0.000373, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0785796950307046;  // std dev = 0.000306, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06407674151275339;  // std dev = 0.000244, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095878
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.52 seconds
Total inference time: 1.707 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096458
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.233 seconds
Refined model CLL: -0.096458


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095878
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.456 seconds
Total inference time: 1.707 seconds
AUC ROC: 1.0
Total revision time: 16.456
Best scored revision CLL: -0.096458


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:11:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095878, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.456, 'Inference time': 1.707, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093201, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.513, 'Inference time': 1.704}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.08e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0.3269486316352694;  // std dev = 1.953, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3485138692750693;  // std dev = 2.409, 152.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10292056631676322;  // std dev = 0.081, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3359260085007059;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( movie(E, F) )
%   | | then return -0.13810749680392134;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.1924879133644771;  // std dev = 1.679, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0925799684496768;  // std dev = 6.58e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.28061690109743104;  // std dev = 0.031, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.17207308131114354;  // std dev = 0.255, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08719898069731856;  // std dev = 0.130, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2144941292685519;  // std dev = 1.71e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10514900391670634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10514900391670634;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12157479717854877;  // std dev = 1.388, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else return -0.07854287481971768;  // std dev = 3.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19577269681994725;  // std dev = 0.355, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.15341675831372847;  // std dev = 0.297, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07561713426956708;  // std dev = 0.158, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15338273480407458;  // std dev = 8.16e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.083184550896255;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08318455089625501;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06808582980002711;  // std dev = 5.67e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0.08305260639065008;  // std dev = 1.205, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1489706753466599;  // std dev = 0.030, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0770564997576972;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14743925540736846;  // std dev = 0.291, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06674745742994466;  // std dev = 0.176, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.271 seconds
Total inference time: 1.957 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108765
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.535 seconds
Parameter learned model CLL: -0.108765


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.66e-08, 0, 130], 'true,false,true,true': [1.05e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false': [0.0, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.08e-08, 0, 105], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.43e-08, 105, 0], 'false,false': [1.953, 13, 25]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.409, 22, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 108, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 105], 'true,false,true': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.679, 13, 25], 'false,true,false': [0.0, 0, 0], 'false,false': [6.58e-08, 105, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.031, 0, 130], 'true,false,true,true': [0.255, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.13, 108, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.71e-07, 0, 105], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.388, 13, 25], 'false,false': [3.49e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.355, 0, 130], 'true,true,false': [0.297, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 108, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [8.16e-08, 0, 105], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 8, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.67e-08, 105, 0], 'false,false': [1.205, 13, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.03, 0, 130], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.291, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.176, 108, 0]}]]
[{'': [0.12378808864266383, 5.756711979537848e-17], 'true': [4.481884948640632e-15, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.08837064688583612, -1.850371707708594e-17], 'true': [0.08837064688583612, nan], 'true,true': [-1.7490282726402467e-15, -2.523234146875356e-18]}, {'': [0.04103356199293231, 0.0643117515296528], 'false': [6.767073673905717e-17, 0.10033594940717996], 'true': [1.691768418476429e-15, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan], 'true,false,true': [-1.734723475976807e-18, 0.0]}, {'': [0.038170334426772534, 6.137611126806043e-05], 'true': [0.038170334426772534, nan], 'true,true': [0.038170334426772534, nan]}, {'': [0.020683160408411543, 0.0355786899398705], 'false': [0.07421907960706581, 4.123685520036296e-17], 'false,true': [0.07421907960706581, nan], 'true': [-5.24448209727693e-16, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.026612714595723237, 0.00015563203287486763], 'true': [0.000956162670279125, 0.002952055610010672], 'true,false': [0.002952055610010672, nan], 'true,false,true': [0.002952055610010672, nan]}, {'': [0.009404367234022928, 0.02129086952280684], 'false': [0.05071570318629198, 1.163090787702545e-17], 'true': [2.791417890486108e-16, 0.0], 'true,true': [2.791417890486108e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.016504319975250686, 0.0002318622051004771], 'true': [0.016504319975250686, nan], 'true,true': [0.0009716427887973384, 0.004003283209514117]}, {'': [0.005151197431234138, 0.014611635740105476], 'false': [3.066330258488528e-17, 0.03821318732824913], 'true': [6.344131569286608e-17, 4.625929269271485e-18], 'true,true': [6.344131569286608e-17, nan], 'true,false': [4.625929269271485e-18, nan], 'true,false,true': [3.469446951953614e-18, 0.0]}, {'': [0.011576307792698678, 0.00028562528968302216], 'true': [0.0008788020545713115, 0.004433795101774491], 'true,false': [0.004433795101774491, nan], 'true,false,true': [0.0, 0.004458359063557182]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.4175135841583106;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839686;  // std dev = 2.08e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2.95e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253542;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.2097577156325357;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.14133325152976117;  // std dev = 0.088, 63.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | | else return 0.14052958307547972;  // std dev = 0.088, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1574297883896075;  // std dev = 7.21e-09, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.15753642086575842;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.08340200130855376;  // std dev = 3.03e-05, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.75e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15742978838960747;  // std dev = 2.11e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.15753642086575825;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.08340097729603822;  // std dev = 9.52e-05, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13765472153650846;  // std dev = 8.12e-09, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.1377374847190053;  // std dev = 4.93e-09, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.07727722987158298;  // std dev = 1.09e-07, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0772199446353507;  // std dev = 1.31e-07, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.328 seconds
Total inference time: 1.957 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097354
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.012 seconds
Refined model CLL: -0.097354


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 21.146 seconds
Total inference time: 1.957 seconds
AUC ROC: 1.0
Total revision time: 21.146
Best scored revision CLL: -0.097354


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:11:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 21.146, 'Inference time': 1.957, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093844, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.271, 'Inference time': 1.957}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 8.43e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.34e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 7.60e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else return 0.33685206094777415;  // std dev = 2.323, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.35231760165257664;  // std dev = 2.862, 226.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1030882353511966;  // std dev = 0.108, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3350780031838545;  // std dev = 1.94e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( movie(E, F) )
%   | | then return -0.13856089315692358;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.1991415089472866;  // std dev = 1.984, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09256588371771586;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27907997889524755;  // std dev = 0.029, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16997027158807135;  // std dev = 0.309, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08746098904543634;  // std dev = 0.172, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21425517678306646;  // std dev = 1.26e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10566321098006386;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10566321098006386;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12580332147585951;  // std dev = 1.642, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else return -0.07851280203007648;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1945923340290627;  // std dev = 0.410, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.15114583664513945;  // std dev = 0.361, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07592931762968261;  // std dev = 0.210, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15338280108515412;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08373606505178112;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08373606505178112;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06804157376454677;  // std dev = 4.21e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else return 0.08592338100116806;  // std dev = 1.428, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14800532482728465;  // std dev = 0.028, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07753136884642599;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1468297673793477;  // std dev = 0.353, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0670860825019847;  // std dev = 0.234, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.099 seconds
Total inference time: 1.932 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.754 seconds
Parameter learned model CLL: -0.107943


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 195], 'true,false,true,true': [2.79e-08, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 164, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false': [0.0, 31, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 164, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.34e-08, 0, 158], 'true,false,true,true': [9.13e-09, 12, 0], 'true,false,true,false': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [7.6e-08, 159, 0], 'false,false': [2.323, 18, 37]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.862, 31, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.108, 164, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.94e-08, 0, 158], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.984, 18, 37], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 159, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.029, 0, 195], 'true,false,true,true': [0.309, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 164, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.26e-07, 0, 158], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 12, 0], 'true,false,true,false': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.642, 18, 37], 'false,false': [0.0, 159, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.41, 0, 195], 'true,true,false': [0.361, 31, 0], 'true,false': [0.0, 0, 0], 'false': [0.21, 164, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 158], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 12, 0], 'true,false,true,false': [2.63e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.21e-08, 159, 0], 'false,false': [1.428, 18, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.028, 0, 195], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.353, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.234, 164, 0]}]]
[{'': [0.11835304252487057, -1.3539305178355567e-17], 'true': [5.975846598187509e-15, 2.5069552168955147e-17], 'true,false': [2.5069552168955147e-17, nan], 'true,false,true': [2.5069552168955147e-17, nan]}, {'': [0.08449064076771522, 4.332577657073782e-17], 'true': [0.08449064076771522, nan], 'true,true': [-3.643808901333847e-15, -7.162729191130042e-18]}, {'': [0.04093027411044472, 0.0637511231462643], 'false': [3.6309180679564866e-17, 0.09814976110737046], 'true': [1.8438134282382346e-15, 1.5419764230904953e-17], 'true,false': [1.5419764230904953e-17, nan], 'true,false,true': [6.938893903907228e-18, 0.0]}, {'': [0.036248638001182755, 7.077990274306642e-05], 'true': [0.036248638001182755, nan], 'true,true': [0.036248638001182755, nan]}, {'': [0.020596763266300836, 0.03464008173599847], 'false': [0.07155795441899633, -7.820438915598586e-17], 'false,true': [0.07155795441899633, nan], 'true': [3.822540034152438e-16, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan]}, {'': [0.02502277506233729, 0.0001805319036365017], 'true': [0.0008522807283586605, 0.0030762784605658385], 'true,false': [0.0030762784605658385, nan], 'true,false,true': [0.0030762784605658385, nan]}, {'': [0.009396857942070099, 0.020564403070663043], 'false': [0.04899801980258183, -5.586027796856134e-18], 'true': [1.0118488325697629e-16, -6.1679056923619804e-18], 'true,true': [1.0118488325697629e-16, nan], 'true,false': [-6.1679056923619804e-18, nan], 'true,false,true': [2.3129646346357427e-18, 0.0]}, {'': [0.015466467319766454, 0.00026967777896397125], 'true': [0.015466467319766454, nan], 'true,true': [0.0008615574061825152, 0.0041975569864841095]}, {'': [0.005162219602027921, 0.014062168701094566], 'false': [1.1172055593712268e-17, 0.03710187256004528], 'true': [-5.0592441628488145e-17, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan], 'true,false,true': [1.1564823173178713e-18, 1.1564823173178713e-18], 'true,true': [-5.0592441628488145e-17, nan]}, {'': [0.010835956166454955, 0.0003326694075440089], 'true': [0.0007782197851507287, 0.004677339110007361], 'true,false': [0.004677339110007361, nan], 'true,false,true': [0.0, 0.004802268039227637]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048782;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 8.43e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 5.40e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360635;  // std dev = 7.60e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462843;  // std dev = 1.12e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.11231637819360636;  // std dev = 1.39e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831036;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.41751358415830947;  // std dev = 2.93e-08, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.10159632948783638;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0.32071184716015033;  // std dev = 8.33e-09, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014955;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.32071184716014983;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 3.84e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2.08e-09, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253603;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0.2097577156325356;  // std dev = 1.44e-08, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.20975771563253587;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109168;  // std dev = 4.17e-09, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 5.27e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6.18e-09, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return 0.13400703000801087;  // std dev = 6.97e-09, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.558 seconds
Total inference time: 1.772 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.034 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 25.445 seconds
Total inference time: 1.772 seconds
AUC ROC: 1.0
Total revision time: 25.445
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:12:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 25.445, 'Inference time': 1.772, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093877, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.099, 'Inference time': 1.932}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048807;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 4.21e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 4.34e-08, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360671;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0.3358542784098812;  // std dev = 2.680, 73.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.35103440098751154;  // std dev = 3.337, 302.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10271575538335724;  // std dev = 0.108, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3353639617127382;  // std dev = 2.50e-08, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( movie(E, F) )
%   | | then return -0.13840779907752584;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.19730475694723676;  // std dev = 2.306, 73.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0925971758303585;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27931628332988856;  // std dev = 0.029, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.17328100828721155;  // std dev = 0.361, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08688903314693835;  // std dev = 0.172, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2143833084199806;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10524429225886094;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10524429225886092;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1247153309310353;  // std dev = 1.907, 73.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | else return -0.07857889208128557;  // std dev = 7.30e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1947505527347124;  // std dev = 0.477, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.15461578956491534;  // std dev = 0.420, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0752544437466502;  // std dev = 0.210, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15344443948516956;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08316304542133415;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08316304542133415;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06813814558039152;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0.08538868471588053;  // std dev = 1.656, 73.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1481179729508122;  // std dev = 0.028, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07703797452375359;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.15358363532377128;  // std dev = 0.397, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06635902723628347;  // std dev = 0.233, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09395
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.724 seconds
Total inference time: 1.833 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.772 seconds
Parameter learned model CLL: -0.108


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 260], 'true,false,true,true': [4.47e-08, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 218, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false': [0.0, 42, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 218, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.34e-08, 0, 211], 'true,false,true,true': [1.05e-08, 13, 0], 'true,false,true,false': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 213, 0], 'false,false': [2.68, 24, 49]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.337, 42, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.108, 218, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.5e-08, 0, 211], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.306, 24, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.029, 0, 260], 'true,false,true,true': [0.361, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 218, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 211], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [5.27e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.907, 24, 49], 'false,false': [7.3e-08, 213, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.477, 0, 260], 'true,true,false': [0.42, 42, 0], 'true,false': [0.0, 0, 0], 'false': [0.21, 218, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 211], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 213, 0], 'false,false': [1.656, 24, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.028, 0, 260], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.397, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.233, 218, 0]}]]
[{'': [0.1197315907197094, -1.100037492289146e-16], 'true': [4.372570681600617e-15, 4.7580986769649563e-17], 'true,false': [4.7580986769649563e-17, nan], 'true,false,true': [4.7580986769649563e-17, nan]}, {'': [0.0854747677307963, 8.148425868808489e-18], 'true': [0.0854747677307963, nan], 'true,true': [-4.481884948640632e-15, -2.6433881538694202e-17]}, {'': [0.039511086577718554, 0.06329257377236033], 'false': [-4.378344322465406e-17, 0.0983789081340753], 'true': [1.88580062571401e-15, 4.827056628805028e-18], 'true,false': [4.827056628805028e-18, nan], 'true,false,true': [8.540177112501205e-18, 0.0]}, {'': [0.03687076980229292, 5.338267069491284e-05], 'true': [0.03687076980229292, nan], 'true,true': [0.03687076980229292, nan]}, {'': [0.01989376202529737, 0.03457008969816532], 'false': [0.07284741923620346, -2.5019110414088035e-17], 'false,true': [0.07284741923620346, nan], 'true': [6.229877067090926e-16, -9.654113257610057e-18], 'true,false': [-9.654113257610057e-18, nan]}, {'': [0.02570115183692319, 0.0001356038955881907], 'true': [0.0008645592581833565, 0.0030954597667947957], 'true,false': [0.0030954597667947957, nan], 'true,false,true': [0.0030954597667947957, nan]}, {'': [0.009054555309382619, 0.02057086996877037], 'false': [0.04981307568939989, 2.5019110414088035e-17], 'true': [-3.3675011173464466e-17, -9.654113257610057e-18], 'true,false': [-9.654113257610057e-18, nan], 'true,false,true': [-2.135044278125301e-18, 2.7755575615628915e-18], 'true,true': [-3.3675011173464466e-17, nan]}, {'': [0.015952466248486688, 0.00020243186842608879], 'true': [0.015952466248486688, nan], 'true,true': [0.0008767162611044514, 0.0041964889424140365]}, {'': [0.004961757498494582, 0.014070693901230797], 'false': [-3.648620268721172e-17, 0.0375720359387365], 'true': [-2.1467819623083595e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 1.3877787807814458e-18], 'true,true': [-2.1467819623083595e-16, nan]}, {'': [0.011199039346727115, 0.00024991276667788115], 'true': [0.0007922783123957137, 0.004648091207907712], 'true,false': [0.004648091207907712, nan], 'true,false,true': [-2.6020852139652106e-18, 0.0046257143584037185]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.14185106490048807;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5933662404588137;  // std dev = 0.301, 134.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=114 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109561;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #pos=146 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 4.21e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5664904119096691;  // std dev = 0.215, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.16125645645363335;  // std dev = 0.225, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360671;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.579317036332757;  // std dev = 0.090, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.14358365041529023;  // std dev = 0.217, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4277660155629692;  // std dev = 0.241, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(A) )
%   | | then return -0.18203086853607026;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.09799670054203725;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10153168350977045;  // std dev = 0.006, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32611138475932133;  // std dev = 0.194, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( female(A) )
%   | | then return -0.15554292737609066;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08894793403820857;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3348254459768652;  // std dev = 0.081, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(A) )
%   | | | then return -0.15787839494914555;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.090299817428135;  // std dev = 0.000538, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.0926967130335398;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.260016229155914;  // std dev = 0.188, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(A) )
%   | | then return -0.13691420234508742;  // std dev = 0.004, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.0826170790050642;  // std dev = 0.003, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08513837584784649;  // std dev = 0.005, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21223102859255416;  // std dev = 0.148, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.12086871585495612;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07599051032406924;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.21738568388042875;  // std dev = 0.061, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(A) )
%   | | | then return -0.12250795311152331;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0770100646758348;  // std dev = 0.000797, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.0787844174549229;  // std dev = 8.16e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.1449644750351016;  // std dev = 0.106, 134.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=114 */
%   | | else return 0.14004696891590138;  // std dev = 0.082, 168.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=146 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07321116833310598;  // std dev = 0.004, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15902834786282716;  // std dev = 0.114, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.12345259836828111;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08061224417648441;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06843545506496224;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.1621744028511142;  // std dev = 0.047, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(A) )
%   | | | then return -0.12494255994128813;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07705812400133996;  // std dev = 0.028, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13936071343476455;  // std dev = 0.112, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.11118546301176849;  // std dev = 0.003, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07549415172277116;  // std dev = 0.003, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06415086108081891;  // std dev = 0.005, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097862
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.473 seconds
Total inference time: 1.847 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.218 seconds
Refined model CLL: -0.099198


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097862
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 27.187 seconds
Total inference time: 1.847 seconds
AUC ROC: 1.0
Total revision time: 27.187
Best scored revision CLL: -0.099198


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:12:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.097862, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 27.187, 'Inference time': 1.847, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.09395, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.724, 'Inference time': 1.833}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.77e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 2.24e-08, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936069;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0.3353346000047288;  // std dev = 2.944, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3494790194654732;  // std dev = 3.752, 380.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10302987582567272;  // std dev = 0.136, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33571073716757277;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, F) )
%   | | then return -0.1382224224466025;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.19868290927859575;  // std dev = 2.516, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0925707858850719;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2789751480400183;  // std dev = 0.029, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16604502479372077;  // std dev = 0.401, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08737323485375657;  // std dev = 0.217, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21464443620329562;  // std dev = 3.79e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10579795982914139;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.1057979598291414;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12542052479963617;  // std dev = 2.084, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | else return -0.07852301908790466;  // std dev = 1.11e-07, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1943518790303433;  // std dev = 0.525, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.14712741399267631;  // std dev = 0.469, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07582603001942789;  // std dev = 0.265, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1536637450105425;  // std dev = 1.66e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08414428105281169;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08414428105281169;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06805643154554757;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else return 0.08552294616131023;  // std dev = 1.816, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1477374138400781;  // std dev = 0.028, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07788258695982354;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.14559208634723605;  // std dev = 0.454, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06697425440950171;  // std dev = 0.295, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094017
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.027 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107686
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.453 seconds
Parameter learned model CLL: -0.107686


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [5.77e-08, 0, 326], 'true,false,true,true': [5.58e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [2.24e-08, 0, 267], 'true,false,true,true': [1.49e-08, 20, 0], 'true,false,true,false': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 264, 0], 'false,false': [2.944, 29, 59]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.752, 54, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.136, 272, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 267], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.516, 29, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 264, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.029, 0, 326], 'true,false,true,true': [0.401, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.217, 272, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [3.79e-07, 0, 267], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.084, 29, 59], 'false,false': [1.11e-07, 264, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.525, 0, 326], 'true,true,false': [0.469, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.265, 272, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [1.66e-07, 0, 267], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 264, 0], 'false,false': [1.816, 29, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.028, 0, 326], 'true,false,true,true': [3.73e-09, 11, 0], 'true,false,true,false': [0.454, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.295, 272, 0]}]]
[{'': [0.12191135734072336, -1.730641773680391e-16], 'true': [3.400143152717044e-15, 5.756711979537848e-17], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [5.756711979537848e-17, nan]}, {'': [0.0870308737218603, -1.6326809185664067e-17], 'true': [0.0870308737218603, nan], 'true,true': [-5.056623150194578e-15, -3.700743415417188e-17]}, {'': [0.0436438534197372, 0.062197753915893925], 'false': [-1.0261152197293113e-16, 0.0984974669521339], 'true': [5.322417496330339e-16, -1.1775092685418327e-17], 'true,false': [-1.1775092685418327e-17, nan], 'true,false,true': [1.1102230246251566e-17, 8.540177112501205e-18]}, {'': [0.037050326317413305, 6.781681838981992e-05], 'true': [0.037050326317413305, nan], 'true,true': [0.037050326317413305, nan]}, {'': [0.02198957743464521, 0.03389480781404477], 'false': [0.07195769504630987, -4.37360585458395e-17], 'false,true': [0.07195769504630987, nan], 'true': [-5.854659245963372e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.025283156854298796, 0.00017316897359806785], 'true': [0.0008361360403840257, 0.002970718851421651], 'true,false': [0.002970718851421651, nan], 'true,false,true': [0.002970718851421651, nan]}, {'': [0.01005269792623387, 0.020139941575550036], 'false': [0.049365039482142194, 4.625929269271486e-17], 'true': [5.388947715034468e-16, -1.0092936587501423e-17], 'true,true': [5.388947715034468e-16, nan], 'true,false': [-1.0092936587501423e-17, nan], 'true,false,true': [-8.326672684688674e-18, -6.4051328343759035e-18]}, {'': [0.015521552118975494, 0.0002587133092323647], 'true': [0.015521552118975494, nan], 'true,true': [0.0008468262306111968, 0.004075934063552119]}, {'': [0.005536505145768722, 0.0137898783191018], 'false': [-3.364312195833808e-17, 0.03746954433378801], 'true': [1.0312183899140031e-16, 6.7286243916676156e-18], 'true,true': [1.0312183899140031e-16, nan], 'true,false': [6.7286243916676156e-18, nan], 'true,false,true': [-2.7755575615628915e-18, -1.0675221390626506e-18]}, {'': [0.010832810519419924, 0.00031906606101516125], 'true': [0.0007662859037726438, 0.004568180360280836], 'true,false': [0.004568180360280836, nan], 'true,false,true': [1.261617073437678e-18, 0.004802889464784174]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048827;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5811242577039282;  // std dev = 0.313, 171.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=143 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5674104177104052;  // std dev = 0.265, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.16517427701560536;  // std dev = 0.261, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936069;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5829053591434642;  // std dev = 0.101, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.14080784089802317;  // std dev = 0.229, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42877801126121345;  // std dev = 0.295, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.17975216040245337;  // std dev = 0.009, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.09786593781000567;  // std dev = 0.005, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1015207064073915;  // std dev = 0.007, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3265493201513404;  // std dev = 0.240, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( female(A) )
%   | | then return -0.15372836027466918;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08864152261612798;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3370957272917386;  // std dev = 0.091, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.15692514940796268;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09050947184626888;  // std dev = 0.000659, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0926976362562411;  // std dev = 1.52e-07, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2605036569536919;  // std dev = 0.230, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.13557478153676406;  // std dev = 0.006, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.0825237178842233;  // std dev = 0.004, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0851305123563826;  // std dev = 0.006, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2124237613219312;  // std dev = 0.183, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.1197334869694148;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07575301019522537;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.21865314299693986;  // std dev = 0.069, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.12198273496612409;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07716508173607968;  // std dev = 0.000976, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.07878571786154143;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17989256904668474;  // std dev = 0.175, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( female(A) )
%   | | | then return -0.10826590603850579;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07126126310305247;  // std dev = 0.004, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07320523343228595;  // std dev = 0.005, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15414797424806342;  // std dev = 0.143, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.09770790957171015;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06608056901183758;  // std dev = 2.63e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0684368928064565;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15816941811455892;  // std dev = 0.053, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.09938869547304253;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06718829964324965;  // std dev = 0.001, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.144172722378991;  // std dev = 0.025, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.12903904887357215;  // std dev = 0.013, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.08988042914054835;  // std dev = 0.003, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06265947845089918;  // std dev = 0.003, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06415959985694811;  // std dev = 0.004, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.506 seconds
Total inference time: 1.767 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096354
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.364 seconds
Refined model CLL: -0.096354


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 29.349999999999998 seconds
Total inference time: 1.767 seconds
AUC ROC: 1.0
Total revision time: 29.349999999999998
Best scored revision CLL: -0.096354


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096113, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 29.349999999999998, 'Inference time': 1.767, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094017, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.027, 'Inference time': 1.793}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 324

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 58

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0.34451923202842427;  // std dev = 1.353, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3551476625694659;  // std dev = 1.597, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10529392598344517;  // std dev = 0.096, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33444775811236355;  // std dev = 1.29e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( movie(E, F) )
%   | | then return -0.13889903990577948;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.21145905289865916;  // std dev = 1.102, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09238077777408668;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27869986858593293;  // std dev = 0.028, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14635559532446046;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09090276865948634;  // std dev = 0.155, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21394898883878363;  // std dev = 4.71e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10815576326724684;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10815576326724682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.13361243480775298;  // std dev = 0.912, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else return -0.0781185166872631;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19425668520397044;  // std dev = 0.223, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12593572250453972;  // std dev = 0.176, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08000719939050206;  // std dev = 0.190, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15322990958775787;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08755900271055686;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08755900271055687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06746389709274203;  // std dev = 1.18e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0.09063222201238286;  // std dev = 0.800, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1477253464568592;  // std dev = 0.026, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08081167758223956;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12364433791950157;  // std dev = 0.179, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07147739845870993;  // std dev = 0.211, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093665
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.3 seconds
Total inference time: 1.715 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107761
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.141 seconds
Parameter learned model CLL: -0.107761


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [8.43e-08, 0, 64], 'true,true,false': [5.27e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 54, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [1.05e-08, 0, 51], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.98e-08, 50, 0], 'false,false': [1.353, 6, 13]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.597, 10, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.096, 54, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.29e-08, 0, 51], 'true,false,true': [7.45e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.102, 6, 13], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 50, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.028, 0, 64], 'true,false,true,true': [0.147, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.155, 54, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [4.71e-08, 0, 51], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.912, 6, 13], 'false,false': [0.0, 50, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.223, 0, 64], 'true,true,false': [0.176, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.19, 54, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [5.37e-08, 0, 51], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.18e-08, 50, 0], 'false,false': [0.8, 6, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.026, 0, 64], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.179, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.211, 54, 0]}]]
[{'': [0.11687363038714299, 3.700743415417188e-17], 'true': [-8.881784197001252e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan]}, {'': [0.08343450839622259, 2.4671622769447922e-17], 'true': [0.08343450839622259, nan], 'true,true': [1.1102230246251565e-16, 2.7755575615628915e-18]}, {'': [0.05225123219688357, 0.06816690790054351], 'false': [1.7763568394002505e-17, 0.09632251143089275], 'true': [3.483052626275001e-17, -1.734723475976807e-18], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.982541115402065e-18, 0.0]}, {'': [0.03446890215755234, 0.00017090274805423947], 'true': [0.03446890215755234, nan], 'true,true': [0.03446890215755234, nan]}, {'': [0.02626122781015929, 0.03603580587616208], 'false': [0.06396930679506224, -1.7763568394002505e-17], 'false,true': [0.06396930679506224, nan], 'true': [1.7415263131375004e-16, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.022089853464697145, 0.0004472438598234876], 'true': [0.00078832569673358, 0.0021626388336488805], 'true,false': [0.0021626388336488805, nan], 'true,false,true': [0.0021626388336488805, nan]}, {'': [0.01216047121584299, 0.021007895246762342], 'false': [0.04380632588855842, -4.440892098500626e-18], 'true': [4.353815782843751e-17, -3.469446951953614e-18], 'true,true': [4.353815782843751e-17, nan], 'true,false': [-3.469446951953614e-18, nan], 'true,false,true': [-3.96508223080413e-18, 0.0]}, {'': [0.013073171631297578, 0.0006720318876588855], 'true': [0.013073171631297578, nan], 'true,true': [0.0007790772852840563, 0.0030866809989320123]}, {'': [0.006795620372481708, 0.014265922725264482], 'false': [2.7755575615628915e-18, 0.033695952984505936], 'true': [5.659960517696876e-17, 8.673617379884035e-19], 'true,true': [5.659960517696876e-17, nan], 'true,false': [8.673617379884035e-19, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0089005900383431, 0.000827424243192884], 'true': [0.0006980265252636113, 0.0035958881114718315], 'true,false': [0.0035958881114718315, nan], 'true,false,true': [0.0, 0.004586591978918146]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 4.21e-08, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601495;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.32071184716014944;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.20975771563253542;  // std dev = 9.13e-09, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.17709649774527747;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15433806833540345;  // std dev = 0.072, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.15571243114817848;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08443780070357933;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0684269778442027;  // std dev = 1.86e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15571243114817834;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07109544832076549;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13545282711109247;  // std dev = 0.001, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06416515473949425;  // std dev = 0.000146, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07837660168001884;  // std dev = 0.000837, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06403172802683446;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.589 seconds
Total inference time: 1.992 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095705
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.264 seconds
Refined model CLL: -0.095705


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.294 seconds
Total inference time: 1.992 seconds
AUC ROC: 1.0
Total revision time: 17.294
Best scored revision CLL: -0.095705


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:13:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095443, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 17.294, 'Inference time': 1.992, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093665, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.3, 'Inference time': 1.715}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 6.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.08e-08, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.34451923202842444;  // std dev = 1.913, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.34851935316153215;  // std dev = 2.379, 151.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1039289254079633;  // std dev = 0.109, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.335924785157921;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( movie(E, F) )
%   | | then return -0.13810814957314974;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2076123379947414;  // std dev = 1.608, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09249529208797885;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2798618121652009;  // std dev = 0.029, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1590615970037602;  // std dev = 0.251, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08877127438696891;  // std dev = 0.175, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21462066075718308;  // std dev = 2.98e-08, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10638005366620726;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10638005366620726;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.13084861245159932;  // std dev = 1.332, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | else return -0.0783624212141563;  // std dev = 3.33e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19499634201653318;  // std dev = 0.324, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.13986250788768004;  // std dev = 0.296, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07748162053490434;  // std dev = 0.215, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15356470680787557;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08513758938559146;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08513758938559146;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06782108595410266;  // std dev = 1.29e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.08888271290092736;  // std dev = 1.164, 38.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14825423347087271;  // std dev = 0.027, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07873625605695263;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13500274321453007;  // std dev = 0.299, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06875911667390067;  // std dev = 0.238, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.044 seconds
Total inference time: 1.994 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108286
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.477 seconds
Parameter learned model CLL: -0.108286


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 129], 'true,false,true,true': [1.05e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false': [0.0, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.08e-08, 0, 103], 'true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.16e-08, 102, 0], 'false,false': [1.913, 12, 26]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.379, 22, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 103], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.608, 12, 26], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.029, 0, 129], 'true,false,true,true': [0.251, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.175, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [2.98e-08, 0, 103], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 11, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.332, 12, 26], 'false,false': [3.33e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.324, 0, 129], 'true,true,false': [0.296, 22, 0], 'true,false': [0.0, 0, 0], 'false': [0.215, 107, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 103], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.29e-08, 102, 0], 'false,false': [1.164, 12, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.027, 0, 129], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.299, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.238, 107, 0]}]]
[{'': [0.12446822507785202, 6.22554967079527e-17], 'true': [4.40646657835721e-15, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.08885618711355318, -1.4526282565188963e-17], 'true': [0.08885618711355318, nan], 'true,true': [-1.7625866313428842e-15, -2.523234146875356e-18]}, {'': [0.049465780480506295, 0.06741592917392844], 'false': [6.530723674265627e-17, 0.09632251143089302], 'true': [1.6556335590526607e-15, 1.295260195396016e-17], 'true,false': [1.295260195396016e-17, nan], 'true,false,true': [5.046468293750712e-18, 0.0]}, {'': [0.037484474229574245, 0.00011099647602253631], 'true': [0.037484474229574245, nan], 'true,true': [0.037484474229574245, nan]}, {'': [0.02493339987496852, 0.03628691113201483], 'false': [0.06807013322680781, -1.0884539457109378e-17], 'false,true': [0.06807013322680781, nan], 'true': [-3.104312923223739e-16, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan]}, {'': [0.025092557469242226, 0.00028731550941588004], 'true': [0.000813960241043008, 0.0028684235244673065], 'true,false': [0.0028684235244673065, nan], 'true,false,true': [0.0028684235244673065, nan]}, {'': [0.011433428154998943, 0.02132709311946179], 'false': [0.04668447115240695, 1.0884539457109378e-17], 'true': [8.623091453399273e-18, 3.7007434154171884e-18], 'true,true': [8.623091453399273e-18, nan], 'true,false': [3.7007434154171884e-18, nan], 'true,false,true': [1.261617073437678e-18, 0.0]}, {'': [0.015234854196959037, 0.000430716217209325], 'true': [0.015234854196959037, nan], 'true,true': [0.0008147738759575996, 0.003995398836169317]}, {'': [0.006322337309064329, 0.01453781036650274], 'false': [1.6326809185664067e-18, 0.035669495276773974], 'true': [-2.1557728633498185e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0], 'true,true': [-2.1557728633498185e-17, nan]}, {'': [0.010566561206533714, 0.0005310461947278738], 'true': [0.0007334488532766517, 0.004541428401558909], 'true,false': [0.004541428401558909, nan], 'true,false,true': [0.0, 0.004975013335370297]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.13e-07, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.4175135841583106;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716015017;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2.79e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253542;  // std dev = 9.50e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1527438580936713;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 9.31e-10, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.06842697784420272;  // std dev = 9.31e-10, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801092;  // std dev = 5.27e-09, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else return 0.13400703000801092;  // std dev = 5.89e-09, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.866 seconds
Total inference time: 1.931 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.834 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 23.221 seconds
Total inference time: 1.931 seconds
AUC ROC: 1.0
Total revision time: 23.221
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:13:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 23.221, 'Inference time': 1.931, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093963, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.044, 'Inference time': 1.994}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839113;  // std dev = 7.88e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.41e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 8.82e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return 0.35623296562386025;  // std dev = 2.306, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.34600483996225223;  // std dev = 2.961, 228.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10320350433490391;  // std dev = 0.113, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33648595228693695;  // std dev = 1.18e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( movie(E, F) )
%   | | then return -0.13780910856276304;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.21315360603824376;  // std dev = 1.962, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09255620187278392;  // std dev = 6.99e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27981692588039525;  // std dev = 0.027, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16385022294122864;  // std dev = 0.329, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08765623008054597;  // std dev = 0.182, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21495767214086536;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10571605404975866;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10571605404975869;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.13429247009635994;  // std dev = 1.625, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else return -0.07849104030976572;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19481999001000763;  // std dev = 0.380, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.14506870126683655;  // std dev = 0.386, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07616838662356626;  // std dev = 0.223, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15380371138159532;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.0842425554411128;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08424255544111275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06800872515471748;  // std dev = 6.23e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return 0.09154405205274728;  // std dev = 1.419, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14803343044366324;  // std dev = 0.026, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07796710571208731;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1369041952673764;  // std dev = 0.395, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06734904194378546;  // std dev = 0.248, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.43 seconds
Total inference time: 1.908 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.679 seconds
Parameter learned model CLL: -0.108155


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 160, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false': [1.05e-08, 34, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 160, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.41e-08, 0, 154], 'true,false,true,true': [1.05e-08, 13, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.82e-08, 155, 0], 'false,false': [2.306, 17, 40]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.961, 34, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.113, 160, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.18e-08, 0, 154], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.962, 17, 40], 'false,true,false': [0.0, 0, 0], 'false,false': [6.99e-08, 155, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.027, 0, 194], 'true,false,true,true': [0.329, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.182, 160, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 154], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 13, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.625, 17, 40], 'false,false': [0.0, 155, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.38, 0, 194], 'true,true,false': [0.386, 34, 0], 'true,false': [0.0, 0, 0], 'false': [0.223, 160, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 154], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.23e-08, 155, 0], 'false,false': [1.419, 17, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.026, 0, 194], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.395, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.248, 160, 0]}]]
[{'': [0.12688519544475782, -2.7755575615628914e-17], 'true': [6.15315358802561e-15, 3.2653618371328135e-17], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [3.2653618371328135e-17, nan]}, {'': [0.09058162965951318, 3.8857805861880476e-17], 'true': [0.09058162965951318, nan], 'true,true': [-3.516087764586063e-15, 3.2653618371328133e-18]}, {'': [0.04875941233691475, 0.06824284328494316], 'false': [5.0139104337910294e-17, 0.09330385722650686], 'true': [1.8917046861145523e-15, 7.569702440626067e-18], 'true,false': [7.569702440626067e-18, nan], 'true,false,true': [8.540177112501205e-18, -1.5419764230904951e-18]}, {'': [0.038443343767569735, 8.007334066040955e-05], 'true': [0.038443343767569735, nan], 'true,true': [0.038443343767569735, nan]}, {'': [0.024604541144139933, 0.03653527408146443], 'false': [0.06755508347716833, 3.1516008440972186e-17], 'false,true': [0.06755508347716833, nan], 'true': [1.3841741605716237e-16, -2.2709107321878203e-17], 'true,false': [-2.2709107321878203e-17, nan]}, {'': [0.026083242780226733, 0.0002073296334202196], 'true': [0.0007447221452053112, 0.0031747352798248106], 'true,false': [0.0031747352798248106, nan], 'true,false,true': [0.0031747352798248106, nan]}, {'': [0.011247210479419427, 0.021355707134912853], 'false': [0.04632490702121497, -3.36648271983112e-17], 'true': [-1.1534784671430197e-16, 1.1354553660939102e-17], 'true,false': [1.1354553660939102e-17, nan], 'true,false,true': [2.135044278125301e-18, -4.625929269271485e-18], 'true,true': [-1.1534784671430197e-16, nan]}, {'': [0.015947746420551367, 0.0003115304246691625], 'true': [0.015947746420551367, nan], 'true,true': [0.0007458787151145711, 0.004390803878583156]}, {'': [0.006197846500587343, 0.014501043963351019], 'false': [2.5069552168955147e-17, 0.03532121326507966], 'true': [-4.0371746350005693e-17, -6.308085367188389e-18], 'true,false': [-6.308085367188389e-18, nan], 'true,false,true': [-2.135044278125301e-18, 0.0], 'true,true': [-4.0371746350005693e-17, nan]}, {'': [0.01111656117203118, 0.00038549051894171333], 'true': [0.0006707764487260873, 0.004957965282577408], 'true,false': [0.004957965282577408, nan], 'true,false,true': [0.0, 0.005210370787872261]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.14185106490048785;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839113;  // std dev = 7.88e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 5.40e-07, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 8.82e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 2.17e-08, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.41751358415830975;  // std dev = 2.53e-08, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1015963294878364;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.3207118471601504;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601495;  // std dev = 8.69e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.3207118471601498;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2.95e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 3.48e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839679;  // std dev = 3.36e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 2.08e-09, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253603;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return 0.2097577156325357;  // std dev = 1.24e-08, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253595;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.06842697784420267;  // std dev = 2.89e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1527438580936709;  // std dev = 3.49e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6.45e-09, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.13400703000801087;  // std dev = 6.45e-09, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.022 seconds
Total inference time: 1.796 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.808 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 24.939 seconds
Total inference time: 1.796 seconds
AUC ROC: 1.0
Total revision time: 24.939
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 24.939, 'Inference time': 1.796, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094179, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.43, 'Inference time': 1.908}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 6.58e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 4.34e-08, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936067;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0.3424820609683475;  // std dev = 2.585, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3460110619318965;  // std dev = 3.409, 304.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10275651278472987;  // std dev = 0.110, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3364845631517709;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else if ( movie(E, F) )
%   | | then return -0.13780984784491357;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.203001911918724;  // std dev = 2.220, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0925937513305779;  // std dev = 1.27e-07, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2791162923062629;  // std dev = 0.028, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16514189826276507;  // std dev = 0.369, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08695884213066005;  // std dev = 0.176, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21507511240945631;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10559451882984333;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10559451882984335;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12803511895104025;  // std dev = 1.839, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else return -0.07857113490371544;  // std dev = 7.60e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1942749437257413;  // std dev = 0.454, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.1463331267140639;  // std dev = 0.433, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07533963689880412;  // std dev = 0.215, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15394997754008768;  // std dev = 1.76e-07, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08405535117990508;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08405535117990505;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06812642668083276;  // std dev = 5.77e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0.08734693386814768;  // std dev = 1.603, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1475844678801405;  // std dev = 0.027, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07780609342253915;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14094193304916774;  // std dev = 0.433, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06645179001010615;  // std dev = 0.239, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094337
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.663 seconds
Total inference time: 1.783 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.806 seconds
Parameter learned model CLL: -0.107605


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 259], 'true,false,true,true': [4.71e-08, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 214, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false': [0.0, 45, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 214, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.34e-08, 0, 212], 'true,false,true,true': [1.39e-08, 16, 0], 'true,false,true,false': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 209, 0], 'false,false': [2.585, 22, 47]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.409, 45, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 214, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 212], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.22, 22, 47], 'false,true,false': [0.0, 0, 0], 'false,false': [1.27e-07, 209, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.028, 0, 259], 'true,false,true,true': [0.369, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.176, 214, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 212], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 16, 0], 'true,false,true,false': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.839, 22, 47], 'false,false': [7.6e-08, 209, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.454, 0, 259], 'true,true,false': [0.433, 45, 0], 'true,false': [0.0, 0, 0], 'false': [0.215, 214, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [1.76e-07, 0, 212], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [7.45e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.77e-08, 209, 0], 'false,false': [1.603, 22, 47]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.027, 0, 259], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.433, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.239, 214, 0]}]]
[{'': [0.12611452562327286, -1.328117263102991e-16], 'true': [4.499189523731908e-15, 4.9343245538895844e-17], 'true,false': [4.9343245538895844e-17, nan], 'true,false,true': [4.9343245538895844e-17, nan]}, {'': [0.09003145886839366, -2.0751832235984233e-18], 'true': [0.09003145886839366, nan], 'true,true': [-4.499189523731908e-15, -2.960594732333751e-17]}, {'': [0.04594220184633671, 0.06262686075010701], 'false': [-4.0371746350005693e-17, 0.09681948182577327], 'true': [1.876905339743661e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan], 'true,false,true': [1.214306433183765e-17, 6.938893903907228e-18]}, {'': [0.03822368844928155, 5.62638568038556e-05], 'true': [0.03822368844928155, nan], 'true,true': [0.03822368844928155, nan]}, {'': [0.023182881905638743, 0.03402608277189783], 'false': [0.07140084474646625, 7.75562495671162e-17], 'false,true': [0.07140084474646625, nan], 'true': [-8.379041695284201e-17, -1.586032892321652e-17], 'true,false': [-1.586032892321652e-17, nan]}, {'': [0.026009881407125058, 0.00014412427644729589], 'true': [0.0007869314318843991, 0.003031895505062105], 'true,false': [0.003031895505062105, nan], 'true,false,true': [0.003031895505062105, nan]}, {'': [0.01059710100002345, 0.020129297057835203], 'false': [0.04900926437762867, 2.7622773818424947e-17], 'true': [-3.35161667811368e-17, -9.912705577010326e-18], 'true,false': [-9.912705577010326e-18, nan], 'true,false,true': [5.204170427930421e-18, 2.3129646346357427e-18], 'true,true': [-3.35161667811368e-17, nan]}, {'': [0.01592655343724729, 0.00021573578878854888], 'true': [0.01592655343724729, nan], 'true,true': [0.0007964597978519361, 0.004167894219083316]}, {'': [0.005837740289214164, 0.013751367516405457], 'false': [1.593621566447593e-17, 0.03723161128941515], 'true': [1.466332296674735e-16, 1.982541115402065e-18], 'true,true': [1.466332296674735e-16, nan], 'true,false': [1.982541115402065e-18, nan], 'true,false,true': [0.0, 4.625929269271485e-18]}, {'': [0.01110281513564549, 0.0002665417958793346], 'true': [0.0007202685986451582, 0.0046816958549998604], 'true,false': [0.0046816958549998604, nan], 'true,false,true': [0.0, 0.004924048185443926]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.14185106490048813;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 6.31e-07, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936067;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.555366436746284;  // std dev = 1.88e-07, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.11231637819360638;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783646;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else return 0.3207118471601496;  // std dev = 1.49e-08, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( director(A) )
%   | | | then return -0.09269127618926092;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.2551722425694894;  // std dev = 3.73e-09, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 3.48e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839683;  // std dev = 2.95e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.08518475138839678;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325357;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else return 0.20975771563253529;  // std dev = 1.42e-08, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325354;  // std dev = 6.14e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 3.49e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.07877675473109158;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527741;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return 0.1770964977452776;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367136;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1.05e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.06842697784420261;  // std dev = 7.45e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420268;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420267;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 17.775 seconds
Total inference time: 2.001 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.973 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 32.217 seconds
Total inference time: 2.001 seconds
AUC ROC: 1.0
Total revision time: 32.217
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 32.217, 'Inference time': 2.001, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094337, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.663, 'Inference time': 1.783}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 5.87e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 2.36e-08, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936069;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0.3353346000047288;  // std dev = 2.944, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3503145797295784;  // std dev = 3.724, 377.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10303516566455773;  // std dev = 0.136, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3355244252633259;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, F) )
%   | | then return -0.13832198195527975;  // std dev = 1.49e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.19851817188008838;  // std dev = 2.516, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09257034153196986;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2789281170635031;  // std dev = 0.029, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16696089719802062;  // std dev = 0.398, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08738063712468556;  // std dev = 0.217, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21454293653816542;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10578094432303689;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10578094432303688;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.125347693277536;  // std dev = 2.084, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | else return -0.07852213287965415;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19435658662001684;  // std dev = 0.525, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1480576823739864;  // std dev = 0.466, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07583458194559417;  // std dev = 0.265, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15359802534894615;  // std dev = 5.16e-08, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.0840600787667472;  // std dev = 9.13e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08406007876674725;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06805516854918833;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else return 0.08551000733815935;  // std dev = 1.815, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.147759622606422;  // std dev = 0.028, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0778101601543685;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1439133062378213;  // std dev = 0.459, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0669835166373557;  // std dev = 0.294, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.247 seconds
Total inference time: 1.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.031 seconds
Parameter learned model CLL: -0.107713


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [5.87e-08, 0, 324], 'true,false,true,true': [5.58e-08, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 271, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false': [0.0, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 271, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [2.36e-08, 0, 265], 'true,false,true,true': [1.49e-08, 20, 0], 'true,false,true,false': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 263, 0], 'false,false': [2.944, 29, 59]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.724, 53, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.136, 271, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 265], 'true,false,true': [1.49e-08, 32, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.516, 29, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 263, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.029, 0, 324], 'true,false,true,true': [0.398, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.217, 271, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 265], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 20, 0], 'true,false,true,false': [7.45e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.084, 29, 59], 'false,false': [0.0, 263, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.525, 0, 324], 'true,true,false': [0.466, 53, 0], 'true,false': [0.0, 0, 0], 'false': [0.265, 271, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [5.16e-08, 0, 265], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 20, 0], 'true,false,true,false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 263, 0], 'false,false': [1.815, 29, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.028, 0, 324], 'true,false,true,true': [2.63e-09, 9, 0], 'true,false,true,false': [0.459, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.294, 271, 0]}]]
[{'': [0.12081981861548624, -1.7370279056865917e-16], 'true': [3.333410365294297e-15, 5.86532918669894e-17], 'true,false': [5.86532918669894e-17, nan], 'true,false,true': [5.86532918669894e-17, nan]}, {'': [0.08625163894808015, -1.966446685682934e-17], 'true': [0.08625163894808015, nan], 'true,true': [-5.000115547941446e-15, -3.561092720495785e-17]}, {'': [0.04285715624011365, 0.06233917160619088], 'false': [-1.0131312772244775e-16, 0.0984974669521339], 'true': [5.362586684981888e-16, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [1.1102230246251566e-17, 6.938893903907228e-18]}, {'': [0.03678019739925142, 6.805945374058465e-05], 'true': [0.03678019739925142, nan], 'true,true': [0.03678019739925142, nan]}, {'': [0.02158530242419866, 0.03395204963113638], 'false': [0.07193333859800552, -8.10505021779582e-17], 'false,true': [0.07193333859800552, nan], 'true': [-7.775750693223738e-16, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.025163326429516478, 0.00017368673852191858], 'true': [0.0008396114745250181, 0.002992633592051639], 'true,false': [0.002992633592051639, nan], 'true,false,true': [0.002992633592051639, nan]}, {'': [0.009864193628221664, 0.020175786922021453], 'false': [0.0493313010785464, -4.05252510889791e-17], 'true': [-4.2900693479855106e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 4.625929269271485e-18], 'true,true': [-4.2900693479855106e-16, nan]}, {'': [0.01547294219407264, 0.00025945216889213717], 'true': [0.01547294219407264, nan], 'true,true': [0.0008501961180390743, 0.004100366991453006]}, {'': [0.005429854724028431, 0.013812462623884332], 'false': [-2.026262554448955e-17, 0.03742298974280259], 'true': [1.005485003434104e-17, -4.336808689942018e-18], 'true,true': [1.005485003434104e-17, nan], 'true,false': [-4.336808689942018e-18, nan], 'true,false,true': [4.163336342344337e-18, -3.469446951953614e-18]}, {'': [0.010808779956242428, 0.00031998260888607227], 'true': [0.000769157011487524, 0.004589110938104014], 'true,false': [0.004589110938104014, nan], 'true,false,true': [7.709882115452476e-19, 0.004785780771857017]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1418510649004883;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109562;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.7194734122109566;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 2.92e-07, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936069;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462855;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583128;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783645;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716015033;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601493;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.32071184716014917;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09269127618926094;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.092691276189261;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 8.33e-09, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1.18e-08, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 3.48e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839682;  // std dev = 3.48e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325354;  // std dev = 7.90e-09, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else return 0.209757715632535;  // std dev = 1.86e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109154;  // std dev = 5.67e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.07877675473109151;  // std dev = 6.41e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return -0.0787767547310917;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.1389086246676922;  // std dev = 0.090, 177.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=150 */
%   | | else return 0.1445519436891577;  // std dev = 0.084, 200.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1577516717962744;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else return 0.15700331348697819;  // std dev = 1.05e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.08344148134259495;  // std dev = 0.000214, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0684269778442028;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1577516717962739;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.15700331348697824;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.08349930116912117;  // std dev = 0.000979, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420267;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13790451982317722;  // std dev = 4.17e-09, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.13732360409846922;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.07710030473482189;  // std dev = 1.01e-05, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07750228945818141;  // std dev = 1.05e-05, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 18.747 seconds
Total inference time: 1.888 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.653 seconds
Refined model CLL: -0.097273


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096446
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 35.678 seconds
Total inference time: 1.888 seconds
AUC ROC: 1.0
Total revision time: 35.678
Best scored revision CLL: -0.097273


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096446, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 35.678, 'Inference time': 1.888, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094142, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.247, 'Inference time': 1.754}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 204

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 178

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462842;  // std dev = 2.11e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3927940644608746;  // std dev = 0.716, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3261208336172215;  // std dev = 1.34e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( movie(E, F) )
%   | | then return -0.1434632871129763;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.32612083361722155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2588597091866784;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12671944726397125;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21235912916870725;  // std dev = 6.99e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.11334690332048615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11334690332048615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.21235912916870725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.17900217252305328;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.10244506213649912;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15418797164620562;  // std dev = 3.65e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.09340146290385888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09340146290385888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.1541879716462058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13513342010632015;  // std dev = 4.56e-09, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08578715106087127;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.997 seconds
Total inference time: 2.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.82 seconds
Parameter learned model CLL: -0.095655


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.94e-08, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.16e-08, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [2.11e-08, 0, 39], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 1]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [0.716, 2, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.34e-08, 0, 39], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.24e-08, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [6.99e-08, 0, 39], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false': [0.0, 38, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 38, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [3.65e-08, 0, 39], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 38, 0], 'false,false': [0.0, 0, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [4.56e-09, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 38, 0]}]]
[{'': [0.045351473922903854, 2.6294755846385285e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03237580555397557, 2.921639538487254e-18], 'true': [0.03237580555397557, nan], 'true,true': [-8.881784197001252e-16, 0.0]}, {'': [0.020685560158568272, 0.011137681112366972], 'true': [4.554761126667308e-16, 0.0], 'false': [-8.764918615461762e-18, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.01222109308143778, -2.921639538487254e-18], 'true': [0.01222109308143778, nan], 'true,true': [0.01222109308143778, nan]}, {'': [0.010231838918782035, 0.004382206552387344], 'true': [1.594166394333558e-16, 0.0], 'false': [0.0, -1.1686558153949016e-17], 'true,false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.0067424619450881336, 1.3147377923192643e-17], 'true': [-6.661338147750939e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.004922418042111026, 0.0021176094082685434], 'true': [1.25255930983351e-16, 0.0], 'false': [0.0, 0.0], 'true,true': [1.25255930983351e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0035924057096375756, 2.921639538487254e-18], 'true': [0.0035924057096375756, nan], 'true,true': [-2.7755575615628914e-17, 0.0]}, {'': [0.002844402850603262, 0.001238120840231065], 'true': [3.416070845000482e-17, 0.0], 'false': [-7.304098846218135e-19, 0.0], 'true,true': [3.416070845000482e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0022134194451173977, -1.460819769243627e-18], 'true': [2.4980018054066023e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004877;  // std dev = 3.16e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6490635746493422;  // std dev = 0.234, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5651321705104448;  // std dev = 0.054, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.21538137288884476;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.415272363800235;  // std dev = 0.000544, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.38120307888682436;  // std dev = 0.170, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33211442988687306;  // std dev = 0.011, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.2447214892561745;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B) )
%   | then return 0.3212003059908102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2518091052708436;  // std dev = 0.000897, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.2717697274733126;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.20234737879036435;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21521486720936883;  // std dev = 0.007, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17164198058385016;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2106069832189582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.17425741770706926;  // std dev = 0.000840, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.15861281749142442;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15040569105469265;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.16365788154433725;  // std dev = 2.63e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1697973986423942;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.1536657015004046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13232051762035438;  // std dev = 0.000583, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.1424708832921575;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.14718388655331147;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150045
   Precision = 0.894472 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.944297


Total learning time: 5.661 seconds
Total inference time: 2.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.806 seconds
Refined model CLL: -0.098315


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.283999999999999 seconds
Total inference time: 2.293 seconds
AUC ROC: 1.0
Total revision time: 13.283999999999999
Best scored revision CLL: -0.095655


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122639, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.283999999999999, 'Inference time': 2.293, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.122639, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.997, 'Inference time': 2.293}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6.50e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462836;  // std dev = 3.73e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.37622075011827627;  // std dev = 1.318, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 4.94e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.329773527763436;  // std dev = 8.33e-09, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( movie(E, F) )
%   | | then return -0.14143874155762826;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.32977352776343605;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26134626045612197;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1251181811670381;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21410959775492183;  // std dev = 1.12e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.11205218697646173;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11205218697646174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.214109597754922;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109166;  // std dev = 4.01e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.18028187688519293;  // std dev = 9.66e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.10137854046108219;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15515601776104584;  // std dev = 7.15e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.0925088933809546;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0925088933809546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.15515601776104582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1358873610116635;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08502994300441018;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08502994300441018;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.321 seconds
Total inference time: 2.171 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096336
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.095 seconds
Parameter learned model CLL: -0.096336


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 74, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.53e-07, 0, 81], 'true,true,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [3.73e-08, 0, 77], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.87e-08, 74, 0], 'false,false': [0.0, 0, 4]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.318, 7, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 74, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [8.33e-09, 0, 77], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 81], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 74, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.12e-07, 0, 77], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 6, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 4], 'false,false': [4.01e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [9.66e-08, 0, 81], 'true,true,false': [3.73e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [7.15e-08, 0, 77], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 6, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.25e-08, 74, 0], 'false,false': [0.0, 0, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 81], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}]]
[{'': [0.0732179752066116, 5.701145261588641e-17], 'true': [-7.894919286223335e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.052269324970010474, -3.600723323108616e-17], 'true': [0.052269324970010474, nan], 'true,true': [7.894919286223335e-16, -1.982541115402065e-18]}, {'': [0.03405419274324134, 0.021689168481977807], 'true': [1.3841741605716238e-15, -1.982541115402065e-18], 'false': [4.650934292348629e-17, 0.0], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.01973042136966902, 3.300663046182898e-17], 'true': [0.01973042136966902, nan], 'true,true': [0.01973042136966902, nan]}, {'': [0.016961465488512458, 0.008683275333879371], 'true': [6.920870802858119e-17, 0.0], 'false': [0.0, 0.0], 'true,false': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.010935453454334857, 3.00060276925718e-18], 'true': [-1.75442650804963e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008126365333408311, 0.0041735034483692075], 'true': [1.6148698540002277e-16, 3.96508223080413e-18], 'false': [0.0, 2.1754370077114553e-17], 'true,true': [1.6148698540002277e-16, nan], 'true,false': [3.96508223080413e-18, nan], 'true,false,true': [4.625929269271485e-18, 0.0]}, {'': [0.005808571658925388, -4.50090415388577e-18], 'true': [0.005808571658925388, nan], 'true,true': [1.1513423959075697e-16, 1.982541115402065e-18]}, {'': [0.004685534655005118, 0.0024320922671679525], 'true': [6.632501186072363e-17, 9.912705577010326e-19], 'false': [1.4252863153971603e-17, 0.0], 'true,true': [6.632501186072363e-17, nan], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [1.1564823173178713e-18, 0.0]}, {'': [0.003573363391811087, -7.50150692314295e-18], 'true': [-3.0154205607103015e-17, 1.982541115402065e-18], 'true,false': [1.982541115402065e-18, nan], 'true,false,true': [2.3129646346357427e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6.50e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.69306972312535;  // std dev = 0.147, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5578182881171098;  // std dev = 0.028, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.12811563354948016;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.5586214808075533;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41936954620558947;  // std dev = 0.028, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11464109738836707;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783619;  // std dev = 4.94e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3219473652676766;  // std dev = 0.025, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.10363628699795473;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B) )
%   | then return 0.32248379367661695;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2560352530526637;  // std dev = 0.022, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0944951362301236;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21035263354613928;  // std dev = 0.019, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.0867911433018862;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2106718967422717;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109166;  // std dev = 4.01e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.16978019472327355;  // std dev = 0.056, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1760688651197983;  // std dev = 0.000333, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return -0.06946252176220834;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1535773345316327;  // std dev = 0.018, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07966832887671058;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0.1538869778749214;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13466985732898656;  // std dev = 0.017, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.07411128276423291;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.732 seconds
Total inference time: 2.072 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.204 seconds
Refined model CLL: -0.095373


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.352 seconds
Total inference time: 2.072 seconds
AUC ROC: 1.0
Total revision time: 16.352
Best scored revision CLL: -0.095373


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.125399, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.352, 'Inference time': 2.072, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120783, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.321, 'Inference time': 2.171}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.28e-08, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.5553664367462847;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.38184954428949036;  // std dev = 1.503, 131.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 2.11e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3285306292705486;  // std dev = 2.39e-08, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, F) )
%   | | then return -0.14212364807426958;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.3285306292705488;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 6.83e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26050047453760516;  // std dev = 2.20e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12566036077305223;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 5.67e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2135145181379062;  // std dev = 1.43e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.11249088993185984;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11249088993185982;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2135145181379067;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109157;  // std dev = 6.50e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.17984706910348436;  // std dev = 8.94e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.10174014468555913;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633371;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15482725597767197;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.09281167859997583;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09281167859997581;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.37e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.15482725597767155;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1356314129783151;  // std dev = 5.89e-09, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08528692634573799;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08528692634573799;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.499 seconds
Total inference time: 2.294 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096105
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.331 seconds
Parameter learned model CLL: -0.096105


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.14e-08, 0, 122], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.28e-08, 0, 116], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.82e-08, 113, 0], 'false,false': [0.0, 0, 6]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.503, 9, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.39e-08, 0, 116], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [6.83e-08, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.2e-08, 0, 122], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.67e-08, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.43e-07, 0, 116], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 6], 'false,false': [6.5e-08, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [8.94e-08, 0, 122], 'true,true,false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 116], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.37e-08, 113, 0], 'false,false': [0.0, 0, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [5.89e-09, 0, 122], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}]]
[{'': [0.0639822854146069, 6.287988812036285e-17], 'true': [3.843919718046444e-15, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.045676090594181346, -7.859986015045356e-18], 'true': [0.045676090594181346, nan], 'true,true': [-1.3395477805313363e-15, 0.0]}, {'': [0.029786595608716198, 0.021344017473779196], 'true': [1.7763568394002505e-15, -1.5419764230904951e-18], 'false': [6.877487763164686e-17, 0.0], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [-1.982541115402065e-18, 0.0]}, {'': [0.017241632916811477, 3.929993007522678e-18], 'true': [0.017241632916811477, nan], 'true,true': [0.017241632916811477, nan]}, {'': [0.014800776225883524, 0.008494888206155793], 'true': [5.665965780845627e-16, 3.0839528461809902e-18], 'false': [0.0, 4.126492657898812e-17], 'true,false': [3.0839528461809902e-18, nan], 'false,true': [0.0, nan]}, {'': [0.009541050604228205, 2.8492449304539417e-17], 'true': [4.950502667181025e-16, -6.1679056923619804e-18], 'true,false': [-6.1679056923619804e-18, nan], 'true,false,true': [-6.1679056923619804e-18, nan]}, {'': [0.007101172815278652, 0.004090415902582268], 'true': [1.761043418370938e-16, -3.0839528461809902e-18], 'false': [-1.850371707708594e-17, 3.7334933571465444e-17], 'true,true': [1.761043418370938e-16, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-1.982541115402065e-18, 0.0]}, {'': [0.0050732423604968775, -4.9124912594033475e-18], 'true': [0.0050732423604968775, nan], 'true,true': [6.55213588303371e-17, 0.0]}, {'': [0.004097494000843266, 0.002386355700822558], 'true': [-9.570888143320314e-17, -4.625929269271485e-18], 'false': [2.5544954548897407e-17, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan], 'true,false,true': [-2.9738116731030977e-18, 0.0], 'true,true': [-9.570888143320314e-17, nan]}, {'': [0.0031226498507877396, -1.7193719407911715e-17], 'true': [4.004083039631712e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.54e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.5553664367462847;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.4175135841583106;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 1.44e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.32071184716014994;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.209757715632536;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0.20975771563253595;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109179;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.134007030008011;  // std dev = 4.93e-09, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.13400703000801092;  // std dev = 5.89e-09, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.716 seconds
Total inference time: 2.46 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.404 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 20.95 seconds
Total inference time: 2.46 seconds
AUC ROC: 1.0
Total revision time: 20.95
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111909, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 20.95, 'Inference time': 2.46, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120714, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.499, 'Inference time': 2.294}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 8.02e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839122;  // std dev = 6.32e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.34e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360626;  // std dev = 9.06e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3875072307683587;  // std dev = 1.593, 173.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783642;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32728376643896906;  // std dev = 2.39e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, F) )
%   | | then return -0.14281485644593434;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.3272837664389696;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926068;  // std dev = 7.74e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25965167161351627;  // std dev = 7.45e-09, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12620704213951317;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 6.14e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21291697240893034;  // std dev = 1.88e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.11293290413047764;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11293290413047764;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.21291697240893015;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07877675473109151;  // std dev = 8.30e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1794102177431079;  // std dev = 1.37e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.10210424693037787;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333732;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15449679031989927;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.09311639010010143;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09311639010010143;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 6.75e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else return 0.15449679031989882;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13537403414705154;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08554542364159044;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08554542364159043;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.487 seconds
Total inference time: 2.492 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.295 seconds
Parameter learned model CLL: -0.095873


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [8.02e-08, 0, 163], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false': [5.27e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.34e-08, 0, 156], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [9.06e-08, 153, 0], 'false,false': [0.0, 0, 7]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.593, 10, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.39e-08, 0, 156], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [7.74e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.45e-09, 0, 163], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 153, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.88e-07, 0, 156], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 8, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 7], 'false,false': [8.3e-08, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [1.37e-07, 0, 163], 'true,true,false': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 156], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 8, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.75e-08, 153, 0], 'false,false': [0.0, 0, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 153, 0]}]]
[{'': [0.05446222727121477, -8.127122794641668e-17], 'true': [6.3643705166242106e-15, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan]}, {'': [0.0388798494877261, 2.6122894697062506e-17], 'true': [0.0388798494877261, nan], 'true,true': [-2.7898610483832155e-15, 2.7755575615628915e-18]}, {'': [0.0252376445250075, 0.018650475218869065], 'true': [1.8674520619335967e-15, 0.0], 'false': [5.36970613217396e-17, -6.344131569286608e-17], 'true,false': [0.0, nan], 'true,false,true': [-1.734723475976807e-18, 0.0]}, {'': [0.014676214273331345, -4.644070168366668e-17], 'true': [0.014676214273331345, nan], 'true,true': [0.014676214273331345, nan]}, {'': [0.01251083741369355, 0.007378982344420114], 'true': [5.921189464667501e-16, -2.7755575615628915e-18], 'false': [-3.172065784643304e-17, 3.918434204559376e-17], 'true,false': [-2.7755575615628915e-18, nan], 'false,true': [-3.172065784643304e-17, nan]}, {'': [0.00810871474409448, 2.4671622769447922e-17], 'true': [5.4489473601234677e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006010955929146816, 0.00355962038339801], 'true': [2.277380563333654e-16, -2.7755575615628915e-18], 'false': [0.0, 4.4989429756052096e-17], 'true,true': [2.277380563333654e-16, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [1.734723475976807e-18, 0.0]}, {'': [0.004316152959579479, -2.9025438552291676e-17], 'true': [0.004316152959579479, nan], 'true,true': [1.1442789456259283e-16, -2.7755575615628915e-18]}, {'': [0.0034710105931057464, 0.002079037182334731], 'true': [-4.839433697084016e-17, 1.3877787807814458e-18], 'false': [2.9751074516098965e-17, 0.0], 'true,false': [1.3877787807814458e-18, nan], 'true,false,true': [1.734723475976807e-18, 0.0], 'true,true': [-4.839433697084016e-17, nan]}, {'': [0.002658051158818876, -9.433267529494795e-18], 'true': [-1.0625447352240762e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-1.1564823173178713e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.141851064900488;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839122;  // std dev = 6.32e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 5.40e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360626;  // std dev = 9.06e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.41751358415830975;  // std dev = 2.53e-08, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783642;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.3207118471601504;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B) )
%   | then return 0.3207118471601496;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926104;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.08518475138839679;  // std dev = 9.31e-10, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839685;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839682;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( actor(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1.29e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.08518475138839685;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253595;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.20975771563253567;  // std dev = 1.32e-08, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07877675473109176;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.07877675473109173;  // std dev = 1.67e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527772;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367128;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.06842697784420265;  // std dev = 2.98e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367064;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801079;  // std dev = 6.72e-09, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.13400703000801087;  // std dev = 6.45e-09, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.967 seconds
Total inference time: 2.252 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.532 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 22.281000000000002 seconds
Total inference time: 2.252 seconds
AUC ROC: 1.0
Total revision time: 22.281000000000002
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111909, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 22.281000000000002, 'Inference time': 2.252, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120645, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.487, 'Inference time': 2.492}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.41e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936066;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.39095447229734465;  // std dev = 1.677, 215.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3265252427369201;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, F) )
%   | | then return -0.1432373833653546;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.32652524273691874;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926058;  // std dev = 9.06e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25913514628181433;  // std dev = 2.17e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12654098141439962;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7.30e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2125531761519779;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.11320274436169339;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1132027443616934;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.21255317615197727;  // std dev = 1.29e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109147;  // std dev = 7.74e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.17914413602007082;  // std dev = 1.95e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10232640966271257;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1.14e-07, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15429542892134318;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.09330223322231915;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09330223322231916;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420262;  // std dev = 7.96e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0.15429542892134282;  // std dev = 9.13e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13521715512293428;  // std dev = 1.41e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.08570302129686692;  // std dev = 4.56e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08570302129686694;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.716 seconds
Total inference time: 2.333 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.806 seconds
Parameter learned model CLL: -0.095731


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 204], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 193, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 193, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.41e-08, 0, 194], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 193, 0], 'false,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.677, 11, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 193, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 194], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 10], 'false,true,false': [0.0, 0, 0], 'false,false': [9.06e-08, 193, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.17e-08, 0, 204], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 193, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 9, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.29e-08, 0, 10], 'false,false': [7.74e-08, 193, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [1.95e-07, 0, 204], 'true,true,false': [1.05e-08, 11, 0], 'true,false': [0.0, 0, 0], 'false': [1.14e-07, 193, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.45e-09, 9, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [7.96e-08, 193, 0], 'false,false': [9.13e-09, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [1.41e-08, 0, 204], 'true,false,true,true': [4.56e-09, 7, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 193, 0]}]]
[{'': [0.04854515954570594, -1.8407842895339382e-16], 'true': [5.712206307091002e-15, -1.0092936587501423e-17], 'true,false': [-1.0092936587501423e-17, nan], 'true,false,true': [-1.0092936587501423e-17, nan]}, {'': [0.034655734645142, -1.610686253342196e-17], 'true': [0.034655734645142, nan], 'true,true': [-3.692035783851501e-15, 2.523234146875356e-18]}, {'': [0.022637428399173237, 0.02087880460182198], 'true': [1.9777993675796604e-15, 5.046468293750712e-18], 'false': [-2.0708823257256806e-17, -1.7763568394002506e-16], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [-1.5419764230904951e-18, 0.0]}, {'': [0.013081711841821084, -7.823333230519237e-17], 'true': [0.013081711841821084, nan], 'true,true': [0.013081711841821084, nan]}, {'': [0.011205819338470837, 0.008230799223454321], 'true': [-6.958923700743249e-16, 2.523234146875356e-18], 'false': [0.0, 4.256813669547232e-17], 'true,false': [2.523234146875356e-18, nan], 'false,true': [0.0, nan]}, {'': [0.007220901965718811, 2.7611764343009074e-17], 'true': [4.789197361128126e-16, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan], 'true,false,true': [-2.523234146875356e-18, nan]}, {'': [0.005388542694726335, 0.003974984548343402], 'true': [-1.7397309251858123e-16, 2.523234146875356e-18], 'false': [1.6653345369377347e-17, 3.106323488588521e-17], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [1.5419764230904951e-18, 0.0], 'true,true': [-1.7397309251858123e-16, nan]}, {'': [0.003846022697396614, 6.787892067656397e-17], 'true': [0.003846022697396614, nan], 'true,true': [1.872140786622813e-16, 1.0092936587501423e-17]}, {'': [0.003113004671173587, 0.0023232345365719726], 'true': [-2.38068442393848e-16, 3.784851220313033e-18], 'false': [3.2788970157323275e-17, 8.326672684688674e-18], 'true,false': [3.784851220313033e-18, nan], 'true,false,true': [4.625929269271485e-18, 0.0], 'true,true': [-2.38068442393848e-16, nan]}, {'': [0.002369281675283136, -2.8762254523967784e-18], 'true': [1.980986181193907e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.9738116731030977e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.14185106490048827;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936066;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583104;  // std dev = 7.45e-09, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.4175135841583093;  // std dev = 3.25e-08, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783649;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0.32071184716014994;  // std dev = 1.83e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2551722425694898;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0.20975771563253542;  // std dev = 1.71e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.20975771563253565;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.07877675473109169;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310917;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.07877675473109161;  // std dev = 3.57e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527764;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333703;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.07324622576333703;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367136;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1.29e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.06842697784420261;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.06842697784420268;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.15274385809367086;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801079;  // std dev = 6.97e-09, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.13400703000801104;  // std dev = 5.59e-09, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.174 seconds
Total inference time: 2.327 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.818 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111909
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 25.514 seconds
Total inference time: 2.327 seconds
AUC ROC: 1.0
Total revision time: 25.514
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.111909, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 25.514, 'Inference time': 2.327, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.120603, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.716, 'Inference time': 2.333}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 337

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 45

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.94e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0.29571200871410475;  // std dev = 1.381, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3692188570836417;  // std dev = 1.488, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1038208631535174;  // std dev = 0.074, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33132294723913913;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, F) )
%   | | then return -0.1405906077079381;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.1729968363195107;  // std dev = 1.163, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09250436322366536;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2769126464591098;  // std dev = 0.033, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1753690901704898;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08854092604541731;  // std dev = 0.117, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21241268434732236;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1065617186031856;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.10997162931254388;  // std dev = 0.963, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else return -0.07838620999017344;  // std dev = 2.36e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19372253322061955;  // std dev = 0.271, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.15594036775078032;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07718150040542941;  // std dev = 0.142, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15231240573832158;  // std dev = 4.71e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08402651539873414;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06785938732708853;  // std dev = 1.97e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0.07517335196064893;  // std dev = 0.837, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1476843604522968;  // std dev = 0.032, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.13975437485220293;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842012863070353;  // std dev = 0.157, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096448
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.287 seconds
Total inference time: 1.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.024 seconds
Parameter learned model CLL: -0.107376


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 59, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.46e-07, 0, 67], 'true,true,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false': [3.94e-08, 59, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.94e-08, 56, 0], 'false,false': [1.381, 7, 11]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.488, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.074, 59, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.163, 7, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [3.33e-08, 56, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.033, 0, 67], 'true,false,true,true': [0.144, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.117, 59, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.963, 7, 11], 'false,false': [2.36e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.271, 0, 67], 'true,true,false': [0.167, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.142, 59, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [4.71e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.97e-08, 56, 0], 'false,false': [0.837, 7, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.032, 0, 67], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.175, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.157, 59, 0]}]]
[{'': [0.09528888888888787, 3.010774304068221e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.06802545256557097, 2.6344275160596936e-17], 'true': [0.06802545256557097, nan], 'true,true': [3.1815346377317917e-16, 0.0]}, {'': [0.027738687907221463, 0.056417026400050606], 'false': [2.7755575615628914e-17, 0.10594637742341452], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.029539949926931257, 9.237293388864409e-05], 'true': [0.029539949926931257, nan], 'true,true': [0.029539949926931257, nan]}, {'': [0.01385703843021795, 0.03126032865206829], 'false': [0.0751702294626049, 1.9825411154020653e-17], 'false,true': [0.0751702294626049, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.02072661430811103, 0.0002306084062576954], 'true': [0.0010722021623516733, 0.00259314879761929], 'true,false': [0.00259314879761929, nan], 'true,false,true': [0.00259314879761929, nan]}, {'': [0.006330779450341536, 0.019070030246439898], 'false': [0.05155028573401069, 9.912705577010326e-18], 'true': [-7.137148015447435e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0], 'true,true': [-7.137148015447435e-17, nan]}, {'': [0.013003304287362865, 0.000341013671771456], 'true': [0.013003304287362865, nan], 'true,true': [0.0010972791359264724, 0.003493629341919491]}, {'': [0.0034754897734186494, 0.013228639778244755], 'false': [6.938893903907228e-18, 0.038902402403490494], 'true': [3.9650822308041306e-17, 0.0], 'true,true': [3.9650822308041306e-17, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.009175736209818701, 0.00041750568890207545], 'true': [0.00099985031640288, 0.0038406635127607343], 'true,false': [0.0038406635127607343, nan], 'true,false,true': [nan, 0.0038406635127607343]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004877;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 3.94e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783631;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 2.58e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0851847513883968;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.14864846098293494;  // std dev = 0.079, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15526680663666187;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.076212982379236;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1530818607692868;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.07510069601708837;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13569439112578935;  // std dev = 0.013, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07288418162866543;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06417151459988796;  // std dev = 0.000675, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.706 seconds
Total inference time: 1.577 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095886
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.283 seconds
Refined model CLL: -0.095886


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.299999999999999 seconds
Total inference time: 1.577 seconds
AUC ROC: 1.0
Total revision time: 15.299999999999999
Best scored revision CLL: -0.095886


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096418, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.299999999999999, 'Inference time': 1.577, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096448, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.287, 'Inference time': 1.689}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.15e-08, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0.3467155570775688;  // std dev = 1.751, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.37082816742044394;  // std dev = 2.026, 149.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10328372857178149;  // std dev = 0.099, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3309665045037996;  // std dev = 2.17e-08, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( movie(E, F) )
%   | | then return -0.14078516494047444;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.20436100610516697;  // std dev = 1.466, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09254946409536058;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27361080339739635;  // std dev = 0.026, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.17129299092911585;  // std dev = 0.221, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08776048640831485;  // std dev = 0.158, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2127556666825435;  // std dev = 4.21e-08, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10708561290033243;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10708561290033243;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12972880544676832;  // std dev = 1.216, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else return -0.07847818510211624;  // std dev = 4.83e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19077015827198782;  // std dev = 0.300, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.15188279876161007;  // std dev = 0.259, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07628657673773039;  // std dev = 0.193, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1529148378281455;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08472371020158583;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08472371020158583;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06799078488281368;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0.08895791115312256;  // std dev = 1.062, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1450505428218011;  // std dev = 0.025, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07838072283028155;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14499926805110838;  // std dev = 0.259, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06747552173653786;  // std dev = 0.215, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.709 seconds
Total inference time: 1.569 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105222
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.662 seconds
Parameter learned model CLL: -0.105222


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.15e-08, 0, 112], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.94e-08, 115, 0], 'false,false': [1.751, 10, 22]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.026, 15, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.099, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.17e-08, 0, 112], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.466, 10, 22], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.026, 0, 134], 'true,false,true,true': [0.221, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.158, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [4.21e-08, 0, 112], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [2.63e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.216, 10, 22], 'false,false': [4.83e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.3, 0, 134], 'true,true,false': [0.259, 15, 0], 'true,false': [0.0, 0, 0], 'false': [0.193, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 112], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [2.63e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 115, 0], 'false,false': [1.062, 10, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.025, 0, 134], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.259, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.215, 119, 0]}]]
[{'': [0.09053646232152184, 6.344131569286608e-17], 'true': [4.772301956597688e-15, -1.4802973661668754e-17], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.4802973661668754e-17, nan]}, {'': [0.06463275933764061, -1.1195526298741075e-17], 'true': [0.06463275933764061, nan], 'true,true': [-1.908920782639075e-15, 3.7007434154171884e-18]}, {'': [0.030692353261184815, 0.056733349009979624], 'false': [6.950961545479241e-17, 0.09577741709036337], 'true': [1.7129155237073844e-15, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.027539783294930183, 8.186032546937264e-05], 'true': [0.027539783294930183, nan], 'true,true': [0.027539783294930183, nan]}, {'': [0.015322043215931601, 0.029638337719482558], 'false': [0.0671856707615244, -2.5100694469786148e-17], 'false,true': [0.0671856707615244, nan], 'true': [4.758098676964956e-16, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.01885051357191316, 0.00020898289721861822], 'true': [0.0006677830796015473, 0.003270303610022596], 'true,false': [0.003270303610022596, nan], 'true,false,true': [0.003270303610022596, nan]}, {'': [0.007043018351083469, 0.0174406347440542], 'false': [0.046204532487854846, 2.027363784098112e-17], 'true': [1.586032892321652e-17, -1.5419764230904951e-18], 'true,true': [1.586032892321652e-17, nan], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [0.0, 1.3877787807814458e-18]}, {'': [0.011683558245647983, 0.0003129776632440605], 'true': [0.011683558245647983, nan], 'true,true': [0.0006706885459957102, 0.00447404952344684]}, {'': [0.003887975967881723, 0.011868223495174435], 'false': [0.0, 0.03524902095613604], 'true': [-4.3615904538845435e-17, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [0.0, 1.3877787807814458e-18], 'true,true': [-4.3615904538845435e-17, nan]}, {'': [0.008205703485523679, 0.00038695121806115877], 'true': [0.0006059663164913647, 0.005000181105869002], 'true,false': [0.005000181105869002, nan], 'true,false,true': [0.0, 0.005177702328562577]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.38e-07, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.4175135841583106;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 1.58e-08, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return 0.32071184716014994;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( director(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 3.73e-09, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2.28e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.209757715632536;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return 0.20975771563253603;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527755;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #pos=112 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 5.59e-09, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.13400703000801092;  // std dev = 5.89e-09, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202619;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.123 seconds
Total inference time: 1.726 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.695 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 22.189 seconds
Total inference time: 1.726 seconds
AUC ROC: 1.0
Total revision time: 22.189
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 22.189, 'Inference time': 1.726, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094685, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.709, 'Inference time': 1.569}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 8.43e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.41e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360643;  // std dev = 5.96e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else return 0.32774729528950375;  // std dev = 2.099, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.35911484882798006;  // std dev = 2.725, 230.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10269458177945354;  // std dev = 0.094, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3335652731357059;  // std dev = 1.62e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( movie(E, F) )
%   | | then return -0.13937421966653193;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.19168806707458108;  // std dev = 1.795, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09259895491413106;  // std dev = 1.16e-07, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27507603957766796;  // std dev = 0.027, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16669619588252904;  // std dev = 0.284, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08685185498323951;  // std dev = 0.150, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21403967052915354;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10654127706521511;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10654127706521511;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.12145678468872703;  // std dev = 1.490, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | else return -0.07858298828167407;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1914970278787512;  // std dev = 0.391, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.14736470271717245;  // std dev = 0.333, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.075208822129982;  // std dev = 0.183, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1536466258457569;  // std dev = 1.43e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08467385034514806;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08467385034514806;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06814437461637028;  // std dev = 4.83e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else return 0.08309648252737735;  // std dev = 1.299, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1454636794556451;  // std dev = 0.026, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0783378761999137;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1407267980277332;  // std dev = 0.332, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06630831099183668;  // std dev = 0.203, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095045
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.111 seconds
Total inference time: 1.535 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.902 seconds
Parameter learned model CLL: -0.105509


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 174, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false': [0.0, 28, 0], 'true,false': [0.0, 0, 0], 'false': [8.43e-08, 174, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.41e-08, 0, 173], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.96e-08, 170, 0], 'false,false': [2.099, 15, 29]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.725, 28, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 174, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.62e-08, 0, 173], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.795, 15, 29], 'false,true,false': [0.0, 0, 0], 'false,false': [1.16e-07, 170, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.027, 0, 202], 'true,false,true,true': [0.284, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.15, 174, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 173], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 9, 0], 'true,false,true,false': [3.73e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.49, 15, 29], 'false,false': [0.0, 170, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.391, 0, 202], 'true,true,false': [0.333, 28, 0], 'true,false': [0.0, 0, 0], 'false': [0.183, 174, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [1.43e-07, 0, 173], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [2.63e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.83e-08, 170, 0], 'false,false': [1.299, 15, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.026, 0, 202], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.332, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.203, 174, 0]}]]
[{'': [0.10691871455577107, -3.062684205862501e-17], 'true': [5.768762805181012e-15, 2.3790493384824782e-17], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [2.3790493384824782e-17, nan]}, {'': [0.07632782825147176, 4.083578941150001e-17], 'true': [0.07632782825147176, nan], 'true,true': [-3.728590593592605e-15, -5.9476233462061954e-18]}, {'': [0.036318526425419786, 0.052225496362758944], 'false': [2.0898315757650005e-17, 0.10016691554454266], 'true': [1.8893043841020003e-15, 1.3061447348531253e-17], 'true,false': [1.3061447348531253e-17, nan], 'true,false,true': [-1.5419764230904951e-18, -1.734723475976807e-18]}, {'': [0.032274366575912476, 5.126171908176452e-05], 'true': [0.032274366575912476, nan], 'true,true': [0.032274366575912476, nan]}, {'': [0.018222123476145463, 0.02825362992781572], 'false': [0.07321328450059385, 7.967482882604065e-17], 'false,true': [0.07321328450059385, nan], 'true': [2.875028410590001e-16, -9.79608551139844e-18], 'true,false': [-9.79608551139844e-18, nan]}, {'': [0.02186943642290576, 0.00012948200796852053], 'true': [0.0007418344508769173, 0.002886223851406542], 'true,false': [0.002886223851406542, nan], 'true,false,true': [0.002886223851406542, nan]}, {'': [0.00837265582791767, 0.016909194971897985], 'false': [0.05045183521379251, -4.179663151530001e-17], 'true': [-2.4129702731737504e-16, -3.2653618371328133e-18], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [3.0839528461809902e-18, 1.734723475976807e-18], 'true,true': [-2.4129702731737504e-16, nan]}, {'': [0.013422923015079368, 0.00019294756740064576], 'true': [0.013422923015079368, nan], 'true,true': [0.0007571911289726046, 0.003948831459306765]}, {'': [0.004627117612261586, 0.011623079957071472], 'false': [1.3714519715957817e-17, 0.038359661122517145], 'true': [1.1808152400637502e-16, 0.0], 'true,true': [1.1808152400637502e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 8.673617379884035e-19]}, {'': [0.009363979013623142, 0.00023788708589230525], 'true': [0.0006896808216733009, 0.004419545586094079], 'true,false': [0.004419545586094079, nan], 'true,false,true': [0.0, 0.0046000825789900765]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048788;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 8.43e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 5.72e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360643;  // std dev = 5.96e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1.90e-08, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.4175135841583096;  // std dev = 2.79e-08, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783641;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.3207118471601502;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601495;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2.08e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839683;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839682;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0851847513883968;  // std dev = 1.86e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 7.45e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.08518475138839682;  // std dev = 2.46e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253603;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.20975771563253554;  // std dev = 1.54e-08, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325358;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109175;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420267;  // std dev = 2.47e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.1527438580936709;  // std dev = 5.89e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6.45e-09, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return 0.13400703000801087;  // std dev = 6.72e-09, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.988 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.757 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 24.758 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0
Total revision time: 24.758
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 24.758, 'Inference time': 1.798, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095045, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.111, 'Inference time': 1.535}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 3.94e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360679;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0.35714810106100364;  // std dev = 2.440, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.36243444352516585;  // std dev = 3.076, 304.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10247749602719425;  // std dev = 0.102, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3328277371179536;  // std dev = 1.49e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else if ( movie(E, F) )
%   | | then return -0.13977287876666683;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.2088116702067312;  // std dev = 2.089, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09261719702498672;  // std dev = 7.74e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2746409281808664;  // std dev = 0.025, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.17467944587102105;  // std dev = 0.348, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08652918403042363;  // std dev = 0.163, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21367871843646688;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10606035311405361;  // std dev = 9.13e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10606035311405362;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.13239083827870127;  // std dev = 1.731, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return -0.07862075825516737;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19123144834359312;  // std dev = 0.412, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.15574016332066035;  // std dev = 0.405, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07483446999038361;  // std dev = 0.200, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15344901609673736;  // std dev = 1.33e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08367502905715753;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08367502905715754;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06819888457409595;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0.09110979331396869;  // std dev = 1.508, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1452621834022393;  // std dev = 0.024, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0774788355880071;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.15045165507732275;  // std dev = 0.400, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06591023277869758;  // std dev = 0.223, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.587 seconds
Total inference time: 1.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105449
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.835 seconds
Parameter learned model CLL: -0.105449


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false': [1.49e-08, 35, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [3.94e-08, 0, 224], 'true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 230, 0], 'false,false': [2.44, 19, 45]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.076, 35, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.102, 234, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [1.49e-08, 0, 224], 'true,false,true': [1.83e-08, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.089, 19, 45], 'false,true,false': [0.0, 0, 0], 'false,false': [7.74e-08, 230, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.025, 0, 269], 'true,false,true,true': [0.348, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.163, 234, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 224], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 11, 0], 'true,false,true,false': [7.45e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.731, 19, 45], 'false,false': [0.0, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.412, 0, 269], 'true,true,false': [0.405, 35, 0], 'true,false': [0.0, 0, 0], 'false': [0.2, 234, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [1.33e-07, 0, 224], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 230, 0], 'false,false': [1.508, 19, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.024, 0, 269], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.4, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.223, 234, 0]}]]
[{'': [0.10187629847645842, -1.5562100516113304e-16], 'true': [4.226276495227362e-15, 3.489272363107635e-17], 'true,false': [3.489272363107635e-17, nan], 'true,false,true': [3.489272363107635e-17, nan]}, {'': [0.07272811542221491, -5.693451408334136e-18], 'true': [0.07272811542221491, nan], 'true,true': [-4.5432472323694135e-15, 6.3441315692866086e-18]}, {'': [0.033545846703171324, 0.057790652332438776], 'false': [-6.178632484870436e-17, 0.09305646774120649], 'true': [1.522591576628786e-15, 1.1102230246251566e-17], 'true,false': [1.1102230246251566e-17, nan], 'true,false,true': [5.046468293750712e-18, -1.5419764230904951e-18]}, {'': [0.03111636808708207, 4.4646132029746625e-05], 'true': [0.03111636808708207, nan], 'true,true': [0.03111636808708207, nan]}, {'': [0.01680687336674731, 0.03031266077812333], 'false': [0.06816833218373206, 2.6066105795547154e-17], 'false,true': [0.06816833218373206, nan], 'true': [2.220446049250313e-16, 1.6653345369377347e-17], 'true,false': [1.6653345369377347e-17, nan]}, {'': [0.02151937462359725, 0.00011387942320649456], 'true': [0.0006263760411681642, 0.0034519699093367227], 'true,false': [0.0034519699093367227, nan], 'true,false,true': [0.0034519699093367227, nan]}, {'': [0.007692894567394393, 0.017775427735908296], 'false': [0.04682268888119011, -1.4481169886415085e-17], 'true': [-6.344131569286609e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [7.569702440626067e-18, 6.1679056923619804e-18], 'true,true': [-6.344131569286609e-16, nan]}, {'': [0.013363950820132154, 0.0001708183453677633], 'true': [0.013363950820132154, nan], 'true,true': [0.0006316114538511329, 0.004692384194108449]}, {'': [0.0042310635800163745, 0.01205952390107232], 'false': [-3.37893964016352e-17, 0.03554391881986414], 'true': [7.930164461608261e-17, 4.163336342344337e-18], 'true,true': [7.930164461608261e-17, nan], 'true,false': [4.163336342344337e-18, nan], 'true,false,true': [2.523234146875356e-18, 1.5419764230904951e-18]}, {'': [0.009397021678737568, 0.00021189684139172183], 'true': [0.0005704265755572961, 0.005216358253930063], 'true,false': [0.005216358253930063, nan], 'true,false,true': [-6.938893903907229e-19, 0.005325032384220266]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048818;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 5.84e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360679;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.555366436746284;  // std dev = 1.79e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783645;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601502;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.3207118471601496;  // std dev = 1.49e-08, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 3.09e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.08518475138839678;  // std dev = 1.49e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.20975771563253529;  // std dev = 1.42e-08, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325354;  // std dev = 6.14e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 5.16e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.07877675473109155;  // std dev = 5.16e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.0787767547310917;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527753;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | | else return 0.17709649774527758;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333702;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367136;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.06842697784420261;  // std dev = 7.45e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420267;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842697784420265;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 20.932 seconds
Total inference time: 1.799 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.02 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 36.373999999999995 seconds
Total inference time: 1.799 seconds
AUC ROC: 1.0
Total revision time: 36.373999999999995
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 36.373999999999995, 'Inference time': 1.799, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094924, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.587, 'Inference time': 1.729}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839163;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 1.67e-08, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360696;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0.3353346000047288;  // std dev = 2.944, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3584526098689567;  // std dev = 3.589, 385.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10294554957050589;  // std dev = 0.136, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33371250473547437;  // std dev = 4.41e-08, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, F) )
%   | | then return -0.1392948037038605;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.19691266082772294;  // std dev = 2.512, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09257786965492777;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27712863962049694;  // std dev = 0.028, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.17252592639022665;  // std dev = 0.386, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08723796880751203;  // std dev = 0.217, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21378112013456946;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10593240292246377;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10593240292246377;  // std dev = 9.13e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1246858453732041;  // std dev = 2.080, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | else return -0.07853839697786898;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.1932311442824638;  // std dev = 0.526, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.15355553440613623;  // std dev = 0.450, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07566545715521944;  // std dev = 0.265, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.153255205466778;  // std dev = 2.29e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08374884461874509;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08374884461874509;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06807912230794606;  // std dev = 9.06e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0.0853924626755318;  // std dev = 1.809, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14695314874269758;  // std dev = 0.027, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07754236748789656;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14815915095208038;  // std dev = 0.441, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06680203808838453;  // std dev = 0.294, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.99 seconds
Total inference time: 1.746 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.387 seconds
Parameter learned model CLL: -0.106932


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true,true': [5.05e-08, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 289, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false': [0.0, 48, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 289, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [1.67e-08, 0, 278], 'true,false,true,true': [1.18e-08, 14, 0], 'true,false,true,false': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 281, 0], 'false,false': [2.944, 29, 59]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.589, 48, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.136, 289, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [4.41e-08, 0, 278], 'true,false,true': [2.11e-08, 27, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.512, 29, 59], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 281, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.028, 0, 337], 'true,false,true,true': [0.386, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.217, 289, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 278], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 14, 0], 'true,false,true,false': [9.13e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.08, 29, 59], 'false,false': [0.0, 281, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.526, 0, 337], 'true,true,false': [0.45, 48, 0], 'true,false': [0.0, 0, 0], 'false': [0.265, 289, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [2.29e-07, 0, 278], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [9.06e-08, 281, 0], 'false,false': [1.809, 29, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.027, 0, 337], 'true,false,true,true': [2.63e-09, 7, 0], 'true,false,true,false': [0.441, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.294, 289, 0]}]]
[{'': [0.10913138809243007, -1.628839316405074e-16], 'true': [3.204821834882351e-15, 5.3198186596622086e-17], 'true,false': [5.3198186596622086e-17, nan], 'true,false,true': [5.3198186596622086e-17, nan]}, {'': [0.07790742604578371, -2.458625383252942e-17], 'true': [0.07790742604578371, nan], 'true,true': [-5.144582419153248e-15, -3.0068540250264654e-17]}, {'': [0.0359707321934279, 0.05988269947771434], 'false': [-1.1378798259503384e-16, 0.0984974669521339], 'true': [3.0670909457270513e-16, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [9.912705577010326e-18, 8.540177112501205e-18]}, {'': [0.033449931558229694, 6.394136845562173e-05], 'true': [0.033449931558229694, nan], 'true,true': [0.033449931558229694, nan]}, {'': [0.01805280052954451, 0.032318529041772945], 'false': [0.07169866188001087, -3.9509716178831196e-17], 'false,true': [0.07169866188001087, nan], 'true': [1.929711386686603e-15, 1.644774851296528e-17], 'true,false': [1.644774851296528e-17, nan]}, {'': [0.023159978867773733, 0.00016228571397052956], 'true': [0.0008090894651623181, 0.003100627219287689], 'true,false': [0.003100627219287689, nan], 'true,false,true': [0.003100627219287689, nan]}, {'': [0.00824766274240741, 0.019221539217642643], 'false': [0.04914866068129439, -8.455079262269875e-17], 'true': [-6.581465987705963e-16, -1.02798428206033e-17], 'true,false': [-1.02798428206033e-17, nan], 'true,false,true': [5.9476233462061954e-18, 6.4051328343759035e-18], 'true,true': [-6.581465987705963e-16, nan]}, {'': [0.014367015353577383, 0.0002422260181650536], 'true': [0.014367015353577383, nan], 'true,true': [0.0008196582023495951, 0.00421333078871441]}, {'': [0.00453231844875696, 0.013150396806566624], 'false': [2.923718997233508e-17, 0.03720557877856194], 'true': [1.884982977061417e-16, -8.22387425648264e-18], 'true,true': [1.884982977061417e-16, nan], 'true,false': [-8.22387425648264e-18, nan], 'true,false,true': [-3.96508223080413e-18, -3.2025664171879517e-18]}, {'': [0.010085142450390721, 0.00029891569390202267], 'true': [0.0007417808922879601, 0.004677842248647875], 'true,false': [0.004677842248647875, nan], 'true,false,true': [9.912705577010326e-19, 0.004749266768407116]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004883;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.6007281726475884;  // std dev = 0.294, 185.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=159 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839163;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5669842335111428;  // std dev = 0.238, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.17213691117489682;  // std dev = 0.238, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360696;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5790384294215466;  // std dev = 0.087, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.14180195530203143;  // std dev = 0.237, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4278934562792012;  // std dev = 0.261, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.18202421849833297;  // std dev = 0.011, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09772212501353365;  // std dev = 0.006, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1015227006035557;  // std dev = 0.007, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3264018357496284;  // std dev = 0.214, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( female(A) )
%   | | then return -0.15508220310075344;  // std dev = 2.24e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.0880922124986431;  // std dev = 6.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3345704183835127;  // std dev = 0.078, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.15909876186257624;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09043471278129332;  // std dev = 0.000685, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.09269746853493972;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26006525161589794;  // std dev = 0.203, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.13690954736883112;  // std dev = 0.008, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08242108771757418;  // std dev = 0.005, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0851319381167922;  // std dev = 0.006, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2123894993887643;  // std dev = 0.163, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.12054537081981632;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07532236719925443;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.21721361963726585;  // std dev = 0.059, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.12336347494543595;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0771100871220457;  // std dev = 0.001, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0787854818194139;  // std dev = 2.58e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1884472075029489;  // std dev = 0.022, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return -0.10913205851836927;  // std dev = 0.006, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.14507556450037604;  // std dev = 0.076, 200.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07320630690795588;  // std dev = 0.005, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15632001642405652;  // std dev = 0.082, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.09160446953736935;  // std dev = 0.045, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0684366320770972;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.1571134575968569;  // std dev = 0.029, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( female(A) )
%   | | | then return -0.10033996266048087;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07610075531991209;  // std dev = 0.034, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13690360566840834;  // std dev = 0.078, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.09083957110552102;  // std dev = 0.003, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.07539774508606698;  // std dev = 0.007, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06414591752402425;  // std dev = 0.005, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.706 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.767 seconds
Refined model CLL: -0.097247


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 32.85 seconds
Total inference time: 1.815 seconds
AUC ROC: 1.0
Total revision time: 32.85
Best scored revision CLL: -0.097247


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:20:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096237, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 32.85, 'Inference time': 1.815, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094689, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.99, 'Inference time': 1.746}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 337

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 45

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 3.65e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 2.79e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 1.49e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0.18443153955745614;  // std dev = 1.408, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3452757124911981;  // std dev = 1.766, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10325799711724937;  // std dev = 0.051, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3366487589904206;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( movie(E, F) )
%   | | then return -0.13772249814744336;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.0994404171507732;  // std dev = 1.233, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09255162515005909;  // std dev = 2.36e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.28197971191610416;  // std dev = 0.043, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16280547331062226;  // std dev = 0.119, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08760569406706202;  // std dev = 0.078, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21468838983266827;  // std dev = 7.30e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10575408721706642;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10575408721706642;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.0629868880848327;  // std dev = 1.032, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return -0.07849108515116224;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19738974408382123;  // std dev = 0.371, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.143218860794842;  // std dev = 0.138, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0760439767854315;  // std dev = 0.094, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1532972162710412;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08441351650258866;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08441351650258866;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06801664757088065;  // std dev = 2.24e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0.04290557108954421;  // std dev = 0.898, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1506862878245661;  // std dev = 0.044, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07811410574373649;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1319410167030825;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06717502658601225;  // std dev = 0.103, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110576
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.271 seconds
Total inference time: 1.794 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109448
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.993 seconds
Parameter learned model CLL: -0.109448


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [1.46e-07, 0, 67], 'true,true,false': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 55, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [1.49e-08, 0, 59], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.33e-08, 52, 0], 'false,false': [1.408, 10, 8]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [1.766, 12, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.051, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [0.0, 0, 59], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.233, 10, 8], 'false,true,false': [0.0, 0, 0], 'false,false': [2.36e-08, 52, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.043, 0, 67], 'true,false,true,true': [0.119, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.078, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [7.3e-08, 0, 59], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.032, 10, 8], 'false,false': [2.79e-08, 52, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.371, 0, 67], 'true,true,false': [0.138, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 55, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 59], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.24e-08, 52, 0], 'false,false': [0.898, 10, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.044, 0, 67], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.135, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.103, 55, 0]}]]
[{'': [0.1288255087325739, 2.4223047810003414e-17], 'true': [-9.544603913195376e-16, -1.1564823173178714e-17], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan]}, {'': [0.09196679314565047, 1.413011122250199e-17], 'true': [0.09196679314565047, nan], 'true,true': [3.1815346377317917e-16, 2.3129646346357427e-18]}, {'': [0.03210720232006503, 0.04512591210562531], 'false': [2.1350442781253012e-17, 0.11007415836198922], 'true': [2.408619443254577e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [2.3129646346357427e-18, 0.0]}, {'': [0.039455939312448396, 4.785974805107623e-05], 'true': [0.039455939312448396, nan], 'true,true': [0.039455939312448396, nan]}, {'': [0.016206857038958453, 0.02877458529552956], 'false': [0.08451874926737178, 1.0675221390626506e-17], 'false,true': [0.08451874926737178, nan], 'true': [-1.3548484368306996e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan]}, {'': [0.02725850174604825, 0.0001117815980607824], 'true': [0.001878640459699457, 0.0011795793271846035], 'true,false': [0.0011795793271846035, nan], 'true,false,true': [0.0011795793271846035, nan]}, {'': [0.007395409527305295, 0.019030776159246972], 'false': [0.059139532818767666, 1.4945309946877107e-17], 'true': [9.032322912204664e-17, 2.7755575615628915e-18], 'true,true': [9.032322912204664e-17, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.01692714190534248, 0.0001607810971049733], 'true': [0.01692714190534248, nan], 'true,true': [0.0020531672359601675, 0.0015816921840969903]}, {'': [0.0040696742627817015, 0.01386253098961923], 'false': [9.607699251563854e-18, 0.04476992264008448], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.01188157033053561, 0.00019398306813196432], 'true': [0.0019468396568118043, 0.001738976674377328], 'true,false': [0.001738976674377328, nan], 'true,false,true': [0.0, 0.0016556207676716374]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048774;  // std dev = 3.65e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 2.79e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783635;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.20975771563253565;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.15274385809367083;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.06842697784420272;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.1340070300080111;  // std dev = 2.63e-09, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.746 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.981 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.991000000000001 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0
Total revision time: 15.991000000000001
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:20:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.991000000000001, 'Inference time': 1.613, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.110576, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.271, 'Inference time': 1.794}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462834;  // std dev = 4.15e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.2882933107703283;  // std dev = 1.935, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.35959021238342764;  // std dev = 2.262, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1034585048188855;  // std dev = 0.094, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33345960842557865;  // std dev = 2.76e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( movie(E, F) )
%   | | then return -0.13943124884712124;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.16816810999636914;  // std dev = 1.649, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09253478672165127;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2782612517979137;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1704013777156734;  // std dev = 0.215, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08798913401013758;  // std dev = 0.148, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21344224755502836;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1062288056701314;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1062288056701314;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.10669674216876726;  // std dev = 1.367, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | else return -0.07845007581248159;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19442671249871574;  // std dev = 0.393, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.15107926410806197;  // std dev = 0.251, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07653145377508709;  // std dev = 0.180, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.1528826218336437;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08415686782160688;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08415686782160688;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06795242467022515;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0.07280095276880316;  // std dev = 1.187, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14811049209805166;  // std dev = 0.032, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07789341267087489;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14195206094412277;  // std dev = 0.249, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06772000616439271;  // std dev = 0.199, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104385
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.755 seconds
Total inference time: 1.686 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107722
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.445 seconds
Parameter learned model CLL: -0.107722


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.83e-08, 0, 134], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false': [0.0, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.15e-08, 0, 113], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.69e-08, 110, 0], 'false,false': [1.935, 14, 21]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.262, 19, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.76e-08, 0, 113], 'true,false,true': [7.45e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.649, 14, 21], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.033, 0, 134], 'true,false,true,true': [0.215, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.148, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 113], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.73e-09, 5, 0], 'true,false,true,false': [3.73e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.367, 14, 21], 'false,false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.393, 0, 134], 'true,true,false': [0.251, 19, 0], 'true,false': [0.0, 0, 0], 'false': [0.18, 115, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 113], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 5, 0], 'true,false,true,false': [2.63e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 110, 0], 'false,false': [1.187, 14, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.032, 0, 134], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.249, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.199, 115, 0]}]]
[{'': [0.10876158742364535, 6.564797015174839e-17], 'true': [4.772301956597688e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.07764343033603698, -1.544658121217609e-17], 'true': [0.07764343033603698, nan], 'true,true': [-1.908920782639075e-15, 0.0]}, {'': [0.033297269201114844, 0.055213511958012135], 'false': [6.863196879500968e-17, 0.10699208192785323], 'true': [1.697756979249797e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.0334308495571073, 7.628933319852811e-05], 'true': [0.0334308495571073, nan], 'true,true': [0.0334308495571073, nan]}, {'': [0.016702829801579534, 0.031194911236792768], 'false': [0.07767564677408385, -8.074349270001138e-18], 'false,true': [0.07767564677408385, nan], 'true': [7.702786294744449e-16, 5.551115123125783e-18], 'true,false': [5.551115123125783e-18, nan]}, {'': [0.023175065632182093, 0.00018979843414175534], 'true': [0.0011171007834344519, 0.002441420082920575], 'true,false': [0.002441420082920575, nan], 'true,false,true': [0.002441420082920575, nan]}, {'': [0.00763264115045222, 0.01915702471314643], 'false': [0.05335979692430822, -1.5139404881252134e-17], 'true': [-1.414797482708164e-16, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan], 'true,false,true': [2.7755575615628915e-18, 2.7755575615628915e-18], 'true,true': [-1.414797482708164e-16, nan]}, {'': [0.014402563430275838, 0.00028018286416077513], 'true': [0.014402563430275838, nan], 'true,true': [0.0011521106304932228, 0.00330301480611636]}, {'': [0.004196716452594613, 0.013346503723941534], 'false': [-3.431598439750484e-17, 0.040263234432112396], 'true': [-7.859986015045356e-17, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [1.3877787807814458e-18, 1.3877787807814458e-18], 'true,true': [-7.859986015045356e-17, nan]}, {'': [0.010106621442849625, 0.00034273897755724954], 'true': [0.0010539346603490542, 0.0036500908309453893], 'true,false': [0.0036500908309453893, nan], 'true,false,true': [0.0, 0.003647564816529509]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048766;  // std dev = 8.69e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 5.96e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.608829381756992;  // std dev = 0.285, 84.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.571931309489466;  // std dev = 0.141, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.15085381997332312;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5605336710319425;  // std dev = 0.049, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.16048818041825227;  // std dev = 0.180, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4286696311120062;  // std dev = 0.153, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.09792011190182975;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.18392177699255677;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10140879710434376;  // std dev = 0.009, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3295630692829158;  // std dev = 0.126, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( female(A) )
%   | | then return -0.08980079651769114;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.15871807959633902;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32181983829715016;  // std dev = 0.044, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( director(A) )
%   | | | then return -0.08873392157393951;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14223154179204886;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09270704879307931;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26041224994946593;  // std dev = 0.119, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( female(A) )
%   | | then return -0.08157880850525177;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.13917597448291552;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08505108255347815;  // std dev = 0.007, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.21419779639412484;  // std dev = 0.096, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0767427320460894;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12285243343275429;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.20958403633309408;  // std dev = 0.034, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( director(A) )
%   | | | then return -0.07564969669082448;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11222970711184506;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07879892283608847;  // std dev = 4.08e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.14341995563632104;  // std dev = 0.077, 69.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.18687550380850362;  // std dev = 0.007, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.11131330752200254;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07314637791528883;  // std dev = 0.006, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15651085606397683;  // std dev = 0.046, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.08886675733336566;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06845140301983997;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.1559043136535982;  // std dev = 0.016, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.09539705091248674;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06587976889611455;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1368694789731433;  // std dev = 0.043, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.0734540554545329;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09264592408868233;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06411453232578826;  // std dev = 0.005, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.31 seconds
Total inference time: 1.805 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097264
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.731 seconds
Refined model CLL: -0.097264


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 20.241 seconds
Total inference time: 1.805 seconds
AUC ROC: 1.0
Total revision time: 20.241
Best scored revision CLL: -0.097264


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:21:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095943, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 20.241, 'Inference time': 1.805, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.104385, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.755, 'Inference time': 1.686}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 8.16e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 4.41e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 6.66e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0.3086140920945859;  // std dev = 2.186, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3556587184923482;  // std dev = 2.810, 232.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10291491106002082;  // std dev = 0.100, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33433401054599493;  // std dev = 2.17e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( movie(E, F) )
%   | | then return -0.13896017659087298;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.1805818982916614;  // std dev = 1.870, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09258044354277074;  // std dev = 2.98e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2766171746829893;  // std dev = 0.030, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16489411536936094;  // std dev = 0.280, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08717993889335833;  // std dev = 0.158, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21423256489468367;  // std dev = 1.86e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10642329810967889;  // std dev = 6.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10642329810967889;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.11437013100607964;  // std dev = 1.552, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else return -0.07854462787567243;  // std dev = 7.45e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19270828435556991;  // std dev = 0.428, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.14553107387561928;  // std dev = 0.327, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07558981668340073;  // std dev = 0.193, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15361309260273528;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.0847290187102263;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0847290187102263;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0680889888286907;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0.07801973075139583;  // std dev = 1.352, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.146479386224211;  // std dev = 0.029, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07838528445180094;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13794518631455477;  // std dev = 0.328, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06671410119910282;  // std dev = 0.214, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10398
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.453 seconds
Total inference time: 1.766 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.718 seconds
Parameter learned model CLL: -0.106361


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [7.6e-08, 0, 202], 'true,false,true,true': [2.79e-08, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 172, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false': [0.0, 30, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 172, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [4.41e-08, 0, 173], 'true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.66e-08, 167, 0], 'false,false': [2.186, 17, 29]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [2.81, 30, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 172, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.17e-08, 0, 173], 'true,false,true': [7.45e-09, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.87, 17, 29], 'false,true,false': [0.0, 0, 0], 'false,false': [2.98e-08, 167, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.03, 0, 202], 'true,false,true,true': [0.28, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.158, 172, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.86e-07, 0, 173], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.45e-09, 11, 0], 'true,false,true,false': [5.27e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.552, 17, 29], 'false,false': [7.45e-08, 167, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.428, 0, 202], 'true,true,false': [0.327, 30, 0], 'true,false': [0.0, 0, 0], 'false': [0.193, 172, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [0.0, 0, 173], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 167, 0], 'false,false': [1.352, 17, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.029, 0, 202], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.328, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.214, 172, 0]}]]
[{'': [0.1125891795481624, -3.0982968129074136e-17], 'true': [5.768762805181012e-15, 2.590520390792032e-17], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [2.590520390792032e-17, nan]}, {'': [0.08037589672894596, 3.872871016134267e-17], 'true': [0.08037589672894596, nan], 'true,true': [-3.728590593592605e-15, -7.401486830834377e-18]}, {'': [0.038053295222553775, 0.052432070830948294], 'false': [2.6592168254494768e-17, 0.10386558047895365], 'true': [1.8893043841020003e-15, 1.5419764230904953e-17], 'true,false': [1.5419764230904953e-17, nan], 'true,false,true': [5.046468293750712e-18, -1.982541115402065e-18]}, {'': [0.03402637057416223, 5.807115590761432e-05], 'true': [0.03402637057416223, nan], 'true,true': [0.03402637057416223, nan]}, {'': [0.019121159094226965, 0.029056249673894842], 'false': [0.0760400172435246, 5.318433650898954e-18], 'false,true': [0.0760400172435246, nan], 'true': [4.928620132440001e-16, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.023054534579768114, 0.00014579099376508538], 'true': [0.0008835650357374705, 0.0026135960876271904], 'true,false': [0.0026135960876271904, nan], 'true,false,true': [0.0026135960876271904, nan]}, {'': [0.008776679593208542, 0.017615214476374312], 'false': [0.05238727833815083, 3.3240210318118456e-17], 'true': [2.0022519288037505e-16, 4.625929269271485e-18], 'true,true': [2.0022519288037505e-16, nan], 'true,false': [4.625929269271485e-18, nan], 'true,false,true': [3.784851220313033e-18, 3.96508223080413e-18]}, {'': [0.014133519554151167, 0.0002163322260842385], 'true': [0.014133519554151167, nan], 'true,true': [0.0009079005485713643, 0.0035740190556184455]}, {'': [0.004849014000334994, 0.012199025848880198], 'false': [-7.97765047634843e-18, 0.03974934958800386], 'true': [-1.6428733774800003e-16, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-2.523234146875356e-18, 0.0], 'true,true': [-1.6428733774800003e-16, nan]}, {'': [0.009845978524638872, 0.0002657143091784015], 'true': [0.0008298114974223546, 0.0039967169518216146], 'true,false': [0.0039967169518216146, nan], 'true,false,true': [0.0, 0.004138612228217649]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048788;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839116;  // std dev = 8.16e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462833;  // std dev = 5.72e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 6.66e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 1.75e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else return 0.41751358415830947;  // std dev = 2.98e-08, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.1015963294878364;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.32071184716015017;  // std dev = 1.39e-08, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.3207118471601498;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2.08e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(B) )
%   | then return -0.08518475138839679;  // std dev = 1.49e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253603;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.2097577156325355;  // std dev = 1.56e-08, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.20975771563253573;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 2.46e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109168;  // std dev = 3.25e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.06842697784420267;  // std dev = 3.16e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6.45e-09, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else return 0.13400703000801084;  // std dev = 6.97e-09, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.561 seconds
Total inference time: 1.927 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.886 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 25.618 seconds
Total inference time: 1.927 seconds
AUC ROC: 1.0
Total revision time: 25.618
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:21:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 25.618, 'Inference time': 1.927, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.10398, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.453, 'Inference time': 1.766}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 3.65e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 3.49e-08, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360675;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0.29059566530460296;  // std dev = 2.487, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3540200540879996;  // std dev = 3.270, 310.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10292002830642288;  // std dev = 0.112, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3346988020905808;  // std dev = 8.33e-09, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | else if ( movie(E, F) )
%   | | then return -0.13876422596469015;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.16938707033350914;  // std dev = 2.133, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09258001364735334;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27660884824179893;  // std dev = 0.031, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16168291680050206;  // std dev = 0.310, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08717936083965556;  // std dev = 0.177, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.2144484855299047;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10659159347486756;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10659159347486755;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.10731716353380114;  // std dev = 1.773, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | else return -0.0785443304642791;  // std dev = 8.16e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19266176981319197;  // std dev = 0.515, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.14213461012669826;  // std dev = 0.362, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07558417206280331;  // std dev = 0.215, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15375782942219807;  // std dev = 2.49e-07, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08511731411589214;  // std dev = 9.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08511731411589217;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06808910512107505;  // std dev = 4.47e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0.07307134826774167;  // std dev = 1.545, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14643196807053677;  // std dev = 0.030, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.0787188444717589;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.13486382454471413;  // std dev = 0.362, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06670407481270947;  // std dev = 0.238, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104968
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.87 seconds
Total inference time: 1.973 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.989 seconds
Parameter learned model CLL: -0.106225


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [6.58e-08, 0, 269], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false': [0.0, 41, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 228, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [3.49e-08, 0, 234], 'true,false,true,true': [1.39e-08, 16, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 221, 0], 'false,false': [2.487, 23, 35]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.27, 41, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.112, 228, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [8.33e-09, 0, 234], 'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.133, 23, 35], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 221, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.031, 0, 269], 'true,false,true,true': [0.31, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.177, 228, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [0.0, 0, 234], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.773, 23, 35], 'false,false': [8.16e-08, 221, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.515, 0, 269], 'true,true,false': [0.362, 41, 0], 'true,false': [0.0, 0, 0], 'false': [0.215, 228, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [2.49e-07, 0, 234], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.86e-09, 16, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.47e-08, 221, 0], 'false,false': [1.545, 23, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.03, 0, 269], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.362, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.238, 228, 0]}]]
[{'': [0.11476586888658057, -1.2855213969343918e-16], 'true': [4.226276495227362e-15, 4.603363760640893e-17], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}, {'': [0.08192980588947166, 5.843279076974508e-18], 'true': [0.08192980588947166, nan], 'true,true': [-4.5432472323694135e-15, -2.4370749321040022e-17]}, {'': [0.03887735717999874, 0.04890912135335041], 'false': [-5.425524283236059e-17, 0.10667933258016576], 'true': [1.2146029671112824e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [1.214306433183765e-17, -1.5419764230904951e-18]}, {'': [0.03449857144388289, 5.531878032484286e-05], 'true': [0.03449857144388289, nan], 'true,true': [0.03449857144388289, nan]}, {'': [0.019549177081011233, 0.027610212003221446], 'false': [0.07845438088260835, -3.114652829265145e-17], 'false,true': [0.07845438088260835, nan], 'true': [7.591268544445515e-17, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.023179245926248895, 0.00013778116306983597], 'true': [0.0009489837237890951, 0.0023385134520113363], 'true,false': [0.0023385134520113363, nan], 'true,false,true': [0.0023385134520113363, nan]}, {'': [0.008988243826347537, 0.016955214792946982], 'false': [0.05419722768590494, 3.014180157353366e-17], 'true': [-2.8846820468892957e-16, 4.440892098500626e-18], 'true,false': [4.440892098500626e-18, nan], 'true,false,true': [-6.938893903907228e-18, -3.0839528461809902e-18], 'true,true': [-2.8846820468892957e-16, nan]}, {'': [0.01414152223066467, 0.00020362385623635157], 'true': [0.01414152223066467, nan], 'true,true': [0.0009841020221756718, 0.0032030426942274725]}, {'': [0.004976204962239985, 0.011834518522076518], 'false': [9.042540472060099e-18, 0.0411442208169672], 'true': [2.65694399055593e-16, 3.3306690738754695e-18], 'true,true': [2.65694399055593e-16, nan], 'true,false': [3.3306690738754695e-18, nan], 'true,false,true': [6.071532165918825e-18, 0.0]}, {'': [0.009818287525287907, 0.00024936635402283383], 'true': [0.0009048867388571031, 0.0035893041851538018], 'true,false': [0.0035893041851538018, nan], 'true,false,true': [-2.3129646346357427e-18, 0.0037433073100286447]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.14185106490048813;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5987708335339055;  // std dev = 0.296, 133.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=114 */
%   | | else return 0.6144553494071954;  // std dev = 0.279, 177.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=155 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 3.65e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5824943394918951;  // std dev = 0.028, 234.000 (wgt'ed) examples reached here.  /* #pos=234 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.20824549136881187;  // std dev = 0.006, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360675;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5843938428608233;  // std dev = 0.008, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.17931057331530328;  // std dev = 0.213, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4403075600553585;  // std dev = 0.002, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return 0.43655388418158375;  // std dev = 0.001, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else if ( female(A) )
%   | | then return -0.17622588222394606;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.17910509292670784;  // std dev = 0.002, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return -0.09564260276782262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.3363234262047189;  // std dev = 1.63e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.3336655654522356;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( female(A) )
%   | | then return -0.15090102430247693;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.1525491117958286;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.33589957000338677;  // std dev = 4.71e-08, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.3332433769620462;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( director(A) )
%   | | | then return -0.08768384794296954;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.15569693174120156;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.09269127618926053;  // std dev = 9.88e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.26572272784444845;  // std dev = 0.001, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return 0.2639835433075124;  // std dev = 0.000631, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else if ( female(A) )
%   | | then return -0.13345108200313902;  // std dev = 0.001, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.13522680732162887;  // std dev = 0.002, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 8.56e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return -0.08091847017875427;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.21724945138262836;  // std dev = 1.23e-07, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.21597104285865765;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.11795876303440699;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11893835945629495;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return 0.21681610179781782;  // std dev = 0.000447, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( director(A) )
%   | | | then return -0.07510096321822;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12122714667634184;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.07877675473109146;  // std dev = 6.99e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.182531218504804;  // std dev = 0.000731, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | | else return 0.1816293139991564;  // std dev = 0.000759, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | | else if ( female(A) )
%   | | | then return -0.10685895766370225;  // std dev = 0.004, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10805868793291172;  // std dev = 0.005, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333663;  // std dev = 1.30e-07, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return -0.07004800584445496;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.15689053186546786;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.156183695323076;  // std dev = 5.16e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.09650101746179382;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09713079143791735;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420262;  // std dev = 8.30e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.15662773359009424;  // std dev = 0.000306, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( actor(A) )
%   | | | then return -0.09888297348979909;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06562015411331083;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13721172991119096;  // std dev = 0.000434, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return 0.13667624452563196;  // std dev = 0.000717, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.08888274949760377;  // std dev = 0.003, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08974786989292355;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 1.05e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return -0.06170958059050136;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096212
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 19.083 seconds
Total inference time: 1.928 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097718
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.22 seconds
Refined model CLL: -0.097718


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096212
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 34.162 seconds
Total inference time: 1.928 seconds
AUC ROC: 1.0
Total revision time: 34.162
Best scored revision CLL: -0.097718


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:22:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096212, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 34.162, 'Inference time': 1.928, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.104968, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.87, 'Inference time': 1.973}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- student(A), professor(B).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(G, D, H).;false;false
0;true,false;publication(I, A).;true;true
0;true,false,true;publication(I, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B).;false;false
1;;advisedby(A, B) :- student(A), professor(B).;true;false
1;true;tempadvisedby(C, B), ta(D, C, E).;true;true
1;true,true;ta(D, A, F).;false;false
1;true,false;tempadvisedby(G, B), publication(H, A).;true;true
1;true,false,true;publication(H, B).;false;false
1;true,false,false;publication(I, B).;false;false
2;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
2;true;publication(D, A), publication(D, B).;true;true
2;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
2;true,true,true;ta(H, G, I).;false;false
2;true,false;publication(J, A), tempadvisedby(K, B).;true;true
2;true,false,true;hasposition(L, C), publication(J, L).;false;false
2;true,false,false;hasposition(M, C), tempadvisedby(N, M).;false;false
2;false;student(B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,true;ta(D, A, F).;false;false
3;true,false;tempadvisedby(G, B), publication(H, B).;true;true
3;true,false,true;publication(H, I), student(I).;false;false
3;true,false,false;tempadvisedby(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B).;true;false
4;true,true,true;ta(F, E, G), ta(F, A, H).;false;false
4;true,false;tempadvisedby(I, B), publication(J, I).;false;true
4;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
4;false;professor(B).;true;false
4;false,true;publication(N, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
5;true,true,true;ta(G, F, H).;false;false
5;true,false;tempadvisedby(I, B), publication(J, A).;true;true
5;true,false,true;publication(J, K), ta(L, K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;publication(D, B), publication(D, A).;true;true
6;true,true;ta(E, A, F), tempadvisedby(G, B).;true;false
6;true,true,true;publication(H, G).;false;false
6;true,false;publication(I, A), tempadvisedby(J, B).;true;true
6;true,false,true;hasposition(K, C), publication(I, K).;false;false
6;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
6;false;professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;tempadvisedby(C, B), ta(D, C, E).;true;true
7;true,true;ta(D, A, F).;false;false
7;true,false;tempadvisedby(G, B), publication(H, B).;true;true
7;true,false,true;publication(H, A), publication(I, G).;false;false
7;true,false,false;publication(J, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;publication(D, B), publication(D, A).;true;true
8;true,true;publication(D, E), tempadvisedby(E, F).;false;true
8;true,true,false;ta(G, A, H).;false;false
8;true,false;publication(I, A), publication(J, B).;true;true
8;true,false,true;hasposition(K, C), publication(I, K).;false;false
8;true,false,false;hasposition(L, C), tempadvisedby(M, L).;false;false
8;false;student(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, A), publication(C, B).;true;true
9;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
9;true,true,true;ta(G, D, H).;false;false
9;true,false;publication(I, A), publication(J, B).;true;true
9;true,false,true;publication(I, K), publication(J, K).;false;false
9;true,false,false;tempadvisedby(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 5.58e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462832;  // std dev = 1.05e-08, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, A) )
%   | | then if ( genre(F, C), movie(E, F) )
%   | | | then return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360694;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0.30712539016606777;  // std dev = 2.850, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.3510781208874697;  // std dev = 3.747, 391.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10287329573698478;  // std dev = 0.126, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3353542168368773;  // std dev = 2.47e-08, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, F) )
%   | | then return -0.13841301280524526;  // std dev = 1.05e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, B) )
%   | | then return 0.18006863013912078;  // std dev = 2.446, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09258393967641276;  // std dev = 1.05e-07, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2775829153916314;  // std dev = 0.030, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.16301976043551145;  // std dev = 0.371, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0871179108356792;  // std dev = 0.200, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then return 0.21466966437313315;  // std dev = 1.84e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.10621814977223917;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10621814977223919;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.11390103836486545;  // std dev = 2.030, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.07855187637560009;  // std dev = 1.42e-07, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A), movie(D, E) )
%   | | then return 0.19331199254481754;  // std dev = 0.562, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.14372734387575575;  // std dev = 0.435, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07551677018646202;  // std dev = 0.243, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.15381522597138084;  // std dev = 1.40e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( genre(H, C), movie(F, H) )
%   | | | then return -0.08471737138241547;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08471737138241552;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06809951928682054;  // std dev = 9.77e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return 0.07758427380843265;  // std dev = 1.768, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14691129562911212;  // std dev = 0.029, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), movie(E, F) )
%   | | | then return -0.07837527580891294;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.139671861324443;  // std dev = 0.426, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06663498493800298;  // std dev = 0.269, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104147
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.015 seconds
Total inference time: 1.944 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.093 seconds
Parameter learned model CLL: -0.10675


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [5.58e-08, 0, 337], 'true,false,true,true': [5.58e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, A)', 'true,false,true': 'genre(F, C), movie(E, F)', 'false': 'actor(B)'}, {'true,true': [1.05e-08, 0, 288], 'true,false,true,true': [1.29e-08, 21, 0], 'true,false,true,false': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 275, 0], 'false,false': [2.85, 29, 49]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D), actor(D)'}, {'true,true,true': [3.747, 54, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.126, 283, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, A), movie(D, B)', 'true,false': 'movie(E, F)', 'false': 'director(B)', 'false,true': 'movie(G, B)'}, {'true,true': [2.47e-08, 0, 288], 'true,false,true': [1.05e-08, 33, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.446, 29, 49], 'false,true,false': [0.0, 0, 0], 'false,false': [1.05e-07, 275, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.03, 0, 337], 'true,false,true,true': [0.371, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.2, 283, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'director(B)'}, {'true,true,true': [1.84e-07, 0, 288], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 21, 0], 'true,false,true,false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.03, 29, 49], 'false,false': [1.42e-07, 275, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A), movie(D, E)'}, {'true,true,true': [0.562, 0, 337], 'true,true,false': [0.435, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.243, 283, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)', 'true,false,true': 'genre(H, C), movie(F, H)', 'false': 'actor(B)'}, {'true,true,true': [1.4e-07, 0, 288], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 21, 0], 'true,false,true,false': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [9.77e-08, 275, 0], 'false,false': [1.768, 29, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), movie(E, F)'}, {'true,true': [0.029, 0, 337], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.426, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.269, 283, 0]}]]
[{'': [0.11903375828258882, -1.69475740861508e-16], 'true': [3.204821834882351e-15, 5.756711979537848e-17], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [5.756711979537848e-17, nan]}, {'': [0.08497659456597553, -2.196907751908437e-17], 'true': [0.08497659456597553, nan], 'true,true': [-5.144582419153248e-15, -3.700743415417188e-17]}, {'': [0.041118452308721756, 0.053291831930187335], 'false': [-1.0981115007201549e-16, 0.10412266355706305], 'true': [9.868649107779169e-17, -1.1775092685418327e-17], 'true,false': [-1.1775092685418327e-17, nan], 'true,false,true': [7.93016446160826e-18, 6.938893903907228e-18]}, {'': [0.035902416142817285, 5.605334630026012e-05], 'true': [0.035902416142817285, nan], 'true,true': [0.035902416142817285, nan]}, {'': [0.020702671814500254, 0.02974554499494975], 'false': [0.07670450988546108, 4.0371746350005693e-17], 'false,true': [0.07670450988546108, nan], 'true': [6.167905692361981e-16, 3.3643121958338078e-18], 'true,false': [3.3643121958338078e-18, nan]}, {'': [0.024244922607062867, 0.0001408563297455404], 'true': [0.0009099730587807676, 0.002552466982666946], 'true,false': [0.002552466982666946, nan], 'true,false,true': [0.002552466982666946, nan]}, {'': [0.009497358080701238, 0.01805239446648395], 'false': [0.05284459409688287, 7.347657835701036e-17], 'true': [1.1719020815487764e-16, -1.1775092685418327e-17], 'true,true': [1.1719020815487764e-16, nan], 'true,false': [-1.1775092685418327e-17, nan], 'true,false,true': [-1.32169407693471e-18, -4.625929269271485e-18]}, {'': [0.01481172715481954, 0.00020898222443312627], 'true': [0.01481172715481954, nan], 'true,true': [0.0009362492267487893, 0.003497856311348785]}, {'': [0.00524797596299841, 0.012512961362044502], 'false': [3.47197018610049e-17, 0.04009507474297914], 'true': [6.78469626159818e-17, 1.4298326832293682e-17], 'true,true': [6.78469626159818e-17, nan], 'true,false': [1.4298326832293682e-17, nan], 'true,false,true': [1.057355261547768e-17, 1.1564823173178713e-18]}, {'': [0.010296318705124244, 0.0002565953203351157], 'true': [0.0008560462593017754, 0.003919990772403082], 'true,false': [0.003919990772403082, nan], 'true,false,true': [2.7755575615628915e-18, 0.00411510676689723]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
2;true;movie(D, A), movie(D, B).;true;true
2;true,false;genre(F, C), movie(E, F).;true;true
2;false;actor(B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
4;false;director(B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(D, B), movie(D, A).;true;true
6;true,false;genre(H, C), movie(G, H).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(D, E).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(D, B), movie(D, A).;true;true
8;true,false;genre(H, C), movie(F, H).;true;true
8;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;true,false;movie(D, F), movie(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048832;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5883654388203675;  // std dev = 0.306, 174.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=147 */
%   | | else return 0.6143453598148166;  // std dev = 0.279, 217.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283916;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5834529559260675;  // std dev = 0.052, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.20724253123330932;  // std dev = 0.012, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360694;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.5865611174445229;  // std dev = 0.015, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.18141751436429643;  // std dev = 0.230, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.44254114308658854;  // std dev = 0.004, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.43633206494763094;  // std dev = 0.002, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.17478726738151865;  // std dev = 0.002, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.17898820304162794;  // std dev = 0.002, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10142287898349811;  // std dev = 0.017, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.33793537949894004;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return 0.3335262200593633;  // std dev = 3.77e-07, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then return -0.14988345521923735;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.15267971022424479;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3372403254731729;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.3328356756368435;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.08705495535184785;  // std dev = 4.56e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1548306357701558;  // std dev = 0.006, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.09270586433848998;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2667581726367064;  // std dev = 0.003, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.26388080371787004;  // std dev = 0.001, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.1325723036883621;  // std dev = 0.001, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.13518822345552373;  // std dev = 0.001, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(B) )
%   | then return -0.0851971320790203;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.08038030307524992;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2166791766444102;  // std dev = 0.001, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.11732893783223136;  // std dev = 1.58e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1190345760297899;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2176157436513559;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.215496907231636;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( director(A) )
%   | | | then return -0.07463550645145256;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.12066912796016739;  // std dev = 0.005, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07878738570461855;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, E) )
%   | then return 0.1422577850648717;  // std dev = 0.100, 391.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07325544800810126;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.06964166068777951;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.16299111620459972;  // std dev = 5.96e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return 0.1612951011608885;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.11993536970727917;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.12149151255937297;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06843505018101591;  // std dev = 8.69e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.16233370995693072;  // std dev = 0.000492, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( actor(A) )
%   | | | then return -0.1229786605751751;  // std dev = 0.005, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06526247682659415;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14186338523432673;  // std dev = 0.002, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.14063787025538838;  // std dev = 0.000713, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( movie(D, E), movie(F, E) )
%   | | then if ( female(A) )
%   | | | then return -0.10830933366015537;  // std dev = 0.003, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11000425948656395;  // std dev = 0.005, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06419896226342355;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.06139242606499601;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.475 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.501 seconds
Refined model CLL: -0.101213


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 28.084 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0
Total revision time: 28.084
Best scored revision CLL: -0.101213


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:22:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.098374, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 28.084, 'Inference time': 1.793, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.104147, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.015, 'Inference time': 1.944}}


