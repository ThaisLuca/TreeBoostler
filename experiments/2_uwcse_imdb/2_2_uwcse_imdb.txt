Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( publication(C, F), tempadvisedby(G, F) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), ta(K, J, L) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( publication(M, B), ta(N, A, P) )
%   | | | then return 0.6689597459103223;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.48777856472914133;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   else return -0.14185106490048824;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.7301806128806487;  // std dev = 0.073, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6850239830148576;  // std dev = 0.965, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( publication(K, L), professor(L) )
%   | | | then return 0.04351452161288434;  // std dev = 1.897, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.6369425095119569;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.5951220401474769;  // std dev = 2.869, 57.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=47 */
%   | | | else return 0.3482639887142056;  // std dev = 2.484, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 2.11e-08, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then return 0.5662674264942258;  // std dev = 0.093, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.04822726950438876;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4963929231771323;  // std dev = 1.849, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.3339541099797575;  // std dev = 1.258, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5846649185045055;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.7260419127293717;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.28637443910958704;  // std dev = 4.128, 78.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=46 */
%   else return -0.11231637819360651;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( publication(E, C) )
%   | | | then return 0.46980371213645533;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3783452128525565;  // std dev = 0.892, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.04549536470686323;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.24735438240317834;  // std dev = 3.355, 53.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=36 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.17035174730941327;  // std dev = 2.323, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.5906769455609522;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.3477784908534995;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.5467090043888165;  // std dev = 0.924, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783645;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.01398541995525977;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3455757086175354;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(D, H), tempadvisedby(I, H) )
%   | | | then return 0.05536679280928383;  // std dev = 1.224, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.4488318213516395;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( publication(J, B), publication(J, A) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.2843606876077455;  // std dev = 0.990, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.40510772410301826;  // std dev = 0.074, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( projectmember(L, B), ta(M, A, N) )
%   | | | then return -0.08865338775462803;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20188662119659495;  // std dev = 4.425, 101.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=66 */
%   else return -0.09269127618926096;  // std dev = 2.58e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.3834880273107896;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16193375547893302;  // std dev = 0.936, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( ta(H, C, I) )
%   | | | then return 0.09184572106566453;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2023116615193996;  // std dev = 1.181, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.260721710299284;  // std dev = 0.949, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.0660059235242686;  // std dev = 2.669, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.12325142646636922;  // std dev = 2.102, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.2859548251110974;  // std dev = 2.435, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   else return -0.08518475138839678;  // std dev = 3.94e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.2567457393702547;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(C, F), tempadvisedby(G, F) )
%   | | | then return 0.15730626912283047;  // std dev = 1.375, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.26480114307184305;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then if ( publication(K, A), publication(L, B) )
%   | | | then return -0.24757358398542628;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2739013733477421;  // std dev = 1.682, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | else if ( publication(M, A), ta(N, A, P) )
%   | | | then return 0.14059065836447115;  // std dev = 1.675, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.010094033175658953;  // std dev = 4.056, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   else return -0.07877675473109161;  // std dev = 5.77e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( ta(E, C, F), publication(D, B) )
%   | | then return 0.19406006842653437;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(G, B), ta(H, C, I) )
%   | | | then return -0.16815515531825728;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05688885020435862;  // std dev = 2.137, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( ta(J, A, K), publication(L, B) )
%   | | then if ( ta(J, M, N), publication(P, M) )
%   | | | then return 0.1050287474281557;  // std dev = 2.234, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.28683192697460125;  // std dev = 0.929, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( publication(Q, A) )
%   | | | then return 0.17451806990784227;  // std dev = 1.372, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.08299200254665294;  // std dev = 2.918, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   else return -0.07324622576333703;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B), ta(F, A, G) )
%   | | | then return -0.0690344462841499;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17741161441649467;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.18568261613835685;  // std dev = 0.147, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( ta(I, H, J), ta(K, A, L) )
%   | | | then return -0.07672410543365994;  // std dev = 1.997, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.06151672056977876;  // std dev = 2.946, 51.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | else if ( ta(M, A, N), publication(P, B) )
%   | | | then return 0.23470680037622796;  // std dev = 1.254, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.058655562449679725;  // std dev = 2.362, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   else return -0.06842697784420261;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then if ( projectmember(G, B) )
%   | | then return -0.16730459623594657;  // std dev = 1.011, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(H, F, I), publication(J, B) )
%   | | | then return 0.16729228787738695;  // std dev = 0.937, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.28850903776218256;  // std dev = 1.202, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( ta(K, A, L) )
%   | | then if ( hasposition(M, C), tempadvisedby(N, M) )
%   | | | then return -0.11721922258895955;  // std dev = 2.216, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.14940314239897162;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(P, B), publication(Q, B) )
%   | | | then return 0.036672109870559175;  // std dev = 2.192, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | | else return 0.2085841368512725;  // std dev = 1.832, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else return -0.06435579584761172;  // std dev = 0.643, 181.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=1 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 7.60e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.65e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 5.27e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 5.77e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4.71e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10486013734771138;  // std dev = 0.579, 68.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05318079174369084;  // std dev = 0.510, 126.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064474
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.424 seconds
Total inference time: 1.727 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.674 seconds
Parameter learned model CLL: -0.065563


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [0.0, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [1.49e-08, 0, 65], 'true,false,true,true': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.69e-07, 0, 65], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 131, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [5.27e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [9.31e-10, 10, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 127, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false,true': [2.63e-09, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [4.94e-08, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.579, 10, 58], 'true,false': [0.0, 0, 0], 'false': [0.51, 119, 7]}]]
[{'': [0.07736560206308181, -3.552713678800501e-18], 'true': [-8.745141363201234e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.745141363201234e-16, nan], 'true,true,true': [-8.745141363201234e-16, nan]}, {'': [0.09915090450905271, 5.15460690004537e-17], 'true': [2.1862853408003084e-16, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan], 'true,false,true': [4.270088556250602e-18, nan]}, {'': [0.039127923480238386, 6.088319812460535e-17], 'true': [4.372570681600617e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.031139345171504046, -3.05099457148898e-17], 'true': [-3.006142343600424e-16, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan], 'true,true': [-3.006142343600424e-16, nan]}, {'': [0.023736408665978655, 1.101047627727428e-17], 'true': [0.023736408665978655, nan], 'true,true': [-2.7328566760003855e-16, 2.135044278125301e-18], 'true,true,false': [2.135044278125301e-18, nan]}, {'': [0.013386288741054499, 2.312964634635743e-17], 'true': [0.013386288741054499, nan], 'true,true': [-4.099285014000578e-17, 1.3877787807814458e-18]}, {'': [0.00730704551843139, 2.6225740739176926e-17], 'true': [-6.148927521000867e-17, -9.912705577010326e-19], 'true,false': [-9.912705577010326e-19, nan], 'true,true': [-6.148927521000867e-17, nan]}, {'': [0.006695181764065094, -6.00120553851436e-18], 'true': [0.006695181764065094, nan], 'true,true': [-1.3664283380001927e-17, 7.709882115452476e-19], 'true,true,false': [7.709882115452476e-19, nan]}, {'': [0.0042934076185577475, 1.8350793795457133e-17], 'true': [3.75767792950053e-17, 9.912705577010326e-19], 'true,true': [3.75767792950053e-17, nan], 'true,true,true': [3.75767792950053e-17, nan], 'true,false': [9.912705577010326e-19, nan]}, {'': [0.004927339840155981, 0.0020611341536556902], 'true': [0.004927339840155981, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1254446385283911;  // std dev = 7.45e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926108;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839683;  // std dev = 5.27e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109165;  // std dev = 5.58e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4.94e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.10923217124675651;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063431
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.667 seconds
Total inference time: 1.453 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.324 seconds
Refined model CLL: -0.064347


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063431
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.0889999999999995 seconds
Total inference time: 1.453 seconds
AUC ROC: 1.0
Total revision time: 7.0889999999999995
Best scored revision CLL: -0.064347


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063431, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.0889999999999995, 'Inference time': 1.453, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064474, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.424, 'Inference time': 1.727}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004883;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 2.20e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694897;  // std dev = 5.27e-09, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.08518475138839682;  // std dev = 3.48e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 7.15e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.15e-07, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11022316559720662;  // std dev = 0.720, 125.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=110 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04900418720156361;  // std dev = 0.852, 261.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.266 seconds
Total inference time: 1.67 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.168 seconds
Parameter learned model CLL: -0.065897


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [7.63e-07, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 130], 'true,false,true,true': [0.0, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.77e-07, 0, 130], 'true,false,true': [1.29e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 239, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.86e-07, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 222, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.2e-08, 0, 130], 'true,true,false,true': [0.0, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 239, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [5.27e-09, 0, 130], 'true,true,false': [3.48e-09, 27, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 248, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.11e-07, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 260, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 130], 'true,true,false,true': [0.0, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 234, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.72, 15, 110], 'true,false': [0.0, 0, 0], 'false': [0.852, 241, 20]}]]
[{'': [0.1352757544224812, -1.5338020902451963e-16], 'true': [4.481884948640632e-15, 1.3322676295501878e-17], 'true,true': [4.481884948640632e-15, nan], 'true,true,true': [4.481884948640632e-15, nan], 'true,false': [1.3322676295501878e-17, nan], 'true,false,true': [1.3322676295501878e-17, nan]}, {'': [0.10165692964228645, -5.824120784918854e-17], 'true': [-1.7490282726402467e-15, -4.11193712824132e-18], 'true,false': [-4.11193712824132e-18, nan], 'true,false,true': [-4.11193712824132e-18, nan]}, {'': [0.05337638401514788, -7.060832625231121e-17], 'true': [1.7490282726402467e-15, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.03742709756190461, -8.201647569302958e-17], 'true': [1.147799803920162e-15, -2.135044278125301e-18], 'true,true': [1.147799803920162e-15, nan], 'true,false': [-2.135044278125301e-18, nan]}, {'': [0.023118916244908177, 1.6723024638705287e-17], 'true': [0.023118916244908177, nan], 'true,true': [4.919142016800694e-16, -1.1102230246251566e-17], 'true,true,false': [-1.1102230246251566e-17, nan]}, {'': [0.016495943872349067, 2.4174211020063893e-17], 'true': [0.016495943872349067, nan], 'true,true': [2.7328566760003855e-17, 1.2335811384723961e-17]}, {'': [0.008893809759677195, 1.964240735875277e-17], 'true': [3.416070845000482e-16, -3.854941057726238e-18], 'true,true': [3.416070845000482e-16, nan], 'true,false': [-3.854941057726238e-18, nan]}, {'': [0.007242037598028623, 5.693451408334136e-17], 'true': [0.007242037598028623, nan], 'true,true': [-2.7328566760003855e-16, -1.3877787807814458e-18], 'true,true,false': [-1.3877787807814458e-18, nan]}, {'': [0.006055284824906985, 1.8978171361113787e-17], 'true': [-4.099285014000578e-17, -3.784851220313033e-18], 'true,false': [-3.784851220313033e-18, nan], 'true,true': [-4.099285014000578e-17, nan], 'true,true,true': [-4.099285014000578e-17, nan]}, {'': [0.0041482628462845735, 0.002779510840209987], 'true': [0.0041482628462845735, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1418510649004885;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839183;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360688;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.10159632948783655;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926057;  // std dev = 5.96e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694897;  // std dev = 5.96e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839678;  // std dev = 8.02e-08, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.0787767547310915;  // std dev = 7.88e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 1.12e-07, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420261;  // std dev = 6.83e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5.58e-08, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06419184008202625;  // std dev = 1.49e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.942 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.576 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.952 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0
Total revision time: 8.952
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.952, 'Inference time': 1.585, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.266, 'Inference time': 1.67}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.98e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360672;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 7.60e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.320711847160149;  // std dev = 2.86e-08, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 1.26e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256949106;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.08518475138839679;  // std dev = 3.61e-09, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.05e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.209757715632535;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 4.21e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333698;  // std dev = 9.42e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420296;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10750985486228418;  // std dev = 0.922, 187.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=162 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04835512649129688;  // std dev = 1.092, 413.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.024 seconds
Total inference time: 1.666 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065971
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.649 seconds
Parameter learned model CLL: -0.065971


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.08e-06, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.98e-07, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 195], 'true,false,true,true': [0.0, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.19e-07, 0, 195], 'true,false,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 325, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.92e-07, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 353, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.86e-08, 0, 195], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 315, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false': [3.61e-09, 39, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-07, 353, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.92e-07, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 353, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 195], 'true,true,false,true': [5.27e-09, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.42e-08, 360, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 355, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.922, 25, 162], 'true,false': [0.0, 0, 0], 'false': [1.092, 380, 33]}]]
[{'': [0.12901701323251977, 1.1262204745477093e-16], 'true': [5.975846598187509e-15, 3.489272363107635e-17], 'true,true': [5.975846598187509e-15, nan], 'true,true,true': [5.975846598187509e-15, nan], 'true,false': [3.489272363107635e-17, nan], 'true,false,true': [3.489272363107635e-17, nan]}, {'': [0.0719048914931317, -1.0935530092403944e-16], 'true': [-3.643808901333847e-15, -4.440892098500626e-18], 'true,false': [-4.440892098500626e-18, nan], 'true,false,true': [-4.440892098500626e-18, nan]}, {'': [0.0619167140786215, -4.3725706816006165e-17], 'true': [1.9676568067202775e-15, -5.693451408334136e-18], 'true,false': [-5.693451408334136e-18, nan]}, {'': [0.03476687285807131, 1.6354560136121285e-17], 'true': [4.372570681600617e-16, -1.5860328923216522e-18], 'true,true': [4.372570681600617e-16, nan], 'true,false': [-1.5860328923216522e-18, nan]}, {'': [0.02115564955201932, 5.075305255429287e-17], 'true': [0.02115564955201932, nan], 'true,true': [8.198570028001156e-16, -5.046468293750712e-18], 'true,true,false': [-5.046468293750712e-18, nan]}, {'': [0.01608928935222883, 3.145107718484863e-17], 'true': [0.01608928935222883, nan], 'true,true': [-3.643808901333847e-16, 1.2810265668751807e-17]}, {'': [0.007307045518431976, 5.0321723495757806e-18], 'true': [4.372570681600617e-16, 0.0], 'true,true': [4.372570681600617e-16, nan], 'true,false': [0.0, nan]}, {'': [0.006881020662125729, 2.4671622769447922e-17], 'true': [0.006881020662125729, nan], 'true,true': [-1.1842378929335003e-16, 9.912705577010326e-19], 'true,true,false': [9.912705577010326e-19, nan]}, {'': [0.006055284824906724, -4.065605442289306e-17], 'true': [-2.7784042872670584e-16, -3.3643121958338078e-18], 'true,false': [-3.3643121958338078e-18, nan], 'true,true': [-2.7784042872670584e-16, nan], 'true,true,true': [-2.7784042872670584e-16, nan]}, {'': [0.004549609883757526, 0.002888017242267326], 'true': [0.004549609883757526, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.1418510649004876;  // std dev = 2.04e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839127;  // std dev = 3.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839216;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360653;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783634;  // std dev = 8.16e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4.00e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926053;  // std dev = 1.81e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07877675473109147;  // std dev = 4.71e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14958630834872627;  // std dev = 0.078, 91.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=81 */
%   | | else return 0.13355863278725735;  // std dev = 0.095, 138.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=114 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333699;  // std dev = 1.00e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15758084100599912;  // std dev = 0.015, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.08349044702457993;  // std dev = 0.004, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06842697784420301;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1377721049142249;  // std dev = 0.013, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07725626702551809;  // std dev = 0.003, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.06419184008202604;  // std dev = 1.10e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.493 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.175 seconds
Refined model CLL: -0.065362


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.341000000000001 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0
Total revision time: 11.341000000000001
Best scored revision CLL: -0.065362


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.341000000000001, 'Inference time': 1.328, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064756, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.024, 'Inference time': 1.666}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.11e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360595;  // std dev = 0.000, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783623;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783565;  // std dev = 2.94e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601502;  // std dev = 8.33e-09, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 1.33e-07, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948795;  // std dev = 2.01e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.08518475138839679;  // std dev = 3.48e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.32e-07, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 2.21e-07, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333761;  // std dev = 0.000, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420322;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10333339535121973;  // std dev = 1.138, 252.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=213 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04638046934735732;  // std dev = 1.296, 523.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=47 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.059 seconds
Total inference time: 1.675 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.931 seconds
Parameter learned model CLL: -0.066068


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.07e-06, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-07, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 490, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.95e-07, 0, 260], 'true,false,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.33e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.94e-07, 464, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [8.33e-09, 0, 260], 'true,true,false,true': [0.0, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.33e-07, 482, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.01e-08, 0, 260], 'true,true,false': [3.48e-09, 40, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 446, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.86e-07, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.21e-07, 456, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [4.21e-08, 0, 260], 'true,true,false,true': [1.18e-08, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 482, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.39e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 479, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.138, 39, 213], 'true,false': [0.0, 0, 0], 'false': [1.296, 476, 47]}]]
[{'': [0.12177455369299721, 9.007894723125002e-17], 'true': [4.372570681600617e-15, 4.6474452193611206e-17], 'true,true': [4.372570681600617e-15, nan], 'true,true,true': [4.372570681600617e-15, nan], 'true,false': [4.6474452193611206e-17, nan], 'true,false,true': [4.6474452193611206e-17, nan]}, {'': [0.10288311542707874, -1.323204584451207e-16], 'true': [-4.481884948640632e-15, -3.633457171500512e-17], 'true,false': [-3.633457171500512e-17, nan], 'true,false,true': [-3.633457171500512e-17, nan]}, {'': [0.05337638401514586, -7.310110450206793e-18], 'true': [6.012284687200848e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.038835918014347146, 1.856752299804141e-16], 'true': [-4.099285014000578e-16, 2.0185873175002847e-17], 'true,false': [2.0185873175002847e-17, nan], 'true,true': [-4.099285014000578e-16, nan]}, {'': [0.021155649552018266, 3.685387633610478e-17], 'true': [0.021155649552018266, nan], 'true,true': [6.832141690000964e-17, -1.6401021954689813e-17], 'true,true,false': [-1.6401021954689813e-17, nan]}, {'': [0.013386288741054742, 3.8832912968951665e-17], 'true': [0.013386288741054742, nan], 'true,true': [4.099285014000578e-16, 1.2490009027033011e-17]}, {'': [0.00996791122342449, 1.0712678307786598e-16], 'true': [3.1427851774004433e-16, 0.0], 'true,true': [3.1427851774004433e-16, nan], 'true,false': [0.0, nan]}, {'': [0.007631791410529066, -5.0674079962144073e-17], 'true': [0.007631791410529066, nan], 'true,true': [6.832141690000964e-18, 3.2273925134452225e-18], 'true,true,false': [3.2273925134452225e-18, nan]}, {'': [0.0066172216722470666, -8.807614809134853e-17], 'true': [-1.708035422500241e-16, 3.885780586188048e-18], 'true,false': [3.885780586188048e-18, nan], 'true,true': [-1.708035422500241e-16, nan], 'true,true,true': [-1.708035422500241e-16, nan]}, {'': [0.005138607867472303, 0.0032129486269182814], 'true': [0.005138607867472303, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048735;  // std dev = 2.42e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1254446385283923;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.11231637819360608;  // std dev = 0.000, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783558;  // std dev = 3.08e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926074;  // std dev = 1.84e-07, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109146;  // std dev = 2.28e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 452.000 (wgt'ed) examples reached here.  /* #neg=452 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420322;  // std dev = 0.000, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080112;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06419184008202569;  // std dev = 2.00e-07, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.929 seconds
Total inference time: 1.4 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.037 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.956 seconds
Total inference time: 1.4 seconds
AUC ROC: 1.0
Total revision time: 12.956
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:08:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.956, 'Inference time': 1.4, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06487, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.059, 'Inference time': 1.675}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048807;  // std dev = 0.000, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360597;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783617;  // std dev = 5.05e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.27e-07, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926117;  // std dev = 7.88e-08, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948756;  // std dev = 2.11e-08, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 2.63e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109196;  // std dev = 0.000, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 1.07e-07, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420335;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10542065451425611;  // std dev = 1.230, 312.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=267 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.047675267574522714;  // std dev = 1.458, 708.000 (wgt'ed) examples reached here.  /* #neg=649 #pos=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.187 seconds
Total inference time: 1.702 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.448 seconds
Parameter learned model CLL: -0.066002


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.05e-06, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.99e-08, 71, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 559, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [0.0, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 326], 'true,false,true': [3.65e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 623, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [5.05e-08, 68, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.27e-07, 596, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 326], 'true,true,false,true': [0.0, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 548, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.11e-08, 0, 326], 'true,true,false': [2.63e-09, 55, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 605, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.46e-07, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.36e-08, 60, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 583, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [2.76e-07, 0, 326], 'true,true,false,true': [0.0, 70, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 563, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.67e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 551, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.23, 45, 267], 'true,false': [0.0, 0, 0], 'false': [1.458, 649, 59]}]]
[{'': [0.14685709572423197, -1.6206475636746471e-16], 'true': [3.400143152717044e-15, 6.880255363874209e-17], 'true,true': [3.400143152717044e-15, nan], 'true,true,true': [3.400143152717044e-15, nan], 'true,false': [6.880255363874209e-17, nan], 'true,false,true': [6.880255363874209e-17, nan]}, {'': [0.08350918641688662, -2.382200397208945e-16], 'true': [-5.056623150194578e-15, -3.2653618371328135e-17], 'true,false': [-3.2653618371328135e-17, nan], 'true,false,true': [-3.2653618371328135e-17, nan]}, {'': [0.054348124718891715, -8.411320507593482e-17], 'true': [-4.795073676908651e-16, 2.4671622769447922e-17], 'true,false': [2.4671622769447922e-17, nan]}, {'': [0.03848156401232063, 3.054976108028954e-16], 'true': [-9.372189459412364e-16, 3.7551661127027356e-17], 'true,false': [3.7551661127027356e-17, nan], 'true,true': [-9.372189459412364e-16, nan]}, {'': [0.0213809209695729, 1.134534477719138e-17], 'true': [0.0213809209695729, nan], 'true,true': [-6.102821043338284e-16, -9.912705577010326e-19], 'true,true,false': [-9.912705577010326e-19, nan]}, {'': [0.0143086841384076, 3.8169651094550836e-17], 'true': [0.0143086841384076, nan], 'true,true': [4.577115782503713e-16, 6.0557619525008536e-18]}, {'': [0.010929232126377227, -2.361366295943729e-17], 'true': [1.852642102441979e-16, 9.25185853854297e-18], 'true,true': [1.852642102441979e-16, nan], 'true,false': [9.25185853854297e-18, nan]}, {'': [0.009120007879660573, 2.0508560312791524e-17], 'true': [0.009120007879660573, nan], 'true,true': [2.343047364853091e-16, -2.3790493384824783e-18], 'true,true,false': [-2.3790493384824783e-18, nan]}, {'': [0.0059634816256032884, -9.994022145446056e-17], 'true': [-2.261313154451239e-16, 5.13992141030165e-18], 'true,false': [5.13992141030165e-18, nan], 'true,true': [-2.261313154451239e-16, nan], 'true,true,true': [-2.261313154451239e-16, nan]}, {'': [0.004848606458961751, 0.003000768841351651], 'true': [0.004848606458961751, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1418510649004883;  // std dev = 0.000, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.1254446385283923;  // std dev = 0.000, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360599;  // std dev = 0.000, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783508;  // std dev = 4.38e-07, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926132;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07877675473109193;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.13983618540911177;  // std dev = 0.089, 215.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333695;  // std dev = 1.41e-07, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15548583323915735;  // std dev = 0.044, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0756494969696178;  // std dev = 0.060, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420346;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13614480058833156;  // std dev = 0.039, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07142644456517605;  // std dev = 0.050, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0641918400820256;  // std dev = 2.26e-07, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.187 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.711 seconds
Refined model CLL: -0.06487


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.533 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0
Total revision time: 15.533
Best scored revision CLL: -0.06487


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:08:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063664, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.533, 'Inference time': 1.566, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064795, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.187, 'Inference time': 1.702}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.96e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8.43e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783663;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5.16e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 4.47e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4.59e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10666925482317828;  // std dev = 0.520, 58.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0426818851885338;  // std dev = 0.700, 129.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.24 seconds
Total inference time: 1.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.638 seconds
Parameter learned model CLL: -0.066211


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [0.0, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [1.05e-08, 0, 64], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.69e-07, 0, 64], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [5.27e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 128, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [9.31e-10, 6, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false,true': [2.63e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [4.47e-08, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.52, 8, 50], 'true,false': [0.0, 0, 0], 'false': [0.7, 115, 14]}]]
[{'': [0.11687363038714299, 2.9361270072731413e-17], 'true': [-8.881784197001252e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan], 'true,true': [-8.881784197001252e-16, nan], 'true,true,true': [-8.881784197001252e-16, nan]}, {'': [0.08934686307119757, 4.9343245538895844e-17], 'true': [1.1102230246251565e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.039618836130131584, 5.970947359328573e-17], 'true': [4.440892098500626e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.02111804884472477, -4.5231308410654523e-17], 'true': [-3.0531133177191805e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-3.0531133177191805e-16, nan]}, {'': [0.023982220015631408, 2.0816681711721685e-17], 'true': [0.023982220015631408, nan], 'true,true': [-2.498001805406602e-16, 2.135044278125301e-18], 'true,true,false': [2.135044278125301e-18, nan]}, {'': [0.0090782994287842, 1.5987211554602253e-17], 'true': [0.0090782994287842, nan], 'true,true': [-2.7755575615628914e-17, 1.1564823173178713e-18]}, {'': [0.007398722274039326, 2.590520390792032e-17], 'true': [-5.551115123125783e-17, -9.912705577010326e-19], 'true,false': [-9.912705577010326e-19, nan], 'true,true': [-5.551115123125783e-17, nan]}, {'': [0.006189775724810877, -5.894989511284017e-18], 'true': [0.006189775724810877, nan], 'true,true': [-1.3877787807814457e-17, 8.673617379884035e-19], 'true,true,false': [8.673617379884035e-19, nan]}, {'': [0.006504138105634278, 1.850371707708594e-17], 'true': [3.122502256758253e-17, 5.782411586589357e-19], 'true,true': [3.122502256758253e-17, nan], 'true,true,true': [3.122502256758253e-17, nan], 'true,false': [5.782411586589357e-19, nan]}, {'': [0.004670962200352871, 0.003800570596057786], 'true': [0.004670962200352871, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283913;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360621;  // std dev = 9.06e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783634;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926093;  // std dev = 5.77e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.08518475138839683;  // std dev = 5.05e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109164;  // std dev = 5.27e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936707;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420267;  // std dev = 4.47e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.504 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.335 seconds
Refined model CLL: -0.064203


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.717 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0
Total revision time: 6.717
Best scored revision CLL: -0.064203


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.717, 'Inference time': 1.407, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065228, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.24, 'Inference time': 1.757}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783652;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601498;  // std dev = 2.17e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 6.32e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08518475138839683;  // std dev = 2.95e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.02e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109151;  // std dev = 7.74e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.23e-07, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367141;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10427719949450552;  // std dev = 0.775, 120.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04437195307302247;  // std dev = 0.977, 270.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=27 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065128
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.507 seconds
Total inference time: 1.752 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066128
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.866 seconds
Parameter learned model CLL: -0.066128


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [7.54e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 235, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 129], 'true,false,true,true': [0.0, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.77e-07, 0, 129], 'true,false,true': [1.05e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.77e-07, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 218, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.17e-08, 0, 129], 'true,true,false,true': [9.13e-09, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 238, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false': [2.95e-09, 18, 0], 'true,false': [0.0, 0, 0], 'false': [8.02e-08, 246, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.09e-07, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 239, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 129], 'true,true,false,true': [3.73e-09, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.23e-07, 244, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 235, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.775, 18, 102], 'true,false': [0.0, 0, 0], 'false': [0.977, 243, 27]}]]
[{'': [0.1465373848837726, -2.1920999294726495e-16], 'true': [4.40646657835721e-15, 2.3790493384824782e-17], 'true,true': [4.40646657835721e-15, nan], 'true,true,true': [4.40646657835721e-15, nan], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [2.3790493384824782e-17, nan]}, {'': [0.10698002896699943, -6.761852166441283e-17], 'true': [-1.7625866313428842e-15, -5.742532885992189e-18], 'true,false': [-5.742532885992189e-18, nan], 'true,false,true': [-5.742532885992189e-18, nan]}, {'': [0.057249377286753104, -7.340317518182853e-17], 'true': [1.7625866313428842e-15, 4.827056628805028e-18], 'true,false': [4.827056628805028e-18, nan]}, {'': [0.02645405999752481, -8.352136515528701e-17], 'true': [1.1016166445893026e-15, -6.938893903907228e-18], 'true,true': [1.1016166445893026e-15, nan], 'true,false': [-6.938893903907228e-18, nan]}, {'': [0.023239981836061827, 1.679328944811161e-17], 'true': [0.023239981836061827, nan], 'true,true': [4.819572820078199e-16, 3.3306690738754695e-18], 'true,true,false': [3.3306690738754695e-18, nan]}, {'': [0.012447923323906967, 2.617599001148743e-17], 'true': [0.012447923323906967, nan], 'true,true': [1.3770208057366282e-17, 7.709882115452476e-18]}, {'': [0.010362246172922349, 2.508453695805793e-17], 'true': [3.3737009740547393e-16, -3.784851220313033e-18], 'true,true': [3.3737009740547393e-16, nan], 'true,false': [-3.784851220313033e-18, nan]}, {'': [0.0055349743977679885, 6.188128333976282e-17], 'true': [0.0055349743977679885, nan], 'true,true': [-2.685190571186425e-16, 9.912705577010326e-19], 'true,true,false': [9.912705577010326e-19, nan]}, {'': [0.005256337766230841, 1.8897413185109047e-17], 'true': [-4.475317618644042e-17, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,true': [-4.475317618644042e-17, nan], 'true,true,true': [-4.475317618644042e-17, nan]}, {'': [0.005008555993383375, 0.0035354512894471006], 'true': [0.005008555993383375, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.14185106490048846;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.1254446385283917;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1123163781936067;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1015963294878365;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0926912761892606;  // std dev = 5.16e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08518475138839678;  // std dev = 7.60e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109148;  // std dev = 7.60e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527814;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.22e-07, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367141;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420261;  // std dev = 6.99e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 5.58e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06419184008202626;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.843 seconds
Total inference time: 1.572 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.586 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.802000000000001 seconds
Total inference time: 1.572 seconds
AUC ROC: 1.0
Total revision time: 9.802000000000001
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.802000000000001, 'Inference time': 1.572, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065128, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.507, 'Inference time': 1.752}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004875;  // std dev = 2.53e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283921;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360668;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.320711847160149;  // std dev = 2.86e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 1.32e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.08518475138839682;  // std dev = 3.48e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.01e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 4.71e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 8.94e-08, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420287;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11441760680143756;  // std dev = 0.776, 172.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=155 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04452324992041949;  // std dev = 1.175, 393.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=39 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065132
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.313 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.776 seconds
Parameter learned model CLL: -0.066159


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.09e-06, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.65e-08, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.53e-07, 381, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 194], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 324, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.19e-07, 0, 194], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 327, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.04e-07, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 341, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.86e-08, 0, 194], 'true,true,false,true': [0.0, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-07, 319, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false': [3.48e-09, 24, 0], 'true,false': [0.0, 0, 0], 'false': [1.01e-07, 345, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.92e-07, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 363, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false,true': [9.13e-09, 37, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.94e-08, 377, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 322, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.776, 17, 155], 'true,false': [0.0, 0, 0], 'false': [1.175, 354, 39]}]]
[{'': [0.13202268431002456, 1.6784474073073233e-16], 'true': [6.15315358802561e-15, 3.700743415417188e-17], 'true,true': [6.15315358802561e-15, nan], 'true,true,true': [6.15315358802561e-15, nan], 'true,false': [3.700743415417188e-17, nan], 'true,false,true': [3.700743415417188e-17, nan]}, {'': [0.08480619231536606, -1.0965165675310187e-16], 'true': [-3.516087764586063e-15, -7.162729191130042e-18], 'true,false': [-7.162729191130042e-18, nan], 'true,false,true': [-7.162729191130042e-18, nan]}, {'': [0.05772171236009336, -3.8025987387772944e-17], 'true': [1.9777993675796604e-15, -1.2688263138573217e-17], 'true,false': [-1.2688263138573217e-17, nan]}, {'': [0.028900116431085237, -1.3023143983872805e-17], 'true': [4.76136884787696e-16, -2.05596856412066e-18], 'true,true': [4.76136884787696e-16, nan], 'true,false': [-2.05596856412066e-18, nan]}, {'': [0.02422018819829081, 5.429303819483524e-17], 'true': [0.02422018819829081, nan], 'true,true': [8.057701127176394e-16, -1.3877787807814457e-17], 'true,true,false': [-1.3877787807814457e-17, nan]}, {'': [0.011349306977792956, 2.960594732333751e-17], 'true': [0.011349306977792956, nan], 'true,true': [-3.57102663590772e-16, 1.1564823173178714e-17]}, {'': [0.010343305789837304, 6.116931265152378e-18], 'true': [4.3951097057325786e-16, -2.523234146875356e-18], 'true,true': [4.3951097057325786e-16, nan], 'true,false': [-2.523234146875356e-18, nan]}, {'': [0.008430424426004102, 2.120319834827885e-17], 'true': [0.008430424426004102, nan], 'true,true': [-1.2361246047372877e-16, 2.250452076942885e-18], 'true,true,false': [2.250452076942885e-18, nan]}, {'': [0.005673912927619475, -2.3445703625624425e-17], 'true': [-2.7469435660828616e-16, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan], 'true,true': [-2.7469435660828616e-16, nan], 'true,true,true': [-2.7469435660828616e-16, nan]}, {'': [0.0034988560436921556, 0.0035114389073492495], 'true': [0.0034988560436921556, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1418510649004878;  // std dev = 1.26e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.12544463852839205;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.1123163781936067;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783613;  // std dev = 1.58e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.092691276189261;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.0926912761892606;  // std dev = 1.48e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256949106;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839679;  // std dev = 1.01e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07877675473109147;  // std dev = 4.21e-08, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527714;  // std dev = 9.42e-08, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452773;  // std dev = 5.16e-08, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 9.19e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420305;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 8.69e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06419184008202598;  // std dev = 1.18e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.424 seconds
Total inference time: 1.499 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.232 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.745000000000001 seconds
Total inference time: 1.499 seconds
AUC ROC: 1.0
Total revision time: 11.745000000000001
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.745000000000001, 'Inference time': 1.499, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065132, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.313, 'Inference time': 1.693}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360606;  // std dev = 0.000, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783623;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783552;  // std dev = 3.22e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601502;  // std dev = 8.33e-09, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 1.30e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948795;  // std dev = 2.01e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.08518475138839679;  // std dev = 2.79e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.38e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 2.13e-07, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420326;  // std dev = 0.000, 440.000 (wgt'ed) examples reached here.  /* #neg=440 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10569290570943445;  // std dev = 1.086, 245.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=210 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04544329831675224;  // std dev = 1.320, 518.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=49 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.563 seconds
Total inference time: 1.704 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.256 seconds
Parameter learned model CLL: -0.066106


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.08e-06, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-07, 456, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [0.0, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 463, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.13e-07, 0, 259], 'true,false,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 453, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.33e-08, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.22e-07, 489, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [8.33e-09, 0, 259], 'true,true,false,true': [0.0, 45, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.3e-07, 499, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.01e-08, 0, 259], 'true,true,false': [2.79e-09, 52, 0], 'true,false': [0.0, 0, 0], 'false': [1.38e-07, 481, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.86e-07, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.13e-07, 500, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [4.21e-08, 0, 259], 'true,true,false,true': [7.45e-09, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 455, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.39e-08, 50, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 440, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.086, 35, 210], 'true,false': [0.0, 0, 0], 'false': [1.32, 469, 49]}]]
[{'': [0.12006489994592086, 1.947759692324836e-16], 'true': [4.499189523731908e-15, 4.7580986769649563e-17], 'true,true': [4.499189523731908e-15, nan], 'true,true,true': [4.499189523731908e-15, nan], 'true,false': [4.7580986769649563e-17, nan], 'true,false,true': [4.7580986769649563e-17, nan]}, {'': [0.07808133730087652, -1.2469027490390526e-16], 'true': [-4.499189523731908e-15, -2.100421938480026e-17], 'true,false': [-2.100421938480026e-17, nan], 'true,false,true': [-2.100421938480026e-17, nan]}, {'': [0.04776377343173967, -1.1763952578809606e-17], 'true': [6.584179790827183e-16, -1.0793834961633467e-17], 'true,false': [-1.0793834961633467e-17, nan]}, {'': [0.03893335261409266, 2.1250894704481525e-16], 'true': [-4.1151123692669897e-16, 2.0185873175002847e-17], 'true,false': [2.0185873175002847e-17, nan], 'true,true': [-4.1151123692669897e-16, nan]}, {'': [0.021553242616151477, 3.38184167821691e-17], 'true': [0.021553242616151477, nan], 'true,true': [8.230224738533979e-17, -3.7007434154171884e-18], 'true,true,false': [-3.7007434154171884e-18, nan]}, {'': [0.016130643322235315, 3.9700282793248843e-17], 'true': [0.016130643322235315, nan], 'true,true': [4.1151123692669897e-16, 7.472654973438553e-18]}, {'': [0.00982282756560237, 9.059419880941277e-17], 'true': [3.154919483104692e-16, 0.0], 'true,true': [3.154919483104692e-16, nan], 'true,false': [0.0, nan]}, {'': [0.008946945546886556, -4.880101207143545e-17], 'true': [0.008946945546886556, nan], 'true,true': [6.858520615444983e-18, 1.02798428206033e-18], 'true,true,false': [1.02798428206033e-18, nan]}, {'': [0.006634505040473709, -9.79014848987638e-17], 'true': [-1.7146301538612456e-16, 3.885780586188048e-18], 'true,false': [3.885780586188048e-18, nan], 'true,true': [-1.7146301538612456e-16, nan], 'true,true,true': [-1.7146301538612456e-16, nan]}, {'': [0.004810137808771475, 0.003364431975388912], 'true': [0.004810137808771475, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.12544463852839227;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360601;  // std dev = 0.000, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783627;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783547;  // std dev = 3.37e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.09269127618926064;  // std dev = 1.98e-07, 440.000 (wgt'ed) examples reached here.  /* #neg=440 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948795;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.08518475138839679;  // std dev = 1.49e-07, 513.000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253484;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109173;  // std dev = 1.88e-07, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527722;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333763;  // std dev = 0.000, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.0684269778442033;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.06419184008202569;  // std dev = 2.02e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.853 seconds
Total inference time: 1.45 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.496 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.168 seconds
Total inference time: 1.45 seconds
AUC ROC: 1.0
Total revision time: 14.168
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.168, 'Inference time': 1.45, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065068, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.563, 'Inference time': 1.704}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048827;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360633;  // std dev = 0.000, 665.000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783502;  // std dev = 4.55e-07, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926126;  // std dev = 0.000, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948756;  // std dev = 2.11e-08, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 2.28e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109193;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 1.19e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420339;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10972438698373535;  // std dev = 1.129, 302.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04709573871461029;  // std dev = 1.455, 684.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.782 seconds
Total inference time: 1.848 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.419 seconds
Parameter learned model CLL: -0.066006


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.04e-06, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.14e-08, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 589, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [0.0, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 575, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 324], 'true,false,true': [5.05e-08, 65, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 665, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.24e-08, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.55e-07, 635, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 324], 'true,true,false,true': [0.0, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 562, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.11e-08, 0, 324], 'true,true,false': [2.28e-09, 59, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-07, 585, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.49e-07, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 591, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [2.73e-07, 0, 324], 'true,true,false,true': [1.05e-08, 50, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.19e-07, 592, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.67e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 597, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.129, 37, 265], 'true,false': [0.0, 0, 0], 'false': [1.455, 625, 59]}]]
[{'': [0.1318359375000031, -2.4127087801701196e-16], 'true': [3.333410365294297e-15, 6.29126380620922e-17], 'true,true': [3.333410365294297e-15, nan], 'true,true,true': [3.333410365294297e-15, nan], 'true,false': [6.29126380620922e-17, nan], 'true,false,true': [6.29126380620922e-17, nan]}, {'': [0.08625163894808015, -2.2243076945533573e-16], 'true': [-5.000115547941446e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,false,true': [-3.561092720495785e-17, nan]}, {'': [0.06204396738832712, -1.6561522412453463e-16], 'true': [-4.386066270124075e-16, 3.928481471750554e-17], 'true,false': [3.928481471750554e-17, nan]}, {'': [0.028855156716376142, 3.258985382521719e-16], 'true': [-9.430042480766762e-16, 1.1102230246251566e-17], 'true,false': [1.1102230246251566e-17, nan], 'true,true': [-9.430042480766762e-16, nan]}, {'': [0.02147401988653541, -7.90194323576624e-18], 'true': [0.02147401988653541, nan], 'true,true': [-5.701886151161297e-16, -9.912705577010326e-19], 'true,true,false': [-9.912705577010326e-19, nan]}, {'': [0.015096241421319512, 3.7956342722227575e-17], 'true': [0.015096241421319512, nan], 'true,true': [4.605369583630279e-16, 5.645201820127915e-18]}, {'': [0.008763900905473482, -2.1791179501948926e-17], 'true': [1.9189039931792828e-16, 0.0], 'true,true': [1.9189039931792828e-16, nan], 'true,false': [0.0, nan]}, {'': [0.007258414333138655, 2.400482215405744e-17], 'true': [0.007258414333138655, nan], 'true,true': [2.3026847918151394e-16, 2.220446049250313e-18], 'true,true,false': [2.220446049250313e-18, nan]}, {'': [0.005989780245239591, -1.0414152324792088e-16], 'true': [-2.2478589634385887e-16, 5.13992141030165e-18], 'true,false': [5.13992141030165e-18, nan], 'true,true': [-2.2478589634385887e-16, nan], 'true,true,true': [-2.2478589634385887e-16, nan]}, {'': [0.004223145657966718, 0.0030961512920015134], 'true': [0.004223145657966718, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004883;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839233;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1123163781936057;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783522;  // std dev = 4.05e-07, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0926912761892614;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839678;  // std dev = 1.46e-07, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109204;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333695;  // std dev = 1.49e-07, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420343;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.06419184008202555;  // std dev = 2.36e-07, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.151 seconds
Total inference time: 1.554 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.395 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.747 seconds
Total inference time: 1.554 seconds
AUC ROC: 1.0
Total revision time: 15.747
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.747, 'Inference time': 1.554, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064978, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.782, 'Inference time': 1.848}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 6.45e-09, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253542;  // std dev = 5.96e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 4.08e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936709;  // std dev = 3.94e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3.41e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.1287912702687996;  // std dev = 0.196, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05694066190800048;  // std dev = 0.337, 82.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.899 seconds
Total inference time: 1.77 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.644 seconds
Parameter learned model CLL: -0.064473


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [2.46e-07, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 70, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.4e-07, 0, 40], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [6.45e-09, 0, 40], 'true,true,false,true': [2.63e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [5.96e-08, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.08e-08, 79, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 40], 'true,true,false,true': [1.86e-09, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 75, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [3.94e-08, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.41e-08, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.196, 1, 37], 'true,false': [0.0, 0, 0], 'false': [0.337, 79, 3]}]]
[{'': [0.113421550094519, 6.97854472621527e-17], 'true': [1.5099033134902129e-15, -6.938893903907228e-18], 'true,true': [1.5099033134902129e-15, nan], 'true,true,true': [1.5099033134902129e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.03237580555397557, -2.140188963132832e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.020217702556284307, 4.625929269271486e-17], 'true': [4.884981308350689e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01748891957462664, 4.4408920985006264e-17], 'true': [-3.3306690738754696e-16, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan], 'true,true': [-3.3306690738754696e-16, nan]}, {'': [0.019383985904920357, 1.33761810195802e-18], 'true': [0.019383985904920357, nan], 'true,true': [2.2204460492503132e-17, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.009573792011243682, 2.6122894697062506e-17], 'true': [0.009573792011243682, nan], 'true,true': [-2.2204460492503132e-17, 0.0]}, {'': [0.009442586834179877, 2.1080184011870062e-17], 'true': [8.881784197001253e-17, -1.1564823173178713e-18], 'true,true': [8.881784197001253e-17, nan], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.004067375611490083, -3.7007434154171884e-18], 'true': [0.004067375611490083, nan], 'true,true': [-7.216449660063518e-17, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.005548189641148366, 1.457167719820518e-17], 'true': [3.8857805861880476e-17, 5.782411586589357e-19], 'true,true': [3.8857805861880476e-17, nan], 'true,true,true': [3.8857805861880476e-17, nan], 'true,false': [5.782411586589357e-19, nan]}, {'': [0.0010065535373156517, 0.0013845957360019688], 'true': [0.0010065535373156517, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926107;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839678;  // std dev = 3.16e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253542;  // std dev = 5.96e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367091;  // std dev = 4.93e-09, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.15274385809367091;  // std dev = 4.93e-09, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.08621393187196422;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( female(A) )
%   | then return 0.1221366518270842;  // std dev = 0.049, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 3.73e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.02717362637966846;  // std dev = 0.262, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070584
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.707 seconds
Total inference time: 1.726 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.405 seconds
Refined model CLL: -0.064905


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.655 seconds
Total inference time: 1.77 seconds
AUC ROC: 1.0
Total revision time: 6.655
Best scored revision CLL: -0.064473


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067343, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.655, 'Inference time': 1.77, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067343, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.899, 'Inference time': 1.77}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2.98e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 4.21e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 6.99e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 6.99e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 5.58e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109151;  // std dev = 8.23e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333685;  // std dev = 7.60e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 6.91e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.12892500769800996;  // std dev = 0.277, 78.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05730993487056662;  // std dev = 0.435, 144.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067325
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.758 seconds
Total inference time: 1.943 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064483
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.223 seconds
Parameter learned model CLL: -0.064483


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [0.0, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 162, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [2.98e-08, 0, 81], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 155, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.42e-07, 0, 81], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 163, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [8.43e-08, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 142, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 140, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [9.31e-10, 7, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 147, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.23e-08, 161, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [3.65e-08, 0, 81], 'true,true,false,true': [2.63e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 153, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.91e-08, 172, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.277, 2, 76], 'true,false': [0.0, 0, 0], 'false': [0.435, 139, 5]}]]
[{'': [0.06420927467300822, -1.507710280355151e-16], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-7.894919286223335e-16, nan], 'true,true,true': [-7.894919286223335e-16, nan]}, {'': [0.06982829067706794, 1.1460366705808068e-17], 'true': [7.894919286223335e-16, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.036469968590482536, 2.996921048067907e-17], 'true': [1.4474018691409447e-15, -1.734723475976807e-18], 'true,false': [-1.734723475976807e-18, nan]}, {'': [0.028367475930898656, -5.160191522905657e-17], 'true': [8.77213254024815e-17, 0.0], 'true,true': [8.77213254024815e-17, nan], 'true,false': [0.0, nan]}, {'': [0.007663985347542327, 3.489272363107635e-17], 'true': [0.007663985347542327, nan], 'true,true': [-2.8509430755806487e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008481781359961178, 2.114710523095536e-17], 'true': [0.008481781359961178, nan], 'true,true': [-4.386066270124075e-17, 9.912705577010326e-19]}, {'': [0.008763900905473096, 4.206435062244382e-17], 'true': [-8.22387425648264e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.22387425648264e-17, nan]}, {'': [0.005127019130221479, 3.773307011797918e-17], 'true': [0.005127019130221479, nan], 'true,true': [1.644774851296528e-17, 8.673617379884035e-19], 'true,true,false': [8.673617379884035e-19, nan]}, {'': [0.0021936274780489937, 2.7755575615628914e-17], 'true': [-4.9343245538895844e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.9343245538895844e-17, nan], 'true,true,true': [-4.9343245538895844e-17, nan]}, {'': [0.00098142412885524, 0.0013166252176385143], 'true': [0.00098142412885524, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048813;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839122;  // std dev = 5.96e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360617;  // std dev = 9.77e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783646;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926079;  // std dev = 6.83e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 7.30e-08, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109154;  // std dev = 8.09e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333686;  // std dev = 7.45e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420265;  // std dev = 6.23e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03490759496299248;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.682 seconds
Total inference time: 1.655 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063627
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.578 seconds
Refined model CLL: -0.063627


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.241 seconds
Total inference time: 1.655 seconds
AUC ROC: 1.0
Total revision time: 8.241
Best scored revision CLL: -0.063627


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.241, 'Inference time': 1.655, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067325, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.758, 'Inference time': 1.943}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601499;  // std dev = 2.01e-08, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.32e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325354;  // std dev = 1.93e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 7.15e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1770964977452781;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333664;  // std dev = 1.30e-07, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936714;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.99e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11513094714229324;  // std dev = 0.653, 126.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=114 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05678253652725849;  // std dev = 0.550, 214.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.03 seconds
Total inference time: 1.885 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.362 seconds
Parameter learned model CLL: -0.064513


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [6.85e-07, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 122], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.69e-07, 0, 122], 'true,false,true': [7.45e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.53e-07, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.01e-08, 0, 122], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 232, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false': [2.28e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false': [8.16e-08, 230, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [1.93e-07, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 240, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 122], 'true,true,false,true': [3.73e-09, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.3e-07, 238, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.653, 12, 114], 'true,false': [0.0, 0, 0], 'false': [0.55, 206, 8]}]]
[{'': [0.09234429065744354, -2.0762612408574356e-16], 'true': [3.843919718046444e-15, -1.1895246692412391e-17], 'true,true': [3.843919718046444e-15, nan], 'true,true,true': [3.843919718046444e-15, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan]}, {'': [0.049985166735967514, -7.462154755677281e-17], 'true': [-1.3395477805313363e-15, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.03382124812670506, -7.401486830834377e-17], 'true': [1.8054774433248448e-15, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan]}, {'': [0.017241632916811477, -8.965181231714879e-17], 'true': [1.0192211373607994e-15, 3.0839528461809902e-18], 'true,true': [1.0192211373607994e-15, nan], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.012965723053545267, 1.7227598657976568e-17], 'true': [0.012965723053545267, nan], 'true,true': [3.9312815298202264e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010697428889379901, 2.896233977283017e-17], 'true': [0.010697428889379901, nan], 'true,true': [-5.0961056868039973e-17, 4.956352788505163e-18]}, {'': [0.005829178806094311, 2.1279274638648835e-17], 'true': [3.0576634120823983e-16, 0.0], 'true,true': [3.0576634120823983e-16, nan], 'true,false': [0.0, nan]}, {'': [0.00510977086037364, 7.09049998920268e-17], 'true': [0.00510977086037364, nan], 'true,true': [-2.620854353213484e-16, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.0025103493794673983, 2.096558501438064e-17], 'true': [-4.7320981377465686e-17, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan], 'true,true': [-4.7320981377465686e-17, nan], 'true,true,true': [-4.7320981377465686e-17, nan]}, {'': [0.003384911791357745, 0.001413617813542376], 'true': [0.003384911791357745, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1418510649004885;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839183;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360676;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783656;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926055;  // std dev = 5.77e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325354;  // std dev = 1.93e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109146;  // std dev = 7.45e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452781;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333666;  // std dev = 1.25e-07, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936714;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420261;  // std dev = 5.77e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1340070300080111;  // std dev = 4.71e-08, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06419184008202623;  // std dev = 3.33e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801129;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0943672559900038;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.044 seconds
Total inference time: 1.792 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.957 seconds
Refined model CLL: -0.063645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.393 seconds
Total inference time: 1.792 seconds
AUC ROC: 1.0
Total revision time: 9.393
Best scored revision CLL: -0.063645


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067129, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.393, 'Inference time': 1.792, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067317, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.03, 'Inference time': 1.885}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 1.93e-07, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360661;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783662;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601493;  // std dev = 2.84e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 1.37e-07, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.08518475138839687;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 3.94e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333698;  // std dev = 9.88e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420299;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11211296877713482;  // std dev = 0.815, 172.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=153 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057285956106763604;  // std dev = 0.616, 287.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.867 seconds
Total inference time: 1.875 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.809 seconds
Parameter learned model CLL: -0.064475


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.02e-06, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.93e-07, 334, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 163], 'true,false,true,true': [5.27e-09, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 300, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [5.53e-07, 0, 163], 'true,false,true': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 332, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [4.38e-07, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 317, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.84e-08, 0, 163], 'true,true,false,true': [1.05e-08, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.37e-07, 281, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false': [1.32e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false': [1.03e-07, 311, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.65e-07, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 317, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 163], 'true,true,false,true': [2.63e-09, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 316, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 321, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.815, 19, 153], 'true,false': [0.0, 0, 0], 'false': [0.616, 277, 10]}]]
[{'': [0.06386938775510828, 1.1168710666887802e-16], 'true': [6.3643705166242106e-15, -1.1564823173178714e-17], 'true,true': [6.3643705166242106e-15, nan], 'true,true,true': [6.3643705166242106e-15, nan], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan]}, {'': [0.045595494477773044, -1.0362081563168128e-16], 'true': [-2.7898610483832155e-15, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.03049622040788808, -3.7453306854824555e-17], 'true': [1.8744378918824727e-15, 8.540177112501205e-18], 'true,false': [8.540177112501205e-18, nan]}, {'': [0.020794931999740748, -4.3428282351267954e-17], 'true': [1.176972629786669e-15, -5.551115123125783e-18], 'true,true': [1.176972629786669e-15, nan], 'true,false': [-5.551115123125783e-18, nan]}, {'': [0.0153056037906992, 6.63763231804364e-17], 'true': [0.0153056037906992, nan], 'true,true': [8.064442092982732e-16, 6.1679056923619804e-18], 'true,true,false': [6.1679056923619804e-18, nan]}, {'': [0.0051660038941965586, 3.427054995627493e-17], 'true': [0.0051660038941965586, nan], 'true,true': [-2.3975368384543257e-16, 1.734723475976807e-18]}, {'': [0.006776367237401075, 4.9031931686915434e-18], 'true': [4.3046684144975393e-16, -8.673617379884035e-19], 'true,true': [4.3046684144975393e-16, nan], 'true,false': [-8.673617379884035e-19, nan]}, {'': [0.003711519428926389, 3.091760321740942e-17], 'true': [0.003711519428926389, nan], 'true,true': [-3.1603894688716113e-16, 6.30808536718839e-19], 'true,true,false': [6.30808536718839e-19, nan]}, {'': [0.0035630738690573508, -5.257130833116006e-17], 'true': [-2.424781575254943e-16, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan], 'true,true': [-2.424781575254943e-16, nan], 'true,true,true': [-2.424781575254943e-16, nan]}, {'': [0.0038600282804603743, 0.0013210471673901706], 'true': [0.0038600282804603743, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048768;  // std dev = 1.74e-07, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839213;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360699;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783662;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926046;  // std dev = 1.50e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109143;  // std dev = 3.65e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 7.74e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420294;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1340070300080108;  // std dev = 8.94e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   | else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.06419184008202593;  // std dev = 1.24e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0943672559900037;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.702 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063641
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.061 seconds
Refined model CLL: -0.063641


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.439 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0
Total revision time: 11.439
Best scored revision CLL: -0.063641


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067129, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.439, 'Inference time': 1.578, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067284, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.867, 'Inference time': 1.875}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 0.000, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783608;  // std dev = 1.79e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601491;  // std dev = 2.79e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926047;  // std dev = 1.95e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948845;  // std dev = 3.14e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 2.95e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1.21e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109144;  // std dev = 2.14e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333766;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420328;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11717882405697025;  // std dev = 0.804, 212.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.059003387985428056;  // std dev = 0.619, 382.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.336 seconds
Total inference time: 1.861 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.471 seconds
Parameter learned model CLL: -0.064389


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.08e-06, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.37e-07, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 204], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 415, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.36e-07, 0, 204], 'true,false,true': [1.29e-08, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 409, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.53e-07, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.79e-07, 381, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.79e-08, 0, 204], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.95e-07, 359, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [3.14e-08, 0, 204], 'true,true,false': [2.95e-09, 21, 0], 'true,false': [0.0, 0, 0], 'false': [1.21e-07, 377, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.04e-07, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.14e-07, 390, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 204], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 399, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 408, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.804, 18, 194], 'true,false': [0.0, 0, 0], 'false': [0.619, 372, 10]}]]
[{'': [0.10612366230678309, 1.5586417950169327e-16], 'true': [5.712206307091002e-15, 2.3790493384824782e-17], 'true,true': [5.712206307091002e-15, nan], 'true,true,true': [5.712206307091002e-15, nan], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [2.3790493384824782e-17, nan]}, {'': [0.07157758151446338, -1.284113377879699e-16], 'true': [-3.692035783851501e-15, -4.270088556250602e-18], 'true,false': [-4.270088556250602e-18, nan], 'true,false,true': [-4.270088556250602e-18, nan]}, {'': [0.03772461555382329, -1.737268302591932e-17], 'true': [1.9853399969767506e-15, 7.93016446160826e-18], 'true,false': [7.93016446160826e-18, nan]}, {'': [0.02191203798585977, 8.392237036536616e-17], 'true': [3.134747363647501e-16, -1.3877787807814458e-18], 'true,true': [3.134747363647501e-16, nan], 'true,false': [-1.3877787807814458e-18, nan]}, {'': [0.012135063365329343, 1.0638348759639383e-16], 'true': [0.012135063365329343, nan], 'true,true': [7.836868409118752e-16, -4.89804275569922e-18], 'true,true,false': [-4.89804275569922e-18, nan]}, {'': [0.009802882216526908, 3.8872530305177896e-17], 'true': [0.009802882216526908, nan], 'true,true': [9.752547353570003e-16, 1.057355261547768e-17]}, {'': [0.007315287159508512, 1.172850990116832e-16], 'true': [4.527968414157501e-16, 0.0], 'true,true': [4.527968414157501e-16, nan], 'true,false': [0.0, nan]}, {'': [0.004450045861328448, -6.344131569286608e-17], 'true': [0.004450045861328448, nan], 'true,true': [-6.966105252550002e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0036446215809237334, -1.0013776300540628e-16], 'true': [-1.2190684191962504e-16, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,true': [-1.2190684191962504e-16, nan], 'true,true,true': [-1.2190684191962504e-16, nan]}, {'': [0.0030521428896081353, 0.0010014253079033424], 'true': [0.0030521428896081353, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), genre(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.1418510649004874;  // std dev = 2.76e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839224;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360615;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783621;  // std dev = 1.37e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926078;  // std dev = 1.65e-07, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109146;  // std dev = 8.69e-08, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333714;  // std dev = 6.32e-08, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06842697784420322;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.134007030008011;  // std dev = 1.37e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06419184008202564;  // std dev = 1.88e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
%   | else return 0.13400703000801154;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.624 seconds
Total inference time: 1.728 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.829 seconds
Refined model CLL: -0.063655


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.260000000000002 seconds
Total inference time: 1.728 seconds
AUC ROC: 1.0
Total revision time: 13.260000000000002
Best scored revision CLL: -0.063655


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067473, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.260000000000002, 'Inference time': 1.728, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06721, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.336, 'Inference time': 1.861}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926082;  // std dev = 7.74e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 6.23e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 6.05e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633372;  // std dev = 2.11e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4.71e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10656410953400583;  // std dev = 0.552, 65.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04742116645902309;  // std dev = 0.629, 130.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065526
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.445 seconds
Total inference time: 1.44 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.723 seconds
Parameter learned model CLL: -0.065727


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [0.0, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [1.83e-08, 0, 67], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.88e-07, 0, 67], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.74e-08, 136, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [9.31e-10, 10, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.05e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [1.86e-09, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 151, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [5.37e-08, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.552, 9, 56], 'true,false': [0.0, 0, 0], 'false': [0.629, 119, 11]}]]
[{'': [0.09528888888888787, -3.6185046728523623e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-9.544603913195376e-16, nan], 'true,true,true': [-9.544603913195376e-16, nan]}, {'': [0.061141850684107026, 5.2867763077388404e-17], 'true': [3.1815346377317917e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.04654044422502281, 6.586068790149233e-17], 'true': [5.302557729552986e-16, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan]}, {'': [0.025677983095270987, -2.7078610356711135e-17], 'true': [-2.9164067512541426e-16, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan], 'true,true': [-2.9164067512541426e-16, nan]}, {'': [0.02070264282464641, 4.408238480129298e-17], 'true': [0.02070264282464641, nan], 'true,true': [-2.783842808015318e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.013090695199047483, 3.012233012548874e-17], 'true': [0.013090695199047483, nan], 'true,true': [-3.9769182971647396e-17, 1.3877787807814458e-18]}, {'': [0.011330096008150653, 2.9309887850104134e-17], 'true': [-6.628197161941232e-17, 1.0675221390626506e-18], 'true,false': [1.0675221390626506e-18, nan], 'true,true': [-6.628197161941232e-17, nan]}, {'': [0.002570809657541982, 2.9409881447024014e-18], 'true': [0.002570809657541982, nan], 'true,true': [-6.628197161941233e-18, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.00510676468450193, 1.9308226515220113e-17], 'true': [4.3083281552618016e-17, 0.0], 'true,true': [4.3083281552618016e-17, nan], 'true,true,true': [4.3083281552618016e-17, nan], 'true,false': [0.0, nan]}, {'': [0.004686041945776025, 0.0030426730689587177], 'true': [0.004686041945776025, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783667;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926086;  // std dev = 7.30e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.08518475138839682;  // std dev = 6.05e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0787767547310916;  // std dev = 6.50e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420267;  // std dev = 5.37e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.58e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.688 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.234 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.09 seconds
Total inference time: 1.116 seconds
AUC ROC: 1.0
Total revision time: 7.09
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.09, 'Inference time': 1.116, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065526, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.445, 'Inference time': 1.44}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360686;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716015005;  // std dev = 1.79e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 6.99e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 1.12e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 7.60e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109147;  // std dev = 6.32e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333668;  // std dev = 1.26e-07, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 6.83e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10547840476777844;  // std dev = 0.799, 132.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=113 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048366074789665814;  // std dev = 0.871, 263.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065471
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.324 seconds
Total inference time: 1.444 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.385 seconds
Parameter learned model CLL: -0.065701


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [8e-07, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.92e-07, 0, 134], 'true,false,true': [1.39e-08, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 267, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [4e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [1.79e-08, 0, 134], 'true,true,false,true': [0.0, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 249, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [1.12e-08, 0, 134], 'true,true,false': [2.28e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 233, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.19e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 280, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [0.0, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.26e-07, 250, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.83e-08, 245, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.799, 19, 113], 'true,false': [0.0, 0, 0], 'false': [0.871, 242, 21]}]]
[{'': [0.11712799167534296, -1.6608214352116162e-16], 'true': [4.772301956597688e-15, 5.28677630773884e-18], 'true,true': [4.772301956597688e-15, nan], 'true,true,true': [4.772301956597688e-15, nan], 'true,false': [5.28677630773884e-18, nan], 'true,false,true': [5.28677630773884e-18, nan]}, {'': [0.10206150719285495, -5.181040781584064e-17], 'true': [-1.908920782639075e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan], 'true,false,true': [-5.9476233462061954e-18, nan]}, {'': [0.04247981919506112, -9.314230618578093e-17], 'true': [1.8028696280480155e-15, 1.214306433183765e-17], 'true,false': [1.214306433183765e-17, nan]}, {'': [0.0357083024086524, -6.818692592186001e-17], 'true': [1.193075489149422e-15, -2.220446049250313e-18], 'true,true': [1.193075489149422e-15, nan], 'true,false': [-2.220446049250313e-18, nan]}, {'': [0.024433197617216556, 1.9618398828717626e-17], 'true': [0.024433197617216556, nan], 'true,true': [3.3140985809706167e-16, -1.1895246692412391e-17], 'true,true,false': [-1.1895246692412391e-17, nan]}, {'': [0.009921532557452045, 2.4777509562449847e-17], 'true': [0.009921532557452045, nan], 'true,true': [1.0605115459105973e-16, 4.956352788505163e-18]}, {'': [0.010084948654400275, 1.4274296030894868e-17], 'true': [3.579226467448266e-16, -3.784851220313033e-18], 'true,true': [3.579226467448266e-16, nan], 'true,false': [-3.784851220313033e-18, nan]}, {'': [0.005971895619297397, 6.394884621840901e-17], 'true': [0.005971895619297397, nan], 'true,true': [-2.783842808015318e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006301697979529653, 1.9032394707859827e-17], 'true': [-4.3083281552618016e-17, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan], 'true,true': [-4.3083281552618016e-17, nan], 'true,true,true': [-4.3083281552618016e-17, nan]}, {'': [0.004840458829738581, 0.0028861939521671034], 'true': [0.004840458829738581, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048818;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.12544463852839183;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.1123163781936068;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783655;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926055;  // std dev = 6.66e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.08518475138839678;  // std dev = 7.30e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.07877675473109148;  // std dev = 7.74e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14623232635380484;  // std dev = 0.082, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | else return 0.14309933776262657;  // std dev = 0.086, 81.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.22e-07, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1569976347101343;  // std dev = 0.002, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08366702078534821;  // std dev = 0.000562, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06842697784420262;  // std dev = 6.66e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13731919961320857;  // std dev = 0.002, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07750490372268486;  // std dev = 0.000403, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06419184008202626;  // std dev = 1.49e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.08 seconds
Total inference time: 1.188 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.972 seconds
Refined model CLL: -0.065035


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.761 seconds
Total inference time: 1.188 seconds
AUC ROC: 1.0
Total revision time: 9.761
Best scored revision CLL: -0.065035


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.761, 'Inference time': 1.188, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065471, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.324, 'Inference time': 1.444}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048743;  // std dev = 2.67e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936063;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 1.07e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014906;  // std dev = 2.84e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.98e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694885;  // std dev = 3.09e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 2.98e-08, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420303;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11186779451923048;  // std dev = 0.856, 188.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=167 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046978538709442304;  // std dev = 1.120, 403.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=35 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.17 seconds
Total inference time: 1.442 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065815
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.699 seconds
Parameter learned model CLL: -0.065815


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.08e-06, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.67e-07, 383, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 371, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.36e-07, 0, 202], 'true,false,true': [7.45e-09, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 393, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.67e-07, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.07e-07, 367, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.84e-08, 0, 202], 'true,true,false,true': [0.0, 33, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.98e-07, 376, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [3.09e-08, 0, 202], 'true,true,false': [3.73e-09, 38, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 363, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.01e-07, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 364, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [0.0, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 396, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 376, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.856, 21, 167], 'true,false': [0.0, 0, 0], 'false': [1.12, 368, 35]}]]
[{'': [0.09491737802490961, 1.855202965431071e-16], 'true': [5.768762805181012e-15, 9.25185853854297e-18], 'true,true': [5.768762805181012e-15, nan], 'true,true,true': [5.768762805181012e-15, nan], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.07632782825147176, -1.1970059564691714e-16], 'true': [-3.728590593592605e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan], 'true,false,true': [-5.9476233462061954e-18, nan]}, {'': [0.04231419952507564, -2.2599959788807256e-17], 'true': [2.0049968286299855e-15, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}, {'': [0.02473049532765968, 3.146136091580825e-17], 'true': [3.5175382958420803e-16, -2.413528314402514e-18], 'true,true': [3.5175382958420803e-16, nan], 'true,false': [-2.413528314402514e-18, nan]}, {'': [0.020628948505304185, 1.0393577251809976e-16], 'true': [0.020628948505304185, nan], 'true,true': [8.090338080436785e-16, -5.046468293750712e-18], 'true,true,false': [-5.046468293750712e-18, nan]}, {'': [0.015437673133464431, 3.1808042578792365e-17], 'true': [0.015437673133464431, nan], 'true,true': [9.673230313565721e-16, 1.3147377923192643e-17]}, {'': [0.009827997603203043, 2.4400506035717728e-18], 'true': [4.484861327198652e-16, 0.0], 'true,true': [4.484861327198652e-16, nan], 'true,false': [0.0, nan]}, {'': [0.00633176763678057, -5.607186993056347e-17], 'true': [0.00633176763678057, nan], 'true,true': [-8.35415345262494e-17, -1.0675221390626506e-18], 'true,true,false': [-1.0675221390626506e-18, nan]}, {'': [0.004942091049014879, -5.196788625904988e-17], 'true': [-1.187169174846702e-16, -4.803849625781927e-18], 'true,false': [-4.803849625781927e-18, nan], 'true,true': [-1.187169174846702e-16, nan], 'true,true,true': [-1.187169174846702e-16, nan]}, {'': [0.0038978257105059355, 0.0031153591384220523], 'true': [0.0038978257105059355, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.14185106490048743;  // std dev = 2.75e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.12544463852839222;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360628;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1015963294878363;  // std dev = 1.05e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.09269127618926054;  // std dev = 1.56e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07877675473109148;  // std dev = 3.65e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527814;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #pos=100 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.17709649774527816;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333757;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420311;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134007030008011;  // std dev = 1.38e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06419184008202622;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06419184008202598;  // std dev = 1.19e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.671 seconds
Total inference time: 1.167 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.971 seconds
Refined model CLL: -0.06406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.511 seconds
Total inference time: 1.167 seconds
AUC ROC: 1.0
Total revision time: 11.511
Best scored revision CLL: -0.06406


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.511, 'Inference time': 1.167, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065558, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.17, 'Inference time': 1.442}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004876;  // std dev = 1.03e-07, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 545.000 (wgt'ed) examples reached here.  /* #neg=545 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360578;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783551;  // std dev = 3.26e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926117;  // std dev = 7.30e-08, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694879;  // std dev = 2.04e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0851847513883968;  // std dev = 3.61e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.44e-07, 513.000 (wgt'ed) examples reached here.  /* #neg=513 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109146;  // std dev = 2.30e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420325;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10981740413088062;  // std dev = 1.034, 254.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=223 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04761520731085918;  // std dev = 1.287, 550.000 (wgt'ed) examples reached here.  /* #neg=504 #pos=46 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.185 seconds
Total inference time: 1.507 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.206 seconds
Parameter learned model CLL: -0.065767


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.07e-06, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.03e-07, 505, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 545, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.58e-07, 0, 269], 'true,false,true': [0.0, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 529, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.26e-07, 487, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 520, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.04e-08, 0, 269], 'true,true,false': [3.61e-09, 37, 0], 'true,false': [0.0, 0, 0], 'false': [1.44e-07, 513, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.86e-07, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.3e-07, 477, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [9.42e-08, 0, 269], 'true,true,false,true': [1.05e-08, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 498, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.034, 31, 223], 'true,false': [0.0, 0, 0], 'false': [1.287, 504, 46]}]]
[{'': [0.13397460937500397, 2.110522977505248e-17], 'true': [4.226276495227362e-15, 5.659960517696876e-17], 'true,true': [4.226276495227362e-15, nan], 'true,true,true': [4.226276495227362e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.08044971118992354, -1.7600599876626336e-16], 'true': [-4.5432472323694135e-15, -2.4980018054066023e-17], 'true,false': [-2.4980018054066023e-17, nan], 'true,false,true': [-2.4980018054066023e-17, nan]}, {'': [0.052074030011618165, -5.036928656144378e-18], 'true': [4.754561057130781e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.025602826479317182, 2.1885299869407602e-16], 'true': [-5.018703338082492e-16, -1.0408340855860843e-17], 'true,false': [-1.0408340855860843e-17, nan], 'true,true': [-5.018703338082492e-16, nan]}, {'': [0.017410877668903094, 1.0248212535001446e-17], 'true': [0.017410877668903094, nan], 'true,true': [-2.641422809517101e-17, -9.516197353929913e-18], 'true,true,false': [-9.516197353929913e-18, nan]}, {'': [0.012313471505016405, 4.0686535795229906e-17], 'true': [0.012313471505016405, nan], 'true,true': [4.2262764952273615e-16, 1.350271246165731e-17]}, {'': [0.009554504251251848, 1.1078955130431331e-16], 'true': [3.037636230944666e-16, 0.0], 'true,true': [3.037636230944666e-16, nan], 'true,false': [0.0, nan]}, {'': [0.006384738322336708, -5.808007774699008e-17], 'true': [0.006384738322336708, nan], 'true,true': [3.3017785118963765e-17, 3.1720657846433043e-18], 'true,true,false': [3.1720657846433043e-18, nan]}, {'': [0.005092262945176232, -9.36332671370614e-17], 'true': [-1.815978181543007e-16, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,true': [-1.815978181543007e-16, nan], 'true,true,true': [-1.815978181543007e-16, nan]}, {'': [0.004209218516672419, 0.0030106851311126103], 'true': [0.004209218516672419, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.14185106490048727;  // std dev = 2.70e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839233;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360592;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.10159632948783538;  // std dev = 3.59e-07, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.09269127618926122;  // std dev = 5.16e-08, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839679;  // std dev = 1.44e-07, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109164;  // std dev = 2.08e-07, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333763;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420332;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801129;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.0641918400820256;  // std dev = 2.20e-07, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.862 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.429 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.682 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0
Total revision time: 13.682
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.682, 'Inference time': 1.239, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065519, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.185, 'Inference time': 1.507}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048885;  // std dev = 0.000, 663.000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360625;  // std dev = 5.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360628;  // std dev = 0.000, 657.000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783498;  // std dev = 4.64e-07, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926158;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694875;  // std dev = 2.14e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 3.09e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109225;  // std dev = 0.000, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 2.17e-07, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684269778442034;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10907635452498801;  // std dev = 1.172, 318.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=278 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04450542032560809;  // std dev = 1.445, 594.000 (wgt'ed) examples reached here.  /* #neg=535 #pos=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065694
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.992 seconds
Total inference time: 1.571 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065938
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.83 seconds
Parameter learned model CLL: -0.065938


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.04e-06, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 663, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 648, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [5.67e-08, 71, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 657, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [4.21e-08, 59, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.64e-07, 638, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 49, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 643, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.14e-08, 0, 337], 'true,true,false': [3.09e-09, 46, 0], 'true,false': [0.0, 0, 0], 'false': [1.55e-07, 643, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.49e-07, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.97e-08, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 649, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [2.92e-07, 0, 337], 'true,true,false,true': [7.45e-09, 54, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.17e-07, 640, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.39e-08, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 587, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.172, 40, 278], 'true,false': [0.0, 0, 0], 'false': [1.445, 535, 59]}]]
[{'': [0.11416595812520232, -4.715517401726155e-16], 'true': [3.204821834882351e-15, 5.659960517696876e-17], 'true,true': [3.204821834882351e-15, nan], 'true,true,true': [3.204821834882351e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.074189913664195, -3.097659303275128e-16], 'true': [-5.144582419153248e-15, -2.960594732333751e-17], 'true,false': [-2.960594732333751e-17, nan], 'true,false,true': [-2.960594732333751e-17, nan]}, {'': [0.0640779073425215, -1.595206294134167e-16], 'true': [-5.90361916952012e-16, 4.5347137625534564e-17], 'true,false': [4.5347137625534564e-17, nan]}, {'': [0.034167262664065674, 3.3689526264487507e-16], 'true': [-9.90964646312306e-16, 3.010774304068221e-17], 'true,false': [3.010774304068221e-17, nan], 'true,true': [-9.90964646312306e-16, nan]}, {'': [0.01894082443400733, -5.663346066517129e-17], 'true': [0.01894082443400733, nan], 'true,true': [-8.012054587205877e-16, -3.398641912117826e-18], 'true,true,false': [-3.398641912117826e-18, nan]}, {'': [0.012242202056565017, 3.729520580389328e-17], 'true': [0.012242202056565017, nan], 'true,true': [4.743979689792954e-16, 1.0860877414811314e-17]}, {'': [0.010301672089948895, -6.021548608136442e-17], 'true': [1.8448809904750377e-16, 6.817158923136926e-18], 'true,true': [1.8448809904750377e-16, nan], 'true,false': [6.817158923136926e-18, nan]}, {'': [0.007460021707936865, 7.355227538141662e-17], 'true': [0.007460021707936865, nan], 'true,true': [2.530122501222909e-16, 1.02798428206033e-18], 'true,true,false': [1.02798428206033e-18, nan]}, {'': [0.0054213455599394665, -1.0742873560257051e-16], 'true': [-2.319278959454333e-16, 3.96508223080413e-18], 'true,false': [3.96508223080413e-18, nan], 'true,true': [-2.319278959454333e-16, nan], 'true,true,true': [-2.319278959454333e-16, nan]}, {'': [0.004319693131276696, 0.0035142710290142895], 'true': [0.004319693131276696, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1418510649004884;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.12544463852839233;  // std dev = 0.000, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360568;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783508;  // std dev = 4.40e-07, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0926912761892616;  // std dev = 0.000, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.08518475138839678;  // std dev = 1.49e-07, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109222;  // std dev = 0.000, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333686;  // std dev = 1.71e-07, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420339;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.06419184008202541;  // std dev = 2.42e-07, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.189 seconds
Total inference time: 1.124 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.501 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.512 seconds
Total inference time: 1.124 seconds
AUC ROC: 1.0
Total revision time: 16.512
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:12:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.512, 'Inference time': 1.124, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065694, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.992, 'Inference time': 1.571}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783641;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 6.32e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 5.16e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 5.48e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.11232902859191315;  // std dev = 0.495, 64.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04906215534232874;  // std dev = 0.602, 131.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065033
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.923 seconds
Total inference time: 1.424 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.856 seconds
Parameter learned model CLL: -0.065828


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [0.0, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [1.83e-08, 0, 67], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [1.88e-07, 0, 67], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 136, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [1.61e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.48e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false,true': [0.0, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [5.37e-08, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.73e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.495, 7, 57], 'true,false': [0.0, 0, 0], 'false': [0.602, 121, 10]}]]
[{'': [0.11300387923764449, 1.4560301962297136e-17], 'true': [-9.544603913195376e-16, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan], 'true,true': [-9.544603913195376e-16, nan], 'true,true,true': [-9.544603913195376e-16, nan]}, {'': [0.06802545256557097, 5.82058673104451e-17], 'true': [3.1815346377317917e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05037716793983092, 6.422777828409996e-17], 'true': [5.302557729552986e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.044980895993013845, -3.7551661127027356e-17], 'true': [-2.9164067512541426e-16, -9.25185853854297e-18], 'true,false': [-9.25185853854297e-18, nan], 'true,true': [-2.9164067512541426e-16, nan]}, {'': [0.016285075257554536, 3.0982968129074136e-17], 'true': [0.016285075257554536, nan], 'true,true': [-2.783842808015318e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014032906807802066, 2.337311630789803e-17], 'true': [0.014032906807802066, nan], 'true,true': [-3.9769182971647396e-17, 2.523234146875356e-18]}, {'': [0.00940781484128392, 2.700542492331462e-17], 'true': [-6.628197161941232e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-6.628197161941232e-17, nan]}, {'': [0.010116612078290243, -4.476705744456276e-18], 'true': [0.010116612078290243, nan], 'true,true': [-6.628197161941233e-18, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006993402419136022, 2.0875988497225166e-17], 'true': [4.3083281552618016e-17, 9.912705577010326e-19], 'true,true': [4.3083281552618016e-17, nan], 'true,true,true': [4.3083281552618016e-17, nan], 'true,false': [9.912705577010326e-19, nan]}, {'': [0.003826619641084503, 0.0027697790599038813], 'true': [0.003826619641084503, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 8.56e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783635;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926101;  // std dev = 3.80e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.08518475138839683;  // std dev = 5.96e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07877675473109161;  // std dev = 6.14e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06842697784420265;  // std dev = 4.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801095;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.497 seconds
Total inference time: 1.227 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.374 seconds
Refined model CLL: -0.064077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.65 seconds
Total inference time: 1.227 seconds
AUC ROC: 1.0
Total revision time: 7.65
Best scored revision CLL: -0.064077


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.65, 'Inference time': 1.227, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065033, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.923, 'Inference time': 1.424}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283917;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360689;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716015005;  // std dev = 1.79e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.66e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 1.12e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.08518475138839682;  // std dev = 3.48e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8.30e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310915;  // std dev = 7.15e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333674;  // std dev = 1.08e-07, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420261;  // std dev = 7.30e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10097388499300487;  // std dev = 0.849, 132.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=110 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0477891749711266;  // std dev = 0.930, 290.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06511
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.687 seconds
Total inference time: 1.388 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065875
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.144 seconds
Parameter learned model CLL: -0.065875


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [8e-07, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.36e-08, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 134], 'true,false,true,true': [0.0, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [4.92e-07, 0, 134], 'true,false,true': [0.0, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [4e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [1.79e-08, 0, 134], 'true,true,false,true': [1.18e-08, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [1.12e-08, 0, 134], 'true,true,false': [3.48e-09, 24, 0], 'true,false': [0.0, 0, 0], 'false': [8.3e-08, 252, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.19e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 254, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 134], 'true,true,false,true': [7.45e-09, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.08e-07, 223, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 260, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.849, 22, 110], 'true,false': [0.0, 0, 0], 'false': [0.93, 266, 24]}]]
[{'': [0.13957794838162585, -1.339316664627173e-16], 'true': [4.772301956597688e-15, 2.05596856412066e-17], 'true,true': [4.772301956597688e-15, nan], 'true,true,true': [4.772301956597688e-15, nan], 'true,false': [2.05596856412066e-17, nan], 'true,false,true': [2.05596856412066e-17, nan]}, {'': [0.08647836286765649, -3.961359148897272e-17], 'true': [-1.908920782639075e-15, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan], 'true,false,true': [-2.523234146875356e-18, nan]}, {'': [0.06373429663182087, -1.0017049846242013e-16], 'true': [1.8028696280480155e-15, -5.9476233462061954e-18], 'true,false': [-5.9476233462061954e-18, nan]}, {'': [0.029308539913144173, -7.220962761789636e-17], 'true': [1.193075489149422e-15, -5.843279076974508e-18], 'true,true': [1.193075489149422e-15, nan], 'true,false': [-5.843279076974508e-18, nan]}, {'': [0.02136883455156592, 1.797932023684464e-17], 'true': [0.02136883455156592, nan], 'true,true': [3.3140985809706167e-16, 6.033820786006285e-18], 'true,true,false': [6.033820786006285e-18, nan]}, {'': [0.014923518378814908, 2.7315010923317342e-17], 'true': [0.014923518378814908, nan], 'true,true': [1.0605115459105973e-16, 1.1564823173178714e-17]}, {'': [0.009751156029747797, 2.0106401233368978e-17], 'true': [3.579226467448266e-16, -3.96508223080413e-18], 'true,true': [3.579226467448266e-16, nan], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.009166373150080015, 5.2772933009088157e-17], 'true': [0.009166373150080015, nan], 'true,true': [-2.783842808015318e-16, 1.914177628664063e-18], 'true,true,false': [1.914177628664063e-18, nan]}, {'': [0.008032581714917551, 2.049642507000289e-17], 'true': [-4.3083281552618016e-17, -2.3790493384824783e-18], 'true,false': [-2.3790493384824783e-18, nan], 'true,true': [-4.3083281552618016e-17, nan], 'true,true,true': [-4.3083281552618016e-17, nan]}, {'': [0.005455943347912147, 0.0029819422687052837], 'true': [0.005455943347912147, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1418510649004884;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.12544463852839194;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360683;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783653;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 1.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.07877675473109148;  // std dev = 6.66e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527816;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333668;  // std dev = 1.24e-07, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06842697784420261;  // std dev = 6.66e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 5.58e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06419184008202622;  // std dev = 3.73e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06419184008202623;  // std dev = 1.49e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.219 seconds
Total inference time: 1.175 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.711 seconds
Refined model CLL: -0.064077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.761 seconds
Total inference time: 1.175 seconds
AUC ROC: 1.0
Total revision time: 9.761
Best scored revision CLL: -0.064077


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.761, 'Inference time': 1.175, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06511, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.687, 'Inference time': 1.388}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2.35e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360642;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 5.58e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014906;  // std dev = 2.84e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.84e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694885;  // std dev = 3.09e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 4.21e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527794;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.073246225763337;  // std dev = 1.00e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420303;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10367046825953623;  // std dev = 0.999, 196.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=166 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0477891749711265;  // std dev = 1.139, 435.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.385 seconds
Total inference time: 1.632 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06585
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.095 seconds
Parameter learned model CLL: -0.06585


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.08e-06, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.35e-07, 369, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 202], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [6.36e-07, 0, 202], 'true,false,true': [0.0, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.67e-07, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 353, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [2.84e-08, 0, 202], 'true,true,false,true': [0.0, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.84e-07, 373, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [3.09e-08, 0, 202], 'true,true,false': [2.63e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 366, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [3.01e-07, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 360, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [0.0, 0, 202], 'true,true,false,true': [1.05e-08, 40, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1e-07, 359, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [0.999, 30, 166], 'true,false': [0.0, 0, 0], 'false': [1.139, 399, 36]}]]
[{'': [0.11805098984586705, 1.4923323041031914e-16], 'true': [5.768762805181012e-15, 2.7755575615628914e-17], 'true,true': [5.768762805181012e-15, nan], 'true,true,true': [5.768762805181012e-15, nan], 'true,false': [2.7755575615628914e-17, nan], 'true,false,true': [2.7755575615628914e-17, nan]}, {'': [0.08037589672894596, -1.1996176058287405e-16], 'true': [-3.728590593592605e-15, -7.401486830834377e-18], 'true,false': [-7.401486830834377e-18, nan], 'true,false,true': [-7.401486830834377e-18, nan]}, {'': [0.04368980038228391, -2.865091676452017e-17], 'true': [2.0049968286299855e-15, 0.0], 'true,false': [0.0, nan]}, {'': [0.03391886938153015, 8.806301611757615e-18], 'true': [3.5175382958420803e-16, -1.5860328923216522e-18], 'true,true': [3.5175382958420803e-16, nan], 'true,false': [-1.5860328923216522e-18, nan]}, {'': [0.02151147691311976, 9.048466474156772e-17], 'true': [0.02151147691311976, nan], 'true,true': [8.090338080436785e-16, -9.516197353929913e-18], 'true,true,false': [-9.516197353929913e-18, nan]}, {'': [0.007454053738840657, 3.154732091831046e-17], 'true': [0.007454053738840657, nan], 'true,true': [9.673230313565721e-16, 5.551115123125783e-18]}, {'': [0.0076402853367301465, 4.934324553889585e-18], 'true': [4.484861327198652e-16, -4.827056628805028e-18], 'true,true': [4.484861327198652e-16, nan], 'true,false': [-4.827056628805028e-18, nan]}, {'': [0.008646703641260384, 2.783288919673094e-17], 'true': [0.008646703641260384, nan], 'true,true': [-8.35415345262494e-17, 2.7755575615628915e-18], 'true,true,false': [2.7755575615628915e-18, nan]}, {'': [0.006634949323151914, -5.521430015515484e-17], 'true': [-1.187169174846702e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-1.187169174846702e-16, nan], 'true,true,true': [-1.187169174846702e-16, nan]}, {'': [0.005092365282245369, 0.0029819422687052933], 'true': [0.005092365282245369, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.14185106490048754;  // std dev = 2.37e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12544463852839216;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360647;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783609;  // std dev = 1.79e-07, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09269127618926054;  // std dev = 1.72e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694885;  // std dev = 4.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109148;  // std dev = 5.16e-08, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.138440636027036;  // std dev = 0.090, 136.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=115 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333757;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15563024621309302;  // std dev = 0.036, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07645578869142645;  // std dev = 0.044, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06842697784420304;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1362572081279295;  // std dev = 0.032, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07231119724593185;  // std dev = 0.036, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.06419184008202589;  // std dev = 1.38e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.685 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064699
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.478 seconds
Refined model CLL: -0.064699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.643 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0
Total revision time: 12.643
Best scored revision CLL: -0.064699


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:12:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064006, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.643, 'Inference time': 1.208, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065109, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.385, 'Inference time': 1.632}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048757;  // std dev = 1.26e-07, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360585;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783555;  // std dev = 3.17e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892611;  // std dev = 1.07e-07, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694879;  // std dev = 2.04e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.46e-07, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 2.17e-07, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527714;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633375;  // std dev = 0.000, 537.000 (wgt'ed) examples reached here.  /* #neg=537 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.15274385809367158;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420314;  // std dev = 0.000, 430.000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10942422441544838;  // std dev = 1.049, 258.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=226 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04846757548078683;  // std dev = 1.247, 542.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=43 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.39 seconds
Total inference time: 1.35 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.229 seconds
Parameter learned model CLL: -0.065794


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.07e-06, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.26e-07, 505, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 530, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.58e-07, 0, 269], 'true,false,true': [0.0, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 497, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [2.79e-08, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.17e-07, 486, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 269], 'true,true,false,true': [0.0, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 496, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.04e-08, 0, 269], 'true,true,false': [3.73e-09, 35, 0], 'true,false': [0.0, 0, 0], 'false': [1.46e-07, 518, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.86e-07, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.17e-07, 500, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [9.42e-08, 0, 269], 'true,true,false,true': [7.45e-09, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 537, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.05e-08, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 430, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.049, 32, 226], 'true,false': [0.0, 0, 0], 'false': [1.247, 499, 43]}]]
[{'': [0.11476586888658057, 3.165784466257872e-17], 'true': [4.226276495227362e-15, 4.603363760640893e-17], 'true,true': [4.226276495227362e-15, nan], 'true,true,true': [4.226276495227362e-15, nan], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}, {'': [0.08338923106493273, -1.3741628380266088e-16], 'true': [-4.5432472323694135e-15, -2.6433881538694202e-17], 'true,false': [-2.6433881538694202e-17, nan], 'true,false,true': [-2.6433881538694202e-17, nan]}, {'': [0.04640828278192861, -1.0722475891752014e-17], 'true': [4.754561057130781e-16, -1.0793834961633467e-17], 'true,false': [-1.0793834961633467e-17, nan]}, {'': [0.036581727011680054, 2.0651062021834187e-16], 'true': [-5.018703338082492e-16, 1.4945309946877107e-17], 'true,false': [1.4945309946877107e-17, nan], 'true,true': [-5.018703338082492e-16, nan]}, {'': [0.021959502658050346, 2.3278869871172638e-17], 'true': [0.021959502658050346, nan], 'true,true': [-2.641422809517101e-17, -1.9660199394403815e-17], 'true,true,false': [-1.9660199394403815e-17, nan]}, {'': [0.011801644159116635, 4.115112369266989e-17], 'true': [0.011801644159116635, nan], 'true,true': [4.2262764952273615e-16, 1.4274296030894868e-17]}, {'': [0.010221176942452151, 9.414691248821327e-17], 'true': [3.037636230944666e-16, 0.0], 'true,true': [3.037636230944666e-16, nan], 'true,false': [0.0, nan]}, {'': [0.008507765367585315, -3.473323428994903e-17], 'true': [0.008507765367585315, nan], 'true,true': [3.3017785118963765e-17, 1.0675221390626506e-18], 'true,true,false': [1.0675221390626506e-18, nan]}, {'': [0.0061934365325863735, -7.435912350977793e-17], 'true': [-1.815978181543007e-16, 2.362176648138631e-18], 'true,false': [2.362176648138631e-18, nan], 'true,true': [-1.815978181543007e-16, nan], 'true,true,true': [-1.815978181543007e-16, nan]}, {'': [0.0042679699612872156, 0.0028692789797125843], 'true': [0.0042679699612872156, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.1418510649004873;  // std dev = 2.60e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839124;  // std dev = 4.08e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1254446385283923;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360589;  // std dev = 0.000, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.10159632948783553;  // std dev = 3.18e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926105;  // std dev = 1.19e-07, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.37e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.08518475138839679;  // std dev = 1.37e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07877675473109151;  // std dev = 2.24e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770964977452781;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.14781664704251607;  // std dev = 0.080, 171.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=151 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333754;  // std dev = 0.000, 532.000 (wgt'ed) examples reached here.  /* #neg=532 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15489257401091122;  // std dev = 0.031, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07723835785697744;  // std dev = 0.051, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06842697784420321;  // std dev = 0.000, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13568274701530275;  // std dev = 0.028, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07251777555030203;  // std dev = 0.045, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.06419184008202564;  // std dev = 2.10e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.937 seconds
Total inference time: 1.294 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.621 seconds
Refined model CLL: -0.064703


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.177 seconds
Total inference time: 1.294 seconds
AUC ROC: 1.0
Total revision time: 14.177
Best scored revision CLL: -0.064703


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:13:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064009, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.177, 'Inference time': 1.294, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065068, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.39, 'Inference time': 1.35}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;true;true
0;true,true,true;publication(E, A).;false;false
0;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true,false,true;publication(H, J), ta(K, J, L).;false;false
0;true,false,false;publication(M, B), ta(N, A, P).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false;publication(J, B), publication(K, A).;true;true
1;true,false,true;publication(K, L), professor(L).;false;false
1;true,false,false;publication(M, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;tempadvisedby(C, B), ta(D, C, E).;true;true
2;true,true;publication(F, A), publication(F, B).;false;true
2;true,true,false;publication(G, A).;false;false
2;true,false;publication(H, A), publication(H, B).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;projectmember(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;tempadvisedby(C, B).;true;true
3;true,true;publication(D, A), publication(D, B).;true;true
3;true,true,true;publication(E, C).;false;false
3;true,true,false;publication(F, A), publication(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;publication(H, I), professor(I).;false;false
3;true,false,false;ta(J, A, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;tempadvisedby(C, B), publication(D, C).;true;true
4;true,true;publication(E, A), publication(E, B).;true;true
4;true,true,true;ta(F, A, G).;false;false
4;true,true,false;publication(D, H), tempadvisedby(I, H).;false;false
4;true,false;publication(J, B), publication(J, A).;true;true
4;true,false,true;tempadvisedby(K, B).;false;false
4;true,false,false;projectmember(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B), publication(D, C).;true;true
5;true,true;publication(E, A), publication(E, B).;true;true
5;true,true,true;ta(F, A, G).;false;false
5;true,true,false;ta(H, C, I).;false;false
5;true,false;publication(J, A).;true;true
5;true,false,true;publication(J, B).;false;false
5;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;false;true
6;true,true,false;publication(C, F), tempadvisedby(G, F).;false;false
6;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
6;true,false,true;publication(K, A), publication(L, B).;false;false
6;true,false,false;publication(M, A), ta(N, A, P).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, A).;true;true
7;true,true;ta(E, C, F), publication(D, B).;false;true
7;true,true,false;publication(G, B), ta(H, C, I).;false;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;ta(J, M, N), publication(P, M).;false;false
7;true,false,false;publication(Q, A).;false;false
8;;advisedby(A, B) :- student(A), professor(B).;true;false
8;true;publication(C, A), publication(C, B).;true;true
8;true,true;tempadvisedby(D, B), publication(E, D).;true;false
8;true,true,true;publication(E, B), ta(F, A, G).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true,false,true;ta(I, H, J), ta(K, A, L).;false;false
8;true,false,false;ta(M, A, N), publication(P, B).;false;false
9;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
9;true;ta(D, A, E), tempadvisedby(F, B).;true;true
9;true,true;projectmember(G, B).;false;true
9;true,true,false;ta(H, F, I), publication(J, B).;false;false
9;true,false;ta(K, A, L).;true;true
9;true,false,true;hasposition(M, C), tempadvisedby(N, M).;false;false
9;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004887;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360586;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783513;  // std dev = 4.20e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(C, F) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926137;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694875;  // std dev = 2.14e-08, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 2.08e-09, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 1.52e-07, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109204;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333674;  // std dev = 2.06e-07, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420347;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.10620002435358854;  // std dev = 1.260, 335.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=288 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04973983913796051;  // std dev = 1.336, 672.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=49 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.927 seconds
Total inference time: 1.502 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.693 seconds
Parameter learned model CLL: -0.065713


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true,true': [1.04e-06, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.58e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 635, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [0.0, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 639, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 337], 'true,false,true': [3.16e-08, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 619, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [3.94e-08, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.2e-07, 591, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)', 'true,true,false': 'movie(C, F)'}, {'true,true,true': [0.0, 0, 337], 'true,true,false,true': [0.0, 66, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 579, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, D)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,true,true': [2.14e-08, 0, 337], 'true,true,false': [2.08e-09, 71, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 606, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A), movie(G, B)'}, {'true,true,true': [2.49e-07, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.29e-08, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 599, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(D, B)'}, {'true,true,true': [2.92e-07, 0, 337], 'true,true,false,true': [1.05e-08, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.06e-07, 647, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.39e-08, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 619, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)'}, {'true,true': [1.26, 47, 288], 'true,false': [0.0, 0, 0], 'false': [1.336, 623, 49]}]]
[{'': [0.11903375828258882, -4.08422202444782e-16], 'true': [3.204821834882351e-15, 5.756711979537848e-17], 'true,true': [3.204821834882351e-15, nan], 'true,true,true': [3.204821834882351e-15, nan], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [5.756711979537848e-17, nan]}, {'': [0.08610921561681123, -3.057891272832982e-16], 'true': [-5.144582419153248e-15, -3.633457171500512e-17], 'true,false': [-3.633457171500512e-17, nan], 'true,false,true': [-3.633457171500512e-17, nan]}, {'': [0.050895223104596016, -5.595954502149416e-17], 'true': [-5.90361916952012e-16, 1.959217102279688e-17], 'true,false': [1.959217102279688e-17, nan]}, {'': [0.03334501818443987, 2.9906515316467835e-16], 'true': [-9.90964646312306e-16, 2.7268635692547703e-17], 'true,false': [2.7268635692547703e-17, nan], 'true,true': [-9.90964646312306e-16, nan]}, {'': [0.02340514042417967, -2.7611764343009074e-17], 'true': [0.02340514042417967, nan], 'true,true': [-8.012054587205877e-16, -1.6821560979169039e-18], 'true,true,false': [-1.6821560979169039e-18, nan]}, {'': [0.016650883491816062, 3.8106664871622534e-17], 'true': [0.016650883491816062, nan], 'true,true': [4.743979689792954e-16, 4.6910832026415064e-18]}, {'': [0.009909815179262422, -3.484506321027203e-17], 'true': [1.8448809904750377e-16, 3.0839528461809902e-18], 'true,true': [1.8448809904750377e-16, nan], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.007154949471556733, 6.589268028687173e-17], 'true': [0.007154949471556733, nan], 'true,true': [2.530122501222909e-16, 2.1769078914218755e-18], 'true,true,false': [2.1769078914218755e-18, nan]}, {'': [0.005584603505366908, -1.0546221946358515e-16], 'true': [-2.319278959454333e-16, 3.8095888099882826e-18], 'true,false': [3.8095888099882826e-18, nan], 'true,true': [-2.319278959454333e-16, nan], 'true,true,true': [-2.319278959454333e-16, nan]}, {'': [0.0047380875378286655, 0.002655509926366604], 'true': [0.0047380875378286655, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048843;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1254446385283923;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360607;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783497;  // std dev = 4.73e-07, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926158;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1.55e-07, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109202;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.14902067828636786;  // std dev = 0.079, 214.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333685;  // std dev = 1.75e-07, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15481238295801625;  // std dev = 0.033, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07821043824999799;  // std dev = 0.058, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420347;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13562026658034088;  // std dev = 0.030, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07180321949693354;  // std dev = 0.062, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.06419184008202548;  // std dev = 2.40e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.948 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.9 seconds
Refined model CLL: -0.064692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064009
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.468 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0
Total revision time: 16.468
Best scored revision CLL: -0.064692


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:13:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064009, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.468, 'Inference time': 1.34, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064996, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.927, 'Inference time': 1.502}}


