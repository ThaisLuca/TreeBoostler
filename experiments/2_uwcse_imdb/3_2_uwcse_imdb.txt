Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.6081489350995115;  // std dev = 3.775, 76.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=57 */
%   else return -0.1418510649004879;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7250555164636789;  // std dev = 0.061, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, G), professor(G) )
%   | | | then return 0.18385363824115528;  // std dev = 2.478, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.7670719622367218;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.7436370158424648;  // std dev = 0.997, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.5601754105125835;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   else return -0.12544463852839127;  // std dev = 5.96e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.6040520610480191;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36510356160663154;  // std dev = 1.243, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.5609813513527102;  // std dev = 0.077, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( ta(H, A, I), publication(G, B) )
%   | | | then return -0.06040768065660722;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.036816034425286956;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.2008329920114624;  // std dev = 2.861, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.40426919217318125;  // std dev = 3.378, 66.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=51 */
%   else return -0.11231637819360639;  // std dev = 6.99e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4337351564253818;  // std dev = 0.157, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(D, H) )
%   | | | then return 0.4853322939641511;  // std dev = 1.073, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2248343747657655;  // std dev = 2.851, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else if ( publication(I, B), publication(J, A) )
%   | | | then return -0.012865947754101353;  // std dev = 1.662, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.21880657164338177;  // std dev = 3.476, 54.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.10159632948783645;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H), publication(I, A) )
%   | | | then return 0.08085552945636124;  // std dev = 1.087, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.28575085703047276;  // std dev = 1.982, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.38165423895763656;  // std dev = 0.805, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4829786482453658;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then if ( tempadvisedby(L, B), publication(M, L) )
%   | | | then return 0.36453634635499305;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.27617625829256276;  // std dev = 0.987, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.5363639010685053;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08089646013026072;  // std dev = 3.722, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   else return -0.09269127618926094;  // std dev = 3.33e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.2801906926450464;  // std dev = 0.112, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.18433563535266137;  // std dev = 0.990, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.0724994945729623;  // std dev = 3.239, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   | | | else return 0.24211524162950723;  // std dev = 2.696, 43.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | else if ( ta(J, A, K) )
%   | | then return 0.29415438605443817;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(L, A), publication(L, B) )
%   | | | then return 0.2584390990679496;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17347121625206047;  // std dev = 1.450, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( ta(M, A, N) )
%   | then return -0.0954914543081366;  // std dev = 0.066, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.08098387377824176;  // std dev = 0.565, 135.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.2284639517512456;  // std dev = 0.120, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.45261233410545093;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.024567301914131198;  // std dev = 2.150, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.11423852100241097;  // std dev = 4.085, 82.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   else return -0.07884245301645454;  // std dev = 0.006, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(E, C) )
%   | | then if ( publication(D, A) )
%   | | | then return 0.11446638526599813;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.16883696293163158;  // std dev = 1.680, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.1973602737296438;  // std dev = 1.464, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.013250967215815842;  // std dev = 2.179, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.1575440356194259;  // std dev = 1.757, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.05009636478478266;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( publication(K, B), ta(L, A, M) )
%   | | | then return 0.2850838635448945;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.19788618111538292;  // std dev = 1.763, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.07330420011972168;  // std dev = 0.006, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), professor(B) )
%   then if ( student(A) )
%   | then if ( publication(C, A) )
%   | | then return 0.1706290087408564;  // std dev = 0.097, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | | then return -0.06108994462453129;  // std dev = 1.603, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11055188900733015;  // std dev = 3.422, 75.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | else return -0.06868733592844067;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( projectmember(F, B), student(A) )
%   | then if ( publication(G, A) )
%   | | then return 0.10602997596986766;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2200344615782739;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( hasposition(B, H), student(A) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return -0.24676444700099878;  // std dev = 1.361, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04646659984991773;  // std dev = 1.455, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.06849518239939238;  // std dev = 0.052, 185.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), tempadvisedby(E, B) )
%   | then if ( ta(F, E, G), publication(C, A) )
%   | | then return 0.12790729547424054;  // std dev = 0.065, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( publication(H, E) )
%   | | | then return -0.18054629236050018;  // std dev = 1.232, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.004281922733571762;  // std dev = 1.455, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( tempadvisedby(I, B), student(A) )
%   | | then if ( publication(J, I), ta(K, A, L) )
%   | | | then return -0.01286319843821473;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19473817322383957;  // std dev = 1.921, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else if ( publication(M, A), ta(N, A, P) )
%   | | | then return 0.2869887533772796;  // std dev = 0.378, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0013332066662294284;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   else if ( tempadvisedby(Q, B), ta(R, Q, S) )
%   | then return -0.24806884356266634;  // std dev = 0.467, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return -0.05593913344688888;  // std dev = 0.151, 187.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=11 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25628538637842363;  // std dev = 1.316, 77.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2.11e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2676089627196752;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11661089836478046;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05954465435137954;  // std dev = 0.094, 144.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22881745334507578;  // std dev = 0.184, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then return -0.10590938188925403;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08065769311466889;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19105372169350732;  // std dev = 0.163, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.09751166621585453;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07487546911113538;  // std dev = 4.47e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16331665530906134;  // std dev = 0.145, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08933296502650907;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06985118728145566;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06985118728145571;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06985118728145566;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13605260639332709;  // std dev = 0.317, 67.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07771128781456911;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06544693847920004;  // std dev = 3.61e-09, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065079
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.161 seconds
Total inference time: 1.662 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067079
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.661 seconds
Parameter learned model CLL: -0.067079


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [1.19e-07, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [1.69e-07, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [9.13e-09, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 65], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.316, 12, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 111, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 54], 'true,true,false,true': [7.45e-09, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 133, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.184, 0, 65], 'true,false,true': [0.005, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.163, 0, 65], 'true,true,true,false': [0.009, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.47e-08, 124, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.145, 0, 65], 'true,true,false,true': [0.009, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true,true': [0.0, 84, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.45e-09, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.317, 2, 65], 'true,true,false,true': [0.022, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.61e-09, 108, 0]}]]
[{'': [0.09757928316757274, 5.74253288599219e-17], 'true': [-8.745141363201234e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-8.745141363201234e-16, nan]}, {'': [0.08837064688583855, -7.791038769299344e-18], 'true': [2.1862853408003084e-16, 2.523234146875356e-18], 'true,true': [2.1862853408003084e-16, nan], 'true,true,true': [2.1862853408003084e-16, nan], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan]}, {'': [0.058648046258310445, 6.586068790149233e-17], 'true': [4.372570681600617e-16, 6.938893903907228e-18], 'true,true': [4.372570681600617e-16, nan], 'true,true,true': [4.372570681600617e-16, nan], 'true,false': [6.938893903907228e-18, nan], 'true,false,true': [6.938893903907228e-18, nan]}, {'': [0.03545127001309709, -1.7763568394002505e-17], 'true': [-3.006142343600424e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02248333126465441, 4.0008036923429064e-18], 'true': [0.02248333126465441, nan], 'true,true': [0.02248333126465441, nan]}, {'': [0.023085916898983004, 0.008891356730449974], 'true': [0.023085916898983004, nan], 'true,true': [-3.289549702593056e-17, 4.270088556250602e-18], 'true,true,false': [4.270088556250602e-18, nan]}, {'': [0.010305557163359656, -1.805240690447409e-17], 'true': [0.0005220113530141017, 3.6915276290278813e-06], 'true,false': [3.6915276290278813e-06, nan]}, {'': [0.011905576875132143, 1.6116140680042596e-17], 'true': [0.011905576875132143, nan], 'true,true': [0.011905576875132143, nan], 'true,true,true': [0.0004071555957956445, 6.0306890807783664e-06]}, {'': [0.011077097591588314, -2.2534229707738327e-17], 'true': [0.009987134946146458, 0.0], 'true,true': [0.00032218569369656135, 5.219298999952401e-06], 'true,true,false': [5.219298999952401e-06, nan], 'false': [-1.3877787807814457e-17, 3.2653618371328133e-18], 'false,false': [nan, 3.2653618371328133e-18], 'false,true': [-1.3877787807814457e-17, nan]}, {'': [0.004830931162238664, 1.2335811384723961e-17], 'true': [0.004830931162238664, nan], 'true,true': [0.0015008532894886595, 7.755190177422451e-05], 'true,true,false': [7.755190177422451e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 1.19e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1123163781936062;  // std dev = 9.31e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783666;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926103;  // std dev = 2.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 4.83e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11902944498633491;  // std dev = 0.373, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21084037614835568;  // std dev = 0.040, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109158;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17789440584410035;  // std dev = 0.035, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07781858577547801;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.153351703327696;  // std dev = 0.031, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return -0.07096938213388507;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1337185146181414;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.12547787319625425;  // std dev = 0.043, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.07163082757917098;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( director(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0637657702133311;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.901 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.263 seconds
Refined model CLL: -0.064713


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.986 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 6.986
Best scored revision CLL: -0.064713


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063416, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.986, 'Inference time': 1.431, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065079, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.161, 'Inference time': 1.662}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048846;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360675;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.26321869755526445;  // std dev = 1.758, 151.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.66e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2662522639167299;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.117327018830995;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05311642132892469;  // std dev = 0.103, 256.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2284844350878231;  // std dev = 0.262, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then return -0.10784584519108277;  // std dev = 0.017, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08113564637973882;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19081443612023424;  // std dev = 0.231, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.09731265247862686;  // std dev = 0.012, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07528868388544079;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16313834107788613;  // std dev = 0.206, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08863845837457021;  // std dev = 0.010, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07021179943249468;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07021179943249448;  // std dev = 1.00e-07, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07021179943249471;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1374264557776306;  // std dev = 0.401, 133.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=130 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07805223588782055;  // std dev = 0.039, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06576426225303464;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.017 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067366
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.182 seconds
Parameter learned model CLL: -0.067366


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [7.63e-07, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.77e-07, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.67e-08, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.86e-07, 0, 130], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 253, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.758, 21, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 253, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 106], 'true,true,false,true': [9.13e-09, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 232, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.262, 0, 130], 'true,false,true': [0.017, 35, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 210, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.231, 0, 130], 'true,true,true,false': [0.012, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 235, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.206, 0, 130], 'true,true,false,true': [0.01, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true,true': [1e-07, 199, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.401, 3, 130], 'true,true,false,true': [0.039, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 237, 0]}]]
[{'': [0.11555555555556017, -2.25940124309681e-16], 'true': [4.481884948640632e-15, 2.7755575615628915e-18], 'true,true': [4.481884948640632e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.0662106396816672, -6.774242184153498e-17], 'true': [-1.7490282726402467e-15, 3.7007434154171884e-18], 'true,false': [3.7007434154171884e-18, nan], 'true,false,true': [3.7007434154171884e-18, nan], 'true,true': [-1.7490282726402467e-15, nan], 'true,true,true': [-1.7490282726402467e-15, nan]}, {'': [0.0495980741036084, -7.220962761789636e-17], 'true': [1.7490282726402467e-15, 1.460819769243627e-17], 'true,true': [1.7490282726402467e-15, nan], 'true,true,true': [1.7490282726402467e-15, nan], 'true,false': [1.460819769243627e-17, nan], 'true,false,true': [1.460819769243627e-17, nan]}, {'': [0.03929215562018885, -6.845643946305313e-17], 'true': [1.147799803920162e-15, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.020462385366365212, 1.755293319565465e-17], 'true': [0.020462385366365212, nan], 'true,true': [0.020462385366365212, nan]}, {'': [0.017524871783209058, 0.010578744453026017], 'true': [0.017524871783209058, nan], 'true,true': [-2.51371250858526e-16, 4.89804275569922e-18], 'true,true,false': [4.89804275569922e-18, nan]}, {'': [0.019322487382009267, -1.6917684184764292e-17], 'true': [0.0005276049356148714, 8.732777219901321e-06], 'true,false': [8.732777219901321e-06, nan]}, {'': [0.011575915348784204, -3.212560241468538e-17], 'true': [0.011575915348784204, nan], 'true,true': [0.011575915348784204, nan], 'true,true,true': [0.0004110329119399467, 5.95889792768034e-06]}, {'': [0.01033271426053765, 5.598560551528567e-17], 'true': [0.009075810987394309, 0.0], 'true,true': [0.00032498733629767823, 3.631957442227731e-06], 'true,true,false': [3.631957442227731e-06, nan], 'false': [5.0211091565961855e-17, -3.96508223080413e-18], 'false,true': [5.0211091565961855e-17, nan], 'false,false': [nan, -3.96508223080413e-18]}, {'': [0.007678082380587703, -7.495176537553799e-18], 'true': [0.007678082380587703, nan], 'true,true': [0.0012082663233627926, 5.361018826530569e-05], 'true,true,false': [5.361018826530569e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.63e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.14185106490048846;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839183;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360664;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830914;  // std dev = 3.86e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783653;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 2.53e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.09269127618926061;  // std dev = 4.71e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 8.82e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694898;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839682;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325353;  // std dev = 2.11e-07, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07877675473109146;  // std dev = 7.30e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527764;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.1367186391148563;  // std dev = 0.092, 93.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=78 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333675;  // std dev = 1.06e-07, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15592326207798723;  // std dev = 0.030, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return -0.07708889832237703;  // std dev = 0.034, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.06842697784420268;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06842697784420261;  // std dev = 5.96e-08, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return -0.06842697784420264;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13363849204688985;  // std dev = 5.59e-09, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( actor(A) )
%   | | | then return 0.1383829497243811;  // std dev = 6.32e-08, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | | else return -0.06419184008202615;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.06367346777416218;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( director(A) )
%   | | | then return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07739839601383937;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202625;  // std dev = 1.49e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.375 seconds
Total inference time: 1.709 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.9 seconds
Refined model CLL: -0.064854


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.474 seconds
Total inference time: 1.709 seconds
AUC ROC: 1.0
Total revision time: 9.474
Best scored revision CLL: -0.064854


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.474, 'Inference time': 1.709, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065364, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.017, 'Inference time': 1.699}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 1.79e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360651;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2655914307135606;  // std dev = 2.108, 225.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.60e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26578897919603217;  // std dev = 2.30e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11757296557329121;  // std dev = 1.29e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053529386663959365;  // std dev = 0.102, 400.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2284504186301851;  // std dev = 0.324, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then return -0.10719932379733095;  // std dev = 0.014, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08110486404336142;  // std dev = 1.98e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19079176936933226;  // std dev = 0.286, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.09686727595605384;  // std dev = 0.009, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07526208050971307;  // std dev = 1.05e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16312261410200454;  // std dev = 0.254, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.0891404042899468;  // std dev = 0.012, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07018858999425139;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07018858999425141;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07018858999425143;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13895496139619068;  // std dev = 0.424, 198.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=195 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07910503791835209;  // std dev = 0.046, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06574384460055514;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065343
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.621 seconds
Total inference time: 1.809 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067339
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.23 seconds
Parameter learned model CLL: -0.067339


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.08e-06, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.79e-07, 341, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [6.19e-07, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.92e-07, 0, 195], 'true,false,true,true': [0.0, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 336, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.108, 30, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.6e-07, 354, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [2.3e-08, 0, 158], 'true,true,false,true': [1.29e-08, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.102, 363, 37]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.324, 0, 195], 'true,false,true': [0.014, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.98e-07, 364, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.286, 0, 195], 'true,true,true,false': [0.009, 25, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-07, 356, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.254, 0, 195], 'true,true,false,true': [0.012, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 16, 0], 'false,true,true': [0.0, 290, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 36, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.424, 3, 195], 'true,true,false,true': [0.046, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 376, 0]}]]
[{'': [0.10979508938446954, 9.376663668388419e-17], 'true': [5.975846598187509e-15, 2.3790493384824782e-17], 'true,true': [5.975846598187509e-15, nan], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [2.3790493384824782e-17, nan]}, {'': [0.09025509768394857, -1.1842378929335003e-16], 'true': [-3.643808901333847e-15, 3.2653618371328133e-18], 'true,false': [3.2653618371328133e-18, nan], 'true,false,true': [3.2653618371328133e-18, nan], 'true,true': [-3.643808901333847e-15, nan], 'true,true,true': [-3.643808901333847e-15, nan]}, {'': [0.06399335193230687, -4.0257378796606245e-17], 'true': [1.9676568067202775e-15, -2.7078610356711136e-18], 'true,true': [1.9676568067202775e-15, nan], 'true,true,true': [1.9676568067202775e-15, nan], 'true,false': [-2.7078610356711136e-18, nan], 'true,false,true': [-2.7078610356711136e-18, nan]}, {'': [0.03476687285807131, -1.3216940769347101e-17], 'true': [4.372570681600617e-16, -1.5860328923216522e-18], 'true,false': [-1.5860328923216522e-18, nan], 'true,false,true': [-1.5860328923216522e-18, nan]}, {'': [0.01974869201009519, 7.2760379014982e-17], 'true': [0.01974869201009519, nan], 'true,true': [0.01974869201009519, nan]}, {'': [0.020583435479380928, 0.010418549553947618], 'true': [0.020583435479380928, nan], 'true,true': [5.171671810912122e-16, 5.204170427930421e-18], 'true,true,false': [5.204170427930421e-18, nan]}, {'': [0.013166081629684143, 1.07362226557158e-16], 'true': [0.000537626853046328, 6.3472858904018075e-06], 'true,false': [6.3472858904018075e-06, nan]}, {'': [0.008706147794578435, 3.118604001756058e-17], 'true': [0.008706147794578435, nan], 'true,true': [0.008706147794578435, nan], 'true,true,true': [0.00041872796839952434, 3.4468037056656353e-06]}, {'': [0.009605018498376841, -5.380835518121924e-17], 'true': [0.007641033977650129, 0.0], 'true,true': [0.0003310068885941684, 4.463668058709199e-06], 'true,true,false': [4.463668058709199e-06, nan], 'false': [-3.598653941888438e-17, -2.3129646346357427e-18], 'false,false': [nan, -2.3129646346357427e-18], 'false,true': [-3.598653941888438e-17, nan]}, {'': [0.008206253376986999, 0.0], 'true': [0.008206253376986999, nan], 'true,true': [0.0009068069521604792, 4.438722244675073e-05], 'true,true,false': [4.438722244675073e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.08e-06, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048766;  // std dev = 1.81e-07, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.12544463852839216;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.1123163781936066;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783648;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 4.00e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.092691276189261;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.0926912761892605;  // std dev = 1.79e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256949056;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948984;  // std dev = 4.71e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839678;  // std dev = 1.03e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.209757715632535;  // std dev = 2.92e-07, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527797;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333695;  // std dev = 9.88e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06842697784420312;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080111;  // std dev = 1.86e-09, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else if ( actor(A) )
%   | | | then return 0.13400703000801087;  // std dev = 6.99e-08, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202618;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.036 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.213 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.100000000000001 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0
Total revision time: 12.100000000000001
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.100000000000001, 'Inference time': 1.597, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065343, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.621, 'Inference time': 1.809}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 1.74e-07, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783574;  // std dev = 2.68e-07, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2507106793086532;  // std dev = 2.743, 313.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 1.52e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2687029886096169;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11603785843042273;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.053346957719274925;  // std dev = 0.103, 519.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=48 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23035640325364662;  // std dev = 0.376, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then return -0.10628624591278063;  // std dev = 0.019, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08111846093972655;  // std dev = 0.000, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19216711917158752;  // std dev = 0.331, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.09672601636150296;  // std dev = 0.016, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07527383167456102;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16415096789134262;  // std dev = 0.295, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08783251961081603;  // std dev = 0.012, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07019884212287095;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07019884212287059;  // std dev = 1.85e-07, 425.000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07019884212287096;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13742691500506307;  // std dev = 0.605, 267.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=260 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07811134236717064;  // std dev = 0.049, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06575286363140535;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065345
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.472 seconds
Total inference time: 1.759 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067337
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.394 seconds
Parameter learned model CLL: -0.067337


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.07e-06, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.74e-07, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 47, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 461, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [3.95e-07, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 492, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 260], 'true,false,true,true': [0.0, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.68e-07, 449, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.743, 53, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.52e-07, 476, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 212], 'true,true,false,true': [0.0, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 471, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.376, 0, 260], 'true,false,true': [0.019, 48, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 471, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.331, 0, 260], 'true,true,true,false': [0.016, 41, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 496, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.295, 0, 260], 'true,true,false,true': [0.012, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 13, 0], 'false,true,true': [1.85e-07, 425, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 47, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.605, 7, 260], 'true,true,false,true': [0.049, 63, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 479, 0]}]]
[{'': [0.11342155009452216, 6.063868728876357e-17], 'true': [4.372570681600617e-15, 4.2700885562506023e-17], 'true,true': [4.372570681600617e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.09256006092716418, -1.2908449917550627e-16], 'true': [-4.481884948640632e-15, -3.0708296425802203e-17], 'true,false': [-3.0708296425802203e-17, nan], 'true,false,true': [-3.0708296425802203e-17, nan], 'true,true': [-4.481884948640632e-15, nan], 'true,true,true': [-4.481884948640632e-15, nan]}, {'': [0.04243160509926017, -5.415722071342227e-18], 'true': [6.012284687200848e-16, -8.953411488912552e-18], 'true,true': [6.012284687200848e-16, nan], 'true,true,true': [6.012284687200848e-16, nan], 'true,false': [-8.953411488912552e-18, nan], 'true,false,true': [-8.953411488912552e-18, nan]}, {'': [0.031139345171503716, 1.6022817816416512e-16], 'true': [-4.099285014000578e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.02403853792734156, 4.8513947294544656e-17], 'true': [0.02403853792734156, nan], 'true,true': [0.02403853792734156, nan]}, {'': [0.019079897346144136, 0.010596436347491469], 'true': [0.019079897346144136, nan], 'true,true': [-5.111215434123362e-16, -5.843279076974508e-18], 'true,true,false': [-5.843279076974508e-18, nan]}, {'': [0.015368327336108437, -1.3765822640787503e-16], 'true': [0.0005426859668813126, 7.160590984889766e-06], 'true,false': [7.160590984889766e-06, nan]}, {'': [0.01018564402166028, -7.162729191130042e-17], 'true': [0.01018564402166028, nan], 'true,true': [0.01018564402166028, nan], 'true,true,true': [0.0004226393584234395, 6.339790490053011e-06]}, {'': [0.009136465805667716, 8.185542639185477e-17], 'true': [0.007890404491955182, -1.0675221390626506e-18], 'true,true': [0.00033396590548595903, 3.2044238536849915e-06], 'true,true,false': [3.2044238536849915e-06, nan], 'false': [8.045851566695252e-17, -8.267618268485208e-18], 'false,true': [8.045851566695252e-17, nan], 'false,false': [nan, -8.267618268485208e-18]}, {'': [0.00829387288175107, -9.549308687798841e-17], 'true': [0.00829387288175107, nan], 'true,true': [0.0013728487227082052, 3.8106096530167286e-05], 'true,true,false': [3.8106096530167286e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.07e-06, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048732;  // std dev = 2.49e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.12544463852839227;  // std dev = 0.000, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360592;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.10159632948783552;  // std dev = 3.22e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.33e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.0926912761892608;  // std dev = 1.72e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694883;  // std dev = 2.53e-07, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.50e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839697;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07877675473109177;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109196;  // std dev = 1.49e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 8.43e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633376;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367155;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then return -0.0684269778442034;  // std dev = 0.000, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
%   | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( actor(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return -0.06419184008202619;  // std dev = 1.61e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202619;  // std dev = 1.61e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202626;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.419 seconds
Total inference time: 1.668 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.496 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.781 seconds
Total inference time: 1.668 seconds
AUC ROC: 1.0
Total revision time: 13.781
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:14:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.781, 'Inference time': 1.668, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065345, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.472, 'Inference time': 1.759}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048835;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283923;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360574;  // std dev = 0.000, 555.000 (wgt'ed) examples reached here.  /* #neg=555 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783501;  // std dev = 4.63e-07, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25645229430791155;  // std dev = 2.943, 386.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926125;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2675762509681099;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11662809311766038;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05504570309215835;  // std dev = 0.100, 677.000 (wgt'ed) examples reached here.  /* #neg=618 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22934485695720924;  // std dev = 0.417, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then return -0.10679350504506087;  // std dev = 0.021, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08099192948864692;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19143633902413434;  // std dev = 0.368, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.09714294968147687;  // std dev = 0.018, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07516446656017021;  // std dev = 1.80e-07, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16360402934077029;  // std dev = 0.327, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08898929323295932;  // std dev = 0.019, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0701034205818132;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07010342058181274;  // std dev = 1.67e-07, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07010342058181332;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.137489555045359;  // std dev = 0.652, 334.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=326 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07954084596085437;  // std dev = 0.058, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06566891322425836;  // std dev = 1.27e-08, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.063 seconds
Total inference time: 1.765 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.667 seconds
Parameter learned model CLL: -0.067262


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.05e-06, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 591, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 69, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 616, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 555, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 326], 'true,false,true,true': [3.33e-08, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.63e-07, 641, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.943, 60, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 566, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 267], 'true,true,false,true': [0.0, 48, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 618, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.417, 0, 326], 'true,false,true': [0.021, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 563, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.368, 0, 326], 'true,true,true,false': [0.018, 50, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.8e-07, 639, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.327, 0, 326], 'true,true,false,true': [0.019, 65, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.27e-09, 20, 0], 'false,true,true': [1.67e-07, 459, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.652, 8, 326], 'true,true,false,true': [0.058, 82, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.27e-08, 581, 0]}]]
[{'': [0.11864169536127521, -2.7952823361120693e-16], 'true': [3.400143152717044e-15, 5.551115123125783e-17], 'true,true': [3.400143152717044e-15, nan], 'true,false': [5.551115123125783e-17, nan], 'true,false,true': [5.551115123125783e-17, nan]}, {'': [0.10292045000090635, -2.4223047810003414e-16], 'true': [-5.056623150194578e-15, -3.539841527790354e-17], 'true,false': [-3.539841527790354e-17, nan], 'true,false,true': [-3.539841527790354e-17, nan], 'true,true': [-5.056623150194578e-15, nan], 'true,true,true': [-5.056623150194578e-15, nan]}, {'': [0.05063974864342257, -1.6003214769371626e-18], 'true': [-4.795073676908651e-16, 1.586032892321652e-17], 'true,false': [1.586032892321652e-17, nan], 'true,false,true': [1.586032892321652e-17, nan], 'true,true': [-4.795073676908651e-16, nan], 'true,true,true': [-4.795073676908651e-16, nan]}, {'': [0.03197098301181191, 3.3393291598709855e-16], 'true': [-9.372189459412364e-16, 2.1350442781253012e-17], 'true,false': [2.1350442781253012e-17, nan], 'true,false,true': [2.1350442781253012e-17, nan]}, {'': [0.022435809721382448, -3.1384396455834813e-18], 'true': [0.022435809721382448, nan], 'true,true': [0.022435809721382448, nan]}, {'': [0.019065839518590994, 0.009955496040823332], 'true': [0.019065839518590994, nan], 'true,true': [-4.390994434472529e-16, -6.938893903907228e-18], 'true,true,false': [-6.938893903907228e-18, nan]}, {'': [0.015453332889469656, -1.7353397187746676e-17], 'true': [0.0005339464555961353, 7.084272432918307e-06], 'true,false': [7.084272432918307e-06, nan]}, {'': [0.009963111433250302, 5.073319611745629e-17], 'true': [0.009963111433250302, nan], 'true,true': [0.009963111433250302, nan], 'true,true,true': [0.00041603504101777846, 6.246548993159573e-06]}, {'': [0.010376392752707431, -4.980439736636216e-18], 'true': [0.009118584513402157, 1.3877787807814458e-18], 'true,true': [0.0003289270847238251, 5.411645516574846e-06], 'true,true,false': [5.411645516574846e-06, nan], 'false': [6.095342095981252e-17, -1.9721066884788965e-17], 'false,true': [6.095342095981252e-17, nan], 'false,false': [nan, -1.9721066884788965e-17]}, {'': [0.00848289086571299, 1.6127852543608127e-16], 'true': [0.00848289086571299, nan], 'true,true': [0.0012710419362948473, 4.035516154638743e-05], 'true,true,false': [4.035516154638743e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048835;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1254446385283923;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360575;  // std dev = 0.000, 540.000 (wgt'ed) examples reached here.  /* #neg=540 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1015963294878351;  // std dev = 4.38e-07, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.09269127618926136;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948784;  // std dev = 3.10e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948934;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08518475138839678;  // std dev = 1.46e-07, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253467;  // std dev = 2.56e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07877675473109177;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109251;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333717;  // std dev = 4.21e-08, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06842697784420264;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A) )
%   | then return -0.06842697784420357;  // std dev = 0.000, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */
%   | else return -0.06842697784420262;  // std dev = 1.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080108;  // std dev = 7.21e-09, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else if ( actor(A) )
%   | | | then return 0.1340070300080108;  // std dev = 9.88e-08, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202616;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return -0.06419184008202614;  // std dev = 9.13e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.673 seconds
Total inference time: 1.604 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.46 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.863 seconds
Total inference time: 1.604 seconds
AUC ROC: 1.0
Total revision time: 14.863
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:15:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.863, 'Inference time': 1.604, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.063, 'Inference time': 1.765}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 9.31e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25543766978919036;  // std dev = 1.314, 76.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4.21e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2677751431567449;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11652360108538087;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.041270941212997465;  // std dev = 0.117, 152.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23563952543672506;  // std dev = 0.210, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then return -0.10841728038887041;  // std dev = 0.013, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0820231514631056;  // std dev = 2.79e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19599275150976056;  // std dev = 0.184, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.09815435587282828;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07605514077477335;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16701932127975572;  // std dev = 0.163, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08869996440172481;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07088004442493717;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07088004442493727;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07088004442493714;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1451141767675313;  // std dev = 0.146, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08023843884525846;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06635179091193513;  // std dev = 3.36e-09, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.239 seconds
Total inference time: 1.842 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067949
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.718 seconds
Parameter learned model CLL: -0.067949


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [8.43e-08, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [1.69e-07, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.31e-08, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 64], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.314, 12, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 119, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.117, 133, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.21, 0, 64], 'true,false,true': [0.013, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.79e-08, 104, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.184, 0, 64], 'true,true,true,false': [0.012, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 130, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.163, 0, 64], 'true,true,false,true': [0.008, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true,true': [0.0, 97, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.146, 0, 64], 'true,true,false,true': [0.029, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.36e-09, 124, 0]}]]
[{'': [0.18140589569160917, 5.406303424261632e-17], 'true': [-8.881784197001252e-16, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.12230774276619368, 0.0], 'true': [1.1102230246251565e-16, 0.0], 'true,true': [1.1102230246251565e-16, nan], 'true,true,true': [1.1102230246251565e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05579438939052492, 6.765421556309548e-17], 'true': [4.440892098500626e-16, 5.046468293750712e-18], 'true,true': [4.440892098500626e-16, nan], 'true,true,true': [4.440892098500626e-16, nan], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.03372630615498288, -2.949029909160572e-17], 'true': [-3.0531133177191805e-16, -6.308085367188389e-18], 'true,false': [-6.308085367188389e-18, nan], 'true,false,true': [-6.308085367188389e-18, nan]}, {'': [0.022723830567762393, 1.4927368398321432e-17], 'true': [0.022723830567762393, nan], 'true,true': [0.022723830567762393, nan]}, {'': [0.0233113312464627, 0.013650624509361664], 'true': [0.0233113312464627, nan], 'true,true': [-4.9343245538895844e-17, -5.046468293750712e-18], 'true,true,false': [-5.046468293750712e-18, nan]}, {'': [0.017183564638473446, 7.472654973438553e-18], 'true': [0.0006858906917927357, 1.3200963145127291e-05], 'true,false': [1.3200963145127291e-05, nan]}, {'': [0.013179089874303348, -1.964240735875277e-17], 'true': [0.013179089874303348, nan], 'true,true': [0.013179089874303348, nan], 'true,true,true': [0.0005299364012297178, 1.0953901153378163e-05]}, {'': [0.009050126841181082, -1.800361661554308e-17], 'true': [0.006828969494417426, 0.0], 'true,true': [0.0004158796839671547, 7.151916289060631e-06], 'true,true,false': [7.151916289060631e-06, nan], 'false': [-1.774067719761848e-17, 3.96508223080413e-18], 'false,false': [nan, 3.96508223080413e-18], 'false,true': [-1.774067719761848e-17, nan]}, {'': [0.008401526149351118, 1.0744093786695063e-17], 'true': [0.008401526149351118, nan], 'true,true': [0.0003323592064837094, 5.115283000005615e-05], 'true,true,false': [5.115283000005615e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048796;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 8.43e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.12544463852839105;  // std dev = 7.88e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.69e-07, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360621;  // std dev = 7.88e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783624;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014983;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926097;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839682;  // std dev = 5.96e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109161;  // std dev = 5.67e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367078;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.06842697784420264;  // std dev = 5.58e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.756 seconds
Total inference time: 1.582 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.313 seconds
Refined model CLL: -0.064327


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.026 seconds
Total inference time: 1.582 seconds
AUC ROC: 1.0
Total revision time: 7.026
Best scored revision CLL: -0.064327


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063437, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.026, 'Inference time': 1.582, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066021, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.239, 'Inference time': 1.842}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048843;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839172;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360682;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878365;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.26763982456799534;  // std dev = 1.682, 148.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 6.32e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26538943679500726;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11778565207722068;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05099606387421635;  // std dev = 0.105, 274.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=27 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22919385677943127;  // std dev = 0.270, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then return -0.10717024089814227;  // std dev = 0.013, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08129386511531085;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19133349545214579;  // std dev = 0.238, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.09774949119884092;  // std dev = 0.015, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07542540245724905;  // std dev = 5.16e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16353104359047627;  // std dev = 0.212, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08936277247678215;  // std dev = 0.011, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07033106023016908;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07033106023016888;  // std dev = 7.74e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07033106023016905;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13924137011744317;  // std dev = 0.349, 131.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=129 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07867766875881696;  // std dev = 0.040, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0658691652248016;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065661
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.854 seconds
Total inference time: 1.97 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.944 seconds
Parameter learned model CLL: -0.067501


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [7.54e-07, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 238, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 219, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.77e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 251, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.77e-07, 0, 129], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 213, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.682, 19, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 242, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 102], 'true,true,false,true': [0.0, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.105, 247, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.27, 0, 129], 'true,false,true': [0.013, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 247, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.238, 0, 129], 'true,true,true,false': [0.015, 34, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 215, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.212, 0, 129], 'true,true,false,true': [0.011, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 12, 0], 'false,true,true': [7.74e-08, 191, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.349, 2, 129], 'true,true,false,true': [0.04, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 216, 0]}]]
[{'': [0.1622085048011019, -1.97787631277759e-16], 'true': [4.40646657835721e-15, 3.027880976250427e-17], 'true,true': [4.40646657835721e-15, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}, {'': [0.07988202346841242, -6.083413833562501e-17], 'true': [-1.7625866313428842e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7625866313428842e-15, nan], 'true,true,true': [-1.7625866313428842e-15, nan]}, {'': [0.057249377286753104, -8.492542658487253e-17], 'true': [1.7625866313428842e-15, 4.827056628805028e-18], 'true,true': [1.7625866313428842e-15, nan], 'true,true,true': [1.7625866313428842e-15, nan], 'true,false': [4.827056628805028e-18, nan], 'true,false,true': [4.827056628805028e-18, nan]}, {'': [0.039488176803680254, -8.548196058146745e-17], 'true': [1.1016166445893026e-15, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.019123500320045384, 1.651571441591142e-17], 'true': [0.019123500320045384, nan], 'true,true': [0.019123500320045384, nan]}, {'': [0.02321278624013956, 0.010953577129741656], 'true': [0.02321278624013956, nan], 'true,true': [-5.224578939412501e-17, -1.3322676295501878e-17], 'true,true,false': [-1.3322676295501878e-17, nan]}, {'': [0.01778013753639252, -2.24741502960558e-17], 'true': [0.0005663656201182476, 5.872495668629573e-06], 'true,false': [5.872495668629573e-06, nan]}, {'': [0.014145487819571688, 1.2393187251629654e-17], 'true': [0.014145487819571688, nan], 'true,true': [0.014145487819571688, nan], 'true,true,true': [0.0004404986835936969, 6.420738006233368e-06]}, {'': [0.010480945308394187, 2.6727591333568582e-17], 'true': [0.008509058202043297, -1.1564823173178713e-18], 'true,true': [0.00034780914759927387, 5.182102822993792e-06], 'true,true,false': [5.182102822993792e-06, nan], 'false': [3.138850436113008e-17, -5.551115123125783e-19], 'false,true': [3.138850436113008e-17, nan], 'false,false': [nan, -5.551115123125783e-19]}, {'': [0.007964620322834005, -1.3877787807814457e-17], 'true': [0.007964620322834005, nan], 'true,true': [0.0009274274708221613, 5.381575722409419e-05], 'true,true,false': [5.381575722409419e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995104;  // std dev = 7.54e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048813;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109555;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839177;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360668;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583092;  // std dev = 3.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.10159632948783658;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 2.49e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09269127618926062;  // std dev = 8.69e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 8.16e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694898;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.0851847513883968;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839685;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253534;  // std dev = 2.09e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.07877675473109147;  // std dev = 6.50e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1428029739769745;  // std dev = 0.086, 73.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=63 */
%   | | else return 0.13858223259010644;  // std dev = 0.090, 78.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=66 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333671;  // std dev = 1.16e-07, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15752150155255634;  // std dev = 0.003, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08338051262603238;  // std dev = 0.000702, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.0684269778442027;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then return -0.06842697784420261;  // std dev = 6.32e-08, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return -0.06842697784420265;  // std dev = 1.58e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13746947476473736;  // std dev = 7.45e-09, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else if ( actor(A) )
%   | | | then return 0.13797070110747237;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.0773835959239495;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07708279151761961;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064048
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.364 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065368
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.779 seconds
Refined model CLL: -0.065368


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064048
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.940999999999999 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0
Total revision time: 8.940999999999999
Best scored revision CLL: -0.065368


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064048, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.940999999999999, 'Inference time': 1.464, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065661, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.854, 'Inference time': 1.97}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048754;  // std dev = 2.35e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1254446385283913;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839213;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 6.32e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.24858619585237912;  // std dev = 2.405, 235.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.66e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26912065828472775;  // std dev = 1.49e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11582012132665827;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.054370256675233194;  // std dev = 0.102, 424.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2313918093413742;  // std dev = 0.334, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then return -0.10644042283056271;  // std dev = 0.016, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08104221870714559;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19291883556242057;  // std dev = 0.294, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.0969910813365669;  // std dev = 0.017, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07520793576226259;  // std dev = 1.15e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1647159645059055;  // std dev = 0.262, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08863645439121437;  // std dev = 0.013, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07014134968416967;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07014134968416975;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07014134968416964;  // std dev = 1.29e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1422628186022316;  // std dev = 0.314, 195.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=194 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07831995989626885;  // std dev = 0.042, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06570228425113579;  // std dev = 9.41e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065478
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.622 seconds
Total inference time: 1.874 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.955 seconds
Parameter learned model CLL: -0.06721


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.35e-07, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 336, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [6.19e-07, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 369, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.04e-07, 0, 194], 'true,false,true,true': [0.0, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 357, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.405, 41, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.66e-07, 354, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.49e-08, 0, 156], 'true,true,false,true': [0.0, 23, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.102, 386, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.334, 0, 194], 'true,false,true': [0.016, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 331, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.294, 0, 194], 'true,true,true,false': [0.017, 42, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.15e-07, 354, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.262, 0, 194], 'true,true,false,true': [0.013, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.63e-09, 10, 0], 'false,true,true': [0.0, 275, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.29e-08, 49, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.314, 1, 194], 'true,true,false,true': [0.042, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.41e-09, 349, 0]}]]
[{'': [0.1294788428901107, 1.4802973661668753e-16], 'true': [6.15315358802561e-15, 3.489272363107635e-17], 'true,true': [6.15315358802561e-15, nan], 'true,false': [3.489272363107635e-17, nan], 'true,false,true': [3.489272363107635e-17, nan]}, {'': [0.09949097152851125, -1.1102230246251565e-16], 'true': [-3.516087764586063e-15, 1.9927079929169476e-17], 'true,false': [1.9927079929169476e-17, nan], 'true,false,true': [1.9927079929169476e-17, nan], 'true,true': [-3.516087764586063e-15, nan], 'true,true,true': [-3.516087764586063e-15, nan]}, {'': [0.056565463443571856, -2.888385104715855e-17], 'true': [1.9777993675796604e-15, -1.1428766429964846e-17], 'true,true': [1.9777993675796604e-15, nan], 'true,true,true': [1.9777993675796604e-15, nan], 'true,false': [-1.1428766429964846e-17, nan], 'true,false,true': [-1.1428766429964846e-17, nan]}, {'': [0.02970109480734319, 1.1195526298741075e-17], 'true': [4.76136884787696e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.024614859947673175, 7.777833618842904e-17], 'true': [0.024614859947673175, nan], 'true,true': [0.024614859947673175, nan]}, {'': [0.016593355415326236, 0.010329780884640056], 'true': [0.016593355415326236, nan], 'true,true': [2.1635115351669717e-16, -2.413528314402514e-18], 'true,true,false': [-2.413528314402514e-18, nan]}, {'': [0.014671618079761055, -5.232471052614031e-17], 'true': [0.0005743184007989076, 7.7110746341014e-06], 'true,false': [7.7110746341014e-06, nan]}, {'': [0.012664306867822099, 3.763467880085276e-17], 'true': [0.012664306867822099, nan], 'true,true': [0.012664306867822099, nan], 'true,true,true': [0.0004469160753336648, 6.9089909706057525e-06]}, {'': [0.00936853674854142, -4.2490016991826976e-17], 'true': [0.008105328282964458, 6.938893903907229e-19], 'true,true': [0.00035287034033367647, 5.644634330805726e-06], 'true,true,false': [5.644634330805726e-06, nan], 'false': [-7.266914343001025e-18, 3.398641912117826e-18], 'false,false': [nan, 3.398641912117826e-18], 'false,true': [-7.266914343001025e-18, nan]}, {'': [0.007071363714016906, 8.843610339421017e-17], 'true': [0.007071363714016906, nan], 'true,true': [0.0005049235462706177, 4.6245275003730625e-05], 'true,true,false': [4.6245275003730625e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.14185106490048757;  // std dev = 2.15e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.1254446385283922;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.19e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360653;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 3.04e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783627;  // std dev = 1.19e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160149;  // std dev = 3.95e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926057;  // std dev = 1.32e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( female(A), director(B) )
%   | then return 0.2448583942677357;  // std dev = 0.058, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return -0.07975352276140923;  // std dev = 0.827, 376.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21192301046849443;  // std dev = 0.146, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08770814361642297;  // std dev = 0.071, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07917180711619991;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1787025401393099;  // std dev = 0.130, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.07401464885338369;  // std dev = 0.025, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07358882312010849;  // std dev = 1.04e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15397426804582207;  // std dev = 0.116, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.07230865567446602;  // std dev = 0.049, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.06872677547307161;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06872677547307149;  // std dev = 6.14e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | else return -0.06872677547307168;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( director(A) )
%   | | then return -0.06445628595203368;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return 0.1338485843154096;  // std dev = 0.005, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | | else return 0.13597217037094556;  // std dev = 0.104, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( female(A) )
%   | | then return -0.07093128904597469;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( director(A) )
%   | | | then return -0.06445628595203368;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06349714199297313;  // std dev = 0.000776, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then return -0.06445628595203351;  // std dev = 2.98e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else return -0.0644562859520335;  // std dev = 2.98e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.094 seconds
Total inference time: 1.596 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064633
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.26 seconds
Refined model CLL: -0.064633


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063602
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.931 seconds
Total inference time: 1.596 seconds
AUC ROC: 1.0
Total revision time: 11.931
Best scored revision CLL: -0.064633


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:15:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063602, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.931, 'Inference time': 1.596, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065478, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.622, 'Inference time': 1.874}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048724;  // std dev = 2.80e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.112316378193606;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783626;  // std dev = 2.36e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783559;  // std dev = 3.11e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.26067971043614396;  // std dev = 2.535, 303.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 1.69e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2667485797959865;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11706433316403377;  // std dev = 1.05e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05452151054344614;  // std dev = 0.101, 528.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=47 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22872621925485057;  // std dev = 0.370, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then return -0.10783352283146957;  // std dev = 0.020, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08103095488326492;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19098906437840582;  // std dev = 0.327, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.09791776435953453;  // std dev = 0.018, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07519819979537605;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16326902913214392;  // std dev = 0.290, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.0891048589523155;  // std dev = 0.014, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07013285478819832;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07013285478819851;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07013285478819843;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1398356695311121;  // std dev = 0.443, 262.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=259 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07865665709057695;  // std dev = 0.052, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06569481039884549;  // std dev = 3.73e-09, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065495
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.693 seconds
Total inference time: 1.881 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.846 seconds
Parameter learned model CLL: -0.067213


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.08e-06, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.8e-07, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 47, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 463, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.13e-07, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.36e-08, 46, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 467, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 259], 'true,false,true,true': [2.36e-08, 50, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.11e-07, 488, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.535, 44, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.69e-07, 471, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 212], 'true,true,false,true': [1.05e-08, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.101, 481, 47]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.37, 0, 259], 'true,false,true': [0.02, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 485, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.327, 0, 259], 'true,true,true,false': [0.018, 46, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 501, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.29, 0, 259], 'true,true,false,true': [0.014, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [8.33e-09, 19, 0], 'false,true,true': [0.0, 400, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 60, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.443, 3, 259], 'true,true,false,true': [0.052, 64, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 478, 0]}]]
[{'': [0.12211087233016515, 1.6665181435737958e-16], 'true': [4.499189523731908e-15, 4.6474452193611206e-17], 'true,true': [4.499189523731908e-15, nan], 'true,false': [4.6474452193611206e-17, nan], 'true,false,true': [4.6474452193611206e-17, nan]}, {'': [0.09280768631977482, -1.2660858682550382e-16], 'true': [-4.499189523731908e-15, -3.0708296425802203e-17], 'true,false': [-3.0708296425802203e-17, nan], 'true,false,true': [-3.0708296425802203e-17, nan], 'true,true': [-4.499189523731908e-15, nan], 'true,true,true': [-4.499189523731908e-15, nan]}, {'': [0.05709503108879575, -9.509404921842882e-18], 'true': [6.584179790827183e-16, 1.206764157201257e-17], 'true,true': [6.584179790827183e-16, nan], 'true,true,true': [6.584179790827183e-16, nan], 'true,false': [1.206764157201257e-17, nan], 'true,false,true': [1.206764157201257e-17, nan]}, {'': [0.03654865969849383, 1.9838411423629846e-16], 'true': [-4.1151123692669897e-16, 1.1102230246251566e-17], 'true,false': [1.1102230246251566e-17, nan], 'true,false,true': [1.1102230246251566e-17, nan]}, {'': [0.02121361538339312, 6.034333212400001e-17], 'true': [0.02121361538339312, nan], 'true,true': [0.02121361538339312, nan]}, {'': [0.013900113344027864, 0.01010609455521656], 'true': [0.013900113344027864, nan], 'true,true': [-6.032910020604624e-16, 4.440892098500626e-18], 'true,true,false': [4.440892098500626e-18, nan]}, {'': [0.014513143647242191, -2.7469435660828614e-18], 'true': [0.0005284170514134347, 8.675823826475128e-06], 'true,false': [8.675823826475128e-06, nan]}, {'': [0.01104065628863562, -1.3030162444702435e-16], 'true': [0.01104065628863562, nan], 'true,true': [0.01104065628863562, nan], 'true,true,true': [0.00041175135072730806, 7.34571576097624e-06]}, {'': [0.008788998597309935, -3.6685630378918214e-17], 'true': [0.006821738599775241, 3.652049423109067e-18], 'true,true': [0.0003255915958279486, 5.462109892866244e-06], 'true,true,false': [5.462109892866244e-06, nan], 'false': [-3.608224830031759e-17, -1.9428902930940238e-17], 'false,false': [nan, -1.9428902930940238e-17], 'false,true': [-3.608224830031759e-17, nan]}, {'': [0.00814162905525054, 1.3935853865587738e-17], 'true': [0.00814162905525054, nan], 'true,true': [0.0007481997616793268, 4.1636791297864316e-05], 'true,true,false': [4.1636791297864316e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995087;  // std dev = 1.08e-06, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.14185106490048738;  // std dev = 2.35e-07, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1254446385283912;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1254446385283923;  // std dev = 0.000, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 4.13e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360592;  // std dev = 0.000, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.10159632948783552;  // std dev = 3.22e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601502;  // std dev = 1.46e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926083;  // std dev = 1.66e-07, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694883;  // std dev = 2.53e-07, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08518475138839679;  // std dev = 1.48e-07, 515.000 (wgt'ed) examples reached here.  /* #neg=515 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325348;  // std dev = 2.86e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109205;  // std dev = 1.28e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527714;  // std dev = 7.30e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333759;  // std dev = 0.000, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367155;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then return -0.06842697784420326;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
%   | else return -0.06842697784420267;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.134007030008011;  // std dev = 5.27e-09, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.1312350178389196;  // std dev = 0.023, 143.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=141 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202619;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419184008202622;  // std dev = 3.73e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.385 seconds
Total inference time: 1.453 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064355
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.415 seconds
Refined model CLL: -0.064355


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.338999999999999 seconds
Total inference time: 1.453 seconds
AUC ROC: 1.0
Total revision time: 13.338999999999999
Best scored revision CLL: -0.064355


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:16:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06344, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.338999999999999, 'Inference time': 1.453, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065495, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.693, 'Inference time': 1.881}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048852;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360568;  // std dev = 2.98e-08, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783527;  // std dev = 3.89e-07, 565.000 (wgt'ed) examples reached here.  /* #neg=565 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2552116120320631;  // std dev = 2.962, 385.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926146;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2678194689932147;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11650033139438862;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05628844505259564;  // std dev = 0.099, 698.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22964216770983822;  // std dev = 0.419, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then return -0.107104472123243;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08089947757806484;  // std dev = 1.05e-07, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1916523149568246;  // std dev = 0.370, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.09691946479303239;  // std dev = 0.017, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07508454347841716;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1637664576138348;  // std dev = 0.329, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08902013714401769;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07003367660252843;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07003367660252802;  // std dev = 1.92e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07003367660252832;  // std dev = 3.25e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1381977309398875;  // std dev = 0.620, 331.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=324 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07770468280541425;  // std dev = 0.060, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06560754516856095;  // std dev = 3.36e-09, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.282 seconds
Total inference time: 1.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.675 seconds
Parameter learned model CLL: -0.067172


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.04e-06, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 581, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 324], 'true,false,true,true': [3.8e-08, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.89e-07, 565, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.962, 61, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 603, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 265], 'true,true,false,true': [0.0, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.099, 639, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.419, 0, 324], 'true,false,true': [0.021, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-07, 595, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.37, 0, 324], 'true,true,true,false': [0.017, 52, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 504, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.329, 0, 324], 'true,true,false,true': [0.015, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.27e-09, 31, 0], 'false,true,true': [1.92e-07, 474, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.25e-08, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.62, 7, 324], 'true,true,false,true': [0.06, 66, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.36e-09, 578, 0]}]]
[{'': [0.13917433799671208, -3.310875794668214e-16], 'true': [3.333410365294297e-15, 6.832141690000964e-17], 'true,true': [3.333410365294297e-15, nan], 'true,false': [6.832141690000964e-17, nan], 'true,false,true': [6.832141690000964e-17, nan]}, {'': [0.08970053242498503, -2.1567907662195283e-16], 'true': [-5.000115547941446e-15, -3.766828119263924e-17], 'true,false': [-3.766828119263924e-17, nan], 'true,false,true': [-3.766828119263924e-17, nan], 'true,true': [-5.000115547941446e-15, nan], 'true,true,true': [-5.000115547941446e-15, nan]}, {'': [0.0538615163825668, 1.5287064022377371e-18], 'true': [-4.386066270124075e-16, 2.3042364662031552e-17], 'true,false': [2.3042364662031552e-17, nan], 'true,false,true': [2.3042364662031552e-17, nan], 'true,true': [-4.386066270124075e-16, nan], 'true,true,true': [-4.386066270124075e-16, nan]}, {'': [0.03343088899118374, 2.6723952451154213e-16], 'true': [-9.430042480766762e-16, 2.62416351275037e-17], 'true,false': [2.62416351275037e-17, nan], 'true,false,true': [2.62416351275037e-17, nan]}, {'': [0.022787720980237448, -3.387745216103297e-17], 'true': [0.022787720980237448, nan], 'true,true': [0.022787720980237448, nan]}, {'': [0.01488565449848848, 0.009727612038027003], 'true': [0.01488565449848848, nan], 'true,true': [-5.228522017857341e-16, -2.44902137784961e-17], 'true,true,false': [-2.44902137784961e-17, nan]}, {'': [0.014712215701356958, 1.8659210497901792e-17], 'true': [0.0005424063151765344, 7.713192316272496e-06], 'true,false': [7.713192316272496e-06, nan]}, {'': [0.010288816565405324, -8.282616215457517e-17], 'true': [0.010288816565405324, nan], 'true,true': [0.010288816565405324, nan], 'true,true,true': [0.00042260288523663536, 5.816788973436097e-06]}, {'': [0.009445797478688876, 7.089130505863385e-17], 'true': [0.007021617519682975, 8.953411488912552e-19], 'true,true': [0.00033408731686095864, 5.4400428933194424e-06], 'true,true,false': [5.4400428933194424e-06, nan], 'false': [7.776245657712067e-17, 1.485509680836477e-17], 'false,true': [7.776245657712067e-17, nan], 'false,false': [nan, 1.485509680836477e-17]}, {'': [0.00743754281682924, 9.988165619465077e-18], 'true': [0.00743754281682924, nan], 'true,true': [0.001160370625768655, 5.4066349989054496e-05], 'true,true,false': [5.4066349989054496e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.1418510649004883;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839233;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.11231637819360589;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783627;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783515;  // std dev = 4.19e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.0926912761892614;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948784;  // std dev = 3.10e-07, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948934;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.08518475138839678;  // std dev = 1.49e-07, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253467;  // std dev = 2.53e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07877675473109173;  // std dev = 1.97e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109229;  // std dev = 0.000, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.70e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333717;  // std dev = 2.11e-08, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06842697784420265;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A) )
%   | then return -0.06842697784420354;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else return -0.06842697784420262;  // std dev = 1.05e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080108;  // std dev = 7.45e-09, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.13064772712512887;  // std dev = 0.026, 177.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=174 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202615;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.858 seconds
Total inference time: 1.563 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.892 seconds
Refined model CLL: -0.064365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063441
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.707 seconds
Total inference time: 1.563 seconds
AUC ROC: 1.0
Total revision time: 15.707
Best scored revision CLL: -0.064365


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:16:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063441, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.707, 'Inference time': 1.563, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.282, 'Inference time': 1.911}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 5.67e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.3010259841435109;  // std dev = 0.571, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.25893172323169916;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.12129939241510941;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07177761601358784;  // std dev = 0.067, 77.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21694972042239194;  // std dev = 0.101, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then return -0.10895287960242471;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07975523486160949;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18239970922301815;  // std dev = 0.089, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.09881735540156772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07409438569826579;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15678581022881757;  // std dev = 0.080, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.09035960306907853;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06916887292484998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06916887292485005;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06916887292484998;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1371760119667285;  // std dev = 0.072, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08320231434824625;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06484601193125981;  // std dev = 4.06e-09, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069949
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.794 seconds
Total inference time: 2.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.624 seconds
Parameter learned model CLL: -0.06497


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.46e-07, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [1.4e-07, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.67e-08, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.37e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [0.571, 2, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 82, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [9.13e-09, 0, 37], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.067, 74, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.101, 0, 40], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 88, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.089, 0, 40], 'true,true,true,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.08, 0, 40], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true,true': [0.0, 72, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.072, 0, 40], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.06e-09, 78, 0]}]]
[{'': [0.0826446280991747, 7.490661370964911e-17], 'true': [1.5099033134902129e-15, 0.0], 'true,true': [1.5099033134902129e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016987186495303844, -2.6645352591003756e-17], 'true': [-8.881784197001252e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001252e-16, nan], 'true,true,true': [-8.881784197001252e-16, nan]}, {'': [0.020217702556284307, 4.2363773308065186e-17], 'true': [4.884981308350689e-16, 0.0], 'true,true': [4.884981308350689e-16, nan], 'true,true,true': [4.884981308350689e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01222109308143778, 3.317907889684376e-17], 'true': [-3.3306690738754696e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0077506640541971945, 0.0], 'true': [0.0077506640541971945, nan], 'true,true': [0.0077506640541971945, nan]}, {'': [0.012728854130452476, 0.004433864880975198], 'true': [0.012728854130452476, nan], 'true,true': [9.601928861622976e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01367921446524974, -1.8924256101565167e-17], 'true': [0.0002541933175078004, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan]}, {'': [0.006717587726728985, -1.423362852083534e-17], 'true': [0.006717587726728985, nan], 'true,true': [0.006717587726728985, nan], 'true,true,true': [0.00019997945975928078, 0.0]}, {'': [0.0038962210819240574, -8.251657615457245e-18], 'true': [0.002922114296311879, 0.0], 'true,true': [0.00015960785330900452, 0.0], 'true,true,false': [0.0, nan], 'false': [-8.480870326997724e-18, 0.0], 'false,false': [nan, 0.0], 'false,true': [-8.480870326997724e-18, nan]}, {'': [0.0023258607192709626, 1.7792035651044177e-17], 'true': [0.0023258607192709626, nan], 'true,true': [0.00012945819764453303, 0.0], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1.40e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3000416909926791;  // std dev = 0.090, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.3019207960988127;  // std dev = 0.086, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25892573107137684;  // std dev = 0.001, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.12139479903146616;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0.2590004462385537;  // std dev = 0.000294, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21240959996105913;  // std dev = 0.000991, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10892106730758892;  // std dev = 0.000200, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07914701564001204;  // std dev = 0.029, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17903910339885934;  // std dev = 0.000871, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.09883562727052848;  // std dev = 0.000137, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07322109597358874;  // std dev = 2.69e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1542159304173374;  // std dev = 0.000773, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.09032348749037496;  // std dev = 0.000126, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.06840498083204564;  // std dev = 1.67e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.06840498083204563;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13527026315896604;  // std dev = 2.68e-06, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.13505111375701592;  // std dev = 1.86e-06, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.10548194958404344;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06417243174636533;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.56 seconds
Total inference time: 1.601 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064576
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.371 seconds
Refined model CLL: -0.064576


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.349 seconds
Total inference time: 1.601 seconds
AUC ROC: 1.0
Total revision time: 6.349
Best scored revision CLL: -0.064576


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073371, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.349, 'Inference time': 1.601, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069949, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.794, 'Inference time': 2.002}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839124;  // std dev = 5.58e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360633;  // std dev = 7.88e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783649;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.28782750780281063;  // std dev = 1.049, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926076;  // std dev = 6.99e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26147237399017564;  // std dev = 8.33e-09, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11989963826832649;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07314804564608525;  // std dev = 0.063, 144.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21800346074713825;  // std dev = 0.134, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then return -0.10781270810335841;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07965471099583789;  // std dev = 3.16e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1831611070037358;  // std dev = 0.118, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.09787223527382923;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0740073116718561;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15735580980554795;  // std dev = 0.106, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08956438057214335;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06909275564571526;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06909275564571547;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06909275564571526;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13273888005716203;  // std dev = 0.298, 83.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08164735008284589;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06477893196420935;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069875
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.435 seconds
Total inference time: 2.176 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.013 seconds
Parameter learned model CLL: -0.064918


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 143, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [2.53e-07, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 148, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [3.42e-07, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 160, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [8.43e-08, 0, 81], 'true,false,true,true': [3.73e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 170, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.049, 7, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 141, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [8.33e-09, 0, 76], 'true,true,false,true': [3.73e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.063, 139, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.134, 0, 81], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.16e-08, 151, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.118, 0, 81], 'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 145, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.106, 0, 81], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.32e-09, 3, 0], 'false,true,true': [0.0, 151, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.298, 2, 81], 'true,true,false,true': [0.018, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 154, 0]}]]
[{'': [0.08180785254387087, -9.006004955001269e-17], 'true': [-7.894919286223335e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-7.894919286223335e-16, nan]}, {'': [0.058401522544810125, 2.100421938480026e-17], 'true': [7.894919286223335e-16, 0.0], 'true,true': [7.894919286223335e-16, nan], 'true,true,true': [7.894919286223335e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015352817878679184, 3.8857805861880476e-17], 'true': [1.4474018691409447e-15, 2.3129646346357427e-18], 'true,true': [1.4474018691409447e-15, nan], 'true,true,true': [1.4474018691409447e-15, nan], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.026358511409373717, -7.445024988662814e-17], 'true': [8.77213254024815e-17, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan], 'true,false,true': [1.3877787807814458e-18, nan]}, {'': [0.012513108824637097, 3.4645257506033254e-17], 'true': [0.012513108824637097, nan], 'true,true': [0.012513108824637097, nan]}, {'': [0.009863584614924073, 0.0040277275265305145], 'true': [0.009863584614924073, nan], 'true,true': [8.180590707764311e-17, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.004970226077443411, 6.617223325580403e-18], 'true': [0.00022008459302510537, 0.0], 'true,false': [0.0, nan]}, {'': [0.0028870422436068394, -1.3782078926381253e-17], 'true': [0.0028870422436068394, nan], 'true,true': [0.0028870422436068394, nan], 'true,true,true': [0.0001732647529786823, -1.1564823173178713e-18]}, {'': [0.00580352604701495, -4.356571362453146e-17], 'true': [0.004591399488785026, 5.782411586589357e-19], 'true,true': [0.00013833411127820672, -1.982541115402065e-18], 'true,true,false': [-1.982541115402065e-18, nan], 'false': [-3.896809291730682e-17, 9.912705577010326e-19], 'false,false': [nan, 9.912705577010326e-19], 'false,true': [-3.896809291730682e-17, nan]}, {'': [0.006013099938365548, -1.0092936587501423e-17], 'true': [0.006013099938365548, nan], 'true,true': [0.0010728094656560537, 2.764425973803807e-05], 'true,true,false': [2.764425973803807e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.14185106490048807;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12544463852839116;  // std dev = 6.99e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360638;  // std dev = 6.99e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783649;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0926912761892607;  // std dev = 7.88e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 7.45e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0787767547310915;  // std dev = 8.56e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.14875581206505703;  // std dev = 0.079, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07343714441376614;  // std dev = 0.027, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1548930123498493;  // std dev = 0.016, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return -0.0926535054579194;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09355835084630808;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.0684148087897487;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else return -0.0684148087897487;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13375781861160274;  // std dev = 4.93e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.1370757761771246;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.07765739889655728;  // std dev = 0.000884, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.06418110320719828;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06418110320719826;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06418110320719826;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06418110320719829;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071946
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.159 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.636 seconds
Refined model CLL: -0.064376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071946
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.243 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0
Total revision time: 8.243
Best scored revision CLL: -0.064376


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:16:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071946, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.243, 'Inference time': 1.566, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069875, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.435, 'Inference time': 2.176}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839166;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936068;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.27544873146495863;  // std dev = 1.511, 137.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926057;  // std dev = 5.58e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26386982057095326;  // std dev = 1.12e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11859951770157974;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545016173215992;  // std dev = 0.057, 251.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21949219534731107;  // std dev = 0.162, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then return -0.10717017292573565;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07948610646879055;  // std dev = 3.94e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18424314691028926;  // std dev = 0.143, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.09725036112234976;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07386123445429163;  // std dev = 9.88e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15817011848069681;  // std dev = 0.128, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08916206749136404;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06896503538376565;  // std dev = 4.21e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06896503538376571;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13824725191628234;  // std dev = 0.115, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07837914131835634;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06466635675854292;  // std dev = 0.000, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.373 seconds
Total inference time: 2.036 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.374 seconds
Parameter learned model CLL: -0.064846


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [6.85e-07, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 203, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.69e-07, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 239, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [3.53e-07, 0, 122], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 245, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.511, 15, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 220, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.12e-08, 0, 115], 'true,true,false,true': [6.45e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.057, 244, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.162, 0, 122], 'true,false,true': [0.004, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 218, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.143, 0, 122], 'true,true,true,false': [0.004, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.88e-08, 204, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.128, 0, 122], 'true,true,false,true': [0.003, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [4.21e-08, 231, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.115, 0, 122], 'true,true,false,true': [0.022, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 184, 0]}]]
[{'': [0.07001836547291496, -1.6380339707584278e-16], 'true': [3.843919718046444e-15, -1.1102230246251566e-17], 'true,true': [3.843919718046444e-15, nan], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan]}, {'': [0.04122800213999965, -3.500210520985715e-17], 'true': [-1.3395477805313363e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.3395477805313363e-15, nan], 'true,true,true': [-1.3395477805313363e-15, nan]}, {'': [0.025745629181852463, -8.361512319352643e-17], 'true': [1.8054774433248448e-15, -1.734723475976807e-18], 'true,true': [1.8054774433248448e-15, nan], 'true,true,true': [1.8054774433248448e-15, nan], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan]}, {'': [0.023450617968664322, -7.250436079184695e-17], 'true': [1.0192211373607994e-15, -2.135044278125301e-18], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [-2.135044278125301e-18, nan]}, {'': [0.016663163758481876, 1.413011122250199e-17], 'true': [0.016663163758481876, nan], 'true,true': [0.016663163758481876, nan]}, {'': [0.008895510023209737, 0.0033031407898824103], 'true': [0.008895510023209737, nan], 'true,true': [1.2357264969740873e-16, 5.204170427930421e-18], 'true,true,false': [5.204170427930421e-18, nan]}, {'': [0.007669437802412303, 7.129872635207428e-18], 'true': [0.0002139887112150023, 1.5762060628379816e-06], 'true,false': [1.5762060628379816e-06, nan]}, {'': [0.007047976397914329, 4.7891973611281265e-17], 'true': [0.007047976397914329, nan], 'true,true': [0.007047976397914329, nan], 'true,true,true': [0.00016849523691051562, 1.0493035561948994e-06]}, {'': [0.004039356031944551, 3.7162276974900634e-18], 'true': [0.004039356031944551, nan], 'true,true': [0.00013450971634328465, 1.2466145443685973e-06], 'true,true,false': [1.2466145443685973e-06, nan], 'false': [7.689856447620132e-18, 0.0], 'false,true': [7.689856447620132e-18, nan], 'false,false': [nan, 0.0]}, {'': [0.004435025616438001, -1.68946982008176e-17], 'true': [0.004435025616438001, nan], 'true,true': [0.00010909457672414104, 3.615042684949491e-05], 'true,true,false': [3.615042684949491e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995105;  // std dev = 6.85e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048824;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839172;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.69e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.11231637819360679;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10159632948783655;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 2.19e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0926912761892605;  // std dev = 7.88e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694898;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14171991125019423;  // std dev = 0.393, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21039458734426925;  // std dev = 0.038, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109143;  // std dev = 5.77e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17700370339718852;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.07658730214584358;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.16181792201575843;  // std dev = 0.062, 79.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333666;  // std dev = 1.30e-07, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.15437689328773438;  // std dev = 0.034, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07941667221143017;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06842697784420261;  // std dev = 6.66e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else return -0.0684269778442027;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1337545792096276;  // std dev = 5.89e-09, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return 0.13340289847361472;  // std dev = 0.025, 75.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=74 */
%   | else if ( female(A) )
%   | | then return -0.06802652995231862;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07904018978561377;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.483 seconds
Total inference time: 1.983 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064067
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.486 seconds
Refined model CLL: -0.064067


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0687
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.716000000000001 seconds
Total inference time: 1.983 seconds
AUC ROC: 1.0
Total revision time: 10.716000000000001
Best scored revision CLL: -0.064067


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0687, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.716000000000001, 'Inference time': 1.983, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070133, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.373, 'Inference time': 2.036}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 1.37e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936065;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783663;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2775543782390567;  // std dev = 1.705, 182.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.62e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2634610178071952;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11881980552161504;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07531162658295017;  // std dev = 0.059, 311.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21906003411153022;  // std dev = 0.183, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then return -0.10772406930663615;  // std dev = 0.007, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07949624340816185;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18392729599635413;  // std dev = 0.162, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.09752786347826883;  // std dev = 0.005, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07387001811104481;  // std dev = 9.77e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15793125329766067;  // std dev = 0.145, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.0891087440376397;  // std dev = 0.003, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0689727160937657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06897271609376554;  // std dev = 1.49e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06897271609376567;  // std dev = 1.24e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13806123265397785;  // std dev = 0.131, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07950425025006597;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06467312736431687;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.307 seconds
Total inference time: 2.415 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064811
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.109 seconds
Parameter learned model CLL: -0.064811


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.02e-06, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.37e-07, 315, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 351, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [5.53e-07, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 345, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4.38e-07, 0, 163], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.705, 19, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.62e-07, 316, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 154], 'true,true,false,true': [1.18e-08, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.059, 302, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.183, 0, 163], 'true,false,true': [0.007, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.162, 0, 163], 'true,true,true,false': [0.005, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.77e-08, 331, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.145, 0, 163], 'true,true,false,true': [0.003, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true,true': [1.49e-08, 316, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.24e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.131, 0, 163], 'true,true,false,true': [0.023, 13, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 265, 0]}]]
[{'': [0.07283986083182344, 5.921189464667501e-17], 'true': [6.3643705166242106e-15, -1.1895246692412391e-17], 'true,true': [6.3643705166242106e-15, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan]}, {'': [0.06105492364323805, -9.615606822964319e-17], 'true': [-2.7898610483832155e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.7898610483832155e-15, nan], 'true,true,true': [-2.7898610483832155e-15, nan]}, {'': [0.0381269366026363, -4.1190883232469576e-17], 'true': [1.8744378918824727e-15, 1.3061447348531253e-17], 'true,true': [1.8744378918824727e-15, nan], 'true,true,true': [1.8744378918824727e-15, nan], 'true,false': [1.3061447348531253e-17, nan], 'true,false,true': [1.3061447348531253e-17, nan]}, {'': [0.017211209808451734, -5.3828995133340925e-17], 'true': [1.176972629786669e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015978865324160412, 8.29153904466889e-17], 'true': [0.015978865324160412, nan], 'true,true': [0.015978865324160412, nan]}, {'': [0.011163367407878462, 0.003427432934341276], 'true': [0.011163367407878462, nan], 'true,true': [-6.920870802858119e-17, 9.912705577010326e-18], 'true,true,false': [9.912705577010326e-18, nan]}, {'': [0.00887928593857052, -2.213069152076724e-17], 'true': [0.00020532245403388302, 2.721394098757768e-06], 'true,false': [2.721394098757768e-06, nan]}, {'': [0.006921589048830522, 2.884567375159017e-17], 'true': [0.006921589048830522, nan], 'true,true': [0.006921589048830522, nan], 'true,true,true': [0.00016170331563509176, 1.563422466877018e-06]}, {'': [0.004778870938940053, 8.465043589517323e-18], 'true': [0.004564297947134859, 0.0], 'true,true': [0.0001291167028706591, 8.528750972422847e-07], 'true,true,false': [8.528750972422847e-07, nan], 'false': [7.026728003956687e-19, 6.106226635438361e-18], 'false,false': [nan, 6.106226635438361e-18], 'false,true': [7.026728003956687e-19, nan]}, {'': [0.003338083190950747, -1.927179589915366e-17], 'true': [0.003338083190950747, nan], 'true,true': [0.00010474317314848415, 4.076926847291303e-05], 'true,true,false': [4.076926847291303e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048768;  // std dev = 1.79e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283921;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11231637819360697;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783662;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.09269127618926046;  // std dev = 1.41e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256949045;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.13e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694899;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1417199112501943;  // std dev = 0.393, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2102343926192316;  // std dev = 0.038, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07901676757247882;  // std dev = 0.036, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1770270407137029;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.07859194797534752;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15622793404570873;  // std dev = 0.070, 105.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=96 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07339155381568817;  // std dev = 0.029, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1546673371493904;  // std dev = 0.037, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return -0.08055936593737752;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.08435550618675187;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06840241847889698;  // std dev = 1.45e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | else return -0.06840241847889732;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13373678502497713;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.13674411818416762;  // std dev = 0.003, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.06314987149513329;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08015033395837337;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06417017089276336;  // std dev = 7.30e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.876 seconds
Total inference time: 1.532 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064079
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.637 seconds
Refined model CLL: -0.064079


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.929 seconds
Total inference time: 1.532 seconds
AUC ROC: 1.0
Total revision time: 11.929
Best scored revision CLL: -0.064079


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069476, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.929, 'Inference time': 1.532, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069731, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.307, 'Inference time': 2.415}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783606;  // std dev = 1.83e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.28719267499668366;  // std dev = 1.681, 222.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926058;  // std dev = 1.92e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2615949816690292;  // std dev = 1.49e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11983266451524074;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07613045026418198;  // std dev = 0.055, 383.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2173374954158078;  // std dev = 0.192, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then return -0.10800953348985289;  // std dev = 0.004, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07943634531015693;  // std dev = 9.19e-08, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18266901378341638;  // std dev = 0.171, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.09802277264947988;  // std dev = 0.004, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07381811434230887;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15698010095089285;  // std dev = 0.152, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.09003358585841834;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0689273281818655;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06892732818186524;  // std dev = 1.46e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06892732818186549;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1373208334893243;  // std dev = 0.137, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08180564477827232;  // std dev = 0.018, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06463311631521763;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.835 seconds
Total inference time: 1.934 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.001 seconds
Parameter learned model CLL: -0.064769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.08e-06, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.37e-07, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 391, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [6.36e-07, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 393, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.53e-07, 0, 204], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-07, 382, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.681, 18, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.92e-07, 384, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.49e-08, 0, 194], 'true,true,false,true': [0.0, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.055, 373, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.192, 0, 204], 'true,false,true': [0.004, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.19e-08, 380, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.171, 0, 204], 'true,true,true,false': [0.004, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 381, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.152, 0, 204], 'true,true,false,true': [0.006, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true,true': [1.46e-07, 357, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.45e-09, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.137, 0, 204], 'true,true,false,true': [0.018, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 386, 0]}]]
[{'': [0.07794244806853698, 1.5586417950169327e-16], 'true': [5.712206307091002e-15, 0.0], 'true,true': [5.712206307091002e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06272853527965257, -1.2720713939439133e-16], 'true': [-3.692035783851501e-15, -2.523234146875356e-18], 'true,false': [-2.523234146875356e-18, nan], 'true,false,true': [-2.523234146875356e-18, nan], 'true,true': [-3.692035783851501e-15, nan], 'true,true,true': [-3.692035783851501e-15, nan]}, {'': [0.04059258285023305, -2.2599959788807256e-17], 'true': [1.9853399969767506e-15, 4.827056628805028e-18], 'true,true': [1.9853399969767506e-15, nan], 'true,true,true': [1.9853399969767506e-15, nan], 'true,false': [4.827056628805028e-18, nan], 'true,false,true': [4.827056628805028e-18, nan]}, {'': [0.020077765120133328, 8.719028989202801e-17], 'true': [3.134747363647501e-16, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan], 'true,false,true': [-4.625929269271485e-18, nan]}, {'': [0.01273339556193977, 9.598803233738333e-17], 'true': [0.01273339556193977, nan], 'true,true': [0.01273339556193977, nan]}, {'': [0.011820081192505286, 0.00305786775802885], 'true': [0.011820081192505286, nan], 'true,true': [2.2891196384023844e-16, -5.843279076974508e-18], 'true,true,false': [-5.843279076974508e-18, nan]}, {'': [0.007683013601839118, 2.2204460492503132e-17], 'true': [0.0001808197334626118, 1.011513673649476e-06], 'true,false': [1.011513673649476e-06, nan]}, {'': [0.00600126582613192, -7.226648559239864e-17], 'true': [0.00600126582613192, nan], 'true,true': [0.00600126582613192, nan], 'true,true,true': [0.00014251157068461489, 8.081533561721871e-07]}, {'': [0.005384964145902504, 6.990293118010245e-17], 'true': [0.005065292881427065, 0.0], 'true,true': [0.00011389008496017173, 1.675779897676588e-06], 'true,true,false': [1.675779897676588e-06, nan], 'false': [5.970947359328573e-17, 2.64338815386942e-18], 'false,true': [5.970947359328573e-17, nan], 'false,false': [nan, 2.64338815386942e-18]}, {'': [0.0036640228261327515, -1.4381127261983892e-17], 'true': [0.0036640228261327515, nan], 'true,true': [9.246763577425916e-05, 1.8457553331520536e-05], 'true,true,false': [1.8457553331520536e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1418510649004874;  // std dev = 2.76e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.1254446385283922;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.11231637819360621;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1015963294878362;  // std dev = 1.43e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926049;  // std dev = 2.00e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948856;  // std dev = 4.17e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.30e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08518475138839689;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07891686843448123;  // std dev = 0.040, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07323671524343597;  // std dev = 1.67e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.06841865304922237;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.06841865304922216;  // std dev = 4.47e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | else return -0.06841865304922236;  // std dev = 1.49e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801134;  // std dev = 7.21e-09, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.13221729543332109;  // std dev = 0.020, 124.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419131543745864;  // std dev = 1.89e-06, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(B) )
%   | then return -0.06418449505808076;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else return -0.06418449505808076;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.112 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.49 seconds
Refined model CLL: -0.063605


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.438 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0
Total revision time: 12.438
Best scored revision CLL: -0.063605


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066632, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.438, 'Inference time': 1.544, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069728, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.835, 'Inference time': 1.934}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2766155140028795;  // std dev = 1.105, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6.83e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26364324421940755;  // std dev = 1.39e-08, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.1187215400523104;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0623675214467479;  // std dev = 0.088, 147.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22470969553674075;  // std dev = 0.176, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.10835092851468814;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08044861941941765;  // std dev = 5.48e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18807362431518343;  // std dev = 0.155, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.09820444919967723;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07469461497370669;  // std dev = 4.21e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16107790480241885;  // std dev = 0.138, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.091009717945151;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06969327968659943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06969327968659927;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06969327968659943;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.14051922004452197;  // std dev = 0.124, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08122598554921642;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06530792675873533;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.181 seconds
Total inference time: 1.378 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.656 seconds
Parameter learned model CLL: -0.066555


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [1.46e-07, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [1.88e-07, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true,true': [3.73e-09, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.105, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.39e-08, 0, 57], 'true,true,false,true': [3.73e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 137, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.176, 0, 67], 'true,false,true': [0.008, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.48e-08, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.155, 0, 67], 'true,true,true,false': [0.006, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.21e-08, 135, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.138, 0, 67], 'true,true,false,true': [0.007, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true,true': [4.94e-08, 103, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.124, 0, 67], 'true,true,false,true': [0.025, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}]]
[{'': [0.07543629198723856, -2.0655312086049424e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0538529514000756, 5.4601132358614255e-17], 'true': [3.1815346377317917e-16, -2.3129646346357427e-18], 'true,true': [3.1815346377317917e-16, nan], 'true,true,true': [3.1815346377317917e-16, nan], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.038181219886903005, 6.00120553851436e-17], 'true': [5.302557729552986e-16, -1.982541115402065e-18], 'true,true': [5.302557729552986e-16, nan], 'true,true,true': [5.302557729552986e-16, nan], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.025677983095270987, -5.843279076974508e-18], 'true': [-2.9164067512541426e-16, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan], 'true,false,true': [1.734723475976807e-18, nan]}, {'': [0.016285075257554536, 3.4798035100191475e-17], 'true': [0.016285075257554536, nan], 'true,true': [0.016285075257554536, nan]}, {'': [0.015779524185213906, 0.007787595582233063], 'true': [0.015779524185213906, nan], 'true,true': [1.791938916938849e-16, 1.734723475976807e-18], 'true,true,false': [1.734723475976807e-18, nan]}, {'': [0.013833871245044515, 2.4174211020063893e-17], 'true': [0.0004602324898248555, 5.9966476650610074e-06], 'true,false': [5.9966476650610074e-06, nan]}, {'': [0.008131280254924518, 1.3158198810372226e-17], 'true': [0.008131280254924518, nan], 'true,true': [0.008131280254924518, nan], 'true,true,true': [0.0003597280547230216, 4.7756629394206385e-06]}, {'': [0.007831234035584975, 2.434699615406045e-17], 'true': [0.007430157812129173, 0.0], 'true,true': [0.00028531690330738476, 5.431390210221265e-06], 'true,true,false': [5.431390210221265e-06, nan], 'false': [2.3713501496848002e-17, 0.0], 'false,true': [2.3713501496848002e-17, nan], 'false,false': [nan, 0.0]}, {'': [0.008396561850630474, -4.803849625781927e-18], 'true': [0.008396561850630474, nan], 'true,true': [0.000230130188742916, 3.556789811782186e-05], 'true,true,false': [3.556789811782186e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.14185106490048788;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.12544463852839108;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1123163781936062;  // std dev = 8.94e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783635;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926096;  // std dev = 5.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.50e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14171991125019398;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21033755405665155;  // std dev = 0.027, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07877675473109154;  // std dev = 7.74e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14126083499043057;  // std dev = 0.088, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.1781176368025846;  // std dev = 0.023, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1555849489756085;  // std dev = 0.026, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07996953626303965;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.07481029652725237;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06842697784420264;  // std dev = 5.48e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13781355783638194;  // std dev = 1.86e-09, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.1343747775489267;  // std dev = 0.003, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( director(A) )
%   | | then return -0.06380945123083227;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06700573863088302;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.803 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.426 seconds
Refined model CLL: -0.06479


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.066 seconds
Total inference time: 1.208 seconds
AUC ROC: 1.0
Total revision time: 7.066
Best scored revision CLL: -0.06479


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:17:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06405, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.066, 'Inference time': 1.208, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065797, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.181, 'Inference time': 1.378}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048832;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360676;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.26470239173861654;  // std dev = 1.761, 155.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 6.66e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26596250700359625;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11748075952329119;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06092309129598653;  // std dev = 0.090, 271.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2259544775451702;  // std dev = 0.245, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.10674926012636761;  // std dev = 0.010, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08055553828291333;  // std dev = 7.88e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1889719806218219;  // std dev = 0.217, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09715730517951342;  // std dev = 0.009, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07478711010913126;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16174973230034895;  // std dev = 0.193, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08912646800310134;  // std dev = 0.008, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06977404496992101;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06977404496992134;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06977404496992098;  // std dev = 1.29e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13651723670525817;  // std dev = 0.394, 137.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=134 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07784393246817031;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06537903187095216;  // std dev = 1.86e-09, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.036 seconds
Total inference time: 1.624 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.073 seconds
Parameter learned model CLL: -0.066623


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [8e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.92e-07, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.29e-08, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4e-07, 0, 134], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 240, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.761, 21, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 247, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 115], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 252, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.245, 0, 134], 'true,false,true': [0.01, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 263, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.217, 0, 134], 'true,true,true,false': [0.009, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 251, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.193, 0, 134], 'true,true,false,true': [0.008, 17, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true,true': [0.0, 224, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.29e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.394, 3, 134], 'true,true,false,true': [0.033, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 226, 0]}]]
[{'': [0.09053646232152184, -1.6565232430915034e-16], 'true': [4.772301956597688e-15, -1.4802973661668754e-17], 'true,true': [4.772301956597688e-15, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.4802973661668754e-17, nan]}, {'': [0.09459751658392809, -5.0641752000445734e-17], 'true': [-1.908920782639075e-15, -4.440892098500626e-18], 'true,false': [-4.440892098500626e-18, nan], 'true,false,true': [-4.440892098500626e-18, nan], 'true,true': [-1.908920782639075e-15, nan], 'true,true,true': [-1.908920782639075e-15, nan]}, {'': [0.054003098551413165, -7.715109154174817e-17], 'true': [1.8028696280480155e-15, 7.569702440626067e-18], 'true,true': [1.8028696280480155e-15, nan], 'true,true,true': [1.8028696280480155e-15, nan], 'true,false': [7.569702440626067e-18, nan], 'true,false,true': [7.569702440626067e-18, nan]}, {'': [0.029308539913144173, -7.401486830834377e-17], 'true': [1.193075489149422e-15, -1.0225738384705389e-17], 'true,false': [-1.0225738384705389e-17, nan], 'true,false,true': [-1.0225738384705389e-17, nan]}, {'': [0.020017424711745065, 1.797932023684464e-17], 'true': [0.020017424711745065, nan], 'true,true': [0.020017424711745065, nan]}, {'': [0.011715252858760605, 0.00806787605942161], 'true': [0.011715252858760605, nan], 'true,true': [-1.2357264969740873e-16, -5.046468293750712e-18], 'true,true,false': [-5.046468293750712e-18, nan]}, {'': [0.014640465770650956, 2.3639729801904473e-17], 'true': [0.0004479528297879757, 4.1601158579004e-06], 'true,false': [4.1601158579004e-06, nan]}, {'': [0.009556846470810485, -1.7692797205181777e-18], 'true': [0.009556846470810485, nan], 'true,true': [0.009556846470810485, nan], 'true,true,true': [0.00035017416559193814, 4.046124304228626e-06]}, {'': [0.007995079490718185, -3.6857606485531515e-17], 'true': [0.006534967339535688, 0.0], 'true,true': [0.0002777044680524066, 3.88666712436915e-06], 'true,true,false': [3.88666712436915e-06, nan], 'false': [-3.271192840413408e-17, 7.240584943207542e-18], 'false,false': [nan, 7.240584943207542e-18], 'false,true': [-3.271192840413408e-17, nan]}, {'': [0.0061022624260585155, 2.9474947556420085e-18], 'true': [0.0061022624260585155, nan], 'true,true': [0.0011316225748367703, 5.4028296305097535e-05], 'true,true,false': [5.4028296305097535e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1418510649004882;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839177;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360686;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.10159632948783658;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926053;  // std dev = 7.30e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839678;  // std dev = 8.30e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07877675473109143;  // std dev = 6.99e-08, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527772;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.14371746794412937;  // std dev = 0.085, 90.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=78 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333667;  // std dev = 1.30e-07, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15528755020649312;  // std dev = 0.025, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.0780227970098037;  // std dev = 0.032, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.0684269778442027;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06842697784420261;  // std dev = 6.91e-08, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else return -0.06842697784420268;  // std dev = 8.33e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13371211143122255;  // std dev = 4.93e-09, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0.13507134361025558;  // std dev = 0.023, 79.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=78 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.06361781220427938;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07783259137689677;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064526
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.405 seconds
Total inference time: 1.149 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064683
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.845 seconds
Refined model CLL: -0.064683


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064526
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.359 seconds
Total inference time: 1.149 seconds
AUC ROC: 1.0
Total revision time: 9.359
Best scored revision CLL: -0.064683


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064526, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.359, 'Inference time': 1.149, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065876, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.036, 'Inference time': 1.624}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048746;  // std dev = 2.60e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839216;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360647;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783648;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2581802822837675;  // std dev = 2.285, 238.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 1.84e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26723773730539324;  // std dev = 5.27e-09, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.1168062387444408;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06043471581286852;  // std dev = 0.092, 360.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=26 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22609589998412488;  // std dev = 0.290, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.10633587656492563;  // std dev = 0.012, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08059171787976022;  // std dev = 1.74e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1890685025939383;  // std dev = 0.257, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09734365441226167;  // std dev = 0.014, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07481840536740825;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16181827699153167;  // std dev = 0.229, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08846938421621668;  // std dev = 0.009, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06980136873679524;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06980136873679509;  // std dev = 5.77e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06980136873679528;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13513120929024022;  // std dev = 0.539, 208.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=202 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.0773756760183142;  // std dev = 0.050, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06540308534735446;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.956 seconds
Total inference time: 1.329 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.557 seconds
Parameter learned model CLL: -0.06663


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.08e-06, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.6e-07, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 380, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [6.36e-07, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 361, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.67e-07, 0, 202], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.285, 36, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.84e-07, 378, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 176], 'true,true,false,true': [1.49e-08, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.092, 334, 26]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.29, 0, 202], 'true,false,true': [0.012, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.74e-07, 390, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.257, 0, 202], 'true,true,true,false': [0.014, 33, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 374, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.229, 0, 202], 'true,true,false,true': [0.009, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 19, 0], 'false,true,true': [5.77e-08, 301, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 40, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.539, 6, 202], 'true,true,false,true': [0.05, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 344, 0]}]]
[{'': [0.12331226659006576, 1.7532872700573902e-16], 'true': [5.768762805181012e-15, 3.2653618371328135e-17], 'true,true': [5.768762805181012e-15, nan], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [3.2653618371328135e-17, nan]}, {'': [0.06996306716507142, -1.1452826990870037e-16], 'true': [-3.728590593592605e-15, -4.440892098500626e-18], 'true,false': [-4.440892098500626e-18, nan], 'true,false,true': [-4.440892098500626e-18, nan], 'true,true': [-3.728590593592605e-15, nan], 'true,true,true': [-3.728590593592605e-15, nan]}, {'': [0.05833076716741741, -2.952393638892383e-17], 'true': [2.0049968286299855e-15, -9.00180830777154e-18], 'true,true': [2.0049968286299855e-15, nan], 'true,true,true': [2.0049968286299855e-15, nan], 'true,false': [-9.00180830777154e-18, nan], 'true,false,true': [-9.00180830777154e-18, nan]}, {'': [0.03181180258253101, -1.0327656043024712e-17], 'true': [3.5175382958420803e-16, -1.734723475976807e-18], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan]}, {'': [0.021940547621933898, 8.928777764181153e-17], 'true': [0.021940547621933898, nan], 'true,true': [0.021940547621933898, nan]}, {'': [0.017007726791886748, 0.008379772465860398], 'true': [0.017007726791886748, nan], 'true,true': [2.0185873175002847e-17, 8.22387425648264e-18], 'true,true,false': [8.22387425648264e-18, nan]}, {'': [0.013109240408444316, 7.743093915334425e-17], 'true': [0.0004171832615041036, 4.601501194274389e-06], 'true,false': [4.601501194274389e-06, nan]}, {'': [0.010183069899274387, -6.411983243824433e-17], 'true': [0.010183069899274387, nan], 'true,true': [0.010183069899274387, nan], 'true,true,true': [0.00032636024676199445, 5.533335455423026e-06]}, {'': [0.008982596574594602, 2.2139344772583766e-17], 'true': [0.006558784546996621, 0.0], 'true,true': [0.00025895536887384147, 3.302039992911659e-06], 'true,true,false': [3.302039992911659e-06, nan], 'false': [1.106534576038362e-17, -9.714451465470119e-18], 'false,true': [1.106534576038362e-17, nan], 'false,false': [nan, -9.714451465470119e-18]}, {'': [0.00757900795201626, -5.292923722050165e-17], 'true': [0.00757900795201626, nan], 'true,true': [0.001397354603179387, 5.821532505317142e-05], 'true,true,false': [5.821532505317142e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1254446385283913;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.12544463852839213;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.11231637819360638;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.10159632948783616;  // std dev = 1.55e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.0926912761892605;  // std dev = 1.94e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948884;  // std dev = 3.55e-07, 176.000 (wgt'ed) examples reached here.  /* #pos=176 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.15e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | else if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2551722425694898;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253498;  // std dev = 3.01e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.07877675473109143;  // std dev = 1.01e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 9.19e-08, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367153;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.06842697784420303;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 2.63e-09, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.13229841905895903;  // std dev = 0.018, 116.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=115 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202619;  // std dev = 1.61e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202626;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.213 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064178
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.361 seconds
Refined model CLL: -0.064178


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.087 seconds
Total inference time: 1.199 seconds
AUC ROC: 1.0
Total revision time: 12.087
Best scored revision CLL: -0.064178


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063877, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.087, 'Inference time': 1.199, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.956, 'Inference time': 1.329}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048735;  // std dev = 2.38e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839122;  // std dev = 4.71e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360649;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360592;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783559;  // std dev = 3.02e-07, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2695414279833508;  // std dev = 2.385, 307.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926115;  // std dev = 7.88e-08, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2650188696527422;  // std dev = 1.24e-08, 229.000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11798339552120839;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.060535454713407655;  // std dev = 0.091, 551.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2256542827798217;  // std dev = 0.352, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.10839430724364121;  // std dev = 0.017, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08058425377575648;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18875712287609522;  // std dev = 0.311, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.0983060002891108;  // std dev = 0.016, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07481194908499918;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16159022314976698;  // std dev = 0.277, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.09000210855005077;  // std dev = 0.015, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06979573189607527;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06979573189607534;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06979573189607531;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13715025188991406;  // std dev = 0.520, 274.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=269 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07967863870121311;  // std dev = 0.051, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0653981232502801;  // std dev = 5.82e-09, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.555 seconds
Total inference time: 1.55 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.399 seconds
Parameter learned model CLL: -0.066662


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.07e-06, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.38e-07, 474, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.71e-08, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [3.58e-07, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 493, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [0.0, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.02e-07, 468, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.385, 38, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 510, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.24e-08, 0, 229], 'true,true,false,true': [0.0, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.091, 511, 40]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.352, 0, 269], 'true,false,true': [0.017, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 470, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.311, 0, 269], 'true,true,true,false': [0.016, 40, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 474, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.277, 0, 269], 'true,true,false,true': [0.015, 41, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 19, 0], 'false,true,true': [0.0, 385, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 49, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.52, 5, 269], 'true,true,false,true': [0.051, 64, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.82e-09, 492, 0]}]]
[{'': [0.09026744667286007, 1.1992282460086078e-16], 'true': [4.226276495227362e-15, 2.590520390792032e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [2.590520390792032e-17, nan]}, {'': [0.09305148254423591, -1.355453009984127e-16], 'true': [-4.5432472323694135e-15, 4.531522549490435e-17], 'true,false': [4.531522549490435e-17, nan], 'true,false,true': [4.531522549490435e-17, nan], 'true,true': [-4.5432472323694135e-15, nan], 'true,true,true': [-4.5432472323694135e-15, nan]}, {'': [0.045416488637913824, -7.206315778500002e-18], 'true': [4.754561057130781e-16, -2.5376526277146434e-17], 'true,true': [4.754561057130781e-16, nan], 'true,true,true': [4.754561057130781e-16, nan], 'true,false': [-2.5376526277146434e-17, nan], 'true,false,true': [-2.5376526277146434e-17, nan]}, {'': [0.029226564708378745, 1.95475165019472e-16], 'true': [-5.018703338082492e-16, -1.460819769243627e-18], 'true,false': [-1.460819769243627e-18, nan], 'true,false,true': [-1.460819769243627e-18, nan]}, {'': [0.018535599312057952, 1.2190684191962503e-17], 'true': [0.018535599312057952, nan], 'true,true': [0.018535599312057952, nan]}, {'': [0.015023111616284182, 0.008321065188588817], 'true': [0.015023111616284182, nan], 'true,true': [1.5514033531879916e-16, -7.401486830834377e-18], 'true,true,false': [-7.401486830834377e-18, nan]}, {'': [0.01274331669314386, -2.2676895822130856e-17], 'true': [0.00046008467264175456, 7.369331516828893e-06], 'true,false': [7.369331516828893e-06, nan]}, {'': [0.009600236064760405, -7.682555950992644e-17], 'true': [0.009600236064760405, nan], 'true,true': [0.009600236064760405, nan], 'true,true,true': [0.00035952202115629745, 6.145880857663655e-06]}, {'': [0.009214426898739114, -2.251143460069442e-17], 'true': [0.007512585757912442, -1.460819769243627e-18], 'true,true': [0.0002850520606967275, 5.320423484652209e-06], 'true,true,false': [5.320423484652209e-06, nan], 'false': [-3.345087554714757e-17, -6.230843505549348e-18], 'false,false': [nan, -6.230843505549348e-18], 'false,true': [-3.345087554714757e-17, nan]}, {'': [0.008025407957028934, 3.429957311850077e-17], 'true': [0.008025407957028934, nan], 'true,true': [0.0009882008271477763, 4.088773974915763e-05], 'true,true,false': [4.088773974915763e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.14185106490048754;  // std dev = 1.46e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1254446385283923;  // std dev = 0.000, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.1123163781936059;  // std dev = 0.000, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783553;  // std dev = 3.17e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.09269127618926117;  // std dev = 7.88e-08, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694882;  // std dev = 2.83e-07, 229.000 (wgt'ed) examples reached here.  /* #pos=229 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08518475138839679;  // std dev = 1.43e-07, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253479;  // std dev = 2.89e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07877675473109187;  // std dev = 1.70e-07, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527708;  // std dev = 1.12e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333722;  // std dev = 0.000, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367155;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0684269778442027;  // std dev = 1.18e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.0684269778442034;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801104;  // std dev = 4.17e-09, 124.000 (wgt'ed) examples reached here.  /* #pos=124 */
%   | | else return 0.12998948534402383;  // std dev = 0.028, 148.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=145 */
%   | else if ( director(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.23 seconds
Total inference time: 1.356 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064175
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.398 seconds
Refined model CLL: -0.064175


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.581999999999999 seconds
Total inference time: 1.356 seconds
AUC ROC: 1.0
Total revision time: 13.581999999999999
Best scored revision CLL: -0.064175


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063882, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.581999999999999, 'Inference time': 1.356, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065876, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.555, 'Inference time': 1.55}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004885;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839233;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 0.000, 657.000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783508;  // std dev = 4.37e-07, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2758718258444747;  // std dev = 2.499, 378.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926144;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26378764585562914;  // std dev = 1.12e-08, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11864375244814698;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05667246976454225;  // std dev = 0.097, 701.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=59 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22617484882805577;  // std dev = 0.412, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.10893954804335025;  // std dev = 0.025, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08087092811104882;  // std dev = 3.22e-07, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18914186176504982;  // std dev = 0.364, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09787488523048304;  // std dev = 0.015, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07505986056923103;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16188383382095717;  // std dev = 0.324, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08991772062906735;  // std dev = 0.015, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07001213550545657;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.0700121355054571;  // std dev = 0.000, 532.000 (wgt'ed) examples reached here.  /* #neg=532 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07001213550545647;  // std dev = 1.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13576803775382895;  // std dev = 0.678, 346.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=337 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07991859677490451;  // std dev = 0.052, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0655885896260861;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.6 seconds
Total inference time: 1.551 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.596 seconds
Parameter learned model CLL: -0.066896


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.04e-06, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.58e-08, 70, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 657, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [4.83e-08, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.37e-07, 612, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.499, 41, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 601, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.12e-08, 0, 278], 'true,true,false,true': [1.83e-08, 36, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.097, 642, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.412, 0, 337], 'true,false,true': [0.025, 76, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.22e-07, 627, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.364, 0, 337], 'true,true,true,false': [0.015, 48, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 621, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.324, 0, 337], 'true,true,false,true': [0.015, 43, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 13, 0], 'false,true,true': [0.0, 532, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.49e-08, 57, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.678, 9, 337], 'true,true,false,true': [0.052, 61, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 614, 0]}]]
[{'': [0.12374062717411209, -3.2722362831057244e-16], 'true': [3.204821834882351e-15, 6.232831015439475e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [6.232831015439475e-17, nan], 'true,false,true': [6.232831015439475e-17, nan]}, {'': [0.08383120972478723, -2.6165649025535604e-16], 'true': [-5.144582419153248e-15, -3.561092720495785e-17], 'true,false': [-3.561092720495785e-17, nan], 'true,false,true': [-3.561092720495785e-17, nan], 'true,true': [-5.144582419153248e-15, nan], 'true,true,true': [-5.144582419153248e-15, nan]}, {'': [0.06348622722035833, -1.514094109686667e-16], 'true': [-5.90361916952012e-16, 4.4408920985006264e-17], 'true,false': [4.4408920985006264e-17, nan], 'true,false,true': [4.4408920985006264e-17, nan], 'true,true': [-5.90361916952012e-16, nan], 'true,true,true': [-5.90361916952012e-16, nan]}, {'': [0.03652664611688676, 3.1202346443713547e-16], 'true': [-9.90964646312306e-16, 3.586874387250506e-17], 'true,false': [3.586874387250506e-17, nan], 'true,false,true': [3.586874387250506e-17, nan]}, {'': [0.01652637735136406, -3.694585772463083e-17], 'true': [0.01652637735136406, nan], 'true,true': [0.01652637735136406, nan]}, {'': [0.014845508684744749, 0.009465613839099593], 'true': [0.014845508684744749, nan], 'true,true': [1.2779545607196046e-16, 9.25185853854297e-18], 'true,true,false': [9.25185853854297e-18, nan]}, {'': [0.017276159431251655, 1.6573664291054969e-16], 'true': [0.0005046910846311409, 8.402514170359257e-06], 'true,false': [8.402514170359257e-06, nan]}, {'': [0.009335250717671346, -4.5767648036077307e-17], 'true': [0.009335250717671346, nan], 'true,true': [0.009335250717671346, nan], 'true,true,true': [0.0003936503162005156, 4.7041428147404085e-06]}, {'': [0.007743402217720863, -9.650835120680478e-17], 'true': [0.006639747732313158, -2.135044278125301e-18], 'true,true': [0.0003116499874036882, 5.0171618417479385e-06], 'true,true,false': [5.0171618417479385e-06, nan], 'false': [-8.764918615461762e-17, 3.895519384649672e-18], 'false,false': [nan, 3.895519384649672e-18], 'false,true': [-8.764918615461762e-17, nan]}, {'': [0.007062255780931436, -1.4465446574920607e-18], 'true': [0.007062255780931436, nan], 'true,true': [0.0013272407342388322, 4.368251501342197e-05], 'true,true,false': [4.368251501342197e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048888;  // std dev = 0.000, 672.000 (wgt'ed) examples reached here.  /* #neg=672 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839233;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360572;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783504;  // std dev = 4.49e-07, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.0926912761892616;  // std dev = 0.000, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694878;  // std dev = 3.26e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.63e-07, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.25517224256948934;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.08518475138839679;  // std dev = 4.56e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839679;  // std dev = 1.29e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253465;  // std dev = 2.53e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.0787767547310926;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333677;  // std dev = 1.97e-07, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420261;  // std dev = 1.05e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A) )
%   | then return -0.06842697784420361;  // std dev = 0.000, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */
%   | else return -0.06842697784420261;  // std dev = 1.29e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801098;  // std dev = 5.27e-09, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else if ( actor(A) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202612;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | | else return -0.06419184008202611;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.012 seconds
Total inference time: 1.29 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.874 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 16.081999999999997 seconds
Total inference time: 1.29 seconds
AUC ROC: 1.0
Total revision time: 16.081999999999997
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 16.081999999999997, 'Inference time': 1.29, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066052, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.6, 'Inference time': 1.551}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783644;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2766155140028795;  // std dev = 1.105, 75.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 7.60e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26364324421940755;  // std dev = 1.34e-08, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.1187215400523104;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05159225682163495;  // std dev = 0.105, 131.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2269887020037581;  // std dev = 0.188, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.10849573476859514;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08124934945587087;  // std dev = 1.49e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1897342514850144;  // std dev = 0.166, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.09944558268565677;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07538693947317823;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16233007468216812;  // std dev = 0.147, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.09059293262128715;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07029751131574916;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07029751131574907;  // std dev = 3.80e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07029751131574914;  // std dev = 6.97e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1384428238344822;  // std dev = 0.245, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.0801968548896108;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06583965735795493;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.387 seconds
Total inference time: 1.37 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.612 seconds
Parameter learned model CLL: -0.067011


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [1.46e-07, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [1.88e-07, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 67], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 148, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.105, 8, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 137, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [1.34e-08, 0, 54], 'true,true,false,true': [3.73e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.105, 118, 13]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.188, 0, 67], 'true,false,true': [0.01, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.166, 0, 67], 'true,true,true,false': [0.01, 12, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.147, 0, 67], 'true,true,false,true': [0.009, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true,true': [3.8e-08, 112, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.97e-09, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.245, 1, 67], 'true,true,false,true': [0.029, 16, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 115, 0]}]]
[{'': [0.09528888888888787, 6.45947941600091e-17], 'true': [-9.544603913195376e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-9.544603913195376e-16, nan]}, {'': [0.0745279721288961, 0.0], 'true': [3.1815346377317917e-16, 0.0], 'true,true': [3.1815346377317917e-16, nan], 'true,true,true': [3.1815346377317917e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.042479819195058895, 6.267388042238788e-17], 'true': [5.302557729552986e-16, -1.734723475976807e-18], 'true,true': [5.302557729552986e-16, nan], 'true,true,true': [5.302557729552986e-16, nan], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan]}, {'': [0.02307958784642744, -5.251054846200065e-17], 'true': [-2.9164067512541426e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016285075257554536, 4.2139852029567983e-17], 'true': [0.016285075257554536, nan], 'true,true': [0.016285075257554536, nan]}, {'': [0.01643070286277334, 0.01098109760292266], 'true': [0.01643070286277334, nan], 'true,true': [1.7270135938613546e-16, 1.734723475976807e-18], 'true,true,false': [1.734723475976807e-18, nan]}, {'': [0.014947548476919096, 1.7763568394002505e-18], 'true': [0.0005270951747790468, 8.112027331703964e-06], 'true,false': [8.112027331703964e-06, nan]}, {'': [0.01112252935231255, -2.590520390792032e-17], 'true': [0.01112252935231255, nan], 'true,true': [0.01112252935231255, nan], 'true,true,true': [0.00041050941712038883, 8.858907403971883e-06]}, {'': [0.008773840349263155, 9.848752637803809e-18], 'true': [0.008028989848401471, 0.0], 'true,true': [0.00032458627119404717, 7.180985957080439e-06], 'true,true,false': [7.180985957080439e-06, nan], 'false': [1.2886517250113425e-17, 4.04768811061255e-18], 'false,true': [1.2886517250113425e-17, nan], 'false,false': [nan, 4.04768811061255e-18]}, {'': [0.008093563126015507, -1.7860109526578604e-17], 'true': [0.008093563126015507, nan], 'true,true': [0.0008801368867377375, 5.2707742290197986e-05], 'true,true,false': [5.2707742290197986e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048796;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839105;  // std dev = 8.30e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.11231637819360618;  // std dev = 1.01e-07, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783637;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09269127618926089;  // std dev = 6.83e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then return 0.23086102871535466;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.08518475138839685;  // std dev = 5.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21054513694803673;  // std dev = 0.013, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08532844810304814;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109154;  // std dev = 7.74e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1776742667168111;  // std dev = 0.012, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07946522538579574;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1531823092480699;  // std dev = 0.010, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07015727302182971;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06842697784420275;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 5.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13497416355142303;  // std dev = 0.001, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.1338726660583687;  // std dev = 0.000455, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06948061545337594;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0776864585522793;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064028
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.862 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.49 seconds
Refined model CLL: -0.064499


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064028
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.351000000000001 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0
Total revision time: 7.351000000000001
Best scored revision CLL: -0.064499


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064028, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.351000000000001, 'Inference time': 1.247, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066113, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.387, 'Inference time': 1.37}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360688;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.27416977367048095;  // std dev = 1.606, 151.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926053;  // std dev = 7.60e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26411832359358295;  // std dev = 2.07e-08, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11846588874862501;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05642284032073411;  // std dev = 0.097, 288.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22665557465918804;  // std dev = 0.263, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.10829434723184445;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08088948521405472;  // std dev = 8.94e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18949125794397984;  // std dev = 0.232, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.09745107200606505;  // std dev = 0.007, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07507590454466687;  // std dev = 5.96e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1621467246644157;  // std dev = 0.206, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08951916201827521;  // std dev = 0.010, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07002613739071582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07002613739071596;  // std dev = 2.11e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07002613739071578;  // std dev = 1.29e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13981637114317333;  // std dev = 0.277, 135.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08020820316492294;  // std dev = 0.037, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06560091095695732;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065906
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.533 seconds
Total inference time: 1.391 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066862
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.434 seconds
Parameter learned model CLL: -0.066862


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [8e-07, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 269, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [4.92e-07, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 270, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [4e-07, 0, 134], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.606, 17, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 267, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [2.07e-08, 0, 110], 'true,true,false,true': [1.67e-08, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.097, 264, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.263, 0, 134], 'true,false,true': [0.009, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.94e-08, 252, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.232, 0, 134], 'true,true,true,false': [0.007, 16, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 221, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.206, 0, 134], 'true,true,false,true': [0.01, 27, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true,true': [2.11e-08, 204, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.29e-08, 36, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.277, 1, 134], 'true,true,false,true': [0.037, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 236, 0]}]]
[{'': [0.11712799167534296, -8.584624130930579e-17], 'true': [4.772301956597688e-15, 5.28677630773884e-18], 'true,true': [4.772301956597688e-15, nan], 'true,false': [5.28677630773884e-18, nan], 'true,false,true': [5.28677630773884e-18, nan]}, {'': [0.06802545256556854, -4.954714324773426e-17], 'true': [-1.908920782639075e-15, 3.469446951953614e-18], 'true,false': [3.469446951953614e-18, nan], 'true,false,true': [3.469446951953614e-18, nan], 'true,true': [-1.908920782639075e-15, nan], 'true,true,true': [-1.908920782639075e-15, nan]}, {'': [0.06067064020778916, -9.704171622649517e-17], 'true': [1.8028696280480155e-15, -2.135044278125301e-18], 'true,true': [1.8028696280480155e-15, nan], 'true,true,true': [1.8028696280480155e-15, nan], 'true,false': [-2.135044278125301e-18, nan], 'true,false,true': [-2.135044278125301e-18, nan]}, {'': [0.025677983095271913, -6.739096958814179e-17], 'true': [1.193075489149422e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.017074473943069542, 2.1622321078842e-17], 'true': [0.017074473943069542, nan], 'true,true': [0.017074473943069542, nan]}, {'': [0.017688839445578003, 0.009352010176308065], 'true': [0.017688839445578003, nan], 'true,true': [4.2794051131006033e-16, 1.5419764230904953e-17], 'true,true,false': [1.5419764230904953e-17, nan]}, {'': [0.008341692826383352, 3.172065784643304e-17], 'true': [0.000514785832796125, 7.276103957618271e-06], 'true,false': [7.276103957618271e-06, nan]}, {'': [0.008204629146441092, 1.607562750588462e-17], 'true': [0.008204629146441092, nan], 'true,true': [0.008204629146441092, nan], 'true,true,true': [0.00040138662856762525, 3.3805929679168317e-06]}, {'': [0.009270514131351163, -1.2027416100105863e-17], 'true': [0.00910533045761037, 0.0], 'true,true': [0.00031766600972029925, 3.983136284748503e-06], 'true,true,false': [3.983136284748503e-06, nan], 'false': [2.1769078914218755e-18, 4.625929269271485e-18], 'false,false': [nan, 4.625929269271485e-18], 'false,true': [2.1769078914218755e-18, nan]}, {'': [0.007675456794632167, -3.293034395074617e-17], 'true': [0.007675456794632167, nan], 'true,true': [0.0005687469059282869, 4.68040487877075e-05], 'true,true,false': [4.68040487877075e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995103;  // std dev = 8.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.14185106490048832;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839186;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.92e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1123163781936068;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583091;  // std dev = 4.00e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.10159632948783656;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015005;  // std dev = 2.11e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.0926912761892606;  // std dev = 5.16e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694898;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 7.88e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694898;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253529;  // std dev = 2.19e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07877675473109143;  // std dev = 5.16e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.17709649774527778;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.1770964977452779;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633367;  // std dev = 1.23e-07, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367144;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06842697784420267;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06842697784420261;  // std dev = 6.83e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else return -0.06842697784420265;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080114;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.13129197699307926;  // std dev = 0.023, 73.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | else return -0.06419184008202616;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063741
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.304 seconds
Total inference time: 1.409 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.162 seconds
Refined model CLL: -0.064203


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063741
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.433 seconds
Total inference time: 1.409 seconds
AUC ROC: 1.0
Total revision time: 10.433
Best scored revision CLL: -0.064203


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063741, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.433, 'Inference time': 1.409, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065906, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.533, 'Inference time': 1.391}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048738;  // std dev = 2.89e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1254446385283913;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283922;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360646;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783605;  // std dev = 1.86e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.28178150819002523;  // std dev = 1.803, 223.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.79e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2626415667311191;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11926310667197106;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05639206246986114;  // std dev = 0.097, 388.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22460784123372982;  // std dev = 0.308, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.10899084696809638;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08089177346525742;  // std dev = 7.88e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18800179483972848;  // std dev = 0.272, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.09870794694887984;  // std dev = 0.016, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07507788287254552;  // std dev = 1.25e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16102524607185736;  // std dev = 0.243, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.09076397646710677;  // std dev = 0.013, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07002786389009642;  // std dev = 4.56e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.07002786389009677;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07002786389009642;  // std dev = 1.67e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13746348371286587;  // std dev = 0.416, 205.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=202 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.08082918637030632;  // std dev = 0.046, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06560243021620207;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.088 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06694
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.409 seconds
Parameter learned model CLL: -0.06694


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.08e-06, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.89e-07, 402, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [6.36e-07, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 377, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [2.67e-07, 0, 202], 'true,false,true,true': [0.0, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.86e-07, 389, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [1.803, 21, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.79e-07, 376, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 169], 'true,true,false,true': [7.45e-09, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.097, 355, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.308, 0, 202], 'true,false,true': [0.017, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 351, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.272, 0, 202], 'true,true,true,false': [0.016, 40, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.25e-07, 363, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.243, 0, 202], 'true,true,false,true': [0.013, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.56e-09, 10, 0], 'false,true,true': [0.0, 303, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.67e-08, 40, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.416, 3, 202], 'true,true,false,true': [0.046, 44, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 337, 0]}]]
[{'': [0.09491737802490961, 2.0768351107415863e-16], 'true': [5.768762805181012e-15, 9.25185853854297e-18], 'true,true': [5.768762805181012e-15, nan], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.0968302533565274, -1.1842378929335003e-16], 'true': [-3.728590593592605e-15, 1.9927079929169476e-17], 'true,false': [1.9927079929169476e-17, nan], 'true,false,true': [1.9927079929169476e-17, nan], 'true,true': [-3.728590593592605e-15, nan], 'true,true,true': [-3.728590593592605e-15, nan]}, {'': [0.05142113020380518, -2.827093113103847e-17], 'true': [2.0049968286299855e-15, -8.953411488912552e-18], 'true,true': [2.0049968286299855e-15, nan], 'true,true,true': [2.0049968286299855e-15, nan], 'true,false': [-8.953411488912552e-18, nan], 'true,false,true': [-8.953411488912552e-18, nan]}, {'': [0.03033998069301802, 8.904616547122079e-17], 'true': [3.5175382958420803e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.014578352430972365, 8.503835933299071e-17], 'true': [0.014578352430972365, nan], 'true,true': [0.014578352430972365, nan]}, {'': [0.014338665825033596, 0.009487723020295574], 'true': [0.014338665825033596, nan], 'true,true': [-1.3664283380001927e-16, 2.64338815386942e-18], 'true,true,false': [2.64338815386942e-18, nan]}, {'': [0.015748467526080438, 1.7712959937039534e-17], 'true': [0.0004707471288754281, 7.595517355092618e-06], 'true,false': [7.595517355092618e-06, nan]}, {'': [0.011649148696925021, 4.2818518856066645e-17], 'true': [0.011649148696925021, nan], 'true,true': [0.011649148696925021, nan], 'true,true,true': [0.0003675338836772141, 6.013589069324421e-06]}, {'': [0.008497969639341957, -2.0068171290600497e-17], 'true': [0.007215324579963388, 2.0816681711721684e-18], 'true,true': [0.0002912684601903635, 6.177024733852828e-06], 'true,true,false': [6.177024733852828e-06, nan], 'false': [-2.7114357697116036e-17, 6.938893903907228e-18], 'false,false': [nan, 6.938893903907228e-18], 'false,true': [-2.7114357697116036e-17, nan]}, {'': [0.007635676572680207, -8.631407491151068e-17], 'true': [0.007635676572680207, nan], 'true,true': [0.0008437603885799123, 4.8520631898380975e-05], 'true,true,false': [4.8520631898380975e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.14185106490048757;  // std dev = 2.17e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.12544463852839216;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.36e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.1123163781936064;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1015963294878364;  // std dev = 5.16e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 4.04e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926051;  // std dev = 1.85e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694889;  // std dev = 3.26e-07, 169.000 (wgt'ed) examples reached here.  /* #pos=169 */
%   | else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694898;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0834437948975636;  // std dev = 0.480, 391.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21036756682646665;  // std dev = 0.087, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07879419412444794;  // std dev = 0.000235, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.07890319033292342;  // std dev = 2.17e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17755020380216;  // std dev = 0.077, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.07326694276507931;  // std dev = 0.000239, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07335589694475893;  // std dev = 4.47e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15309237077617643;  // std dev = 0.069, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return -0.0684368852325353;  // std dev = 0.000209, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.06852296639920327;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then return -0.06852296639920365;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | else return -0.06852296639920323;  // std dev = 5.27e-09, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13384324517075008;  // std dev = 5.59e-09, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else if ( actor(A) )
%   | | | then return 0.1346641512638749;  // std dev = 0.062, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.06427652411077585;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(A) )
%   | | then return -0.06427652411077585;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.0641889528910613;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06422920536292469;  // std dev = 0.000184, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0642765241107763;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.975 seconds
Total inference time: 1.342 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.159 seconds
Refined model CLL: -0.064165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.631 seconds
Total inference time: 1.342 seconds
AUC ROC: 1.0
Total revision time: 12.631
Best scored revision CLL: -0.064165


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063879, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.631, 'Inference time': 1.342, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065918, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.088, 'Inference time': 1.525}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048718;  // std dev = 2.92e-07, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839227;  // std dev = 0.000, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360588;  // std dev = 0.000, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783548;  // std dev = 3.38e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25374311689794116;  // std dev = 2.729, 321.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926126;  // std dev = 0.000, 545.000 (wgt'ed) examples reached here.  /* #neg=545 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.2681075275997903;  // std dev = 2.30e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.11634926722264981;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.057997961434524965;  // std dev = 0.096, 550.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2287973112223874;  // std dev = 0.369, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.10628127452521675;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08077245794658457;  // std dev = 1.91e-07, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19103607588498184;  // std dev = 0.326, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.09647487794174538;  // std dev = 0.015, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07497471792897327;  // std dev = 0.000, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16330142675181386;  // std dev = 0.290, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08889241016330393;  // std dev = 0.015, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0699378237689333;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.0699378237689326;  // std dev = 1.94e-07, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06993782376893334;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13844817363266873;  // std dev = 0.529, 274.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=269 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07828532614601344;  // std dev = 0.051, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06552319226651711;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065833
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.763 seconds
Total inference time: 1.374 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066859
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.247 seconds
Parameter learned model CLL: -0.066859


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.07e-06, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.92e-07, 466, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 474, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [3.58e-07, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 509, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 269], 'true,false,true,true': [2.98e-08, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.38e-07, 507, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [2.729, 52, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 545, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [2.3e-08, 0, 225], 'true,true,false,true': [0.0, 24, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.096, 506, 44]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.369, 0, 269], 'true,false,true': [0.016, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.91e-07, 461, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.326, 0, 269], 'true,true,true,false': [0.015, 50, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 447, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.29, 0, 269], 'true,true,false,true': [0.015, 46, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 17, 0], 'false,true,true': [1.94e-07, 427, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.529, 5, 269], 'true,true,false,true': [0.051, 57, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 460, 0]}]]
[{'': [0.11058989711587516, 1.8297237830732194e-16], 'true': [4.226276495227362e-15, 4.2700885562506023e-17], 'true,true': [4.226276495227362e-15, nan], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.09172847425041725, -1.2554420700402614e-16], 'true': [-4.5432472323694135e-15, -3.0068540250264654e-17], 'true,false': [-3.0068540250264654e-17, nan], 'true,false,true': [-3.0068540250264654e-17, nan], 'true,true': [-4.5432472323694135e-15, nan], 'true,true,true': [-4.5432472323694135e-15, nan]}, {'': [0.04235548546350523, -1.7449477793715622e-18], 'true': [4.754561057130781e-16, -1.0408340855860843e-17], 'true,true': [4.754561057130781e-16, nan], 'true,true,true': [4.754561057130781e-16, nan], 'true,false': [-1.0408340855860843e-17, nan], 'true,false,true': [-1.0408340855860843e-17, nan]}, {'': [0.03705399613796169, 2.259862251308011e-16], 'true': [-5.018703338082492e-16, 1.67580833905684e-17], 'true,false': [1.67580833905684e-17, nan], 'true,false,true': [1.67580833905684e-17, nan]}, {'': [0.023200271424208708, -1.6296851737616978e-18], 'true': [0.023200271424208708, nan], 'true,true': [0.023200271424208708, nan]}, {'': [0.012873307628260987, 0.00927966468322934], 'true': [0.012873307628260987, nan], 'true,true': [5.368545114631868e-16, -2.3129646346357427e-18], 'true,true,false': [-2.3129646346357427e-18, nan]}, {'': [0.014218644064557303, 7.899200695814563e-17], 'true': [0.0005055090146388277, 5.80665841765329e-06], 'true,false': [5.80665841765329e-06, nan]}, {'': [0.01125899583340505, -7.749207688658811e-17], 'true': [0.01125899583340505, nan], 'true,true': [0.01125899583340505, nan], 'true,true,true': [0.0003943866991560657, 4.556720413584348e-06]}, {'': [0.009653211740712623, 7.831448721422267e-17], 'true': [0.008198837148615735, -8.163404592832033e-19], 'true,true': [0.00031214380488742724, 4.98872969378532e-06], 'true,true,false': [4.98872969378532e-06, nan], 'false': [8.840183334251832e-17, -7.065055611250995e-18], 'false,true': [8.840183334251832e-17, nan], 'false,false': [nan, -7.065055611250995e-18]}, {'': [0.0075484330793265456, -1.1440124210267918e-16], 'true': [0.0075484330793265456, nan], 'true,true': [0.001019986345105424, 4.6457772401336595e-05], 'true,true,false': [4.6457772401336595e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048766;  // std dev = 4.21e-08, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1254446385283923;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360578;  // std dev = 0.000, 538.000 (wgt'ed) examples reached here.  /* #neg=538 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.10159632948783547;  // std dev = 3.37e-07, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601504;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926125;  // std dev = 0.000, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.2551722425694882;  // std dev = 2.76e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   | else return -0.0851847513883968;  // std dev = 1.67e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.40e-07, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253479;  // std dev = 2.86e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109193;  // std dev = 1.58e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527705;  // std dev = 1.19e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333724;  // std dev = 0.000, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367155;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0684269778442027;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A) )
%   | then return -0.0684269778442034;  // std dev = 0.000, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801106;  // std dev = 4.17e-09, 121.000 (wgt'ed) examples reached here.  /* #pos=121 */
%   | | else if ( actor(A) )
%   | | | then return 0.134007030008011;  // std dev = 7.30e-08, 148.000 (wgt'ed) examples reached here.  /* #pos=148 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(A) )
%   | | then return -0.06419184008202618;  // std dev = 9.31e-10, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( female(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.323 seconds
Total inference time: 1.3 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.471 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.804 seconds
Total inference time: 1.3 seconds
AUC ROC: 1.0
Total revision time: 13.804
Best scored revision CLL: -0.064083


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:19:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.804, 'Inference time': 1.3, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065833, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.763, 'Inference time': 1.374}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;false;false
0;true,false;publication(F, A), publication(G, B).;true;true
0;true,false,true;publication(F, H), professor(H).;false;false
0;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, A).;true;true
1;true,false,true;publication(F, G), professor(G).;false;false
1;true,false,false;tempadvisedby(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, A).;false;false
2;true,false;tempadvisedby(F, B), publication(G, F).;true;true
2;true,false,true;ta(H, A, I), publication(G, B).;false;false
2;true,false,false;publication(J, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), ta(E, A, F).;true;true
3;true,false,true;ta(G, H, F), publication(D, H).;false;false
3;true,false,false;publication(I, B), publication(J, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;tempadvisedby(F, B).;true;true
4;true,true,true;ta(G, F, H), publication(I, A).;false;false
4;true,true,false;publication(J, A).;false;false
4;true,false;publication(K, A), publication(K, B).;true;true
4;true,false,true;tempadvisedby(L, B), publication(M, L).;false;false
4;true,false,false;projectmember(N, B).;false;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;tempadvisedby(G, B).;false;false
5;true,true,false;tempadvisedby(H, B), publication(I, B).;false;false
5;true,false;ta(J, A, K).;false;true
5;true,false,false;publication(L, A), publication(L, B).;false;false
5;false;ta(M, A, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;projectmember(D, B), publication(E, A).;false;true
6;true,false,false;publication(F, A), publication(G, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;tempadvisedby(C, B), publication(D, B).;true;true
7;true,true;publication(E, C).;true;true
7;true,true,true;publication(D, A).;false;false
7;true,true,false;publication(D, F), ta(G, F, H).;false;false
7;true,false;publication(I, A).;true;true
7;true,false,true;publication(J, B).;false;false
7;true,false,false;publication(K, B), ta(L, A, M).;false;false
8;;advisedby(A, B) :- publication(C, B), professor(B).;true;true
8;true;student(A).;true;false
8;true,true;publication(C, A).;false;true
8;true,true,false;tempadvisedby(D, B), publication(E, D).;false;false
8;false;projectmember(F, B), student(A).;true;true
8;false,true;publication(G, A).;false;false
8;false,false;hasposition(B, H), student(A).;true;false
8;false,false,true;tempadvisedby(I, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;publication(D, A), tempadvisedby(E, B).;true;true
9;true,true;ta(F, E, G), publication(C, A).;false;true
9;true,true,false;publication(H, E).;false;false
9;true,false;tempadvisedby(I, B), student(A).;true;true
9;true,false,true;publication(J, I), ta(K, A, L).;false;false
9;true,false,false;publication(M, A), ta(N, A, P).;false;false
9;false;tempadvisedby(Q, B), ta(R, Q, S).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048868;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839235;  // std dev = 0.000, 665.000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 0.000, 650.000 (wgt'ed) examples reached here.  /* #neg=650 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10159632948783626;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783512;  // std dev = 4.30e-07, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.25300810983741945;  // std dev = 3.071, 403.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926147;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.26825177958815477;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.1162737208984484;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06298177974781681;  // std dev = 0.087, 759.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22794698885114487;  // std dev = 0.400, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.10630819220492708;  // std dev = 0.015, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08040319036387664;  // std dev = 3.50e-07, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19041674047670265;  // std dev = 0.354, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.09614259462301684;  // std dev = 0.014, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07465530966303356;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16283462492408257;  // std dev = 0.315, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.08873261421086051;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06965895522769366;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A) )
%   | then if ( movie(F, A) )
%   | | then return -0.06965895522769411;  // std dev = 0.000, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, G), actor(A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06965895522769373;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then return 0.13944703693993063;  // std dev = 0.500, 341.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=337 */
%   | | else if ( movie(E, F) )
%   | | | then return -0.07747946280443806;  // std dev = 0.056, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0652777049015944;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.732 seconds
Total inference time: 1.42 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066629
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.517 seconds
Parameter learned model CLL: -0.066629


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [1.04e-06, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 639, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 665, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, A)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, B)'}, {'true,true,true,true': [0.0, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.16e-08, 66, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 650, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)', 'true,false,true': 'movie(D, E)'}, {'true,true': [0.0, 0, 337], 'true,false,true,true': [2.98e-08, 50, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.3e-07, 609, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,true,true': [3.071, 66, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 611, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 288], 'true,true,false,true': [0.0, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.087, 710, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.4, 0, 337], 'true,false,true': [0.015, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.5e-07, 639, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, A)'}, {'true,true,true,true': [0.354, 0, 337], 'true,true,true,false': [0.014, 60, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 629, 0]}], ['workedunder(A, B)', {'': 'movie(C, B), director(B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, E)', 'false': 'actor(A)', 'false,true': 'movie(F, A)', 'false,false': 'genre(B, G), actor(A)'}, {'true,true,true': [0.315, 0, 337], 'true,true,false,true': [0.016, 58, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.05e-08, 27, 0], 'false,true,true': [0.0, 514, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 59, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(E, F)'}, {'true,true,true': [0.5, 4, 337], 'true,true,false,true': [0.056, 61, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 617, 0]}]]
[{'': [0.11416595812520232, -4.0308566778252945e-16], 'true': [3.204821834882351e-15, 5.659960517696876e-17], 'true,true': [3.204821834882351e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.0815015376882413, -3.1787438178741324e-16], 'true': [-5.144582419153248e-15, -3.2653618371328135e-17], 'true,false': [-3.2653618371328135e-17, nan], 'true,false,true': [-3.2653618371328135e-17, nan], 'true,true': [-5.144582419153248e-15, nan], 'true,true,true': [-5.144582419153248e-15, nan]}, {'': [0.061052596793673385, -1.475742605040208e-16], 'true': [-5.90361916952012e-16, 4.0371746350005693e-17], 'true,false': [4.0371746350005693e-17, nan], 'true,false,true': [4.0371746350005693e-17, nan], 'true,true': [-5.90361916952012e-16, nan], 'true,true,true': [-5.90361916952012e-16, nan]}, {'': [0.03031772580580932, 3.0335157848542867e-16], 'true': [-9.90964646312306e-16, 1.7763568394002505e-17], 'true,false': [1.7763568394002505e-17, nan], 'true,false,true': [1.7763568394002505e-17, nan]}, {'': [0.02340514042417967, -4.0702120706388716e-17], 'true': [0.02340514042417967, nan], 'true,true': [0.02340514042417967, nan]}, {'': [0.016423442359081674, 0.007590624295895658], 'true': [0.016423442359081674, nan], 'true,true': [-4.564250212347865e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.011432324368518735, 1.918131798413416e-16], 'true': [0.0004751571038204875, 5.325037938507302e-06], 'true,false': [5.325037938507302e-06, nan]}, {'': [0.010850533254073374, -4.024337831709629e-17], 'true': [0.010850533254073374, nan], 'true,true': [0.010850533254073374, nan], 'true,true,true': [0.00037127481703251147, 3.299031578997876e-06]}, {'': [0.009946630712355915, -1.030782982723531e-16], 'true': [0.008179789618646916, 4.11193712824132e-18], 'true,true': [0.00029423381481210784, 4.151169228355597e-06], 'true,true,false': [4.151169228355597e-06, nan], 'false': [-9.071861290711396e-17, -1.3172137580298468e-17], 'false,false': [nan, -1.3172137580298468e-17], 'false,true': [-9.071861290711396e-17, nan]}, {'': [0.006685450191215474, -1.4395112150731365e-17], 'true': [0.006685450191215474, nan], 'true,true': [0.0007317909762235983, 5.0781099921395126e-05], 'true,true,false': [5.0781099921395126e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- movie(C, B), director(B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048854;  // std dev = 0.000, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839233;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360617;  // std dev = 0.000, 646.000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783506;  // std dev = 4.44e-07, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0926912761892615;  // std dev = 0.000, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.25517224256948773;  // std dev = 3.42e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 1.58e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694892;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.08518475138839679;  // std dev = 4.56e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839679;  // std dev = 1.49e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325347;  // std dev = 2.46e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07877675473109255;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333673;  // std dev = 2.09e-07, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, B), director(B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420262;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then return -0.06842697784420358;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
%   | else return -0.06842697784420261;  // std dev = 1.67e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.134007030008011;  // std dev = 4.93e-09, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else if ( actor(A) )
%   | | | then return 0.13400703000801092;  // std dev = 8.94e-08, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | | else return -0.06419184008202612;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.852 seconds
Total inference time: 1.308 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.587 seconds
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.688 seconds
Total inference time: 1.308 seconds
AUC ROC: 1.0
Total revision time: 15.688
Best scored revision CLL: -0.064087


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:20:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.688, 'Inference time': 1.308, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065619, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.732, 'Inference time': 1.42}}


