Starting experiment #1 for 9_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 9691
Source train pos examples: 397
Source train neg examples: 397

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(D, E), recursion_teamplayssport(D, B) )
%   | | then return 0.81002059285352;  // std dev = 0.214, 187.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=178 */
%   | | else if ( teamalsoknownas(F, E), teamalsoknownas(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6010060779566551;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then if ( athleteledsportsteam(H, G), teamplaysagainstteam(A, G) )
%   | | | then return -0.05489454316135731;  // std dev = 1.911, 46.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | | else return 0.30259337954395676;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( athleteplaysforteam(C, I), teamalsoknownas(D, I) )
%   | | | then return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.6803711573217317;  // std dev = 5.129, 180.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=148 */
%   else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | then return 0.1914822684328457;  // std dev = 0.471, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else return -0.11674646239002742;  // std dev = 0.156, 239.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(D, E), recursion_teamplayssport(D, B) )
%   | | then return 0.6809555126099818;  // std dev = 0.214, 187.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=178 */
%   | | else if ( athleteplaysforteam(F, E), athleteplaysinleague(F, G) )
%   | | | then return 0.2115648266402208;  // std dev = 1.636, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5760380671665103;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then if ( athleteledsportsteam(I, H), teamplaysagainstteam(A, H) )
%   | | | then return -0.04834272337445023;  // std dev = 1.911, 46.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | | else return 0.2616318086752122;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, J) )
%   | | | then return 0.3433988864920735;  // std dev = 4.616, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | | | else return 0.6866121717792448;  // std dev = 2.555, 104.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=97 */
%   else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | then return 0.4046340626601198;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return -0.07904756597191417;  // std dev = 0.223, 276.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(D, E), recursion_teamplayssport(D, B) )
%   | | then return 0.5433439285088058;  // std dev = 0.190, 178.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=171 */
%   | | else return 0.3558008431346336;  // std dev = 0.432, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then if ( teamplaysinleague(A, H), teamplaysinleague(F, H) )
%   | | | then return -0.14016365433249314;  // std dev = 1.165, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | | else return 0.27930432324021;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( teamplaysinleague(A, I), teamplaysinleague(D, I) )
%   | | | then return 0.5259113099346858;  // std dev = 2.643, 81.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=72 */
%   | | | else return 0.3279261908615466;  // std dev = 5.633, 160.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=103 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then if ( teamalsoknownas(K, J), athleteplaysforteam(L, K) )
%   | | then return 0.3156720916443382;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8190074516040977;  // std dev = 0.122, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09376839929304273;  // std dev = 0.174, 274.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.45124046473427526;  // std dev = 0.095, 174.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=173 */
%   | | else if ( teamalsoknownas(F, A), teamplaysagainstteam(A, F) )
%   | | | then return 0.3451775973659436;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04978793115463947;  // std dev = 0.821, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, I), recursion_teamplayssport(A, I) )
%   | | | then return -0.20184666537510734;  // std dev = 1.205, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.31374596177126;  // std dev = 3.578, 70.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | else if ( athleteledsportsteam(C, J) )
%   | | | then return 0.3104729039454297;  // std dev = 5.589, 208.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=152 */
%   | | | else return 0.1826968969005029;  // std dev = 2.396, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | then return -0.024401159062514693;  // std dev = 0.280, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | else return -0.09563977751382259;  // std dev = 0.120, 204.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.3189677135306018;  // std dev = 0.155, 189.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=177 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.1727269809000451;  // std dev = 1.146, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | | | else return 0.24183799085571941;  // std dev = 3.555, 70.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0.371492427651753;  // std dev = 1.993, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return 0.19599097691397221;  // std dev = 5.619, 197.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=128 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.09116222952158266;  // std dev = 0.104, 181.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=2 */
%   | else if ( teamalsoknownas(K, A), teamplaysagainstteam(A, L) )
%   | | then return 0.2278062409342907;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.10169266476907245;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.03411628252882849;  // std dev = 1.674, 44.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.2524764433475491;  // std dev = 0.151, 189.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=177 */
%   | else if ( athleteledsportsteam(F, A), athleteledsportsteam(C, G) )
%   | | then if ( athleteplayssport(F, H), recursion_teamplayssport(G, H) )
%   | | | then return 0.012888997672921005;  // std dev = 1.823, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.14154225448823365;  // std dev = 1.260, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0.31961407204366726;  // std dev = 2.133, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return 0.11288930216526856;  // std dev = 6.420, 264.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=150 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08309613567925445;  // std dev = 0.104, 181.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=2 */
%   | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, A) )
%   | | then return 0.12863276704416385;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(A, M) )
%   | | | then return -0.09886078636994416;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.02790243892620773;  // std dev = 1.670, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(E, F) )
%   | | then return 0.2171526940099921;  // std dev = 0.149, 182.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=175 */
%   | | else if ( athleteledsportsteam(G, A), teamalsoknownas(D, E) )
%   | | | then return -0.5698396477569923;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10840117482942663;  // std dev = 1.641, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then if ( athleteplayssport(I, J), recursion_teamplayssport(A, J) )
%   | | | then return -0.1278445726027422;  // std dev = 1.175, 43.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=2 */
%   | | | else return 0.06144342188091783;  // std dev = 2.168, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( teamplaysinleague(A, K), teamplaysinleague(D, K) )
%   | | | then return 0.2422799555912103;  // std dev = 2.189, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return 0.11970034518756315;  // std dev = 5.206, 149.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=99 */
%   else if ( teamplaysagainstteam(L, A), recursion_teamplayssport(L, B) )
%   | then return 0.37581589143733046;  // std dev = 0.275, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return -0.0710596316399663;  // std dev = 0.172, 274.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.17114160388590777;  // std dev = 0.145, 189.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=177 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.17062300346929582;  // std dev = 1.097, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | | | else return 0.1142588921591809;  // std dev = 3.270, 63.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=44 */
%   | | else if ( teamplaysinleague(A, I), teamplaysinleague(D, I) )
%   | | | then return 0.24380893622832617;  // std dev = 1.440, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return 0.08514891432531549;  // std dev = 5.150, 158.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=104 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then if ( athleteledsportsteam(K, J), teamalsoknownas(L, J) )
%   | | then return 0.07238787050623799;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3862713942015881;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( teamalsoknownas(M, A), teamalsoknownas(N, M) )
%   | | then return -0.0017628469026872622;  // std dev = 0.305, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | else return -0.07649791772785061;  // std dev = 0.130, 231.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.14531132331164132;  // std dev = 0.145, 189.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=177 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then if ( athleteplayssport(F, G), athleteplaysforteam(H, A) )
%   | | | then return -0.010495725900854092;  // std dev = 1.524, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.1619960772637938;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return -0.012603479233721902;  // std dev = 5.020, 140.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=74 */
%   | | | else return 0.18152553451369702;  // std dev = 3.289, 132.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=111 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then if ( teamalsoknownas(K, J), teamplaysagainstteam(A, K) )
%   | | then return 0.010147709961668826;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2956085365566997;  // std dev = 0.122, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( teamalsoknownas(L, A), athleteplaysforteam(M, L) )
%   | | then return 0.027017357810154775;  // std dev = 0.304, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else return -0.06819795276407402;  // std dev = 0.149, 249.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.1252211564004689;  // std dev = 0.146, 189.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=177 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, F) )
%   | | then if ( teamalsoknownas(F, D) )
%   | | | then return 0.035459633991643945;  // std dev = 3.876, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | | | else return -0.09129065952612463;  // std dev = 3.540, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | | then return -0.014726495429073958;  // std dev = 1.828, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.18883081340785224;  // std dev = 2.688, 108.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=100 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then if ( teamalsoknownas(J, I), athleteplaysforteam(K, J) )
%   | | then return -0.005605057451309417;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.24278396718144854;  // std dev = 0.127, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( teamalsoknownas(A, L), recursion_teamplayssport(L, B) )
%   | | then return 0.09863386498916468;  // std dev = 0.481, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.05938987800429032;  // std dev = 0.150, 266.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=6 */


Starting fold 1

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 518

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 260

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( acquired(H, C) )
%   | | | then return 0.7152917922423685;  // std dev = 2.268, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | | else return 0.49451257146314925;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.09952824544433996;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else return 0.009092331325927433;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( acquired(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4871463764874988;  // std dev = 4.884, 119.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=85 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03591872631819048;  // std dev = 3.496, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38812765885365724;  // std dev = 0.449, 124.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=88 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03135840798205891;  // std dev = 3.496, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return -0.36333248284238134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3869215467575517;  // std dev = 3.526, 82.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=66 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1508037067804504;  // std dev = 3.483, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.008081694948046503;  // std dev = 0.387, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.28431296634394654;  // std dev = 3.571, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12193427235302316;  // std dev = 3.475, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, I) )
%   | then return 0.8496313021465738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0198368841761089;  // std dev = 3.046, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.21435419050104704;  // std dev = 3.571, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09752153398165939;  // std dev = 3.470, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0.7072532546656785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.016853129552373752;  // std dev = 0.375, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5475235382266209;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1332073572998765;  // std dev = 0.430, 123.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=87 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006968957097614451;  // std dev = 3.417, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.13329274645167277;  // std dev = 3.576, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04664494330375826;  // std dev = 3.144, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005971892844142215;  // std dev = 0.377, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.10429721399996213;  // std dev = 3.579, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(A, H) )
%   | | | then return -0.42674773928451276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5216567563472896;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02169038751486891;  // std dev = 3.031, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return 0.005113991889855123;  // std dev = 3.417, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.08259681909794984;  // std dev = 3.581, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( acquired(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026401560915196718;  // std dev = 3.097, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.004376771775634503;  // std dev = 3.417, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */


Results
   AUC ROC   = 0.740814
   AUC PR    = 0.700286
   CLL	      = -0.594729
   Precision = 0.698361 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.753982


Total learning time: 36.551 seconds
Total inference time: 10.459 seconds
AUC ROC: 0.740814


Results scoring model
   AUC ROC   = 0.833349
   AUC PR    = 0.823642
   CLL	      = -0.514243
   Precision = 0.756757 at threshold = 0.5
   Recall    = 0.815534
   F1        = 0.785047


Total scoring time: 8.551 seconds
Parameter learned model CLL: -0.514243


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(H, C)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.095, 2, 3], 'true,false,false,true': [2.268, 6, 36], 'true,false,false,false': [4.221, 28, 49], 'false,true': [2.304, 22, 7], 'false,false': [2.606, 45, 8]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(D, C)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.095, 2, 3], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.884, 34, 85], 'false,true': [0.0, 0, 0], 'false,false': [3.496, 67, 15]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.449, 36, 88], 'false,true': [0.0, 0, 0], 'false,false': [3.496, 67, 15]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [3.526, 16, 66], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.483, 32, 24], 'true,false,false': [0.0, 0, 0], 'false': [0.387, 54, 13]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true': [3.571, 17, 66], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.475, 32, 24], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.046, 54, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true': [3.571, 17, 66], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.47, 32, 24], 'false,true': [0.0, 0, 1], 'false,false': [0.375, 54, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.43, 36, 87], 'false,true': [0.0, 0, 0], 'false,false': [3.417, 67, 15]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [3.576, 17, 66], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.144, 19, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.377, 67, 15]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(A, H)', 'true,false,false': 'acquired(D, C)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [3.579, 17, 66], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.073, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.031, 18, 20], 'false,true': [0.0, 0, 0], 'false,false,true': [3.417, 67, 15], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(D, C)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [3.581, 17, 66], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.097, 19, 22], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.417, 67, 15]}]]
[{'': [0.20603537981269693, 0.14946460440214104], 'true': [nan, 0.2060353798126967], 'true,false': [0.23999999999999994, 0.20408163265306295], 'true,false,true': [nan, 0.23999999999999994], 'true,false,false': [0.12244897959183858, 0.23140495867768598], 'false': [0.18311533888228312, 0.12815948736205077]}, {'': [0.2024039013059979, 0.14902146077388814], 'true': [nan, 0.202403901305998], 'true,false': [0.24, 0.20046526811997514], 'true,false,true': [nan, 0.24], 'true,false,false': [nan, 0.20046526811997514], 'false': [nan, 0.14902146077388814]}, {'': [0.2015201269861212, 0.14901098846236138], 'true': [nan, 0.20152012698612118], 'true,false': [nan, 0.20152012698612118], 'false': [nan, 0.14901098846236138]}, {'': [0.19316425426240924, 0.1495741779713481], 'true': [0.15653141773906365, 0.21666891506673042], 'true,false': [0.21666891506673042, nan], 'true,false,true': [nan, 0.21666891506673042], 'true,true': [nan, 0.15653141773906365], 'true,true,false': [0.0, 0.15165863735998714]}, {'': [0.18498168011768581, 0.14956354676872183], 'true': [0.15363981317157774, 0.21569057598337715], 'true,false': [0.21569057598337715, nan], 'true,false,true': [nan, 0.21569057598337715], 'false': [0.0, 0.1405464532476241], 'false,false': [nan, 0.1405464532476241]}, {'': [0.181650692272114, 0.14614460703019444], 'true': [0.15364137125562574, 0.21501386577286927], 'true,false': [nan, 0.21501386577286927], 'true,false,false': [nan, 0.21501386577286927], 'false': [0.0, 0.14053309753157617]}, {'': [0.18489379601824724, 0.14242277871693507], 'true': [nan, 0.18489379601824724], 'true,false': [0.0, 0.1850126597265873], 'false': [nan, 0.14242277871693507], 'true,false,true': [nan, 0.0]}, {'': [0.184490128450003, 0.14240830098864662], 'true': [0.15403698001836974, 0.24111377480047078], 'true,false': [0.24111377480047078, nan], 'true,false,true': [nan, 0.24111377480047078], 'false': [nan, 0.14240830098864662]}, {'': [0.18404865310984592, 0.1423959758348972], 'true': [0.15429193361813237, 0.24108666540935267], 'true,false': [0.2016571945661421, 0.24172678417705185], 'true,false,false': [nan, 0.24172678417705185], 'true,false,true': [0.0, 0.0026620960710087016], 'false': [nan, 0.1423959758348972], 'false,false': [0.1423959758348972, nan]}, {'': [0.1814655546222226, 0.14238548123930211], 'true': [0.15452574996301827, 0.23388847198804377], 'true,false': [nan, 0.23388847198804377], 'true,false,false': [nan, 0.23388847198804377], 'false': [nan, 0.14238548123930214], 'false,false': [nan, 0.14238548123930211]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,true;bankboughtbank(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;false;bankboughtbank(A, I).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
5;false;bankboughtbank(I, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
6;true;bankboughtbank(A, F), acquired(F, G).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;companyalsoknownas(F, A).;true;true
8;true,false,true;economicsectorcompany(G, F), acquired(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyceo(A, D), bankboughtbank(E, A) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.4137044906550675;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.2895214841191214;  // std dev = 6.126, 153.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=66 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.7629254526855976;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(D, A), acquired(E, A) )
%   | then if ( cityhascompanyoffice(D, E) )
%   | | then if ( economicsectorcompany(B, E) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3000001837159434;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7731579265476137;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( countryhascompanyoffice(F, A) )
%   | | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7394051521785308;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18528294833567804;  // std dev = 0.029, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | | then return 0.15486849083969617;  // std dev = 1.297, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3083873471849534;  // std dev = 6.364, 164.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=81 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.480, 206.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.5298574875109191;  // std dev = 0.386, 83.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=66 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.03007001106779238;  // std dev = 0.627, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3591158962809315;  // std dev = 1.345, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.07730945572540993;  // std dev = 1.321, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.18869183595120825;  // std dev = 2.908, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return -0.22620011528086564;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.2333032093964556;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.018896581872816405;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.02501671694270331;  // std dev = 2.811, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( bankchiefexecutiveceo(F, G), countryhascompanyoffice(H, F) )
%   | | | then return -0.03962419502029835;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5426561241865039;  // std dev = 1.013, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return -0.272400663594339;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then return 0.5827712389229783;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2649632580106596;  // std dev = 0.470, 99.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=57 */
%   else if ( bankboughtbank(A, J) )
%   | then return 0.4922862878872073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.18924752681455234;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.012473360768259594;  // std dev = 0.404, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankchiefexecutiveceo(A, E) )
%   | then return 0.4773454052071035;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then if ( countryhascompanyoffice(H, F) )
%   | | | then return 0.10847229039376276;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.364643101118524;  // std dev = 1.114, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.26989840587907726;  // std dev = 1.760, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.2103495768201451;  // std dev = 4.470, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   else if ( bankboughtbank(J, A) )
%   | then return 0.37211745277430286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.16201783363155356;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return -0.1573765533370708;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0038138676271689802;  // std dev = 3.030, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0.42577797910883575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( countryhascompanyoffice(G, A), bankboughtbank(H, A) )
%   | | then return -0.10757105110523557;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.22270833341676566;  // std dev = 1.700, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.27361219541564036;  // std dev = 4.108, 96.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=68 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.11771517242606595;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.16532813992101827;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(A, L), countryhascompanyoffice(M, A) )
%   | | then return -0.22966724010828202;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyceo(A, N) )
%   | | | then return 0.10567504062173731;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11794747662609159;  // std dev = 2.656, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.2366345377501676;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( countryhascompanyoffice(D, A) )
%   | then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | | then return 0.33225772407467496;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(D, F), bankboughtbank(F, G) )
%   | | | then return -0.14262097285089434;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.2617533054287706;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.25203551284508174;  // std dev = 1.361, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.18141971563982104;  // std dev = 0.278, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.08624649870593178;  // std dev = 0.444, 146.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=69 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.1583478215093451;  // std dev = 0.484, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( acquired(H, A), companyceo(H, I) )
%   | | | then return 0.2696692492083064;  // std dev = 0.279, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.18288332505861624;  // std dev = 3.214, 65.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=49 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then if ( economicsectorcompany(K, J), acquired(A, L) )
%   | | | then return -0.1522967111198056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5855675913463374;  // std dev = 0.170, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(M, A), companyceo(M, N) )
%   | | | then return -0.10527729516675112;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15115748060819034;  // std dev = 2.671, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   else if ( cityhascompanyoffice(P, A) )
%   | then return -0.05154762857517185;  // std dev = 0.304, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return -0.10163043521510191;  // std dev = 0.348, 65.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(D, E) )
%   | | then if ( companyceo(D, E) )
%   | | | then return 0.20837707699110708;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.3154526556898317;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2837577180409666;  // std dev = 0.087, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, F) )
%   | | then if ( companyceo(F, G) )
%   | | | then return -0.103965294383219;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.23900028059461387;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10987342631897126;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( countryhascompanyoffice(H, A) )
%   | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.23273178234940625;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1611379599089519;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.0519022685815626;  // std dev = 0.430, 148.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=71 */


Results
   AUC ROC   = 0.800392
   AUC PR    = 0.780973
   CLL	      = -0.540939
   Precision = 0.736301 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.778986


Total learning time: 51.534 seconds
Total inference time: 7.03 seconds
AUC ROC: 0.800392


Results scoring model
   AUC ROC   = 0.891743
   AUC PR    = 0.902933
   CLL	      = -0.4634
   Precision = 0.807339 at threshold = 0.5
   Recall    = 0.854369
   F1        = 0.830189


Total scoring time: 6.462 seconds
Refined model CLL: -0.4634


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.800392
   AUC PR    = 0.780973
   CLL	      = -0.540939
   Precision = 0.736301 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.778986


Total learning time: 103.098 seconds
Total inference time: 7.03 seconds
AUC ROC: 0.800392
Total revision time: 103.098
Best scored revision CLL: -0.4634


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 19:11:39
{'AUC ROC': 0.800392, 'AUC PR': 0.780973, 'CLL': -0.540939, 'Precision': [0.736301, 0.5], 'Recall': 0.826923, 'F1': 0.778986, 'Learning time': 103.098, 'Inference time': 7.03, 'parameter_0.2': {'AUC ROC': 0.740814, 'AUC PR': 0.700286, 'CLL': -0.594729, 'Precision': [0.698361, 0.5], 'Recall': 0.819231, 'F1': 0.753982, 'Learning time': 36.551, 'Inference time': 10.459}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.620053697004271;  // std dev = 6.172, 210.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=160 */
%   | | | else return 0.3152917922423695;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else return -0.02035573779768393;  // std dev = 3.379, 107.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=13 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.448295606241962;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49049757082881446;  // std dev = 6.980, 245.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=176 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012529773484711515;  // std dev = 4.583, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3922666440016593;  // std dev = 0.446, 254.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=182 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010981386753537988;  // std dev = 4.583, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return -0.3930231471301033;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.35815797782945147;  // std dev = 5.280, 166.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=130 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20075821896880808;  // std dev = 4.691, 109.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02058846189561719;  // std dev = 0.368, 138.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=24 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.26578805088227303;  // std dev = 5.309, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16182324557539662;  // std dev = 4.662, 109.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, I) )
%   | then return 0.8602578269533683;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return -0.13974217304663175;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.02227173387126525;  // std dev = 4.233, 135.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.20008426377980032;  // std dev = 5.309, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.128757021791161;  // std dev = 4.642, 109.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=53 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0.15833657332432782;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.01904228691733906;  // std dev = 0.364, 135.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03764713491960778;  // std dev = 0.634, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.14487292151120068;  // std dev = 0.432, 252.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=181 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.011757692408196678;  // std dev = 4.520, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.1192334842690149;  // std dev = 5.308, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0934361072974157;  // std dev = 4.377, 87.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.010145936686825428;  // std dev = 0.357, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.09302483282065566;  // std dev = 5.309, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3508085788317647;  // std dev = 1.264, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03851572236766401;  // std dev = 4.095, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return -0.00876494600849267;  // std dev = 4.521, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.07335708691168487;  // std dev = 5.311, 167.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=130 */
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05356317670467604;  // std dev = 4.338, 87.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=52 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.007579236200158368;  // std dev = 4.521, 160.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=25 */


Results
   AUC ROC   = 0.740555
   AUC PR    = 0.682424
   CLL	      = -0.583577
   Precision = 0.706271 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.760213


Total learning time: 65.022 seconds
Total inference time: 10.739 seconds
AUC ROC: 0.740555


Results scoring model
   AUC ROC   = 0.822516
   AUC PR    = 0.772736
   CLL	      = -0.507868
   Precision = 0.767857 at threshold = 0.5
   Recall    = 0.830918
   F1        = 0.798144


Total scoring time: 8.487 seconds
Parameter learned model CLL: -0.507868


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.414, 3, 6], 'true,false,false,true': [6.172, 50, 160], 'true,false,false,false': [2.947, 19, 16], 'false,true': [3.047, 41, 12], 'false,false': [3.379, 94, 13]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.414, 3, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.98, 69, 176], 'false,true': [0.0, 0, 0], 'false,false': [4.583, 135, 25]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.446, 72, 182], 'false,true': [0.0, 0, 0], 'false,false': [4.583, 135, 25]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [5.28, 36, 130], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.691, 56, 53], 'true,false,false': [0.0, 0, 0], 'false': [0.368, 114, 24]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true': [5.309, 37, 130], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.662, 56, 53], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 2, 0], 'false,false,false': [4.233, 112, 23]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true': [5.309, 37, 130], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.642, 56, 53], 'false,true': [0.691, 2, 1], 'false,false': [0.364, 112, 23]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.634, 1, 1], 'true,false,false': [0.432, 71, 181], 'false,true': [0.0, 0, 0], 'false,false': [4.52, 135, 25]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [5.308, 37, 130], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.377, 35, 52], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.357, 135, 25]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [5.309, 37, 130], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.264, 2, 7], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.095, 33, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [4.521, 135, 25], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [5.311, 37, 130], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.338, 35, 52], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.521, 135, 25]}]]
[{'': [0.2031124062248179, 0.131835937500001], 'true': [nan, 0.2031124062248179], 'true,false': [0.22222222222222218, 0.20231570179092614], 'true,false,true': [nan, 0.22222222222222218], 'true,false,false': [0.18140589569161564, 0.24816326530612198], 'false': [0.1751512993948019, 0.1067342125949859]}, {'': [0.1997569273811849, 0.13126627803319676], 'true': [nan, 0.19975692738118386], 'true,false': [0.2222222222222222, 0.19886856514707388], 'true,false,true': [nan, 0.2222222222222222], 'true,false,false': [nan, 0.19886856514707388], 'false': [nan, 0.13126627803319676]}, {'': [0.19892601753784037, 0.13126155170210427], 'true': [nan, 0.19892601753784037], 'true,false': [nan, 0.19892601753784037], 'false': [nan, 0.13126155170210427]}, {'': [0.1883446329475149, 0.13567737133693403], 'true': [0.1702716706712818, 0.20188846001325353], 'true,false': [0.20188846001325353, nan], 'true,false,true': [nan, 0.20188846001325353], 'true,true': [nan, 0.1702716706712818], 'true,true,false': [0.0, 0.1679185228936269]}, {'': [0.18344984312356588, 0.13567082308780737], 'true': [0.168789396321404, 0.19937122653167388], 'true,false': [0.19937122653167388, nan], 'true,false,true': [nan, 0.19937122653167388], 'false': [0.0, 0.13099526410237555], 'false,false': [0.0, 0.1327344849870707]}, {'': [0.18141427979441663, 0.13397825812706507], 'true': [0.16876063651754722, 0.1977227025442665], 'true,false': [nan, 0.1977227025442665], 'true,false,false': [nan, 0.19772270254426663], 'false': [0.15917171261520194, 0.13273441966852265]}, {'': [0.18650247207940304, 0.12770646411851838], 'true': [nan, 0.18650247207940307], 'true,false': [0.20086314334416897, 0.18629796803092735], 'true,false,true': [nan, 0.20086314334416897], 'false': [nan, 0.12770646411851835]}, {'': [0.18649919299876752, 0.12771966113081062], 'true': [0.1687154308207488, 0.2201982837256278], 'true,false': [0.2201982837256278, nan], 'true,false,true': [nan, 0.2201982837256278], 'false': [nan, 0.12771966113081062]}, {'': [0.1865136424835204, 0.1277312374854115], 'true': [0.16879662553022295, 0.22019805047370206], 'true,false': [0.1776100951805017, 0.2150230630877934], 'true,false,false': [nan, 0.2150230630877934], 'true,false,true': [nan, 0.17761009518050175], 'false': [nan, 0.12773123748541151], 'false,false': [0.1277312374854115, nan]}, {'': [0.185212928835428, 0.12774137704308441], 'true': [0.16887294541029468, 0.21632058432375958], 'true,false': [nan, 0.21632058432375958], 'true,false,false': [nan, 0.2163205843237596], 'false': [nan, 0.12774137704308444], 'false,false': [nan, 0.12774137704308441]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,true;bankboughtbank(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;false;bankboughtbank(A, I).;true;true
4;false,false;bankboughtbank(J, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(E, C) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1914822684328457;  // std dev = 0.471, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.39386322081379804;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( countryhascompanyoffice(J, A) )
%   | | | then return 0.14981560176617903;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.34329744995099365;  // std dev = 8.700, 303.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=147 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7438879210221676;  // std dev = 0.157, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.7298126921219175;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then if ( acquired(F, A), countryhascompanyoffice(G, F) )
%   | | | then return 0.5860607310227631;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10326069493305069;  // std dev = 2.369, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.19309041445961228;  // std dev = 3.209, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.303800392679305;  // std dev = 8.780, 310.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=153 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.5493297906611169;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.671022791379426;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(A, F), cityhascompanyoffice(G, A) )
%   | | then return 0.43196617019558803;  // std dev = 0.781, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6887782953112542;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I) )
%   | | | then return 0.3514928733134779;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.11790982334385748;  // std dev = 3.208, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.30280848617307154;  // std dev = 3.363, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.23377115255146086;  // std dev = 8.294, 282.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=133 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F) )
%   | | then return -0.211959786467986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.37473875949869395;  // std dev = 2.020, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return 0.4808170000081219;  // std dev = 4.681, 135.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=106 */
%   | else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | | then return 0.7392567437505896;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(J, A), bankchiefexecutiveceo(A, K) )
%   | | | then return 0.7094015220796246;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17128529284897287;  // std dev = 4.918, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   else if ( cityhascompanyoffice(L, A) )
%   | then return -0.2677217817871437;  // std dev = 0.035, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( companyalsoknownas(A, M) )
%   | | then return 0.2574266652738309;  // std dev = 0.480, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.09921048860504561;  // std dev = 0.382, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(E, A), bankchiefexecutiveceo(E, F) )
%   | then return -0.3051137790866927;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(G, A), acquired(H, G) )
%   | | then if ( cityhascompanyoffice(I, G), companyceo(G, J) )
%   | | | then return 0.6326736887266771;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.287054684936072;  // std dev = 0.665, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( acquired(A, K), companyceo(A, L) )
%   | | | then return 0.17533428438734322;  // std dev = 2.327, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.2943547354431069;  // std dev = 6.812, 232.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=156 */
%   else if ( bankboughtbank(A, M) )
%   | then return 0.7169866199197599;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(N, A) )
%   | | then return -0.23203243587309524;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( cityhascompanyoffice(P, A) )
%   | | | then return -0.21885158386065875;  // std dev = 0.152, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.056137891622163774;  // std dev = 4.185, 110.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.2771217591824386;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.36082027047136445;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then if ( acquired(E, F), companyceo(A, G) )
%   | | then return 0.1557059499116924;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.29399094787116076;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41842052017665504;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10638878700974021;  // std dev = 0.446, 388.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=182 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.22525700819722613;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2825138155186768;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( bankboughtbank(E, A), bankchiefexecutiveceo(E, F) )
%   | then return -0.2653916452494078;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(H, A) )
%   | | | then return 0.37809377606174605;  // std dev = 0.182, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26733831802167946;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(A, I), companyceo(A, J) )
%   | | | then return -7.586024587164026E-4;  // std dev = 2.499, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.09329970521205695;  // std dev = 8.371, 347.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=167 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.2025550092664271;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18316288481872872;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2289720401865576;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( companyalsoknownas(A, G), cityhascompanyoffice(H, A) )
%   | | then return 0.141555458658336;  // std dev = 0.493, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3042649555865761;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyceo(I, J) )
%   | | | then return 0.23417569426120632;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2978976222539081;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, K), companyceo(A, L) )
%   | | | then return -0.04643912400906083;  // std dev = 2.341, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.06852338885508837;  // std dev = 8.367, 348.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=165 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyceo(A, E) )
%   | then return 0.0720276823980036;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.17094228237256348;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2539117785158806;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(A, G), acquired(H, G) )
%   | then return 0.3131084632346013;  // std dev = 0.265, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, I), acquired(A, J) )
%   | | then if ( cityhascompanyoffice(K, A), countryhascompanyoffice(L, J) )
%   | | | then return 0.22792478038621536;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.09948966595590666;  // std dev = 1.969, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( acquired(A, M) )
%   | | | then return 0.13595901308978298;  // std dev = 2.219, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.05233105481277423;  // std dev = 8.062, 339.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=168 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.15334708101636121;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20037256783729038;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.031780344966335694;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.23194586559249633;  // std dev = 0.972, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then if ( companyceo(G, H) )
%   | | | then return 0.15434690440677407;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.18021360061718145;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, I), companyceo(A, J) )
%   | | | then return -0.04703793898714615;  // std dev = 1.970, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.03979797038242718;  // std dev = 8.326, 348.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=166 */


Results
   AUC ROC   = 0.731183
   AUC PR    = 0.720193
   CLL	      = -0.608547
   Precision = 0.690821 at threshold = 0.5
   Recall    = 0.55
   F1        = 0.61242


Total learning time: 28.159 seconds
Total inference time: 4.503 seconds
AUC ROC: 0.731183


Results scoring model
   AUC ROC   = 0.854886
   AUC PR    = 0.863637
   CLL	      = -0.54977
   Precision = 0.839506 at threshold = 0.5
   Recall    = 0.657005
   F1        = 0.737127


Total scoring time: 3.973 seconds
Refined model CLL: -0.54977


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.740555
   AUC PR    = 0.682424
   CLL	      = -0.583577
   Precision = 0.706271 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.760213


Total learning time: 105.641 seconds
Total inference time: 10.739 seconds
AUC ROC: 0.740555
Total revision time: 105.641
Best scored revision CLL: -0.507868


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 19:13:42
{'AUC ROC': 0.740555, 'AUC PR': 0.682424, 'CLL': -0.583577, 'Precision': [0.706271, 0.5], 'Recall': 0.823077, 'F1': 0.760213, 'Learning time': 105.641, 'Inference time': 10.739, 'parameter_0.4': {'AUC ROC': 0.740555, 'AUC PR': 0.682424, 'CLL': -0.583577, 'Precision': [0.706271, 0.5], 'Recall': 0.823077, 'F1': 0.760213, 'Learning time': 65.022, 'Inference time': 10.739}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5081489350995123;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.7043027812533588;  // std dev = 2.909, 65.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   | | | else return 0.5260189712005916;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=185 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.07405802600860324;  // std dev = 3.860, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | else return 4.0826991404066763E-5;  // std dev = 4.245, 148.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=21 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.43446033631952596;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.535713873255035;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47710160419407477;  // std dev = 8.428, 342.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=240 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02418583569659434;  // std dev = 5.758, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.3521152146484872;  // std dev = 0.477, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else return 0.38613496625026367;  // std dev = 0.453, 364.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=257 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02115680492795624;  // std dev = 5.757, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.4330705918723245;  // std dev = 1.612, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.36376973154859654;  // std dev = 5.243, 162.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=126 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.250002294969968;  // std dev = 6.887, 239.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044567555370923134;  // std dev = 0.376, 200.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=34 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.2793570297339072;  // std dev = 5.489, 181.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=142 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1980908128276202;  // std dev = 6.828, 239.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return 0.040933252389084074;  // std dev = 2.149, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.047429003889853556;  // std dev = 4.848, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.21021748426603712;  // std dev = 5.490, 181.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=142 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15481307266574135;  // std dev = 6.791, 239.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=134 */
%   else if ( companyalsoknownas(I, A) )
%   | then return 0.03417370900789416;  // std dev = 2.152, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else return -0.04036697838102328;  // std dev = 0.363, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1412157843038857;  // std dev = 0.432, 384.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=270 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.008893104805511975;  // std dev = 5.741, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.1274719036031616;  // std dev = 5.492, 181.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=142 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09015332639768724;  // std dev = 6.434, 203.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0076235482920431205;  // std dev = 0.374, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.09939960190766924;  // std dev = 5.494, 181.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=142 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return 0.39567216232986213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.032488331912822264;  // std dev = 2.882, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07443570633324151;  // std dev = 5.738, 165.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=105 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.006540756658414016;  // std dev = 5.741, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.07839694793882883;  // std dev = 5.495, 181.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=142 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.07312679320336285;  // std dev = 1.458, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.05920657551221783;  // std dev = 6.248, 192.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=123 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.005615818006393117;  // std dev = 5.741, 236.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=40 */


Results
   AUC ROC   = 0.76838
   AUC PR    = 0.717463
   CLL	      = -0.559297
   Precision = 0.709571 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.763766


Total learning time: 163.969 seconds
Total inference time: 16.717 seconds
AUC ROC: 0.76838


Results scoring model
   AUC ROC   = 0.816587
   AUC PR    = 0.780086
   CLL	      = -0.521988
   Precision = 0.766082 at threshold = 0.5
   Recall    = 0.845161
   F1        = 0.803681


Total scoring time: 18.91 seconds
Parameter learned model CLL: -0.521988


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.133, 7, 13], 'true,false,true,false': [1.966, 5, 17], 'true,false,false,true': [2.909, 10, 55], 'true,false,false,false': [7.839, 92, 185], 'false,true': [3.86, 69, 19], 'false,false': [4.245, 127, 21]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.133, 7, 13], 'true,false,true,false': [1.966, 5, 17], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.428, 102, 240], 'false,true': [0.0, 0, 0], 'false,false': [5.758, 196, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.477, 7, 13], 'true,false,false': [0.453, 107, 257], 'false,true': [0.0, 0, 0], 'false,false': [5.757, 196, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.612, 3, 16], 'true,true,false,false': [5.243, 36, 126], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.887, 105, 134], 'true,false,false': [0.0, 0, 0], 'false': [0.376, 166, 34]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [5.489, 39, 142], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.828, 105, 134], 'true,false,false': [0.0, 0, 0], 'false,true': [2.149, 16, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.848, 150, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [5.49, 39, 142], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.791, 105, 134], 'false,true': [2.152, 16, 6], 'false,false': [0.363, 150, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.432, 114, 270], 'false,true': [0.0, 0, 0], 'false,false': [5.741, 196, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [5.492, 39, 142], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.434, 75, 128], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.374, 196, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [5.494, 39, 142], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.882, 15, 22], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.738, 60, 105], 'false,true': [0.0, 0, 0], 'false,false,true': [5.741, 196, 40], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [5.495, 39, 142], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.458, 6, 5], 'true,false,false,false': [6.248, 69, 123], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.741, 196, 40]}]]
[{'': [0.20874023437500358, 0.1407641482332674], 'true': [nan, 0.2087402343750038], 'true,false': [0.20408163265306278, 0.2092951677439252], 'true,false,false': [0.13017751479289916, 0.22181965097942624], 'true,false,true': [0.22749999999999965, 0.17561983471074338], 'false': [0.1692923553719003, 0.12175858290723222]}, {'': [0.20718149671026928, 0.1404639129042877], 'true': [nan, 0.20718149671026861], 'true,false': [0.20288193306076274, 0.20769769171687275], 'true,false,false': [nan, 0.20769769171687275], 'true,false,true': [0.2274999999999998, 0.17561983471074386], 'false': [nan, 0.1404639129042877]}, {'': [0.20675447843593772, 0.14045910669911288], 'true': [nan, 0.20675447843593608], 'true,false': [0.22750000000000017, 0.20555433630649275], 'false': [nan, 0.14045910669911316]}, {'': [0.18834566376275685, 0.1416328869210549], 'true': [0.1666822379361693, 0.19843789003455778], 'true,false': [0.19843789003455778, nan], 'true,false,true': [nan, 0.19843789003455778], 'true,true': [nan, 0.1666822379361693], 'true,true,false': [0.13668475136483466, 0.1696963203682386]}, {'': [0.1843393270878945, 0.14135164466332079], 'true': [0.16644459734313172, 0.1950453078955361], 'true,false': [0.1950453078955361, nan], 'true,false,true': [nan, 0.1950453078955361], 'false': [0.209874720259978, 0.1320236327716354], 'false,false': [nan, 0.1320236327716354]}, {'': [0.1823078910063542, 0.14096290968689043], 'true': [0.16649708666516186, 0.19295889128037486], 'true,false': [nan, 0.19295889128037538], 'true,false,false': [nan, 0.19295889128037505], 'false': [0.21044037698978188, 0.13176461243812784]}, {'': [0.18671092464167346, 0.1396717855337456], 'true': [nan, 0.1867109246416735], 'true,false': [nan, 0.1867109246416735], 'false': [nan, 0.13967178553374526]}, {'': [0.18670269422742203, 0.13965950280788988], 'true': [0.16666828102593473, 0.20390944650278361], 'true,false': [0.20390944650278361, nan], 'true,false,true': [nan, 0.20390944650278361], 'false': [nan, 0.1396595028078896]}, {'': [0.18664571678299388, 0.13964914220869482], 'true': [0.16675500775516802, 0.20392702083003242], 'true,false': [0.2219641908762544, 0.19957662154362493], 'true,false,true': [0.0, 0.22449210478114148], 'true,false,false': [nan, 0.19957662154362493], 'false': [nan, 0.13964914220869468], 'false,false': [0.13964914220869482, nan]}, {'': [0.18648448324167977, 0.13964037733248683], 'true': [0.1668300393372247, 0.20368134015532627], 'true,false': [nan, 0.20368134015532627], 'true,false,false': [0.19324575126135263, 0.20333027979910046], 'false': [nan, 0.13964037733248694], 'false,false': [nan, 0.13964037733248683]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(E, A), countryhascompanyoffice(F, E) )
%   | | then if ( companyalsoknownas(E, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21814893509951236;  // std dev = 0.480, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   else if ( bankboughtbank(H, A), cityhascompanyoffice(I, H) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, J) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.2714822684328444;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.3966104735610508;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.3626943896449626;  // std dev = 10.488, 440.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=222 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7657293898013243;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( acquired(D, E), cityhascompanyoffice(F, A) )
%   | | then return 0.4014004150513906;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.48922472137962153;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.8072452657647733;  // std dev = 0.045, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0.10799322884623287;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.2873302807779646;  // std dev = 11.564, 539.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=257 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.49197863545681547;  // std dev = 0.283, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | | then return 0.4037950257445971;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.12341422495754853;  // std dev = 0.466, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   else if ( countryhascompanyoffice(G, A) )
%   | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.6353488488359806;  // std dev = 0.309, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return -0.21708528580927258;  // std dev = 0.073, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.5797600331823209;  // std dev = 2.558, 48.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | | | else return -0.23659103159416064;  // std dev = 0.051, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.6542243399417778;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2542438224458081;  // std dev = 10.262, 429.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=213 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.40120844649833154;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.44054909510297047;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(C, F) )
%   | | | then return 0.49585904385401736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5549806641207119;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.566959389383595;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( companyalsoknownas(A, H), cityhascompanyoffice(I, A) )
%   | | then if ( acquired(A, J), cityhascompanyoffice(K, H) )
%   | | | then return 0.1720584260195417;  // std dev = 1.876, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.08032274908022896;  // std dev = 1.228, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.005362565208725392;  // std dev = 1.172, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19337782885299362;  // std dev = 11.360, 554.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=266 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.4543088884393811;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4011359663481983;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(E, A) )
%   | then if ( acquired(E, F), economicsectorcompany(B, F) )
%   | | then if ( companyalsoknownas(A, G) )
%   | | | then return 0.3871317191985741;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.659518425464549;  // std dev = 0.308, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( cityhascompanyoffice(H, A), companyceo(E, I) )
%   | | | then return -0.21957538561946205;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.28814670299300565;  // std dev = 0.300, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.4715173024840689;  // std dev = 2.484, 61.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=54 */
%   | | | else return -0.25633090868822134;  // std dev = 0.340, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.16125362271800475;  // std dev = 0.489, 419.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=207 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3284062678749495;  // std dev = 0.043, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.04796190672169418;  // std dev = 0.347, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   else if ( bankchiefexecutiveceo(A, D) )
%   | then if ( companyceo(E, D), bankboughtbank(F, E) )
%   | | then return -0.1860811929660256;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A), countryhascompanyoffice(H, A) )
%   | | | then return 0.07077606041004572;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2194978758245975;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(A, I), companyceo(A, J) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.2639957604353318;  // std dev = 0.800, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06459811026031902;  // std dev = 2.325, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return -0.08873733985482228;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13019644261732993;  // std dev = 10.245, 462.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=232 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( acquired(A, D), bankchiefexecutiveceo(A, E) )
%   | then if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.11921155067034901;  // std dev = 0.991, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.23453122687652306;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.22693551841783385;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05967656400953713;  // std dev = 0.366, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.26614934365560466;  // std dev = 0.033, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.31145460685308374;  // std dev = 2.706, 68.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=58 */
%   | | | else return -0.22707984854685442;  // std dev = 0.354, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( bankboughtbank(K, A), cityhascompanyoffice(L, K) )
%   | | | then return 0.47887485043459666;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09085434370596614;  // std dev = 9.965, 421.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=205 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.1630564547562688;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2506597269830984;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( companyalsoknownas(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.26170976148979025;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5264287752379189;  // std dev = 0.368, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( companyceo(A, I) )
%   | | | then return -0.2284104194955806;  // std dev = 0.342, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.3946004578646441;  // std dev = 0.417, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.2132546923473099;  // std dev = 0.028, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.015178349139413015;  // std dev = 2.891, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.07504534883286014;  // std dev = 10.103, 464.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=230 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A) )
%   | | then return 0.19651720360798103;  // std dev = 0.275, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | else if ( bankboughtbank(G, A), countryhascompanyoffice(H, A) )
%   | | | then return -0.08572713266702241;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2985792273007597;  // std dev = 4.447, 139.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=111 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(J, I), bankboughtbank(K, A) )
%   | | | then return 0.5735536168071551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14083745093713723;  // std dev = 2.107, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | else if ( acquired(L, A) )
%   | | | then return 0.0755003472571231;  // std dev = 1.446, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return 0.19924508984259273;  // std dev = 5.443, 139.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=90 */
%   else if ( cityhascompanyoffice(M, A) )
%   | then return -0.11231115231107469;  // std dev = 0.270, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else return -0.24754782828645244;  // std dev = 0.354, 179.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=29 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | then return 0.13077871970280033;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17196129003028712;  // std dev = 0.075, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(E, A), cityhascompanyoffice(F, A) )
%   | then if ( acquired(G, E) )
%   | | then return -0.25136758803202613;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( bankchiefexecutiveceo(A, H) )
%   | | | then return 0.08960871086036334;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -4.1266386129304005E-4;  // std dev = 1.126, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyceo(I, J) )
%   | | | then return 0.19729864849225484;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12856249490931831;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, K), cityhascompanyoffice(L, K) )
%   | | | then return -0.048821751574698286;  // std dev = 1.309, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.04218576282328368;  // std dev = 9.972, 538.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=261 */


Results
   AUC ROC   = 0.85787
   AUC PR    = 0.839935
   CLL	      = -0.541365
   Precision = 0.811594 at threshold = 0.5
   Recall    = 0.646154
   F1        = 0.719486


Total learning time: 26.269 seconds
Total inference time: 4.047 seconds
AUC ROC: 0.85787


Results scoring model
   AUC ROC   = 0.905661
   AUC PR    = 0.900135
   CLL	      = -0.513764
   Precision = 0.876652 at threshold = 0.5
   Recall    = 0.641935
   F1        = 0.741155


Total scoring time: 4.249 seconds
Refined model CLL: -0.513764


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.85787
   AUC PR    = 0.839935
   CLL	      = -0.541365
   Precision = 0.811594 at threshold = 0.5
   Recall    = 0.646154
   F1        = 0.719486


Total learning time: 213.397 seconds
Total inference time: 4.047 seconds
AUC ROC: 0.85787
Total revision time: 213.397
Best scored revision CLL: -0.513764


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 19:17:37
{'AUC ROC': 0.85787, 'AUC PR': 0.839935, 'CLL': -0.541365, 'Precision': [0.811594, 0.5], 'Recall': 0.646154, 'F1': 0.719486, 'Learning time': 213.397, 'Inference time': 4.047, 'parameter_0.6': {'AUC ROC': 0.76838, 'AUC PR': 0.717463, 'CLL': -0.559297, 'Precision': [0.709571, 0.5], 'Recall': 0.826923, 'F1': 0.763766, 'Learning time': 163.969, 'Inference time': 16.717}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.524815601766179;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.5581489350995117;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6914822684328462;  // std dev = 3.291, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | | else return 0.5444760128474975;  // std dev = 8.961, 373.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=256 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.05649604253752837;  // std dev = 4.386, 121.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=24 */
%   | else return 0.00890270394373279;  // std dev = 5.048, 199.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=30 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.47588605454691774;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.485440095651689;  // std dev = 9.595, 451.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=321 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02356941036937916;  // std dev = 6.697, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | else return 0.3892122715692254;  // std dev = 0.452, 481.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=342 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020620040919598303;  // std dev = 6.697, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.450549869117561;  // std dev = 1.842, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.3552428479345283;  // std dev = 5.982, 207.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=160 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25520373264042556;  // std dev = 7.859, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03828960443760803;  // std dev = 0.386, 272.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=49 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.2753531594811115;  // std dev = 6.268, 233.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=182 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20238342633773354;  // std dev = 7.776, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.00396920336872795;  // std dev = 2.455, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.03596964689689726;  // std dev = 5.872, 241.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=42 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.20713725057357496;  // std dev = 6.269, 233.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=182 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15832921476967313;  // std dev = 7.725, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.0033210015589651;  // std dev = 2.455, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else return -0.030509097510098573;  // std dev = 0.378, 241.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=42 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14529231042412408;  // std dev = 0.430, 508.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=360 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01168088888414732;  // std dev = 6.712, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.12406786447632803;  // std dev = 6.272, 233.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=182 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09963653725939288;  // std dev = 7.386, 275.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009996905778081155;  // std dev = 0.375, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.09670555630021553;  // std dev = 6.273, 233.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=182 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return -0.025916651094490706;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05718123998442382;  // std dev = 3.095, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08000477415476813;  // std dev = 6.680, 230.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=150 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.008565277496510038;  // std dev = 6.711, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.07621813116773139;  // std dev = 6.275, 233.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=182 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.07426480003137054;  // std dev = 1.547, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06423094000831592;  // std dev = 7.209, 262.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=172 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0073456882559106195;  // std dev = 6.710, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */


Results
   AUC ROC   = 0.771709
   AUC PR    = 0.743491
   CLL	      = -0.558014
   Precision = 0.711921 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.765125


Total learning time: 198.242 seconds
Total inference time: 16.179 seconds
AUC ROC: 0.771709


Results scoring model
   AUC ROC   = 0.81576
   AUC PR    = 0.788269
   CLL	      = -0.521407
   Precision = 0.775281 at threshold = 0.5
   Recall    = 0.833333
   F1        = 0.80326


Total scoring time: 26.191 seconds
Parameter learned model CLL: -0.521407


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.449, 9, 18], 'true,false,true,false': [2.51, 9, 21], 'true,false,false,true': [3.291, 13, 65], 'true,false,false,false': [8.961, 117, 256], 'false,true': [4.386, 97, 24], 'false,false': [5.048, 169, 30]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.449, 9, 18], 'true,false,true,false': [2.51, 9, 21], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.595, 130, 321], 'false,true': [0.0, 0, 0], 'false,false': [6.697, 266, 54]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.471, 9, 18], 'true,false,false': [0.452, 139, 342], 'false,true': [0.0, 0, 0], 'false,false': [6.697, 266, 54]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.842, 4, 22], 'true,true,false,false': [5.982, 47, 160], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.859, 140, 183], 'true,false,false': [0.0, 0, 0], 'false': [0.386, 223, 49]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [6.268, 51, 182], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.776, 140, 183], 'true,false,false': [0.0, 0, 0], 'false,true': [2.455, 24, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.872, 199, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [6.269, 51, 182], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.725, 140, 183], 'false,true': [2.455, 24, 7], 'false,false': [0.378, 199, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.43, 148, 360], 'false,true': [0.0, 0, 0], 'false,false': [6.712, 266, 54]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [6.272, 51, 182], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.386, 97, 178], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.375, 266, 54]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [6.273, 51, 182], 'true,false,true,true': [0.577, 1, 1], 'true,false,true,false': [3.095, 16, 27], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.68, 80, 150], 'false,true': [0.0, 0, 0], 'false,false,true': [6.711, 266, 54], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [6.275, 51, 182], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.547, 7, 6], 'true,false,false,false': [7.209, 90, 172], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.71, 266, 54]}]]
[{'': [0.2064604129208208, 0.14027343750000099], 'true': [nan, 0.20646041292082848], 'true,false': [0.21606648199446093, 0.20516123322894475], 'true,false,true': [0.2222222222222218, 0.21000000000000033], 'true,false,false': [0.138888888888888, 0.21528222009789844], 'false': [0.15900553240898943, 0.1280270700234853]}, {'': [0.2055288227050375, 0.14014897301236445], 'true': [nan, 0.20552882270503722], 'true,false': [0.2159792547240732, 0.20415060898464552], 'true,false,true': [0.22222222222222257, 0.2099999999999998], 'true,false,false': [nan, 0.20415060898464552], 'false': [nan, 0.14014897301236445]}, {'': [0.20530995877194322, 0.14014702778825938], 'true': [nan, 0.20530995877194244], 'true,false': [0.22222222222222254, 0.2043223080587323], 'false': [nan, 0.14014702778825938]}, {'': [0.1848954978983462, 0.14928338217595266], 'true': [0.16903593572418013, 0.19120295261294093], 'true,false': [0.19120295261294093, nan], 'true,false,true': [nan, 0.19120295261294093], 'true,true': [nan, 0.16903593572418013], 'true,true,false': [0.13053557795033013, 0.1728581280145031]}, {'': [0.18070340272287497, 0.14902688883110796], 'true': [0.1686065795651349, 0.18719824944474303], 'true,false': [0.18719824944474303, nan], 'true,false,true': [nan, 0.18719824944474303], 'false': [0.19444901121508124, 0.14306750007083394], 'false,false': [nan, 0.14306750007083394]}, {'': [0.178580851385666, 0.1488169989950323], 'true': [0.1686585727056627, 0.18474010220086823], 'true,false': [nan, 0.18474010220086817], 'true,false,false': [nan, 0.18474010220086812], 'false': [0.19438589221416128, 0.14287119390517578]}, {'': [0.18494643714430406, 0.14077132992438096], 'true': [nan, 0.18494643714430417], 'true,false': [nan, 0.18494643714430417], 'false': [nan, 0.1407713299243812]}, {'': [0.18495953487698086, 0.1407452827601724], 'true': [0.16882856684912506, 0.1983530938529623], 'true,false': [0.1983530938529623, nan], 'true,false,true': [nan, 0.1983530938529623], 'false': [nan, 0.1407452827601724]}, {'': [0.18500378819350302, 0.140723274842577], 'true': [0.16891104281969216, 0.19843569359742735], 'true,false': [0.22052454274346067, 0.19399890308599854], 'true,false,true': [0.16660683876077192, 0.22272544250640144], 'true,false,false': [nan, 0.19399890308599854], 'false': [nan, 0.14072327484257718], 'false,false': [0.140723274842577, nan]}, {'': [0.1850574467692658, 0.14070462784892385], 'true': [0.16898169177806519, 0.1985204366841914], 'true,false': [nan, 0.1985204366841914], 'true,false,false': [0.18399976788988018, 0.19833418639256795], 'false': [nan, 0.1407046278489235], 'false,false': [nan, 0.14070462784892385]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
0;true,false;companyalsoknownas(F, A).;true;true
0;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
0;true,false,false;bankboughtbank(C, H).;true;true
0;false;economicsectorcompany(B, I), cityhascompanyoffice(J, I).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
1;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
1;true,false;companyalsoknownas(F, A).;true;true
1;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
1;true,false,false;bankboughtbank(C, D).;true;true
1;false;recursion_economicsectorcompany(B, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
2;true,false;companyalsoknownas(A, F), acquired(F, G).;true;true
2;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;recursion_economicsectorcompany(B, E).;true;true
3;true,true,false;companyalsoknownas(A, F).;true;true
3;true,false;cityhascompanyoffice(G, H).;true;true
3;true,false,true;economicsectorcompany(I, H), recursion_economicsectorcompany(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;true;acquired(E, C).;true;true
4;true,false;cityhascompanyoffice(F, G).;true;true
4;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
4;false;companyalsoknownas(A, I).;true;true
4;false,false;companyalsoknownas(J, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
5;true;acquired(E, C).;true;true
5;true,false;acquired(A, F), acquired(G, C).;true;true
5;true,false,false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
5;false;companyalsoknownas(I, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
6;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
6;true,false;companyalsoknownas(A, F), bankboughtbank(G, F).;true;true
6;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;cityhascompanyoffice(E, C).;true;true
7;true,false;cityhascompanyoffice(F, G).;true;true
7;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
7;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(H, A).;true;true
8;true,false,false;bankboughtbank(C, D).;true;true
8;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;false,false;bankboughtbank(J, K).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;cityhascompanyoffice(E, C).;true;true
9;true,false;bankboughtbank(C, D).;true;true
9;true,false,false;companyalsoknownas(F, A), acquired(F, G).;true;true
9;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
9;false,false;recursion_economicsectorcompany(B, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.524815601766179;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.5581489350995117;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6914822684328462;  // std dev = 3.291, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | | else return 0.5444760128474975;  // std dev = 8.961, 373.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=256 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.4945125714631487;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.024204006076958277;  // std dev = 0.322, 85.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
%   | else return 0.00890270394373279;  // std dev = 0.358, 199.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=30 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.47588605454691774;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.485440095651689;  // std dev = 9.595, 451.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=321 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then if ( acquired(I, K), countryhascompanyoffice(L, I) )
%   | | | then return 0.42893987719786253;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03406733263839708;  // std dev = 1.494, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.015414303957122866;  // std dev = 0.362, 299.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=48 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.6956966796559563;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.22201246912964048;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( cityhascompanyoffice(I, A), acquired(J, A) )
%   | | | then return 0.4398177774822559;  // std dev = 2.298, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return 0.3859654581367541;  // std dev = 9.640, 452.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=320 */
%   else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(L, A) )
%   | | then return -0.1490271238332929;  // std dev = 0.125, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.10991929799185916;  // std dev = 2.458, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.03134289791600371;  // std dev = 5.982, 252.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=45 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.44069220759664635;  // std dev = 1.795, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.3547057009417513;  // std dev = 5.976, 207.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=160 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.254525929711462;  // std dev = 7.754, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(J, A) )
%   | then return -0.1965328035097039;  // std dev = 0.098, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( acquired(A, K), cityhascompanyoffice(L, K) )
%   | | then return 0.2853614460988513;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.006024263075235407;  // std dev = 0.413, 217.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=47 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.3942150491114566;  // std dev = 0.304, 67.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.13052433186722376;  // std dev = 2.211, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.24030166879654594;  // std dev = 5.132, 144.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=108 */
%   | else if ( cityhascompanyoffice(H, I) )
%   | | then if ( economicsectorcompany(J, I), recursion_economicsectorcompany(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20185497775175398;  // std dev = 7.653, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, K) )
%   | then if ( companyalsoknownas(A, L), acquired(L, M) )
%   | | then return -0.2272263100864342;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.1644947420873221;  // std dev = 0.497, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return -0.036403518211411565;  // std dev = 0.375, 241.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=42 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.29711330531782726;  // std dev = 0.304, 67.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.09803019574618078;  // std dev = 2.212, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.18078800922263252;  // std dev = 5.133, 144.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=108 */
%   | else if ( acquired(A, H), acquired(I, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15796650631110115;  // std dev = 7.588, 323.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=183 */
%   else if ( companyalsoknownas(K, A) )
%   | then if ( companyalsoknownas(A, L), acquired(L, M) )
%   | | then return -0.19139824992305188;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.13691837441663257;  // std dev = 0.499, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return -0.030893450894630903;  // std dev = 0.375, 241.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=42 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0.4492875568799823;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14235234057317153;  // std dev = 9.562, 502.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=354 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then if ( acquired(L, K) )
%   | | | then return -0.2019977370000907;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14773478979476096;  // std dev = 0.287, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( bankchiefexecutiveceo(A, M), companyceo(A, N) )
%   | | | then return -0.10124207994936388;  // std dev = 0.832, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.007316308881021617;  // std dev = 6.332, 277.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=53 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.1965731344298168;  // std dev = 0.304, 67.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | | else if ( acquired(G, A), acquired(H, G) )
%   | | | then return 0.40122112606269095;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08710791818869076;  // std dev = 5.561, 162.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=118 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1009642455033379;  // std dev = 7.331, 275.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, M), companyceo(M, N) )
%   | | then return 0.0602734548977154;  // std dev = 0.387, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return -0.016824277966892228;  // std dev = 0.358, 299.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=48 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.2753236294509642;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.2640400820419312;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08014115976432018;  // std dev = 6.082, 212.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=161 */
%   | else if ( acquired(A, H) )
%   | | then if ( economicsectorcompany(I, H), bankboughtbank(J, A) )
%   | | | then return 0.03539702764637198;  // std dev = 0.493, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0670445554979644;  // std dev = 2.967, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07893021171432144;  // std dev = 6.685, 230.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=150 */
%   else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.010199258823071931;  // std dev = 0.360, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A), acquired(G, F) )
%   | | then return 0.2489139560703384;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, A) )
%   | | | then return 0.2746980271036049;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06207207015565958;  // std dev = 6.070, 215.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=164 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(J, A), acquired(J, K) )
%   | | | then return -0.011544227211662653;  // std dev = 1.311, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06204373716071313;  // std dev = 7.210, 262.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=172 */
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.00875210420098945;  // std dev = 0.360, 320.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=54 */


Results
   AUC ROC   = 0.781797
   AUC PR    = 0.749099
   CLL	      = -0.548487
   Precision = 0.711921 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.765125


Total learning time: 248.024 seconds
Total inference time: 17.439 seconds
AUC ROC: 0.781797


Results scoring model
   AUC ROC   = 0.83805
   AUC PR    = 0.822015
   CLL	      = -0.501005
   Precision = 0.773836 at threshold = 0.5
   Recall    = 0.842995
   F1        = 0.806936


Total scoring time: 26.721 seconds
Refined model CLL: -0.501005


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.781797
   AUC PR    = 0.749099
   CLL	      = -0.548487
   Precision = 0.711921 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.765125


Total learning time: 499.178 seconds
Total inference time: 17.439 seconds
AUC ROC: 0.781797
Total revision time: 499.178
Best scored revision CLL: -0.501005


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 19:26:31
{'AUC ROC': 0.781797, 'AUC PR': 0.749099, 'CLL': -0.548487, 'Precision': [0.711921, 0.5], 'Recall': 0.826923, 'F1': 0.765125, 'Learning time': 499.178, 'Inference time': 17.439, 'parameter_0.8': {'AUC ROC': 0.771709, 'AUC PR': 0.743491, 'CLL': -0.558014, 'Precision': [0.711921, 0.5], 'Recall': 0.826923, 'F1': 0.765125, 'Learning time': 198.242, 'Inference time': 16.179}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5664822684328457;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.599024847508267;  // std dev = 10.257, 548.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=406 */
%   | | | else return 0.25520775862892287;  // std dev = 4.035, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.06252849714330716;  // std dev = 4.720, 137.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=28 */
%   | else return 0.012589089539666065;  // std dev = 5.816, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4827669997975616;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47774272807421325;  // std dev = 11.248, 616.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=433 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026166574367914884;  // std dev = 7.501, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3841829953273639;  // std dev = 0.452, 640.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=450 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022882313991058254;  // std dev = 7.501, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return 0.09062936294060717;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.34069344679947755;  // std dev = 8.806, 422.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=319 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2035297170562565;  // std dev = 7.484, 285.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=139 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.014351295175801316;  // std dev = 0.384, 327.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=59 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.2554830456710148;  // std dev = 8.837, 424.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=320 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1639764079787629;  // std dev = 7.426, 285.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=139 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, I) )
%   | then return 0.14259471039299856;  // std dev = 1.249, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return -0.025165284382125196;  // std dev = 1.238, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.014796289311125645;  // std dev = 6.701, 311.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=55 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.1919681327856219;  // std dev = 8.837, 424.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=320 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1303550691687945;  // std dev = 7.388, 285.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=139 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.010851924776289466;  // std dev = 1.575, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else return -0.01041674616461393;  // std dev = 0.382, 313.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=56 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21222515332292022;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13939336143742637;  // std dev = 0.440, 636.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=447 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0037296981610255658;  // std dev = 7.496, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.11274617409548433;  // std dev = 8.839, 424.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=320 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09487490668493231;  // std dev = 6.745, 216.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0031973606116465535;  // std dev = 0.377, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.08727490281886;  // std dev = 8.839, 424.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=320 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return -0.2263256884141855;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14409716241938206;  // std dev = 2.198, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07058468810981332;  // std dev = 6.298, 192.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=117 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return -0.002742005475257608;  // std dev = 7.495, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.06819991108698163;  // std dev = 8.840, 424.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=320 */
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return -0.5139155830050076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05719625161163992;  // std dev = 6.707, 215.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=130 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0023522366577650496;  // std dev = 7.495, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */


Results
   AUC ROC   = 0.745466
   AUC PR    = 0.68578
   CLL	      = -0.579115
   Precision = 0.705298 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.758007


Total learning time: 143.27 seconds
Total inference time: 10.281 seconds
AUC ROC: 0.745466


Results scoring model
   AUC ROC   = 0.794428
   AUC PR    = 0.739679
   CLL	      = -0.53286
   Precision = 0.749135 at threshold = 0.5
   Recall    = 0.835907
   F1        = 0.790146


Total scoring time: 16.417 seconds
Parameter learned model CLL: -0.53286


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.227, 7, 17], 'true,false,false,true': [10.257, 142, 406], 'true,false,false,false': [4.035, 41, 27], 'false,true': [4.72, 109, 28], 'false,false': [5.816, 219, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.227, 7, 17], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.248, 183, 433], 'false,true': [0.0, 0, 0], 'false,false': [7.501, 328, 68]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.452, 190, 450], 'false,true': [0.0, 0, 0], 'false,false': [7.501, 328, 68]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.707, 1, 1], 'true,true,false,false': [8.806, 103, 319], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.484, 146, 139], 'true,false,false': [0.0, 0, 0], 'false': [0.384, 268, 59]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true': [8.837, 104, 320], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.426, 146, 139], 'true,false,false': [0.0, 0, 0], 'false,true': [1.249, 4, 2], 'false,false,true': [1.238, 8, 2], 'false,false,false': [6.701, 256, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true': [8.837, 104, 320], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.388, 146, 139], 'false,true': [1.575, 11, 3], 'false,false': [0.382, 257, 56]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.872, 1, 3], 'true,false,false': [0.44, 189, 447], 'false,true': [0.0, 0, 0], 'false,false': [7.496, 328, 68]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [8.839, 104, 320], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.745, 86, 130], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.377, 328, 68]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [8.839, 104, 320], 'true,false,true,true': [0.73, 3, 1], 'true,false,true,false': [2.198, 8, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.298, 75, 117], 'false,true': [0.0, 0, 0], 'false,false,true': [7.495, 328, 68], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [8.84, 104, 320], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 1, 0], 'true,false,false,false': [6.707, 85, 130], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.495, 328, 68]}]]
[{'': [0.20874023437499808, 0.14223038465462795], 'true': [nan, 0.20874023437499764], 'true,false': [0.2065972222222218, 0.20882263029178372], 'true,false,false': [0.1919787948212458, 0.2394031141868526], 'true,false,true': [nan, 0.2065972222222218], 'false': [0.16260855666258298, 0.13058839313665677]}, {'': [0.20542602918781436, 0.14209809489424657], 'true': [nan, 0.205426029187815], 'true,false': [0.20659722222222252, 0.20537945166638244], 'true,false,true': [nan, 0.20659722222222252], 'true,false,false': [nan, 0.20537945166638244], 'false': [nan, 0.14209809489424657]}, {'': [0.20461602536392026, 0.14209580346496908], 'true': [nan, 0.2046160253639205], 'true,false': [nan, 0.2046160253639205], 'false': [nan, 0.1420958034649691]}, {'': [0.19370080777961418, 0.14729322007126386], 'true': [0.1843584717984244, 0.1965410765587576], 'true,false': [0.1965410765587576, nan], 'true,false,true': [nan, 0.1965410765587576], 'true,true': [nan, 0.1843584717984244], 'true,true,false': [0.25000000000000006, 0.18375241202706682]}, {'': [0.18994566923389494, 0.14724485459451406], 'true': [0.1841915923467841, 0.19349857596244355], 'true,false': [0.19349857596244355, nan], 'true,false,true': [nan, 0.19349857596244355], 'false': [0.26017044283538865, 0.14467769754071014], 'false,false': [0.15334411928537744, 0.14439568505217254]}, {'': [0.18803747360583314, 0.14712884651219743], 'true': [0.18418839236395104, 0.1914936202475076], 'true,false': [nan, 0.19149362024750752], 'true,false,false': [nan, 0.19149362024750782], 'false': [0.1771261185037635, 0.14578710738856981]}, {'': [0.1932938760834815, 0.14187530259113418], 'true': [nan, 0.1932938760834815], 'true,false': [0.190024261413243, 0.19328128676082687], 'true,false,true': [nan, 0.190024261413243], 'false': [nan, 0.14187530259113415]}, {'': [0.1932301605569888, 0.14187206716306297], 'true': [0.18425700808118795, 0.21063253582126495], 'true,false': [0.21063253582126495, nan], 'true,false,true': [nan, 0.21063253582126495], 'false': [nan, 0.1418720671630629]}, {'': [0.19321584462077449, 0.14186930983180018], 'true': [0.1842779373565868, 0.21060387729278582], 'true,false': [0.24255253287344627, 0.206594888850139], 'true,false,true': [0.13317310970921858, 0.24155956943634732], 'true,false,false': [nan, 0.206594888850139], 'false': [nan, 0.14186930983180018], 'false,false': [0.14186930983180018, nan]}, {'': [0.19292780284990604, 0.14186695718223838], 'true': [0.18429688131771021, 0.20974658516937975], 'true,false': [nan, 0.20974658516937975], 'true,false,false': [0.0, 0.20921211027605843], 'false': [nan, 0.14186695718223832], 'false,false': [nan, 0.14186695718223838]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
9;true;cityhascompanyoffice(E, C).;true;true
9;true,false;bankboughtbank(F, A), companyalsoknownas(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( acquired(C, E), companyceo(E, F) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.26044778567422483;  // std dev = 4.574, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.6763307532813312;  // std dev = 3.618, 88.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=72 */
%   | | | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.24481560176617773;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.35814893509950774;  // std dev = 12.865, 662.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=331 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), acquired(D, E) )
%   | then return 0.41405060014124423;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0.4276277458579098;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7643570734724022;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.7268967128339358;  // std dev = 0.142, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( acquired(H, A) )
%   | | then if ( cityhascompanyoffice(I, A), cityhascompanyoffice(I, H) )
%   | | | then return 0.023985180732340353;  // std dev = 1.415, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.21848480817747137;  // std dev = 5.022, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.2838965513963994;  // std dev = 5.701, 154.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=73 */
%   | | | else return 0.30465473540742116;  // std dev = 13.288, 710.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=352 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.5656204945410263;  // std dev = 0.199, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then if ( companyalsoknownas(A, F), cityhascompanyoffice(G, F) )
%   | | | then return 0.6636497853364083;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5868447923844308;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.544084158880649;  // std dev = 3.857, 108.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=90 */
%   | | | else return -0.17302772852800033;  // std dev = 0.306, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( acquired(A, I), countryhascompanyoffice(J, I) )
%   | | then if ( companyceo(I, K) )
%   | | | then return 0.2526707650047119;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.20632785530875014;  // std dev = 1.613, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.6579651016165856;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24407409531050492;  // std dev = 13.836, 772.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=373 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.4259927552924627;  // std dev = 0.039, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.0184736122847683;  // std dev = 0.346, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( companyceo(C, E) )
%   | | | then return 0.0877301662717514;  // std dev = 3.309, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.18219016178934405;  // std dev = 3.566, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   else if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | then return 0.47329382399134085;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.6062149523857402;  // std dev = 1.665, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | | else return -0.2579052530161233;  // std dev = 0.420, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( companyceo(A, I), acquired(A, J) )
%   | | | then return 0.17090907120931176;  // std dev = 3.119, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | | else return 0.2034357669911247;  // std dev = 13.181, 740.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=366 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), acquired(A, E) )
%   | then return 0.40216705684897136;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3150404164181133;  // std dev = 3.65e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( companyalsoknownas(G, H) )
%   | | | then return 0.46530272024579983;  // std dev = 1.945, 65.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=61 */
%   | | | else return 0.24653447238282108;  // std dev = 3.007, 50.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | | else return -0.1667301309111849;  // std dev = 0.035, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.47643210451977047;  // std dev = 1.897, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return -0.24364615593907057;  // std dev = 0.126, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return 0.07532320568695992;  // std dev = 3.085, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.16360701597129254;  // std dev = 13.031, 690.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=344 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), companyceo(A, E) )
%   | then return 0.31547891152088303;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2506570190073242;  // std dev = 0.016, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, A) )
%   | then if ( bankchiefexecutiveceo(A, H) )
%   | | then return 0.1754093583426839;  // std dev = 0.754, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyceo(A, I), acquired(A, J) )
%   | | | then return 0.09350899364597869;  // std dev = 1.340, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.058714522218144605;  // std dev = 1.639, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.23573738761241003;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34718135176489084;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.06837365447462192;  // std dev = 3.877, 91.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=38 */
%   | | | else return 0.12091965408508328;  // std dev = 13.777, 859.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=421 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( bankchiefexecutiveceo(A, C), companyceo(A, C) )
%   then if ( acquired(A, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return -0.007056374343226146;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.10719083400459073;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.12141180611257171;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.2810319704284348;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, G), companyceo(F, H) )
%   | | | then return 0.13018996454123088;  // std dev = 0.943, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.27799231952833775;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, A) )
%   | | then return 0.06248977951420042;  // std dev = 0.324, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.2064701198812663;  // std dev = 0.010, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.09470662242758526;  // std dev = 14.165, 942.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=463 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, C), cityhascompanyoffice(E, C) )
%   | then return 0.3768405340589483;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(F, C) )
%   | | then return -0.11019967888507542;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.0458122907031387;  // std dev = 0.357, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   else if ( acquired(G, A), companyceo(G, H) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.1911646566670679;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.30670749919751167;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.009062399751842927;  // std dev = 3.184, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return 0.07112281090937304;  // std dev = 0.317, 174.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=87 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.06844755425314825;  // std dev = 3.721, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.0764301966274229;  // std dev = 12.678, 674.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=337 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C), economicsectorcompany(B, E) )
%   | then return 0.5108584266449063;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.17399338168529285;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( companyalsoknownas(C, F), countryhascompanyoffice(G, F) )
%   | | | then return 0.10384524036335502;  // std dev = 1.767, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.026519772133365087;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   else if ( companyceo(A, H), acquired(A, I) )
%   | then if ( companyalsoknownas(A, J), acquired(J, K) )
%   | | then return 0.09482668180842364;  // std dev = 0.331, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.025279237919367266;  // std dev = 0.385, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( acquired(L, A), companyceo(L, M) )
%   | | then return 0.0056252096529615814;  // std dev = 0.366, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( companyalsoknownas(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.2293881562653638;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.054920032211162165;  // std dev = 13.512, 843.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=416 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.1930672377949638;  // std dev = 0.265, 116.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.1585991784485207;  // std dev = 2.480, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | else return 0.28748761670025785;  // std dev = 6.880, 268.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=203 */
%   | else if ( bankboughtbank(H, A), companyalsoknownas(I, H) )
%   | | then return -0.3085077490169694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.10493357935391023;  // std dev = 1.428, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.18486085982335454;  // std dev = 6.389, 192.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=124 */
%   else if ( cityhascompanyoffice(K, A) )
%   | then return -0.13651538113492573;  // std dev = 0.262, 79.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
%   | else if ( acquired(A, L) )
%   | | then return -0.1468503306354639;  // std dev = 0.407, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else return -0.2787365947985707;  // std dev = 0.356, 278.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=44 */


Results
   AUC ROC   = 0.815503
   AUC PR    = 0.796341
   CLL	      = -0.561936
   Precision = 0.717857 at threshold = 0.5
   Recall    = 0.773077
   F1        = 0.744444


Total learning time: 37.533 seconds
Total inference time: 4.295 seconds
AUC ROC: 0.815503


Results scoring model
   AUC ROC   = 0.87372
   AUC PR    = 0.868241
   CLL	      = -0.538846
   Precision = 0.788603 at threshold = 0.5
   Recall    = 0.828185
   F1        = 0.80791


Total scoring time: 5.822 seconds
Refined model CLL: -0.538846


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.745466
   AUC PR    = 0.68578
   CLL	      = -0.579115
   Precision = 0.705298 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.758007


Total learning time: 203.04200000000003 seconds
Total inference time: 10.281 seconds
AUC ROC: 0.745466
Total revision time: 203.04200000000003
Best scored revision CLL: -0.53286


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 19:30:10
{'AUC ROC': 0.745466, 'AUC PR': 0.68578, 'CLL': -0.579115, 'Precision': [0.705298, 0.5], 'Recall': 0.819231, 'F1': 0.758007, 'Learning time': 203.04200000000003, 'Inference time': 10.281, 'parameter_1.0': {'AUC ROC': 0.745466, 'AUC PR': 0.68578, 'CLL': -0.579115, 'Precision': [0.705298, 0.5], 'Recall': 0.819231, 'F1': 0.758007, 'Learning time': 143.27, 'Inference time': 10.281}}


Starting fold 2

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 518

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 260

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6512523833753738;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.48314893509951307;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=55 */
%   else if ( economicsectorcompany(B, I), bankchiefexecutiveceo(I, J) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.03996711691769419;  // std dev = 3.133, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5728505077589573;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.36887697659770574;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4480429532202552;  // std dev = 5.080, 117.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=78 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023730791408150605;  // std dev = 3.152, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( companyceo(A, H), companyceo(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45250734201965837;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.7313623371563691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3558206593714118;  // std dev = 5.231, 123.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020759845990050655;  // std dev = 3.152, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E), companyceo(E, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5853764159265078;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, G), bankchiefexecutiveceo(H, G) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.554967244299185;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(J, C) )
%   | | | then return 0.4057812403205118;  // std dev = 1.979, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.47244089239364134;  // std dev = 2.552, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return -0.0040035488838917116;  // std dev = 0.423, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.4401650071327161;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41772547861271464;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34374973449917207;  // std dev = 3.191, 85.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=70 */
%   else if ( companyceo(A, J) )
%   | then return 0.12230620835696204;  // std dev = 2.221, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return 0.026231227574320892;  // std dev = 1.152, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( companyalsoknownas(L, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04468678323389672;  // std dev = 3.785, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.3361145892787514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then if ( economicsectorcompany(H, F), recursion_economicsectorcompany(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3472699133755986;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2596003524936016;  // std dev = 3.168, 85.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=70 */
%   else if ( companyceo(A, J) )
%   | then return 0.09990029770450372;  // std dev = 2.216, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( companyalsoknownas(K, A) )
%   | | then return 0.021436184768629067;  // std dev = 1.150, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.036952990373370076;  // std dev = 0.415, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), companyceo(D, H) )
%   | | | then return 0.26823661476797994;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12305720603843054;  // std dev = 4.666, 133.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=89 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006510418878413148;  // std dev = 3.218, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.24235171882832218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03653767598915277;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.2546726705802965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0974441953885435;  // std dev = 4.617, 130.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=87 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005634265085858107;  // std dev = 0.382, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.20065896071878053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return -0.18096691520392943;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.18181406449600346;  // std dev = 1.706, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05936746034541074;  // std dev = 4.271, 112.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=74 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return 0.004872985328268967;  // std dev = 3.218, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.17039365973177367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return 0.18143940484238905;  // std dev = 1.192, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.04634026930808706;  // std dev = 4.482, 123.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.004212291524607594;  // std dev = 3.218, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */


Results
   AUC ROC   = 0.825311
   AUC PR    = 0.806181
   CLL	      = -0.528654
   Precision = 0.846535 at threshold = 0.5
   Recall    = 0.657692
   F1        = 0.74026


Total learning time: 18.58 seconds
Total inference time: 7.298 seconds
AUC ROC: 0.825311


Results scoring model
   AUC ROC   = 0.852861
   AUC PR    = 0.863094
   CLL	      = -0.495245
   Precision = 0.854167 at threshold = 0.5
   Recall    = 0.796117
   F1        = 0.824121


Total scoring time: 5.716 seconds
Parameter learned model CLL: -0.495245


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), bankchiefexecutiveceo(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.279, 2, 9], 'true,false,true,false': [1.309, 3, 4], 'true,false,false,true': [2.181, 6, 23], 'true,false,false,false': [4.541, 33, 55], 'false,true': [0.0, 5, 0], 'false,false': [3.133, 54, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.279, 2, 9], 'true,false,true,false': [1.309, 3, 4], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.08, 39, 78], 'false,true': [0.0, 0, 0], 'false,false': [3.152, 59, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'true,false,true': 'companyceo(A, H), companyceo(F, H)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'companyalsoknownas(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.279, 2, 9], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [5.231, 42, 81], 'false,true': [0.0, 0, 0], 'false,false': [3.152, 59, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E), companyceo(E, D)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'companyceo(A, G), bankchiefexecutiveceo(H, G)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)', 'true,false,false': 'acquired(J, C)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.043, 0, 2], 'true,false,false,true': [1.979, 5, 22], 'true,false,false,false': [2.552, 10, 48], 'false': [0.423, 88, 30]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(A, K)', 'false,false,false': 'companyalsoknownas(L, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.042, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.191, 15, 70], 'false,true': [2.221, 15, 10], 'false,false,true': [1.152, 7, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.785, 66, 17]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,true': 'economicsectorcompany(H, F), recursion_economicsectorcompany(H, G)', 'true,false,false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.075, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.168, 15, 70], 'false,true': [2.216, 15, 10], 'false,false,true': [1.15, 7, 3], 'false,false,false': [0.415, 66, 17]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'true,false,false': 'companyceo(A, H), companyceo(D, H)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.057, 0, 2], 'true,false,false,false': [4.666, 44, 89], 'false,true': [0.0, 0, 0], 'false,false': [3.218, 59, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'companyalsoknownas(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.644, 1, 2], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [4.617, 43, 87], 'false,true': [0.0, 0, 0], 'false,false': [0.382, 59, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.524, 1, 1], 'true,false,true,false': [1.706, 5, 15], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.271, 38, 74], 'false,true': [0.0, 0, 0], 'false,false,true': [3.218, 59, 12], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.192, 2, 9], 'true,false,false,false': [4.482, 42, 81], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.218, 59, 12]}]]
[{'': [0.21969821673525602, 0.1404483237452881], 'true': [nan, 0.21969821673525414], 'true,false': [0.20061728395061695, 0.22222222222222265], 'true,false,false': [0.1640903686087999, 0.23437499999999972], 'true,false,true': [0.14876033057851218, 0.24489795918367332], 'false': [-2.7755575615628915e-18, 0.14876033057851187]}, {'': [0.2175133652218104, 0.13997010769490922], 'true': [nan, 0.21751336522181075], 'true,false': [0.19603484203887767, 0.22054190792749662], 'true,false,false': [nan, 0.22054190792749662], 'true,false,true': [0.1487603305785126, 0.24489795918367355], 'false': [nan, 0.13997010769490922]}, {'': [0.21648870146457785, 0.13996233565919042], 'true': [nan, 0.21648870146457744], 'true,false': [0.14876033057851237, 0.22178212058789487], 'true,false,false': [0.0, 0.22244787603552224], 'true,false,true': [nan, 0.14876033057851235], 'false': [nan, 0.13996233565919033]}, {'': [0.11990037896954542, 0.1790966069322117], 'true': [0.0, 0.12108136585820878], 'true,false': [0.0009247177190599976, 0.12366136701051565], 'true,false,false': [0.1450276039271761, 0.1123035477095718], 'true,false,true': [nan, 0.0009247177190599976], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.11592053717538858, 0.17908309571764033], 'false': [0.1973120796035316, 0.1688019058351815], 'false,false': [0.13279014678198914, 0.17259988013057773], 'false,false,false': [nan, 0.17259988013057773], 'true': [0.0, 0.11715101542971881], 'true,false': [0.0008967646882754865, 0.11976060701958957], 'true,false,false': [nan, 0.11976060701958961], 'true,false,true': [nan, 0.0008967646882754865]}, {'': [0.11431488425569389, 0.17700675018176731], 'false': [0.19641184831656247, 0.16817808022144762], 'false,false': [0.13222063037930826, 0.17214371215057916], 'true': [0.0, 0.11556577937613306], 'true,false': [0.002801209706218624, 0.1180423748188204], 'true,false,false': [nan, 0.11804237481882045], 'true,false,true': [nan, 0.002801209706218624]}, {'': [0.16161697209805695, 0.14581130371853807], 'true': [nan, 0.1616169720980571], 'true,false': [nan, 0.1616169720980571], 'true,false,false': [0.0016475985210253619, 0.16371027383654374], 'false': [nan, 0.1458113037185382]}, {'': [0.16168460829072562, 0.14583717697346316], 'true': [0.0, 0.1627317224415996], 'true,false': [0.1383837113370848, 0.162880186666095], 'true,false,false': [0.0, 0.16394440283226128], 'false': [nan, 0.14583717697346316], 'true,false,true': [nan, 0.1383837113370848]}, {'': [0.16170336128110277, 0.14585960057771313], 'true': [0.0, 0.1627913745497341], 'true,false': [0.15557605572207803, 0.16289453752034982], 'true,false,false': [nan, 0.16289453752034982], 'true,false,true': [0.13723573709385323, 0.14544553856380568], 'false': [nan, 0.14585960057771324], 'false,false': [0.14585960057771313, nan]}, {'': [0.16080290483422358, 0.145879017973356], 'true': [0.0, 0.16190840298492204], 'true,false': [nan, 0.1619084029849219], 'true,false,false': [0.12918584628040475, 0.16333653034102785], 'false': [nan, 0.14587901797335598], 'false,false': [nan, 0.145879017973356]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;false;economicsectorcompany(B, I), bankchiefexecutiveceo(I, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, F), acquired(F, G).;true;true
2;true,false;companyceo(A, I), companyceo(D, I).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
3;true;companyceo(A, D), acquired(E, C).;true;true
3;true,false;companyceo(A, G), bankchiefexecutiveceo(H, G).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
4;true;companyceo(A, D), acquired(E, C).;true;true
4;true,false;companyceo(A, F), bankchiefexecutiveceo(G, F).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
5;true;companyceo(A, D), acquired(E, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
6;true;companyceo(A, H), companyceo(D, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true
7;true,false;companyceo(A, F), bankchiefexecutiveceo(G, F).;true;true
7;true,false,false;companyceo(A, I), companyceo(D, I).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.4970378239884021;  // std dev = 4.992, 108.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=69 */
%   else if ( economicsectorcompany(B, J), bankchiefexecutiveceo(J, K) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(L, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.09070707463439608;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7786901843757138;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(A, D), companyceo(D, E) )
%   | then if ( companyalsoknownas(A, F), acquired(D, G) )
%   | | then return -0.002210712863721644;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( cityhascompanyoffice(H, D) )
%   | | | then return 0.025601027045287484;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2963258005496839;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( acquired(A, I) )
%   | | then if ( acquired(J, A), companyceo(J, K) )
%   | | | then return 0.14603641951792343;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5954921484997122;  // std dev = 1.493, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.28073116863071945;  // std dev = 6.167, 163.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=77 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then return 0.22063668066887288;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6470536588391421;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyceo(A, I), companyceo(D, I) )
%   | | then return 0.6155856747099465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(J, A), companyceo(J, K) )
%   | | | then return 0.23259815899915853;  // std dev = 1.331, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3936751428992702;  // std dev = 4.980, 114.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=76 */
%   else if ( companyceo(A, L), acquired(A, M) )
%   | then if ( acquired(M, N) )
%   | | then return -0.159731419188572;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.31289795201775494;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( cityhascompanyoffice(P, A) )
%   | | then return -0.17097403099862638;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.004770249815149319;  // std dev = 0.382, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.6761674179654975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then return 0.6885400744609893;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.470709588919874;  // std dev = 0.354, 85.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=70 */
%   else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | then if ( countryhascompanyoffice(J, A), countryhascompanyoffice(K, H) )
%   | | then return -0.18678252301198411;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5296572217483294;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyceo(A, L) )
%   | | then if ( bankchiefexecutiveceo(M, L) )
%   | | | then return -0.1912426997522084;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1389545269759761;  // std dev = 1.577, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( acquired(N, A), companyalsoknownas(N, P) )
%   | | | then return 0.05757318795875459;  // std dev = 0.960, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06567312054860419;  // std dev = 3.571, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.5150071478758369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.36391002936827743;  // std dev = 0.346, 87.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=72 */
%   else if ( companyceo(A, F) )
%   | then if ( acquired(A, G), companyalsoknownas(G, H) )
%   | | then return -0.16218934950769617;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(A, I), companyceo(I, J) )
%   | | | then return 0.4113338710021255;  // std dev = 0.254, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04249666508361347;  // std dev = 1.643, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( acquired(A, K) )
%   | | then if ( cityhascompanyoffice(L, K) )
%   | | | then return -0.01827015032855237;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2179743359538864;  // std dev = 1.123, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return -0.085970867279976;  // std dev = 0.981, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06017969690344496;  // std dev = 3.260, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.3881820071194054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( companyalsoknownas(A, G) )
%   | | | then return 0.10307609073487407;  // std dev = 0.457, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23978614991350214;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.28780252069573975;  // std dev = 0.340, 73.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=61 */
%   else if ( acquired(A, H) )
%   | then if ( companyceo(H, I) )
%   | | then if ( companyalsoknownas(A, J), acquired(H, K) )
%   | | | then return -0.1342696872002042;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04110771752616635;  // std dev = 1.417, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return 0.029027879827911673;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24850230767252243;  // std dev = 1.144, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.04635342046593313;  // std dev = 0.378, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), companyceo(D, E) )
%   | then return 0.3381863071215081;  // std dev = 0.120, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then return 0.03647667503356985;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.32636236879247504;  // std dev = 0.310, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12914187347545272;  // std dev = 4.250, 122.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=81 */
%   else if ( companyalsoknownas(A, I) )
%   | then if ( countryhascompanyoffice(J, A) )
%   | | then return 0.050229606667014544;  // std dev = 0.443, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.21475268728856126;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( bankchiefexecutiveceo(A, K) )
%   | | then return -0.15969430953815647;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, L), companyceo(A, M) )
%   | | | then return 0.36205506725707276;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0017870396824952565;  // std dev = 2.735, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.27442540677727445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then return 0.1419553136608781;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(A, H), companyceo(D, H) )
%   | | | then return 0.19456526703971877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10444100591321526;  // std dev = 4.359, 130.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=87 */
%   else if ( companyalsoknownas(A, I) )
%   | then if ( countryhascompanyoffice(J, A) )
%   | | then return 0.04440331727518644;  // std dev = 0.435, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.18173555311028364;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( companyceo(A, K), acquired(A, L) )
%   | | then return 0.16409706347822334;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return -0.12518350158807198;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01828704270470569;  // std dev = 2.712, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.22327020636535555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.2449481328342796;  // std dev = 0.267, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(G, A), companyceo(G, H) )
%   | | | then return -0.12333978802075345;  // std dev = 1.006, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08495851312896764;  // std dev = 4.210, 122.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=82 */
%   else if ( companyalsoknownas(A, I) )
%   | then if ( countryhascompanyoffice(J, A) )
%   | | then return 0.0391744923793831;  // std dev = 0.429, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.15692019431536394;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(A, K), cityhascompanyoffice(L, K) )
%   | | then return -0.2055693868106932;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(M, A) )
%   | | | then return -0.15336731829217198;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.030261273478863978;  // std dev = 2.811, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.1869456516669673;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0.29329162541790427;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.10329476540202077;  // std dev = 1.539, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.05151110808716278;  // std dev = 4.066, 109.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=71 */
%   else if ( companyalsoknownas(A, H) )
%   | then if ( countryhascompanyoffice(I, A) )
%   | | then return 0.03450012558772694;  // std dev = 0.423, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13772588958912746;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(J, A) )
%   | | then return -0.13453032612838767;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, K), cityhascompanyoffice(L, K) )
%   | | | then return -0.1754686261142359;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.025788337729483492;  // std dev = 2.811, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */


Results
   AUC ROC   = 0.821294
   AUC PR    = 0.809785
   CLL	      = -0.531463
   Precision = 0.842105 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.750533


Total learning time: 24.287 seconds
Total inference time: 6.436 seconds
AUC ROC: 0.821294


Results scoring model
   AUC ROC   = 0.900038
   AUC PR    = 0.900845
   CLL	      = -0.440209
   Precision = 0.876289 at threshold = 0.5
   Recall    = 0.825243
   F1        = 0.85


Total scoring time: 4.337 seconds
Refined model CLL: -0.440209


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.821294
   AUC PR    = 0.809785
   CLL	      = -0.531463
   Precision = 0.842105 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.750533


Total learning time: 52.92 seconds
Total inference time: 6.436 seconds
AUC ROC: 0.821294
Total revision time: 52.92
Best scored revision CLL: -0.440209


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 19:31:19
{'AUC ROC': 0.821294, 'AUC PR': 0.809785, 'CLL': -0.531463, 'Precision': [0.842105, 0.5], 'Recall': 0.676923, 'F1': 0.750533, 'Learning time': 52.92, 'Inference time': 6.436, 'parameter_0.2': {'AUC ROC': 0.825311, 'AUC PR': 0.806181, 'CLL': -0.528654, 'Precision': [0.846535, 0.5], 'Recall': 0.657692, 'F1': 0.74026, 'Learning time': 18.58, 'Inference time': 7.298}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6694696898164935;  // std dev = 2.848, 53.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=43 */
%   | | | else return 0.5115580260086005;  // std dev = 6.313, 176.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=115 */
%   else if ( economicsectorcompany(B, I), bankchiefexecutiveceo(I, J) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.04254609822007912;  // std dev = 4.605, 141.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=26 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5398498420741679;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.46952849908361544;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46737170007178785;  // std dev = 6.976, 229.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=158 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023550513929765038;  // std dev = 4.639, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( companyceo(A, H), companyceo(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.428956272535085;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.6878783602117339;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37128709983298563;  // std dev = 7.139, 238.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=163 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020602526364151084;  // std dev = 4.639, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E), companyceo(E, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724542477732578;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, G), bankchiefexecutiveceo(H, G) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5760396114644781;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(J, C) )
%   | | | then return 0.44864280663316586;  // std dev = 2.253, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return 0.4441019872189558;  // std dev = 3.491, 108.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=87 */
%   else return 0.025494431028170804;  // std dev = 0.436, 253.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=73 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.43031091599409066;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43332069433902676;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3397777942753951;  // std dev = 4.067, 155.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=128 */
%   else if ( companyceo(A, J) )
%   | then return 0.1272683400581497;  // std dev = 3.219, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return 0.06725859806779393;  // std dev = 1.534, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( companyalsoknownas(L, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.011150664694492034;  // std dev = 5.874, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.3294014055162978;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then if ( economicsectorcompany(H, F), recursion_economicsectorcompany(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34268547385085973;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2591741198342753;  // std dev = 4.025, 157.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=130 */
%   else if ( companyceo(A, J) )
%   | then return 0.10354848255363204;  // std dev = 3.217, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | else if ( companyalsoknownas(K, A) )
%   | | then return 0.05468425273245902;  // std dev = 1.525, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return -0.009158796937727713;  // std dev = 0.429, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), companyceo(D, H) )
%   | | | then return 0.337476407153729;  // std dev = 0.224, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13565654694456378;  // std dev = 6.507, 254.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=175 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004182881216974127;  // std dev = 4.731, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.23578088887046522;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.013067796243084323;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.28607080418821657;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10658518148288632;  // std dev = 6.446, 247.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=170 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0035920255047743373;  // std dev = 0.381, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.195960940254036;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return -0.18026573577809035;  // std dev = 0.517, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16818141637182576;  // std dev = 2.295, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07255880131652723;  // std dev = 6.057, 222.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=152 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.003085896827057567;  // std dev = 4.731, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.16690909609831073;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return 0.14562410131371373;  // std dev = 1.692, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.05865905981590452;  // std dev = 6.292, 240.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=165 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0026520163656457013;  // std dev = 4.731, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */


Results
   AUC ROC   = 0.819793
   AUC PR    = 0.796356
   CLL	      = -0.523538
   Precision = 0.803571 at threshold = 0.5
   Recall    = 0.692308
   F1        = 0.743802


Total learning time: 25.492 seconds
Total inference time: 6.234 seconds
AUC ROC: 0.819793


Results scoring model
   AUC ROC   = 0.847429
   AUC PR    = 0.858184
   CLL	      = -0.497173
   Precision = 0.821053 at threshold = 0.5
   Recall    = 0.753623
   F1        = 0.785894


Total scoring time: 6.785 seconds
Parameter learned model CLL: -0.497173


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), bankchiefexecutiveceo(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.764, 4, 14], 'true,false,true,false': [1.664, 4, 9], 'true,false,false,true': [2.848, 10, 43], 'true,false,false,false': [6.313, 61, 115], 'false,true': [0.0, 13, 0], 'false,false': [4.605, 115, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.764, 4, 14], 'true,false,true,false': [1.664, 4, 9], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.976, 71, 158], 'false,true': [0.0, 0, 0], 'false,false': [4.639, 128, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'true,false,true': 'companyceo(A, H), companyceo(F, H)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'companyalsoknownas(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.764, 4, 14], 'true,false,false,true': [0.008, 0, 4], 'true,false,false,false': [7.139, 75, 163], 'false,true': [0.0, 0, 0], 'false,false': [4.639, 128, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E), companyceo(E, D)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'companyceo(A, G), bankchiefexecutiveceo(H, G)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)', 'true,false,false': 'acquired(J, C)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.044, 0, 4], 'true,false,false,true': [2.253, 6, 41], 'true,false,false,false': [3.491, 21, 87], 'false': [0.436, 180, 73]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(A, K)', 'false,false,false': 'companyalsoknownas(L, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.045, 0, 4], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.067, 27, 128], 'false,true': [3.219, 29, 20], 'false,false,true': [1.534, 11, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.874, 140, 47]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,true': 'economicsectorcompany(H, F), recursion_economicsectorcompany(H, G)', 'true,false,false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(K, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.05, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.025, 27, 130], 'false,true': [3.217, 29, 20], 'false,false,true': [1.525, 11, 6], 'false,false,false': [0.429, 140, 47]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'true,false,false': 'companyceo(A, H), companyceo(D, H)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.224, 0, 6], 'true,false,false,false': [6.507, 79, 175], 'false,true': [0.0, 0, 0], 'false,false': [4.731, 128, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'companyalsoknownas(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.877, 2, 4], 'true,false,false,true': [0.176, 0, 5], 'true,false,false,false': [6.446, 77, 170], 'false,true': [0.0, 0, 0], 'false,false': [0.381, 128, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.517, 1, 1], 'true,false,true,false': [2.295, 8, 26], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.057, 70, 152], 'false,true': [0.0, 0, 0], 'false,false,true': [4.731, 128, 26], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.692, 4, 14], 'true,false,false,false': [6.292, 75, 165], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.731, 128, 26]}]]
[{'': [0.21152366863905867, 0.14032720526227122], 'true': [nan, 0.21152366863905805], 'true,false': [0.19146722164412164, 0.21391659197956328], 'true,false,false': [0.15307938768244994, 0.22646565082644995], 'true,false,true': [0.1728395061728392, 0.2130177514792898], 'false': [-1.2810265668751807e-17, 0.15039484935365527]}, {'': [0.21010506760978248, 0.13974594777668647], 'true': [nan, 0.2101050676097827], 'true,false': [0.1908925594694247, 0.2124855472229623], 'true,false,false': [nan, 0.2124855472229623], 'true,false,true': [0.17283950617283925, 0.2130177514792899], 'false': [nan, 0.13974594777668647]}, {'': [0.2096848138353598, 0.13973657800047698], 'true': [nan, 0.20968481383536006], 'true,false': [0.17283950617283989, 0.2122350196662673], 'true,false,false': [1.4454611031555764e-05, 0.21414505720499227], 'true,false,true': [nan, 0.17283950617283975], 'false': [nan, 0.13973657800047695]}, {'': [0.10784543946276393, 0.18973266562826782], 'true': [0.0, 0.10901193097653593], 'true,false': [0.0004921993911007894, 0.11138360736417059], 'true,false,false': [0.10802026615759651, 0.11284103140467378], 'true,false,true': [nan, 0.0004921993911007894], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.10304919225201287, 0.18974813032365945], 'false': [0.21151300604439244, 0.1811515664039612], 'false,false': [0.13851034849539365, 0.18451570638537546], 'false,false,false': [nan, 0.18451570638537546], 'true': [0.0, 0.10424881615400347], 'true,false': [0.0005039821489050411, 0.10670596950976773], 'true,false,false': [nan, 0.10670596950976773], 'true,false,true': [nan, 0.0005039821489050411]}, {'': [0.1007703335743899, 0.18847771487021434], 'false': [0.211154308876454, 0.18079742074980756], 'false,false': [0.13671592018664122, 0.18446516864264753], 'true': [0.0, 0.10197843856013884], 'true,false': [0.0012721001862886633, 0.10317359674146653], 'true,false,false': [nan, 0.10317359674146657], 'true,false,true': [nan, 0.0012721001862886633]}, {'': [0.16394598531799323, 0.14535315906600385], 'true': [nan, 0.16394598531799304], 'true,false': [nan, 0.16394598531799304], 'true,false,false': [0.008352601417556152, 0.16668146752239962], 'false': [nan, 0.14535315906600385]}, {'': [0.16398358649296543, 0.14533811733882407], 'true': [0.0, 0.16512775991418346], 'true,false': [0.1282471162672741, 0.1656528067753472], 'true,false,false': [0.006187271650271409, 0.16824166577607924], 'false': [nan, 0.14533811733882404], 'true,false,true': [nan, 0.1282471162672741]}, {'': [0.16404625698023462, 0.14532520980027555], 'true': [0.0, 0.165220126079611], 'true,false': [0.16013655694338688, 0.1652329168098609], 'true,false,false': [nan, 0.1652329168098609], 'true,false,true': [0.1336004109221225, 0.15495220571815552], 'false': [nan, 0.14532520980027552], 'false,false': [0.14532520980027555, nan]}, {'': [0.1638379133512993, 0.14531412810383867], 'true': [0.0, 0.1650276569583805], 'true,false': [nan, 0.16502765695838068], 'true,false,false': [0.1590147272403336, 0.16495098121448645], 'false': [nan, 0.1453141281038387], 'false,false': [nan, 0.14531412810383867]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;false;economicsectorcompany(B, I), bankchiefexecutiveceo(I, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, F), acquired(F, G).;true;true
2;true,false;companyceo(A, I), companyceo(D, I).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
3;true;companyceo(A, D), acquired(E, C).;true;true
3;true,false;companyceo(A, G), bankchiefexecutiveceo(H, G).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
4;true;companyceo(A, D), acquired(E, C).;true;true
4;true,false;companyceo(A, F), bankchiefexecutiveceo(G, F).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
5;true;companyceo(A, D), acquired(E, C).;true;true
5;true,false;acquired(A, F), acquired(G, C).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;companyceo(A, E), bankchiefexecutiveceo(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.7867203636709403;  // std dev = 1.669, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5265427174829294;  // std dev = 6.540, 193.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=129 */
%   else if ( economicsectorcompany(B, K), bankchiefexecutiveceo(K, L) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( acquired(A, M), companyceo(A, N) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.020750561115772507;  // std dev = 0.369, 123.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=20 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7208922198547295;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then if ( countryhascompanyoffice(F, A), countryhascompanyoffice(G, D) )
%   | | then return -0.16397902211739981;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.7727192202607913;  // std dev = 0.164, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14800217135158605;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.7574977459249866;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11018758612607293;  // std dev = 2.276, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( acquired(A, J), companyceo(J, K) )
%   | | | then return 0.14459045382276173;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.29886429434367967;  // std dev = 8.797, 339.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=167 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then return 0.45924861318534543;  // std dev = 0.327, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( companyceo(A, G), companyceo(D, G) )
%   | | then return 0.6100983101917283;  // std dev = 0.175, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, H), cityhascompanyoffice(I, H) )
%   | | | then return 0.22072014337517717;  // std dev = 1.088, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4050907250950701;  // std dev = 6.873, 232.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=160 */
%   else if ( acquired(A, J), companyceo(A, K) )
%   | then if ( companyalsoknownas(A, A) )
%   | | then return -0.14523210795411798;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.3596570647100882;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10135168755128368;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( cityhascompanyoffice(N, A) )
%   | | then return -0.13740682188066158;  // std dev = 0.199, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return -0.01044679113146484;  // std dev = 0.374, 112.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.6076843581213613;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4665895063992965;  // std dev = 0.334, 159.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=132 */
%   else if ( acquired(A, F) )
%   | then if ( cityhascompanyoffice(G, F) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.18922848538863904;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.2086829095823792;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( countryhascompanyoffice(I, A), countryhascompanyoffice(J, F) )
%   | | | then return -0.1656535783010376;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2803386234478441;  // std dev = 2.402, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | else if ( bankboughtbank(K, A) )
%   | | then return -0.22818558919211163;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.016713496148528705;  // std dev = 2.042, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.017975142574174985;  // std dev = 5.399, 162.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=40 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(E, C) )
%   | then return 0.45820707135232325;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3571863990086954;  // std dev = 0.327, 159.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=132 */
%   else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | then if ( companyceo(G, H), countryhascompanyoffice(I, A) )
%   | | then return -0.13708684356360706;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.21373982257526392;  // std dev = 1.391, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.5010417204524911;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyceo(A, K) )
%   | | then if ( bankchiefexecutiveceo(L, K) )
%   | | | then return -0.2395403366567717;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11677698228245575;  // std dev = 2.158, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.040739393377209346;  // std dev = 2.059, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return -0.024336639672790223;  // std dev = 5.371, 165.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=39 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then return 0.27232732041027224;  // std dev = 0.322, 161.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=134 */
%   else if ( acquired(A, E) )
%   | then if ( companyceo(E, F) )
%   | | then if ( companyalsoknownas(A, G), acquired(E, H) )
%   | | | then return -0.13634982617943822;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.056160403896140486;  // std dev = 1.510, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return -0.08426012650310802;  // std dev = 0.716, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2165275017398118;  // std dev = 1.929, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.33445941000666485;  // std dev = 1.366, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.18027216740720656;  // std dev = 0.132, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( countryhascompanyoffice(M, A), bankbankincountry(N, M) )
%   | | | then return 0.07611673632364231;  // std dev = 1.793, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.026130075996441637;  // std dev = 5.074, 151.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=35 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, A) )
%   then return -0.10197042953736055;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   | then if ( countryhascompanyoffice(D, E), acquired(A, E) )
%   | | then return 0.07515803679829525;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.33331408037086074;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.29157190256515547;  // std dev = 0.271, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.012473200837082105;  // std dev = 2.163, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( acquired(H, A), acquired(I, H) )
%   | | | then return -0.022766882958754807;  // std dev = 1.054, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09241346687023977;  // std dev = 7.272, 350.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=177 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.271436068893604;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.26067129962712976;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.18005336636081215;  // std dev = 1.739, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.12309307023713034;  // std dev = 5.696, 214.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=144 */
%   else if ( acquired(A, H), companyceo(A, I) )
%   | then if ( companyalsoknownas(A, J) )
%   | | then return -0.022902792625541922;  // std dev = 0.306, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.165673699254663;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03446310361128949;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( cityhascompanyoffice(L, A) )
%   | | then return -0.129981240434528;  // std dev = 0.188, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return -0.04082298906347459;  // std dev = 0.388, 112.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.2213289842211379;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(G, F), companyceo(F, H) )
%   | | | then return -0.1951020117458328;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19857763346814453;  // std dev = 1.513, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.11664931142440473;  // std dev = 1.823, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.09819300588616615;  // std dev = 5.385, 197.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=134 */
%   else if ( acquired(J, A) )
%   | then return -0.21145870294255495;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.05054497406911505;  // std dev = 0.278, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return -0.09189105916030398;  // std dev = 0.982, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.00774843551842434;  // std dev = 4.017, 94.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=19 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0.1856291310758194;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( countryhascompanyoffice(F, A), companyceo(A, G) )
%   | | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.24926061375490197;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.36584672864799306;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(A, I), acquired(I, J) )
%   | | | then return 0.1997517371733781;  // std dev = 0.624, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.08043533278175768;  // std dev = 5.832, 235.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=161 */
%   else if ( countryhascompanyoffice(K, A), companyalsoknownas(A, L) )
%   | then return 0.15490843022848363;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( acquired(M, A) )
%   | | then return -0.1789518265523986;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( companyalsoknownas(A, N) )
%   | | | then return -0.11183441477422884;  // std dev = 0.921, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.01764410060285001;  // std dev = 4.249, 119.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=22 */


Results
   AUC ROC   = 0.85574
   AUC PR    = 0.853698
   CLL	      = -0.494334
   Precision = 0.892157 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.784483


Total learning time: 34.332 seconds
Total inference time: 5.748 seconds
AUC ROC: 0.85574


Results scoring model
   AUC ROC   = 0.897862
   AUC PR    = 0.906057
   CLL	      = -0.446183
   Precision = 0.916201 at threshold = 0.5
   Recall    = 0.792271
   F1        = 0.849741


Total scoring time: 4.998 seconds
Refined model CLL: -0.446183


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.85574
   AUC PR    = 0.853698
   CLL	      = -0.494334
   Precision = 0.892157 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.784483


Total learning time: 71.60700000000001 seconds
Total inference time: 5.748 seconds
AUC ROC: 0.85574
Total revision time: 71.60700000000001
Best scored revision CLL: -0.446183


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 19:32:44
{'AUC ROC': 0.85574, 'AUC PR': 0.853698, 'CLL': -0.494334, 'Precision': [0.892157, 0.5], 'Recall': 0.7, 'F1': 0.784483, 'Learning time': 71.60700000000001, 'Inference time': 5.748, 'parameter_0.4': {'AUC ROC': 0.819793, 'AUC PR': 0.796356, 'CLL': -0.523538, 'Precision': [0.803571, 0.5], 'Recall': 0.692308, 'F1': 0.743802, 'Learning time': 25.492, 'Inference time': 6.234}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.524815601766179;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6498156017661795;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | else return 0.523576444393189;  // std dev = 7.739, 269.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=179 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.07243464938522666;  // std dev = 3.761, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | else return 0.007808799045090331;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.5268429106668969;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46921487061473843;  // std dev = 8.507, 341.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=236 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02741225919512339;  // std dev = 5.746, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | else return 0.38020449960665303;  // std dev = 0.459, 362.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=252 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023966461166262693;  // std dev = 5.746, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.39557408822357953;  // std dev = 1.828, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.33035106420409266;  // std dev = 5.635, 167.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=123 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26338197292946486;  // std dev = 6.924, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04683885449259239;  // std dev = 0.376, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.25421577556021596;  // std dev = 5.926, 187.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=139 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20800831320201144;  // std dev = 6.861, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.13085316501619754;  // std dev = 1.365, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.027184292212088342;  // std dev = 4.957, 166.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=28 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.1909287920958006;  // std dev = 5.927, 187.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=139 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16198471243190996;  // std dev = 6.822, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11089663663884182;  // std dev = 1.357, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else return -0.023213821604612873;  // std dev = 0.384, 166.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=28 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13832753050203722;  // std dev = 0.440, 389.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=270 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.007504011495103441;  // std dev = 5.744, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.11168553323238795;  // std dev = 5.929, 187.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=139 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09908260995974513;  // std dev = 6.331, 202.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=131 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006423313630912651;  // std dev = 0.378, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.08612791718986207;  // std dev = 5.930, 187.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=139 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return 0.008491537349079314;  // std dev = 0.541, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05455538334103318;  // std dev = 2.480, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07954031691321463;  // std dev = 5.798, 171.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=112 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.00550217407874209;  // std dev = 5.744, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.06701365455321741;  // std dev = 5.931, 187.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=139 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.07071232950781672;  // std dev = 1.684, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.06764123630891822;  // std dev = 6.083, 187.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=124 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.004716004211125524;  // std dev = 5.744, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */


Results
   AUC ROC   = 0.79179
   AUC PR    = 0.771947
   CLL	      = -0.546774
   Precision = 0.764493 at threshold = 0.5
   Recall    = 0.811538
   F1        = 0.787313


Total learning time: 187.192 seconds
Total inference time: 16.727 seconds
AUC ROC: 0.79179


Results scoring model
   AUC ROC   = 0.800135
   AUC PR    = 0.760217
   CLL	      = -0.535513
   Precision = 0.755043 at threshold = 0.5
   Recall    = 0.845161
   F1        = 0.797565


Total scoring time: 18.225 seconds
Parameter learned model CLL: -0.535513


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.449, 9, 18], 'true,false,true,false': [1.952, 5, 16], 'true,false,false,true': [3.446, 15, 57], 'true,false,false,false': [7.739, 90, 179], 'false,true': [3.761, 66, 18], 'false,false': [4.325, 125, 22]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.449, 9, 18], 'true,false,true,false': [1.952, 5, 16], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.507, 105, 236], 'false,true': [0.0, 0, 0], 'false,false': [5.746, 191, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.471, 9, 18], 'true,false,false': [0.459, 110, 252], 'false,true': [0.0, 0, 0], 'false,false': [5.746, 191, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.828, 4, 16], 'true,true,false,false': [5.635, 44, 123], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.924, 103, 141], 'true,false,false': [0.0, 0, 0], 'false': [0.376, 159, 30]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [5.926, 48, 139], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.861, 103, 141], 'true,false,false': [0.0, 0, 0], 'false,true': [1.365, 21, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.957, 138, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [5.927, 48, 139], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.822, 103, 141], 'false,true': [1.357, 21, 2], 'false,false': [0.384, 138, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.44, 119, 270], 'false,true': [0.0, 0, 0], 'false,false': [5.744, 191, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [5.929, 48, 139], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.331, 71, 131], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.378, 191, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [5.93, 48, 139], 'true,false,true,true': [0.541, 1, 1], 'true,false,true,false': [2.48, 11, 18], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.798, 59, 112], 'false,true': [0.0, 0, 0], 'false,false,true': [5.744, 191, 40], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [5.931, 48, 139], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.684, 8, 7], 'true,false,false,false': [6.083, 63, 124], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.744, 191, 40]}]]
[{'': [0.2123300797642134, 0.1431757275913131], 'true': [nan, 0.2123300797642137], 'true,false': [0.20659722222222396, 0.21310446246592712], 'true,false,false': [0.16493055555555516, 0.22263373916889465], 'true,false,true': [0.2222222222222218, 0.1814058956916096], 'false': [0.16836734693877498, 0.12726178906937022]}, {'': [0.21148365067693964, 0.1429487746529384], 'true': [nan, 0.2114836506769391], 'true,false': [0.2058833988144653, 0.21224964975676655], 'true,false,false': [nan, 0.21224964975676655], 'true,false,true': [0.22222222222222257, 0.18140589569161], 'false': [nan, 0.1429487746529384]}, {'': [0.2112305931539957, 0.1429446604043338], 'true': [nan, 0.21123059315399562], 'true,false': [0.22222222222222254, 0.21038868224570964], 'false': [nan, 0.1429446604043339]}, {'': [0.19418455023086878, 0.1414064831024707], 'true': [0.1880602640598893, 0.19650580733020573], 'true,false': [0.19650580733020573, nan], 'true,false,true': [nan, 0.19650580733020573], 'true,true': [nan, 0.1880602640598893], 'true,true,false': [0.16699368682333865, 0.19012822959528275]}, {'': [0.19122381983612266, 0.14101420182392274], 'true': [0.18780231040746265, 0.1929196634998816], 'true,false': [0.1929196634998816, nan], 'true,false,true': [nan, 0.1929196634998816], 'false': [0.08102231342620975, 0.14801846633961274], 'false,false': [nan, 0.14801846633961274]}, {'': [0.1896932471593908, 0.14037886869478325], 'true': [0.18782900443930312, 0.1907585077880061], 'true,false': [nan, 0.1907585077880065], 'true,false,false': [nan, 0.1907585077880064], 'false': [0.08009302364615778, 0.14779611643044302]}, {'': [0.19346245752165941, 0.1428427366566486], 'true': [nan, 0.19346245752165905], 'true,false': [nan, 0.19346245752165905], 'false': [nan, 0.14284273665664896]}, {'': [0.19344261051619469, 0.14282784240249702], 'true': [0.18798693373661804, 0.19841680829084726], 'true,false': [0.19841680829084726, nan], 'true,false,true': [nan, 0.19841680829084726], 'false': [nan, 0.14282784240249657]}, {'': [0.1934948705308074, 0.1428152202958989], 'true': [0.18806814883932874, 0.19846173384680235], 'true,false': [0.2080136642400449, 0.196610151534347], 'true,false,true': [0.14619066300040864, 0.21214042414907539], 'true,false,false': [nan, 0.196610151534347], 'false': [nan, 0.14281522029589874], 'false,false': [0.1428152202958989, nan]}, {'': [0.19355780353703841, 0.14280450170821674], 'true': [0.18813880235226826, 0.19852967308335417], 'true,false': [nan, 0.19852967308335417], 'true,false,false': [0.1890159832805857, 0.19787138923384764], 'false': [nan, 0.14280450170821632], 'false,false': [nan, 0.14280450170821674]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
0;true,false;companyalsoknownas(F, A).;true;true
0;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
0;true,false,false;bankboughtbank(C, H).;true;true
0;false;economicsectorcompany(B, I), cityhascompanyoffice(J, I).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
1;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
1;true,false;companyalsoknownas(F, A).;true;true
1;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
1;true,false,false;bankboughtbank(C, D).;true;true
1;false;recursion_economicsectorcompany(B, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
2;true,false;companyalsoknownas(A, F), acquired(F, G).;true;true
2;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;recursion_economicsectorcompany(B, E).;true;true
3;true,true,false;companyalsoknownas(A, F).;true;true
3;true,false;cityhascompanyoffice(G, H).;true;true
3;true,false,true;economicsectorcompany(I, H), recursion_economicsectorcompany(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;true;acquired(E, C).;true;true
4;true,false;cityhascompanyoffice(F, G).;true;true
4;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
4;false;companyalsoknownas(A, I).;true;true
4;false,false;companyalsoknownas(J, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
5;true;acquired(E, C).;true;true
5;true,false;acquired(A, F), acquired(G, C).;true;true
5;true,false,false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
5;false;companyalsoknownas(I, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
6;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
6;true,false;companyalsoknownas(A, F), bankboughtbank(G, F).;true;true
6;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;cityhascompanyoffice(E, C).;true;true
7;true,false;cityhascompanyoffice(F, G).;true;true
7;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
7;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(H, A).;true;true
8;true,false,false;bankboughtbank(C, D).;true;true
8;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;false,false;bankboughtbank(J, K).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;cityhascompanyoffice(E, C).;true;true
9;true,false;bankboughtbank(C, D).;true;true
9;true,false,false;companyalsoknownas(F, A), acquired(F, G).;true;true
9;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
9;false,false;recursion_economicsectorcompany(B, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.524815601766179;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6498156017661795;  // std dev = 3.446, 72.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | else return 0.523576444393189;  // std dev = 7.739, 269.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=179 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then if ( companyalsoknownas(A, K), acquired(K, L) )
%   | | then if ( countryhascompanyoffice(M, K) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04235946141530182;  // std dev = 0.388, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | else return 0.007808799045090331;  // std dev = 0.357, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.5268429106668969;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46921487061473843;  // std dev = 8.507, 341.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=236 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(I, A), countryhascompanyoffice(J, A) )
%   | | then return -0.07830109772898777;  // std dev = 0.242, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( acquired(K, A) )
%   | | | then return -0.14430291803910594;  // std dev = 0.009, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.0521578076161656;  // std dev = 5.577, 197.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=39 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | | | then return 0.07069667965595627;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4851703638664826;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.4480916647964826;  // std dev = 3.251, 59.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=45 */
%   | | | else return 0.36698554664889715;  // std dev = 8.079, 303.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=207 */
%   else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(L, A) )
%   | | then return -0.12767339193634464;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( acquired(A, M), companyceo(M, N) )
%   | | | then return -0.037631632852456944;  // std dev = 1.290, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.04551790641691767;  // std dev = 5.504, 193.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=38 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.3867776404652682;  // std dev = 1.769, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.3292005447288618;  // std dev = 5.622, 167.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=123 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26365545626284326;  // std dev = 6.904, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(J, A) )
%   | then return -0.17612740625254505;  // std dev = 0.086, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( acquired(A, K) )
%   | | then return 0.03663305011239945;  // std dev = 0.376, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else return -0.02256959651976161;  // std dev = 0.411, 135.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=26 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.49581538641390743;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.3377027123618791;  // std dev = 2.376, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | else return 0.21035958653666714;  // std dev = 5.292, 136.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=95 */
%   | else if ( cityhascompanyoffice(H, I) )
%   | | then if ( economicsectorcompany(J, I), recursion_economicsectorcompany(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20823821062116357;  // std dev = 6.836, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, K) )
%   | then return -0.11491063388093546;  // std dev = 0.278, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( companyalsoknownas(L, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.029368274470628345;  // std dev = 0.382, 166.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=28 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( companyalsoknownas(A, F), acquired(A, G) )
%   | | then return 0.4056091671283775;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.043293529344846315;  // std dev = 1.936, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.19167079330597908;  // std dev = 5.442, 158.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=117 */
%   | else if ( acquired(A, I), acquired(J, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16216889580041888;  // std dev = 6.794, 244.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=141 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( companyalsoknownas(A, M), acquired(M, N) )
%   | | then return -0.17887018617738393;  // std dev = 0.106, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.05222394448051575;  // std dev = 0.405, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return -0.025047994421128192;  // std dev = 0.382, 166.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=28 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A) )
%   | | | then return 0.1595248648388911;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | | | else return 0.13519124885477077;  // std dev = 7.931, 333.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=229 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J), cityhascompanyoffice(K, J) )
%   | | then if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.14772237945003086;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17158891921057784;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( acquired(M, A) )
%   | | | then return -0.13187606913017538;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.0082245890816888;  // std dev = 5.569, 200.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=39 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.35496692288269366;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | | | then return 0.2839519330586098;  // std dev = 0.132, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.08984151171567094;  // std dev = 5.758, 169.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=121 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10025964502444377;  // std dev = 6.316, 202.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=131 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(M, A) )
%   | | then return -0.04337389527462659;  // std dev = 0.320, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else return 0.005251138306924716;  // std dev = 0.389, 169.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=31 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15549489056967375;  // std dev = 0.350, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.2725358156221061;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05537542225985523;  // std dev = 5.259, 136.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=95 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(J, I), bankboughtbank(K, A) )
%   | | | then return -0.007918629747136474;  // std dev = 0.569, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06124628984192455;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07968760651208527;  // std dev = 5.810, 171.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=112 */
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0066720608113156245;  // std dev = 0.372, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | | then if ( countryhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.22968113051559852;  // std dev = 0.892, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.6177064344344545;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return -0.06275064375026139;  // std dev = 1.552, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.08905830572327851;  // std dev = 5.189, 156.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=119 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(K, A), acquired(K, L) )
%   | | | then return -0.051011371671535424;  // std dev = 1.618, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.06684158948664637;  // std dev = 6.091, 187.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=124 */
%   else if ( companyalsoknownas(M, A), recursion_economicsectorcompany(B, M) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.00571851605294013;  // std dev = 0.372, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */


Results
   AUC ROC   = 0.800288
   AUC PR    = 0.77148
   CLL	      = -0.536172
   Precision = 0.769784 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.795539


Total learning time: 179.96699999999998 seconds
Total inference time: 15.067 seconds
AUC ROC: 0.800288


Results scoring model
   AUC ROC   = 0.823418
   AUC PR    = 0.812532
   CLL	      = -0.518152
   Precision = 0.764535 at threshold = 0.5
   Recall    = 0.848387
   F1        = 0.804281


Total scoring time: 19.783 seconds
Refined model CLL: -0.518152


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.800288
   AUC PR    = 0.77148
   CLL	      = -0.536172
   Precision = 0.769784 at threshold = 0.5
   Recall    = 0.823077
   F1        = 0.795539


Total learning time: 405.16700000000003 seconds
Total inference time: 15.067 seconds
AUC ROC: 0.800288
Total revision time: 405.16700000000003
Best scored revision CLL: -0.518152


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 19:40:02
{'AUC ROC': 0.800288, 'AUC PR': 0.77148, 'CLL': -0.536172, 'Precision': [0.769784, 0.5], 'Recall': 0.823077, 'F1': 0.795539, 'Learning time': 405.16700000000003, 'Inference time': 15.067, 'parameter_0.6': {'AUC ROC': 0.79179, 'AUC PR': 0.771947, 'CLL': -0.546774, 'Precision': [0.764493, 0.5], 'Recall': 0.811538, 'F1': 0.787313, 'Learning time': 187.192, 'Inference time': 16.727}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5067975837481601;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.6248156017661783;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6446657890320974;  // std dev = 3.866, 89.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=70 */
%   | | | else return 0.5341265887307932;  // std dev = 8.855, 358.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=242 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.09451257146314793;  // std dev = 4.456, 110.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | else return 3.0579784460978935E-4;  // std dev = 4.988, 204.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=29 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.4333373867520823;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.5307475079498224;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47412927021792245;  // std dev = 9.693, 447.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=312 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02911559054082862;  // std dev = 6.724, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.3512811030164183;  // std dev = 0.477, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | else return 0.3839559537692914;  // std dev = 0.456, 477.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=335 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025447854879530257;  // std dev = 6.724, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.34136609230500625;  // std dev = 2.482, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return 0.326543412305437;  // std dev = 6.480, 219.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=161 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27352694090995344;  // std dev = 7.880, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.042304018262307085;  // std dev = 0.372, 260.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=42 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.2474478846530888;  // std dev = 6.938, 250.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=184 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21568302229283323;  // std dev = 7.809, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.14005216255227346;  // std dev = 1.375, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02189307365697148;  // std dev = 5.806, 229.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=40 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.1858237200187402;  // std dev = 6.939, 250.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=184 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16769759411261903;  // std dev = 7.767, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11957229432013325;  // std dev = 1.366, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | else return -0.018688739981646104;  // std dev = 0.383, 229.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=40 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13976439272367192;  // std dev = 0.440, 514.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=359 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.007665973395204327;  // std dev = 6.690, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.10730234335179119;  // std dev = 6.940, 250.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=184 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1052718057093524;  // std dev = 7.162, 264.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=175 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006555026570047512;  // std dev = 0.377, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.08264251109106675;  // std dev = 6.941, 250.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=184 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return 0.008316895221595927;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.044202973209765996;  // std dev = 2.945, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08762003479680619;  // std dev = 6.503, 220.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=148 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.005609138144151536;  // std dev = 6.689, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.06418757222680561;  // std dev = 6.942, 250.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=184 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.05984709071577416;  // std dev = 1.901, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.0706332872586096;  // std dev = 6.885, 245.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=166 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.004802711069035758;  // std dev = 6.689, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */


Results
   AUC ROC   = 0.78966
   AUC PR    = 0.767375
   CLL	      = -0.547302
   Precision = 0.757143 at threshold = 0.5
   Recall    = 0.815385
   F1        = 0.785185


Total learning time: 234.714 seconds
Total inference time: 16.966 seconds
AUC ROC: 0.78966


Results scoring model
   AUC ROC   = 0.798747
   AUC PR    = 0.751306
   CLL	      = -0.534023
   Precision = 0.737288 at threshold = 0.5
   Recall    = 0.84058
   F1        = 0.785553


Total scoring time: 26.176 seconds
Parameter learned model CLL: -0.534023


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.904, 13, 24], 'true,false,true,false': [2.317, 7, 23], 'true,false,false,true': [3.866, 19, 70], 'true,false,false,false': [8.855, 116, 242], 'false,true': [4.456, 84, 26], 'false,false': [4.988, 175, 29]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [2.904, 13, 24], 'true,false,true,false': [2.317, 7, 23], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.693, 135, 312], 'false,true': [0.0, 0, 0], 'false,false': [6.724, 259, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.477, 13, 24], 'true,false,false': [0.456, 142, 335], 'false,true': [0.0, 0, 0], 'false,false': [6.724, 259, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [2.482, 8, 23], 'true,true,false,false': [6.48, 58, 161], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.88, 130, 188], 'true,false,false': [0.0, 0, 0], 'false': [0.372, 218, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [6.938, 66, 184], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.809, 130, 188], 'true,false,false': [0.0, 0, 0], 'false,true': [1.375, 29, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.806, 189, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [6.939, 66, 184], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.767, 130, 188], 'false,true': [1.366, 29, 2], 'false,false': [0.383, 189, 40]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.44, 155, 359], 'false,true': [0.0, 0, 0], 'false,false': [6.69, 259, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [6.94, 66, 184], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [7.162, 89, 175], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.377, 259, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [6.941, 66, 184], 'true,false,true,true': [0.524, 1, 1], 'true,false,true,false': [2.945, 16, 26], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.503, 72, 148], 'false,true': [0.0, 0, 0], 'false,false,true': [6.689, 259, 55], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [6.942, 66, 184], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.901, 10, 9], 'true,false,false,false': [6.885, 79, 166], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.689, 259, 55]}]]
[{'': [0.21062014564943668, 0.14447847782871615], 'true': [nan, 0.2106201456494447], 'true,false': [0.2094007574069951, 0.21080131525607249], 'true,false,false': [0.1679080924125731, 0.21903186542243142], 'true,false,true': [0.2279035792549318, 0.1788888888888898], 'false': [0.18049586776859608, 0.12194828911957042]}, {'': [0.20993015312322713, 0.14400184856001189], 'true': [nan, 0.20993015312322633], 'true,false': [0.20830299216745207, 0.21017300528439814], 'true,false,false': [nan, 0.21017300528439814], 'true,false,true': [0.22790357925493077, 0.17888888888888854], 'false': [nan, 0.14400184856001189]}, {'': [0.20967262588491048, 0.14399269884320695], 'true': [nan, 0.20967262588491087], 'true,false': [0.22790357925493082, 0.20818163096211567], 'false': [nan, 0.1439926988432072]}, {'': [0.19482845772440108, 0.13865296236657412], 'true': [0.19260155577732127, 0.19525477666862764], 'true,false': [0.19525477666862764, nan], 'true,false,true': [nan, 0.19525477666862764], 'true,true': [nan, 0.19260155577732127], 'true,true,false': [0.19867428556938066, 0.19171470135565336]}, {'': [0.19235286680886038, 0.13838436713510338], 'true': [0.19255248159781171, 0.19175183197820458], 'true,false': [0.19175183197820458, nan], 'true,false,true': [nan, 0.19175183197820458], 'false': [0.06101855244824703, 0.14719281992142372], 'false,false': [nan, 0.14719281992142372]}, {'': [0.19104760955984837, 0.13777058609829965], 'true': [0.19257302801014925, 0.18970377010910336], 'true,false': [nan, 0.1897037701091027], 'true,false,false': [nan, 0.1897037701091026], 'false': [0.06020061844902682, 0.14705785393234927]}, {'': [0.19351411439277072, 0.142514695057304], 'true': [nan, 0.19351411439277094], 'true,false': [nan, 0.19351411439277094], 'false': [nan, 0.14251469505730402]}, {'': [0.19349458963421357, 0.1425051514150532], 'true': [0.19266506172411765, 0.19427812203724348], 'true,false': [0.19427812203724348, nan], 'true,false,true': [nan, 0.19427812203724348], 'false': [nan, 0.1425051514150532]}, {'': [0.19355734033604177, 0.14249712860486077], 'true': [0.1927095975326223, 0.19435701252986706], 'true,false': [0.20341960913404486, 0.19220626911681812], 'true,false,true': [0.13734303804797146, 0.20650757567394273], 'true,false,false': [nan, 0.19220626911681812], 'false': [nan, 0.1424971286048607], 'false,false': [0.14249712860486077, nan]}, {'': [0.19359540560080435, 0.14249036443213997], 'true': [0.19274798296878756, 0.19439367099072158], 'true,false': [nan, 0.19439367099072158], 'true,false,false': [0.19015475000240947, 0.19349711026117952], 'false': [nan, 0.14249036443214], 'false,false': [nan, 0.14249036443213997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
0;true,false;companyalsoknownas(F, A).;true;true
0;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
0;true,false,false;bankboughtbank(C, H).;true;true
0;false;economicsectorcompany(B, I), cityhascompanyoffice(J, I).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
1;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
1;true,false;companyalsoknownas(F, A).;true;true
1;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
1;true,false,false;bankboughtbank(C, D).;true;true
1;false;recursion_economicsectorcompany(B, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
2;true,false;companyalsoknownas(A, F), acquired(F, G).;true;true
2;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;recursion_economicsectorcompany(B, E).;true;true
3;true,true,false;companyalsoknownas(A, F).;true;true
3;true,false;cityhascompanyoffice(G, H).;true;true
3;true,false,true;economicsectorcompany(I, H), recursion_economicsectorcompany(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;true;acquired(E, C).;true;true
4;true,false;cityhascompanyoffice(F, G).;true;true
4;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
4;false;companyalsoknownas(A, I).;true;true
4;false,false;companyalsoknownas(J, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
5;true;acquired(E, C).;true;true
5;true,false;acquired(A, F), acquired(G, C).;true;true
5;true,false,false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
5;false;companyalsoknownas(I, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
6;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
6;true,false;companyalsoknownas(A, F), bankboughtbank(G, F).;true;true
6;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;cityhascompanyoffice(E, C).;true;true
7;true,false;cityhascompanyoffice(F, G).;true;true
7;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
7;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(H, A).;true;true
8;true,false,false;bankboughtbank(C, D).;true;true
8;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;false,false;bankboughtbank(J, K).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;cityhascompanyoffice(E, C).;true;true
9;true,false;bankboughtbank(C, D).;true;true
9;true,false,false;companyalsoknownas(F, A), acquired(F, G).;true;true
9;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
9;false,false;recursion_economicsectorcompany(B, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5067975837481601;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.6248156017661783;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6446657890320974;  // std dev = 3.866, 89.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=70 */
%   | | | else return 0.5341265887307932;  // std dev = 8.855, 358.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=242 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then if ( acquired(A, K), cityhascompanyoffice(L, A) )
%   | | then if ( cityhascompanyoffice(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.05169732219628655;  // std dev = 0.395, 93.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | else return 3.0579784460978935E-4;  // std dev = 0.349, 204.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=29 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.4333373867520823;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.5307475079498224;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47412927021792245;  // std dev = 9.693, 447.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=312 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A) )
%   | | then return -0.1432521060125805;  // std dev = 0.024, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.004951377494026701;  // std dev = 2.187, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.05553294762544159;  // std dev = 6.230, 244.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=49 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.5915213432566585;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.27406102579634106;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.6719971159057235;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.37331095429903205;  // std dev = 9.891, 460.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=318 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then return -0.12655498131048507;  // std dev = 0.022, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( acquired(A, L), cityhascompanyoffice(M, A) )
%   | | | then return 0.10342873103968986;  // std dev = 2.297, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.03397507739569477;  // std dev = 6.187, 255.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=47 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.3309840851672194;  // std dev = 2.427, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return 0.32709797764236126;  // std dev = 6.464, 219.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=161 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27311703828042866;  // std dev = 7.828, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(J, A) )
%   | then return -0.17674839058096323;  // std dev = 0.077, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return -0.08142686778953197;  // std dev = 0.318, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return -0.006438208685433842;  // std dev = 0.407, 197.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=40 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.3606771341153907;  // std dev = 0.360, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | | | then return 0.10989327052523072;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.21331258557285596;  // std dev = 5.988, 176.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=124 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2154025231751756;  // std dev = 7.749, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, L) )
%   | then return -0.12229167712319734;  // std dev = 0.235, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | else if ( companyalsoknownas(M, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.024816501316379663;  // std dev = 0.381, 229.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=40 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.2712808644618342;  // std dev = 0.360, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.4047986566765016;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14772341194451755;  // std dev = 6.151, 180.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=124 */
%   | else if ( acquired(A, H), acquired(I, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16753826955177328;  // std dev = 7.701, 318.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=188 */
%   else if ( companyalsoknownas(K, A) )
%   | then return -0.10563637121608392;  // std dev = 0.234, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | else if ( cityhascompanyoffice(L, A) )
%   | | then return -0.1410907092757226;  // std dev = 0.058, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.00167358761194814;  // std dev = 0.407, 197.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=40 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.2967984326424099;  // std dev = 0.940, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.13557411488265325;  // std dev = 9.828, 501.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=347 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return -0.1329749720177395;  // std dev = 0.272, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.05460296421536463;  // std dev = 2.095, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.014622003783107011;  // std dev = 6.168, 244.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=49 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.17407191910839573;  // std dev = 0.359, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else if ( bankchiefexecutiveceo(A, G), companyceo(H, G) )
%   | | | then return 0.30139443382378645;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08064301050755593;  // std dev = 6.152, 183.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=127 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10549025263032358;  // std dev = 7.145, 264.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=175 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(M, A), cityhascompanyoffice(N, M) )
%   | | then return -0.19898214535982725;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.004462928048192915;  // std dev = 0.372, 309.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=55 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.3260357427039112;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( acquired(G, A), countryhascompanyoffice(H, A) )
%   | | | then return -0.24919353832245106;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07989068341555233;  // std dev = 6.648, 235.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=172 */
%   | else if ( acquired(A, I) )
%   | | then if ( economicsectorcompany(J, I), bankboughtbank(K, A) )
%   | | | then return 0.02024715517246356;  // std dev = 0.512, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.037916039690861054;  // std dev = 2.857, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08893471028449229;  // std dev = 6.522, 220.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=148 */
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006462480652380244;  // std dev = 0.370, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then return -0.20492981873028474;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.25981568595427573;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.06356155823044564;  // std dev = 6.632, 234.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=171 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(I, A), acquired(I, J) )
%   | | | then return -0.045750325178995;  // std dev = 1.898, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06966432093517118;  // std dev = 6.872, 245.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=166 */
%   else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.005535984315619248;  // std dev = 0.370, 314.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=55 */


Results
   AUC ROC   = 0.823299
   AUC PR    = 0.801774
   CLL	      = -0.536121
   Precision = 0.758007 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.787431


Total learning time: 229.28300000000002 seconds
Total inference time: 15.785 seconds
AUC ROC: 0.823299


Results scoring model
   AUC ROC   = 0.842111
   AUC PR    = 0.827022
   CLL	      = -0.519565
   Precision = 0.739958 at threshold = 0.5
   Recall    = 0.845411
   F1        = 0.789177


Total scoring time: 23.811 seconds
Refined model CLL: -0.519565


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.823299
   AUC PR    = 0.801774
   CLL	      = -0.536121
   Precision = 0.758007 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.787431


Total learning time: 513.984 seconds
Total inference time: 15.785 seconds
AUC ROC: 0.823299
Total revision time: 513.984
Best scored revision CLL: -0.519565


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 19:49:10
{'AUC ROC': 0.823299, 'AUC PR': 0.801774, 'CLL': -0.536121, 'Precision': [0.758007, 0.5], 'Recall': 0.819231, 'F1': 0.787431, 'Learning time': 513.984, 'Inference time': 15.785, 'parameter_0.8': {'AUC ROC': 0.78966, 'AUC PR': 0.767375, 'CLL': -0.547302, 'Precision': [0.757143, 0.5], 'Recall': 0.815385, 'F1': 0.785185, 'Learning time': 234.714, 'Inference time': 16.966}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5025933795439558;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.6200536970042733;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6081489350995116;  // std dev = 4.416, 104.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=78 */
%   | | | else return 0.5411846493852224;  // std dev = 9.848, 448.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=306 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then return 0.09655953112600103;  // std dev = 5.236, 151.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=36 */
%   | else return 0.008555439164552111;  // std dev = 5.607, 246.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=37 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.4298426424218776;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.5268429106668966;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47226048761506173;  // std dev = 10.805, 552.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=384 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036753580388573945;  // std dev = 7.707, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.3486830042507688;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | else return 0.3827986019151547;  // std dev = 0.458, 594.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=416 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032082803679031595;  // std dev = 7.707, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.37969951818007425;  // std dev = 2.698, 41.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return 0.3301883974307443;  // std dev = 7.152, 265.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=195 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2637630243363713;  // std dev = 9.013, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04194057798406462;  // std dev = 0.379, 318.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=53 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.2538490574220466;  // std dev = 7.647, 306.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=227 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2084167190587748;  // std dev = 8.936, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.13636186259977373;  // std dev = 1.755, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.021874413002198178;  // std dev = 6.483, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.19061656438028277;  // std dev = 7.647, 306.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=227 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1623650600787339;  // std dev = 8.890, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11568352204103402;  // std dev = 1.741, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else return -0.01861895912189065;  // std dev = 0.387, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1397818459725823;  // std dev = 0.440, 639.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=445 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004310674151114852;  // std dev = 7.677, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.11100971007115307;  // std dev = 7.647, 306.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=227 */
%   | else if ( cityhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1018866625698799;  // std dev = 8.083, 333.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=218 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0036703271754631736;  // std dev = 0.385, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.0855697973067963;  // std dev = 7.647, 306.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=227 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(H, A) )
%   | | | then return 0.01153725891779861;  // std dev = 0.527, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05243168542092841;  // std dev = 3.329, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08269106257364582;  // std dev = 7.345, 278.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=184 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.0031263910589746143;  // std dev = 7.677, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then return 0.06654511740655897;  // std dev = 7.647, 306.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=227 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.09710596249002991;  // std dev = 2.124, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.07070402145866862;  // std dev = 7.764, 310.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=208 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.002663999242257528;  // std dev = 7.677, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */


Results
   AUC ROC   = 0.791553
   AUC PR    = 0.771559
   CLL	      = -0.547535
   Precision = 0.764493 at threshold = 0.5
   Recall    = 0.811538
   F1        = 0.787313


Total learning time: 278.902 seconds
Total inference time: 15.313 seconds
AUC ROC: 0.791553


Results scoring model
   AUC ROC   = 0.792337
   AUC PR    = 0.74117
   CLL	      = -0.539431
   Precision = 0.756614 at threshold = 0.5
   Recall    = 0.828185
   F1        = 0.790783


Total scoring time: 28.303 seconds
Parameter learned model CLL: -0.539431


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, H)', 'false': 'economicsectorcompany(B, I), cityhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [3.211, 16, 29], 'true,false,true,false': [2.76, 10, 32], 'true,false,false,true': [4.416, 26, 78], 'true,false,false,false': [9.848, 142, 306], 'false,true': [5.236, 115, 36], 'false,false': [5.607, 209, 37]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [3.211, 16, 29], 'true,false,true,false': [2.76, 10, 32], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.805, 168, 384], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 324, 73]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.479, 16, 29], 'true,false,false': [0.458, 178, 416], 'false,true': [0.0, 0, 0], 'false,false': [7.707, 324, 73]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'cityhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [2.698, 9, 32], 'true,true,false,false': [7.152, 70, 195], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [9.013, 174, 238], 'true,false,false': [0.0, 0, 0], 'false': [0.379, 265, 53]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [7.647, 79, 227], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [8.936, 174, 238], 'true,false,false': [0.0, 0, 0], 'false,true': [1.755, 35, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.483, 230, 50]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [7.647, 79, 227], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.89, 174, 238], 'false,true': [1.741, 35, 3], 'false,false': [0.387, 230, 50]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.44, 194, 445], 'false,true': [0.0, 0, 0], 'false,false': [7.677, 324, 73]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'cityhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [7.647, 79, 227], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [8.083, 115, 218], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.385, 324, 73]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(H, A)', 'true,false,false': 'bankboughtbank(C, D)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [7.647, 79, 227], 'true,false,true,true': [0.527, 1, 1], 'true,false,true,false': [3.329, 20, 33], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.345, 94, 184], 'false,true': [0.0, 0, 0], 'false,false,true': [7.677, 324, 73], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'cityhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(C, D)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [7.647, 79, 227], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.124, 13, 10], 'true,false,false,false': [7.764, 102, 208], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.677, 324, 73]}]]
[{'': [0.21142679411541182, 0.1500675722833095], 'true': [nan, 0.21142679411541018], 'true,false': [0.20953890870656564, 0.21172022684309577], 'true,false,false': [0.1875000000000007, 0.21649792729592132], 'true,false,true': [0.22913580246913728, 0.1814058956916116], 'false': [0.18157098372878508, 0.12778438759997465]}, {'': [0.21108672119197802, 0.14963540433307507], 'true': [nan, 0.2110867211919867], 'true,false': [0.2084432445341076, 0.21150070839213525], 'true,false,false': [nan, 0.21150070839213525], 'true,false,true': [0.22913580246913665, 0.18140589569161], 'false': [nan, 0.14963540433307507]}, {'': [0.21089646905194565, 0.1496249450687657], 'true': [nan, 0.21089646905194565], 'true,false': [0.22913580246913628, 0.20943273841079715], 'false': [nan, 0.1496249450687659]}, {'': [0.19594888989949089, 0.14353047058793092], 'true': [0.19121495561208957, 0.1971900504284221], 'true,false': [0.1971900504284221, nan], 'true,false,true': [nan, 0.1971900504284221], 'true,true': [nan, 0.19121495561208957], 'true,true,false': [0.17754220996917305, 0.19300191254111995]}, {'': [0.19315833679712066, 0.14323688058441023], 'true': [0.19109366825755125, 0.19381211925638042], 'true,false': [0.19381211925638042, nan], 'true,false,true': [nan, 0.19381211925638042], 'false': [0.08102942001062313, 0.15011303143466], 'false,false': [nan, 0.15011303143466]}, {'': [0.1917033870238917, 0.14257063143556858], 'true': [0.1910951862326585, 0.1918149514031391], 'true,false': [nan, 0.19181495140314017], 'true,false,false': [nan, 0.1918149514031397], 'false': [0.0797218574030336, 0.14997426477858888]}, {'': [0.1938398865039391, 0.14845132167847647], 'true': [nan, 0.1938398865039395], 'true,false': [nan, 0.1938398865039395], 'false': [nan, 0.14845132167847624]}, {'': [0.1937923486195633, 0.1484452794555149], 'true': [0.19110920706342346, 0.19621808153997322], 'true,false': [0.19621808153997322, nan], 'true,false,true': [nan, 0.19621808153997322], 'false': [nan, 0.1484452794555149]}, {'': [0.19382540740665688, 0.14844017711225652], 'true': [0.19111701665521236, 0.19628260802849368], 'true,false': [0.20664104832148267, 0.1940668167661043], 'true,false,true': [0.13875446111559683, 0.20914199345219678], 'true,false,false': [nan, 0.1940668167661043], 'false': [nan, 0.14844017711225654], 'false,false': [0.14844017711225652, nan]}, {'': [0.19386685565036446, 0.14843586164879521], 'true': [0.1911240768503826, 0.19636079961952863], 'true,false': [nan, 0.19636079961952863], 'true,false,false': [0.1962159645646308, 0.1944265472888376], 'false': [nan, 0.14843586164879544], 'false,false': [nan, 0.14843586164879521]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
0;true,false;companyalsoknownas(F, A).;true;true
0;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
0;true,false,false;bankboughtbank(C, H).;true;true
0;false;economicsectorcompany(B, I), cityhascompanyoffice(J, I).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
1;true;companyalsoknownas(E, A), recursion_economicsectorcompany(B, E).;true;true
1;true,false;companyalsoknownas(F, A).;true;true
1;true,false,true;acquired(F, G), companyalsoknownas(A, F).;true;true
1;true,false,false;bankboughtbank(C, D).;true;true
1;false;recursion_economicsectorcompany(B, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
2;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
2;true,false;companyalsoknownas(A, F), acquired(F, G).;true;true
2;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;recursion_economicsectorcompany(B, E).;true;true
3;true,true,false;companyalsoknownas(A, F).;true;true
3;true,false;cityhascompanyoffice(G, H).;true;true
3;true,false,true;economicsectorcompany(I, H), recursion_economicsectorcompany(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
4;true;acquired(E, C).;true;true
4;true,false;cityhascompanyoffice(F, G).;true;true
4;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
4;false;companyalsoknownas(A, I).;true;true
4;false,false;companyalsoknownas(J, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
5;true;acquired(E, C).;true;true
5;true,false;acquired(A, F), acquired(G, C).;true;true
5;true,false,false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
5;false;companyalsoknownas(I, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
6;true;companyalsoknownas(A, E), recursion_economicsectorcompany(B, E).;true;true
6;true,false;companyalsoknownas(A, F), bankboughtbank(G, F).;true;true
6;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
7;true;cityhascompanyoffice(E, C).;true;true
7;true,false;cityhascompanyoffice(F, G).;true;true
7;true,false,true;economicsectorcompany(H, G), recursion_economicsectorcompany(H, A).;true;true
7;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;cityhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(H, A).;true;true
8;true,false,false;bankboughtbank(C, D).;true;true
8;false;companyalsoknownas(I, A), recursion_economicsectorcompany(B, I).;true;true
8;false,false;bankboughtbank(J, K).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
9;true;cityhascompanyoffice(E, C).;true;true
9;true,false;bankboughtbank(C, D).;true;true
9;true,false,false;companyalsoknownas(F, A), acquired(F, G).;true;true
9;false;companyalsoknownas(H, A), recursion_economicsectorcompany(B, H).;true;true
9;false,false;recursion_economicsectorcompany(B, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5025933795439558;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.6200536970042733;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else if ( bankboughtbank(C, H) )
%   | | | then return 0.6081489350995116;  // std dev = 4.416, 104.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=78 */
%   | | | else return 0.5411846493852224;  // std dev = 9.848, 448.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=306 */
%   else if ( economicsectorcompany(B, I), cityhascompanyoffice(J, I) )
%   | then if ( cityhascompanyoffice(K, A), companyceo(A, L) )
%   | | then if ( cityhascompanyoffice(K, M), economicsectorcompany(B, M) )
%   | | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.05194738471191548;  // std dev = 0.395, 129.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=25 */
%   | else return 0.008555439164552111;  // std dev = 0.357, 246.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=37 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.4298426424218776;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.5268429106668966;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47226048761506173;  // std dev = 10.805, 552.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=384 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(I, A) )
%   | | then return -0.1444078061709124;  // std dev = 0.025, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.13783713824567553;  // std dev = 3.433, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.04011348013547408;  // std dev = 6.632, 292.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=54 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.613329468897234;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.26306208921808905;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.6738810281545379;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3726563570984518;  // std dev = 11.075, 574.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=396 */
%   else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(K, A) )
%   | | then return -0.1274669585796081;  // std dev = 0.023, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.11839071455933492;  // std dev = 3.417, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.035074757091008275;  // std dev = 6.632, 292.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=54 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.3695034016062675;  // std dev = 2.643, 41.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | | else return 0.3303960428319372;  // std dev = 7.133, 265.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=195 */
%   | else if ( cityhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2625341556131912;  // std dev = 8.889, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( cityhascompanyoffice(J, A) )
%   | then return -0.18780427398783792;  // std dev = 0.083, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return -0.09875590261970435;  // std dev = 0.353, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return -0.003867625275151454;  // std dev = 0.408, 243.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=50 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(F, A), countryhascompanyoffice(G, F) )
%   | | then return 0.39028532551984274;  // std dev = 0.308, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.3322777884301906;  // std dev = 3.597, 88.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=72 */
%   | | | else return 0.21371874249420672;  // std dev = 6.560, 209.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=147 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20746731744035013;  // std dev = 8.793, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, L) )
%   | then return -0.12430792530358943;  // std dev = 0.271, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else if ( companyalsoknownas(M, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.023386642842002828;  // std dev = 0.385, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.38824332310012233;  // std dev = 0.175, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.4103623459321245;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.17330720313793022;  // std dev = 7.506, 283.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=204 */
%   | else if ( acquired(A, H), acquired(I, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(J, A), recursion_economicsectorcompany(B, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16170553772004195;  // std dev = 8.734, 412.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=238 */
%   else if ( companyalsoknownas(K, A) )
%   | then return -0.10615345183358812;  // std dev = 0.269, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | else if ( bankchiefexecutiveceo(A, L), companyceo(M, L) )
%   | | then return 0.11836775130240128;  // std dev = 0.462, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.02344580153810834;  // std dev = 0.382, 273.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=48 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.41599064329479335;  // std dev = 0.384, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.12821301468384963;  // std dev = 10.941, 612.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=418 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, J), acquired(J, K) )
%   | | then if ( cityhascompanyoffice(L, A) )
%   | | | then return -0.05594736926557731;  // std dev = 0.993, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.21973212313650378;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(A, M), countryhascompanyoffice(N, A) )
%   | | | then return 0.16657383095391387;  // std dev = 1.338, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.00486614185957002;  // std dev = 7.220, 372.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=68 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.28393580031169596;  // std dev = 0.155, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | | | then return -0.08794563569115263;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.10939629147448368;  // std dev = 7.302, 280.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=206 */
%   | else if ( cityhascompanyoffice(I, J) )
%   | | then if ( economicsectorcompany(K, J), recursion_economicsectorcompany(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10335963586496968;  // std dev = 8.025, 333.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=218 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(L, A), recursion_economicsectorcompany(B, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(M, A) )
%   | | then return -0.13722270302769482;  // std dev = 0.311, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.010835354361779579;  // std dev = 0.391, 355.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=73 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.2450497214522098;  // std dev = 2.338, 79.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | | else return -0.658969538626039;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( companyalsoknownas(A, H), acquired(A, I) )
%   | | | then return 0.2072409835458333;  // std dev = 0.948, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.05610194715444105;  // std dev = 6.494, 208.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=146 */
%   | else if ( acquired(A, J) )
%   | | then if ( economicsectorcompany(K, J), bankboughtbank(L, A) )
%   | | | then return 0.029085711439137407;  // std dev = 0.510, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.049075035044732734;  // std dev = 3.227, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | else if ( bankboughtbank(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08459252920363797;  // std dev = 7.328, 278.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=184 */
%   else return -0.004690608842397008;  // std dev = 0.373, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( cityhascompanyoffice(E, C) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.21684792714732753;  // std dev = 0.177, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | | | then return -0.059783391260488504;  // std dev = 2.317, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.07343982713092681;  // std dev = 6.863, 265.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=196 */
%   | else if ( bankboughtbank(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(I, A), acquired(I, J) )
%   | | | then return -0.07463465535340438;  // std dev = 2.113, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.06999034796470031;  // std dev = 7.716, 310.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=208 */
%   else if ( companyalsoknownas(K, A), recursion_economicsectorcompany(B, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.004001667453060166;  // std dev = 0.373, 397.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=73 */


Results
   AUC ROC   = 0.817862
   AUC PR    = 0.810723
   CLL	      = -0.532319
   Precision = 0.765343 at threshold = 0.5
   Recall    = 0.815385
   F1        = 0.789572


Total learning time: 304.184 seconds
Total inference time: 18.51 seconds
AUC ROC: 0.817862


Results scoring model
   AUC ROC   = 0.839045
   AUC PR    = 0.831517
   CLL	      = -0.515117
   Precision = 0.760984 at threshold = 0.5
   Recall    = 0.835907
   F1        = 0.796688


Total scoring time: 33.321 seconds
Refined model CLL: -0.515117


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.817862
   AUC PR    = 0.810723
   CLL	      = -0.532319
   Precision = 0.765343 at threshold = 0.5
   Recall    = 0.815385
   F1        = 0.789572


Total learning time: 644.71 seconds
Total inference time: 18.51 seconds
AUC ROC: 0.817862
Total revision time: 644.71
Best scored revision CLL: -0.515117


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 20:00:30
{'AUC ROC': 0.817862, 'AUC PR': 0.810723, 'CLL': -0.532319, 'Precision': [0.765343, 0.5], 'Recall': 0.815385, 'F1': 0.789572, 'Learning time': 644.71, 'Inference time': 18.51, 'parameter_1.0': {'AUC ROC': 0.791553, 'AUC PR': 0.771559, 'CLL': -0.547535, 'Precision': [0.764493, 0.5], 'Recall': 0.811538, 'F1': 0.787313, 'Learning time': 278.902, 'Inference time': 15.313}}


Starting fold 3

Target train facts examples: 5307
Target train pos examples: 520
Target train neg examples: 520

Target test facts examples: 5307
Target test pos	 examples: 258
Target test neg examples: 258

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.6081489350995111;  // std dev = 4.500, 108.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=81 */
%   | | | else return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( economicsectorcompany(B, I), countryhascompanyoffice(J, I) )
%   | then return 0.0010060779566550774;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47380883038636307;  // std dev = 5.093, 126.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=88 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050870516610856044;  // std dev = 3.575, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3734715331021876;  // std dev = 0.453, 128.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=88 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04430067548621571;  // std dev = 3.575, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return -0.15527358629006954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.41540466778109836;  // std dev = 3.176, 74.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=61 */
%   | else if ( countryhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0665643883503316;  // std dev = 2.123, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07213856938468814;  // std dev = 0.454, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.30711403007331867;  // std dev = 3.198, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( countryhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05584978070812564;  // std dev = 2.117, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, I) )
%   | then return -0.17448015102921777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.063475799115508;  // std dev = 4.636, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.23214493267662667;  // std dev = 3.191, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0465951782116929;  // std dev = 2.113, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.15075618368928873;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.051501268045563625;  // std dev = 0.457, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13553959736204746;  // std dev = 0.430, 128.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=88 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013588341218838344;  // std dev = 3.568, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.1475521544430566;  // std dev = 3.189, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( countryhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04241573696820135;  // std dev = 3.625, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011520288012648093;  // std dev = 0.399, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.1161413315382706;  // std dev = 3.191, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3306606256850106;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 7.954814237117446E-4;  // std dev = 3.456, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return 0.009753229718068612;  // std dev = 3.567, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.09265355516249985;  // std dev = 3.193, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02401877034227195;  // std dev = 3.595, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.008247338123002216;  // std dev = 3.567, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */


Results
   AUC ROC   = 0.793364
   AUC PR    = 0.762346
   CLL	      = -0.538165
   Precision = 0.70979 at threshold = 0.5
   Recall    = 0.786822
   F1        = 0.746324


Total learning time: 14.511 seconds
Total inference time: 6.512 seconds
AUC ROC: 0.793364


Results scoring model
   AUC ROC   = 0.811437
   AUC PR    = 0.79321
   CLL	      = -0.531243
   Precision = 0.732143 at threshold = 0.5
   Recall    = 0.788462
   F1        = 0.759259


Total scoring time: 4.734 seconds
Parameter learned model CLL: -0.531243


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), countryhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,true': [4.5, 27, 81], 'true,false,false,false': [2.068, 11, 7], 'false,true': [1.604, 18, 3], 'false,false': [3.184, 46, 13]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.093, 38, 88], 'false,true': [0.0, 0, 0], 'false,false': [3.575, 64, 16]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.453, 40, 88], 'false,true': [0.0, 0, 0], 'false,false': [3.575, 64, 16]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'countryhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [3.176, 13, 61], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.123, 20, 8], 'true,false,false': [0.0, 0, 0], 'false': [0.454, 70, 35]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'countryhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true': [3.198, 14, 61], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.117, 20, 8], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.636, 68, 35]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true': [3.191, 14, 61], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.113, 20, 8], 'false,true': [0.0, 2, 0], 'false,false': [0.457, 68, 35]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.43, 40, 88], 'false,true': [0.0, 0, 0], 'false,false': [3.568, 64, 16]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'countryhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [3.189, 14, 61], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.625, 26, 27], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.399, 64, 16]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [3.191, 14, 61], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.838, 1, 4], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.456, 25, 23], 'false,true': [0.0, 0, 0], 'false,false,true': [3.567, 64, 16], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [3.193, 14, 61], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.595, 26, 27], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.567, 64, 16]}]]
[{'': [0.21484375000000194, 0.15999999999999945], 'true': [nan, 0.21484375000000183], 'true,false': [0.0, 0.21063240110859355], 'true,false,false': [0.1875000000000013, 0.23765432098765438], 'false': [0.1224489795918366, 0.1717897155989653], 'true,false,true': [nan, 0.0]}, {'': [0.20820132281157316, 0.1597271385456328], 'true': [nan, 0.20820132281157316], 'true,false': [0.0, 0.20589509446324467], 'true,false,false': [nan, 0.20589509446324467], 'false': [nan, 0.1597271385456328], 'true,false,true': [nan, 0.0]}, {'': [0.2052942996818048, 0.15971793303083573], 'true': [nan, 0.2052942996818048], 'true,false': [nan, 0.2052942996818048], 'false': [nan, 0.15971793303083576]}, {'': [0.1678851219947494, 0.20583837495835175], 'true': [0.1388184239047329, 0.16095684675104205], 'true,false': [0.16095684675104205, nan], 'true,false,true': [nan, 0.16095684675104205], 'true,true': [nan, 0.1388184239047329], 'true,true,false': [0.0, 0.13635203295649792]}, {'': [0.15532019393421936, 0.20573065897276593], 'false': [0.0, 0.2086468950649684], 'false,false': [nan, 0.2086468950649684], 'true': [0.13637010182173195, 0.16010821170466014], 'true,false': [0.16010821170466014, nan], 'true,false,true': [nan, 0.16010821170466014]}, {'': [0.1489900899384737, 0.2053873162320437], 'false': [0.0, 0.20859621799733086], 'true': [0.1357318328557668, 0.159433828517432], 'true,false': [nan, 0.159433828517432], 'true,false,false': [nan, 0.159433828517432]}, {'': [0.18463040759243637, 0.1590909273216396], 'true': [nan, 0.18463040759243637], 'true,false': [nan, 0.18463040759243637], 'false': [nan, 0.15909092732163957]}, {'': [0.18480516511256803, 0.15908384750587157], 'true': [0.13562056190416177, 0.24792926112375652], 'true,false': [0.24792926112375652, nan], 'true,false,true': [nan, 0.24792926112375652], 'false': [nan, 0.15908384750587157]}, {'': [0.1839315616371301, 0.15907784373646358], 'true': [0.13577056390453532, 0.24792721607316165], 'true,false': [0.14044959633033974, 0.24885761151978159], 'true,false,false': [nan, 0.24885761151978159], 'false': [nan, 0.15907784373646355], 'false,false': [0.15907784373646358, nan], 'true,false,true': [nan, 0.14044959633033974]}, {'': [0.18179701465243894, 0.15907276035974457], 'true': [0.1359619917534027, 0.24389770059342555], 'true,false': [nan, 0.24389770059342555], 'true,false,false': [nan, 0.24389770059342555], 'false': [nan, 0.15907276035974455], 'false,false': [nan, 0.15907276035974457]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;bankboughtbank(F, A).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;bankboughtbank(F, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,true;bankboughtbank(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
4;false;bankboughtbank(A, I).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
5;false;bankboughtbank(I, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyceo(A, F), countryhascompanyoffice(G, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( companyalsoknownas(H, A), companyceo(H, I) )
%   | | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5490580260086041;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=76 */
%   else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( companyceo(A, L), countryhascompanyoffice(M, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(A, N) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08542166237223965;  // std dev = 3.405, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.7774628787880608;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | | then return 0.6613075758169648;  // std dev = 0.968, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.4333982348888457;  // std dev = 4.906, 107.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=70 */
%   else if ( cityhascompanyoffice(I, A), companyceo(A, J) )
%   | then return -0.13371461257640344;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(A, K) )
%   | | then if ( countryhascompanyoffice(L, K) )
%   | | | then return -0.1435287640795885;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.29330722941298315;  // std dev = 1.478, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( acquired(M, A), countryhascompanyoffice(N, M) )
%   | | | then return -0.1322261856100903;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.051497456106513496;  // std dev = 3.089, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.12268271592448517;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.2089636642171371;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.6162068803090522;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(G, A), cityhascompanyoffice(H, A) )
%   | | then if ( acquired(A, I) )
%   | | | then return -0.15166216280664588;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2169362068393783;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyceo(A, J), countryhascompanyoffice(K, A) )
%   | | | then return 0.004046121865669078;  // std dev = 1.151, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.26660224033505747;  // std dev = 6.191, 176.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=92 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.43825413879485836;  // std dev = 0.373, 75.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=61 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.27304338498524106;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.01709761345493008;  // std dev = 0.404, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then if ( acquired(H, I) )
%   | | | then return 0.62145083694653;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.005800082279696167;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.260025780657586;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.464378504314699;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(K, A), acquired(L, K) )
%   | | | then return -0.1781495276415856;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06628248431245712;  // std dev = 3.859, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( companyalsoknownas(F, F), companyceo(A, G) )
%   | | | then return 0.20810086860901095;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5382871200140292;  // std dev = 0.228, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.2993732421535714;  // std dev = 0.333, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(A, H), acquired(I, A) )
%   | | then return -0.05847707163378738;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2507580906529176;  // std dev = 0.405, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   else if ( bankboughtbank(A, J) )
%   | then return -0.11305335403369962;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( countryhascompanyoffice(K, A) )
%   | | then return -0.1740435874559496;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( companyceo(A, L) )
%   | | | then return -0.05749732621741271;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07765859852543286;  // std dev = 4.161, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, A), acquired(A, F) )
%   | then return -0.05286349264218998;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( companyceo(A, G) )
%   | | then if ( bankchiefexecutiveceo(A, G) )
%   | | | then return -0.0413965096438129;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19490368161082544;  // std dev = 1.413, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.3115547009721134;  // std dev = 0.744, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.19747276415930967;  // std dev = 3.366, 72.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.10220670665503495;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then return 0.33519866005584137;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, K) )
%   | | | then return -0.09410591756771615;  // std dev = 0.816, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.04613245920024971;  // std dev = 4.142, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then return 0.34159598934029467;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(E, A), companyceo(A, F) )
%   | then if ( bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A) )
%   | | then return 0.0405647257076672;  // std dev = 0.516, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.15377533653467204;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A), acquired(A, J) )
%   | | then if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | | then return 0.10094825663139716;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.270459629712833;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(M, A), companyalsoknownas(M, N) )
%   | | | then return 0.29266408456333504;  // std dev = 0.921, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.09234528810363732;  // std dev = 5.537, 175.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=90 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.24064299563318547;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, D), acquired(E, A) )
%   | then if ( companyceo(A, F), cityhascompanyoffice(G, A) )
%   | | then return 0.08678451478569345;  // std dev = 0.456, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.224412634805355;  // std dev = 0.265, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then return 0.2348975904717484;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( countryhascompanyoffice(J, A), companyceo(A, K) )
%   | | | then return -0.03824225896377934;  // std dev = 0.712, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.07239484196961204;  // std dev = 5.532, 175.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=90 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.19951909594906225;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, D), cityhascompanyoffice(E, D) )
%   | then if ( companyceo(A, F), cityhascompanyoffice(E, A) )
%   | | then return 0.25857605153624125;  // std dev = 0.448, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(D, G) )
%   | | | then return 0.14345048124426593;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007460827249970513;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( acquired(H, A), acquired(I, H) )
%   | | then return -0.18938372811642742;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | | then return 0.17080136604276777;  // std dev = 0.904, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.042609477690128586;  // std dev = 5.429, 170.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=81 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then return 0.23081538691688763;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return 0.038288664821064106;  // std dev = 0.399, 203.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=99 */


Results
   AUC ROC   = 0.825131
   AUC PR    = 0.826751
   CLL	      = -0.542695
   Precision = 0.786026 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.73922


Total learning time: 27.719 seconds
Total inference time: 5.109 seconds
AUC ROC: 0.825131


Results scoring model
   AUC ROC   = 0.878698
   AUC PR    = 0.889436
   CLL	      = -0.489489
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.740385
   F1        = 0.802083


Total scoring time: 4.162 seconds
Refined model CLL: -0.489489


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.825131
   AUC PR    = 0.826751
   CLL	      = -0.542695
   Precision = 0.786026 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.73922


Total learning time: 51.126 seconds
Total inference time: 5.109 seconds
AUC ROC: 0.825131
Total revision time: 51.126
Best scored revision CLL: -0.489489


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 20:01:34
{'AUC ROC': 0.825131, 'AUC PR': 0.826751, 'CLL': -0.542695, 'Precision': [0.786026, 0.5], 'Recall': 0.697674, 'F1': 0.73922, 'Learning time': 51.126, 'Inference time': 5.109, 'parameter_0.2': {'AUC ROC': 0.793364, 'AUC PR': 0.762346, 'CLL': -0.538165, 'Precision': [0.70979, 0.5], 'Recall': 0.786822, 'F1': 0.746324, 'Learning time': 14.511, 'Inference time': 6.512}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( bankboughtbank(H, C) )
%   | | | then return 0.5248156017661781;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | | else return 0.5716906017661759;  // std dev = 6.265, 192.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=137 */
%   else if ( economicsectorcompany(B, I), countryhascompanyoffice(J, I) )
%   | then return -0.02821470126412409;  // std dev = 2.105, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | else return 0.05642479716847744;  // std dev = 4.294, 116.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=23 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( acquired(F, G), companyalsoknownas(A, F) )
%   | | | then return 0.46952849908361544;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.448295606241962;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( bankboughtbank(D, C) )
%   | | | then return 0.6616289395752954;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.4586908693896483;  // std dev = 6.613, 203.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=139 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02900289493950776;  // std dev = 4.801, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then return 0.37799101181885475;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.3847852223100863;  // std dev = 0.455, 243.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=171 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02535014978892523;  // std dev = 4.801, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.511750667409494;  // std dev = 0.957, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2311878632928571;  // std dev = 3.252, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | else if ( countryhascompanyoffice(G, H) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3359383874765528;  // std dev = 4.987, 160.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04381883548767715;  // std dev = 0.442, 196.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=59 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.21285666668969067;  // std dev = 3.447, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( countryhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2630528974381808;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, I) )
%   | then return 0.09068280916178473;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.030840176554412357;  // std dev = 5.858, 179.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=53 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.1598847896306676;  // std dev = 3.447, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( acquired(A, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20338893439951183;  // std dev = 4.808, 160.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=107 */
%   else if ( companyalsoknownas(I, A) )
%   | then return 0.07415279594574727;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0.025275916154342708;  // std dev = 0.438, 179.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=53 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15996681514412134;  // std dev = 0.430, 256.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=180 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.024378101986983314;  // std dev = 4.896, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.0823088073000253;  // std dev = 3.452, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( countryhascompanyoffice(F, G) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13358694936828905;  // std dev = 5.938, 196.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=138 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.020566770247297823;  // std dev = 0.387, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.06312035637760001;  // std dev = 3.454, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(G, F), bankboughtbank(A, H) )
%   | | | then return -0.5021638330349478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.10720704317639441;  // std dev = 2.185, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( bankboughtbank(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492487877820142;  // std dev = 5.496, 171.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=121 */
%   else if ( companyalsoknownas(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(J, K) )
%   | | then return -0.01739389878183276;  // std dev = 4.893, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then return 0.04869069430826248;  // std dev = 3.455, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | else if ( bankboughtbank(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return -0.12068129126038707;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08492638470452014;  // std dev = 5.800, 190.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=135 */
%   else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.014740881942220693;  // std dev = 4.892, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */


Results
   AUC ROC   = 0.846659
   AUC PR    = 0.854545
   CLL	      = -0.521353
   Precision = 0.710191 at threshold = 0.5
   Recall    = 0.864341
   F1        = 0.77972


Total learning time: 64.521 seconds
Total inference time: 12.266 seconds
AUC ROC: 0.846659


Results scoring model
   AUC ROC   = 0.831338
   AUC PR    = 0.820619
   CLL	      = -0.530019
   Precision = 0.705882 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.777538


Total scoring time: 10.028 seconds
Parameter learned model CLL: -0.530019


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(H, C)', 'false': 'economicsectorcompany(B, I), countryhascompanyoffice(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.664, 4, 9], 'true,false,true,false': [1.826, 5, 10], 'true,false,false,true': [2.828, 12, 24], 'true,false,false,false': [6.265, 55, 137], 'false,true': [2.105, 39, 5], 'false,false': [4.294, 93, 23]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'acquired(F, G), companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(D, C)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.664, 4, 9], 'true,false,true,false': [1.826, 5, 10], 'true,false,false,true': [1.625, 3, 22], 'true,false,false,false': [6.613, 64, 139], 'false,true': [0.0, 0, 0], 'false,false': [4.801, 132, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.462, 4, 9], 'true,false,false': [0.455, 72, 171], 'false,true': [0.0, 0, 0], 'false,false': [4.801, 132, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,true,false': 'companyalsoknownas(A, F)', 'true,false': 'countryhascompanyoffice(G, H)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.957, 1, 10], 'true,true,false,false': [3.252, 17, 32], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.987, 53, 107], 'true,false,false': [0.0, 0, 0], 'false': [0.442, 137, 59]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'countryhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true': [3.447, 18, 42], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.873, 53, 107], 'true,false,false': [0.0, 0, 0], 'false,true': [1.968, 11, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.858, 126, 53]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'acquired(A, F), acquired(G, C)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false': 'companyalsoknownas(I, A)'}, {'true,true': [3.447, 18, 42], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.808, 53, 107], 'false,true': [1.971, 11, 6], 'false,false': [0.438, 126, 53]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), bankboughtbank(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.43, 76, 180], 'false,true': [0.0, 0, 0], 'false,false': [4.896, 132, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'countryhascompanyoffice(F, G)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [3.452, 18, 42], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [5.938, 58, 138], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.387, 132, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'acquired(A, F)', 'true,false,true': 'economicsectorcompany(G, F), bankboughtbank(A, H)', 'true,false,false': 'bankboughtbank(D, C)', 'false': 'companyalsoknownas(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'bankboughtbank(J, K)'}, {'true,true': [3.454, 18, 42], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [2.185, 7, 17], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.496, 50, 121], 'false,true': [0.0, 0, 0], 'false,false,true': [4.893, 132, 28], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'countryhascompanyoffice(E, C)', 'true,false': 'bankboughtbank(D, C)', 'true,false,false': 'companyalsoknownas(F, A), acquired(F, G)', 'false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [3.455, 18, 42], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.179, 3, 3], 'true,false,false,false': [5.8, 55, 135], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.892, 132, 28]}]]
[{'': [0.2087402343750055, 0.14437500000000103], 'true': [nan, 0.20874023437500477], 'true,false': [0.21811224489795888, 0.2075061557402332], 'true,false,true': [0.2130177514792898, 0.22222222222222215], 'true,false,false': [0.2222222222222234, 0.2043999565972269], 'false': [0.10072314049586785, 0.15896254458977505]}, {'': [0.20862895087538164, 0.14404531882644384], 'true': [nan, 0.20862895087538094], 'true,false': [0.21806085183774007, 0.20741384402087173], 'true,false,true': [0.2130177514792899, 0.22222222222222224], 'true,false,false': [0.1056000000000001, 0.2154367206032933], 'false': [nan, 0.14404531882644384]}, {'': [0.20716311837307178, 0.14403892656296235], 'true': [nan, 0.2071631183730715], 'true,false': [0.21301775147929, 0.20684756342013638], 'false': [nan, 0.1440389265629624]}, {'': [0.16906288617405785, 0.19512025963927426], 'true': [0.20333847647057665, 0.15543434426582248], 'true,true': [nan, 0.20333847647057665], 'true,true,false': [0.0832997011678158, 0.21585478401405594], 'true,false': [0.15543434426582248, nan], 'true,false,true': [nan, 0.15543434426582248]}, {'': [0.16244046252608307, 0.19511789822639802], 'false': [0.2279391049907391, 0.19169019123688444], 'false,false': [nan, 0.19169019123688444], 'true': [0.1980284858758018, 0.14840777333865912], 'true,false': [0.14840777333865912, nan], 'true,false,true': [nan, 0.14840777333865912]}, {'': [0.1594646616713864, 0.1950597747129712], 'false': [0.22848974082655457, 0.19167765693711408], 'true': [0.1980603018748852, 0.14447513006451096], 'true,false': [nan, 0.14447513006451101], 'true,false,false': [nan, 0.14447513006451104]}, {'': [0.1844905278942798, 0.14983417781491093], 'true': [nan, 0.18449052789427967], 'true,false': [nan, 0.18449052789427967], 'false': [nan, 0.14983417781491096]}, {'': [0.18475914493162807, 0.14973184551873686], 'true': [0.1985696703656475, 0.1799151562232963], 'true,false': [0.1799151562232963, nan], 'true,false,true': [nan, 0.1799151562232963], 'false': [nan, 0.14973184551873683]}, {'': [0.18492615457866832, 0.14964604772622014], 'true': [0.19878208071092915, 0.18032830546054202], 'true,false': [0.20528710543284515, 0.1766171022165193], 'true,false,true': [0.0, 0.1989874202348972], 'true,false,false': [nan, 0.1766171022165193], 'false': [nan, 0.14964604772622017], 'false,false': [0.14964604772622014, nan]}, {'': [0.18457858579237912, 0.14957389843699745], 'true': [0.19896479627948602, 0.17996452706782337], 'true,false': [nan, 0.17996452706782337], 'true,false,false': [0.2317664982919989, 0.17703455749549496], 'false': [nan, 0.14957389843699748], 'false,false': [nan, 0.14957389843699745]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;true;countryhascompanyoffice(E, C).;true;true
8;true,false;acquired(A, F).;true;true
8;true,false,true;economicsectorcompany(G, F), bankboughtbank(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), acquired(A, D) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | then if ( cityhascompanyoffice(J, I) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( acquired(A, K), companyceo(K, L) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.34839963147833886;  // std dev = 9.472, 359.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=176 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then if ( companyceo(C, E) )
%   | then return 0.4589976057010327;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.008899240808998754;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.1435779434039581;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.7973837615471253;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0.06545543315679345;  // std dev = 2.003, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.3007237205902388;  // std dev = 9.435, 359.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=176 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6408327093781792;  // std dev = 0.164, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(D, A) )
%   | then if ( companyalsoknownas(D, E), cityhascompanyoffice(F, E) )
%   | | then if ( cityhascompanyoffice(F, D), acquired(E, G) )
%   | | | then return 0.3930591124194533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7168787464646116;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(H, D) )
%   | | | then return -0.057313310294805034;  // std dev = 1.258, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.15842272713220765;  // std dev = 2.745, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( cityhascompanyoffice(I, A), companyalsoknownas(A, J) )
%   | | then if ( cityhascompanyoffice(I, J) )
%   | | | then return 0.22433761390783855;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5221318313959731;  // std dev = 1.144, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.2941844858330177;  // std dev = 2.659, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.24265074441676862;  // std dev = 8.656, 305.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=148 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return 0.01575719088292888;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.27607277307727346;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | then if ( acquired(E, G), companyceo(G, H) )
%   | | then return -0.027056464461386143;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( countryhascompanyoffice(I, E) )
%   | | | then return 0.47282633978783467;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.22896819576015226;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( companyceo(A, J), countryhascompanyoffice(K, A) )
%   | | then if ( countryhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.4234628293082807;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.25874793177904026;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.4860208100053319;  // std dev = 0.173, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2048823052298521;  // std dev = 9.312, 360.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=177 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, D), companyceo(D, F) )
%   | | then return 0.5700611575170397;  // std dev = 0.192, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.5595847393545689;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1484931725304974;  // std dev = 2.122, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.30578332946053616;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( countryhascompanyoffice(H, A), acquired(A, I) )
%   | then return -0.05304767717759791;  // std dev = 0.342, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( companyceo(A, J) )
%   | | then if ( acquired(K, A) )
%   | | | then return -0.1731051375908098;  // std dev = 0.543, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.46720102494004423;  // std dev = 1.269, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.44070438270198525;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14864170326356746;  // std dev = 8.380, 294.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=142 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then return -0.20592112597790627;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( acquired(E, A), bankchiefexecutiveceo(E, F) )
%   | then return -0.13404668399709455;  // std dev = 0.440, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.34470421493710474;  // std dev = 2.567, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.2485122730625361;  // std dev = 0.226, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.19192590106932184;  // std dev = 2.334, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.11769673294919496;  // std dev = 8.293, 295.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=146 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(D, A) )
%   then if ( companyceo(A, E), cityhascompanyoffice(F, A) )
%   | then return 0.11051399510332252;  // std dev = 0.579, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyalsoknownas(D, G) )
%   | | then return -0.1659703606953925;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.01026662124486348;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.2724259101226932;  // std dev = 0.328, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else return -0.20688115325078182;  // std dev = 0.193, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( companyalsoknownas(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.4889780734084416;  // std dev = 0.459, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.372002997192075;  // std dev = 0.133, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.11813817490038861;  // std dev = 1.756, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.09302481811275927;  // std dev = 8.134, 280.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=136 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), countryhascompanyoffice(D, A) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then return 0.35270537031139704;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.20751533801251545;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14001319668316842;  // std dev = 0.278, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( companyceo(A, G), acquired(A, H) )
%   | then if ( acquired(I, A), companyceo(I, J) )
%   | | then return -0.025891745781554835;  // std dev = 0.499, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.11601043677035498;  // std dev = 1.131, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.4645713126863899;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | then return 0.2596789347380403;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.04362951875727672;  // std dev = 2.781, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.06725362555499562;  // std dev = 8.358, 318.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=157 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( countryhascompanyoffice(E, C) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0.05451755572008295;  // std dev = 0.763, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return 0.5742282580353589;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2083360871335865;  // std dev = 3.025, 52.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=36 */
%   | else if ( acquired(A, H) )
%   | | then if ( economicsectorcompany(I, H), bankboughtbank(A, J) )
%   | | | then return -0.18521457651657527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20879928120416746;  // std dev = 1.708, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( companyceo(A, K) )
%   | | | then return -0.0033681346608200173;  // std dev = 1.221, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.24737019197604454;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=116 */
%   else if ( cityhascompanyoffice(L, A) )
%   | then return -0.10390066553909069;  // std dev = 0.281, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else return -0.24367987091638324;  // std dev = 0.351, 130.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=21 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), bankboughtbank(C, D) )
%   then if ( countryhascompanyoffice(E, D) )
%   | then return -0.012049794779103212;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.28811199867500753;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( countryhascompanyoffice(F, A), acquired(G, A) )
%   | then return 0.21768685667582152;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.12513138779179633;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20959139745909167;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( countryhascompanyoffice(J, A), acquired(A, K) )
%   | | | then return -0.039516923109359274;  // std dev = 1.165, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.03988986842304713;  // std dev = 8.345, 373.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=185 */


Results
   AUC ROC   = 0.870335
   AUC PR    = 0.855396
   CLL	      = -0.54933
   Precision = 0.814815 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.790419


Total learning time: 26.508 seconds
Total inference time: 4.786 seconds
AUC ROC: 0.870335


Results scoring model
   AUC ROC   = 0.881021
   AUC PR    = 0.879812
   CLL	      = -0.529068
   Precision = 0.79703 at threshold = 0.5
   Recall    = 0.774038
   F1        = 0.785366


Total scoring time: 3.958 seconds
Refined model CLL: -0.529068


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.870335
   AUC PR    = 0.855396
   CLL	      = -0.54933
   Precision = 0.814815 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.790419


Total learning time: 105.015 seconds
Total inference time: 4.786 seconds
AUC ROC: 0.870335
Total revision time: 105.015
Best scored revision CLL: -0.529068


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 20:03:38
{'AUC ROC': 0.870335, 'AUC PR': 0.855396, 'CLL': -0.54933, 'Precision': [0.814815, 0.5], 'Recall': 0.767442, 'F1': 0.790419, 'Learning time': 105.015, 'Inference time': 4.786, 'parameter_0.4': {'AUC ROC': 0.846659, 'AUC PR': 0.854545, 'CLL': -0.521353, 'Precision': [0.710191, 0.5], 'Recall': 0.864341, 'F1': 0.77972, 'Learning time': 64.521, 'Inference time': 12.266}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.5769895148096532;  // std dev = 8.350, 345.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=248 */
%   | | | else return 0.23024195835532632;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   else if ( economicsectorcompany(B, I), bankchiefexecutiveceo(I, J) )
%   | then return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else return 0.04720366146767048;  // std dev = 5.551, 201.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=38 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39279418357704865;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45911794855255844;  // std dev = 9.112, 388.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=264 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038546319739094996;  // std dev = 5.847, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), companyceo(D, H) )
%   | | | then return 0.4321982483917613;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3684912174801718;  // std dev = 9.185, 394.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=267 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033638889807637774;  // std dev = 5.847, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5255412492013507;  // std dev = 0.970, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( companyalsoknownas(C, I) )
%   | | | then return 0.13382329639795584;  // std dev = 1.943, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.4492528967236448;  // std dev = 4.752, 202.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=166 */
%   else return 0.05838689295569629;  // std dev = 0.447, 399.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=131 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4029039650059453;  // std dev = 0.986, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32665165011493746;  // std dev = 5.121, 217.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=174 */
%   else if ( companyceo(A, J) )
%   | then return 0.08878023469819558;  // std dev = 3.609, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | else if ( bankboughtbank(A, K) )
%   | | then return -0.1648983492408771;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return 0.09928679867884027;  // std dev = 0.913, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.041134863045330074;  // std dev = 8.102, 330.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=105 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then if ( economicsectorcompany(H, F), recursion_economicsectorcompany(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15040399821631625;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2516181695351087;  // std dev = 5.115, 222.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=179 */
%   else if ( companyceo(A, J) )
%   | then return 0.07085601989005869;  // std dev = 3.604, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | else if ( bankboughtbank(K, A) )
%   | | then return 0.08203877261038661;  // std dev = 0.918, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.0318227379411712;  // std dev = 0.444, 333.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=105 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35445861595089756;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.18056249627417476;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14289113056030533;  // std dev = 8.436, 392.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=265 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.008469121876400946;  // std dev = 5.905, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F), bankchiefexecutiveceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04227294247166531;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( companyceo(A, I), companyceo(D, I) )
%   | | | then return 0.13860480983964454;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11431575233748285;  // std dev = 8.333, 384.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=261 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.007168328570656758;  // std dev = 0.393, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return 0.18167266442756316;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.18235510621856893;  // std dev = 3.080, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0688830573283627;  // std dev = 7.770, 341.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=229 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return -0.006072459181831186;  // std dev = 5.904, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyceo(A, E), bankchiefexecutiveceo(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return -0.4908878649690852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06703609505341658;  // std dev = 8.460, 397.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=270 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.005147800976475374;  // std dev = 5.904, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */


Results
   AUC ROC   = 0.844976
   AUC PR    = 0.85879
   CLL	      = -0.510186
   Precision = 0.72449 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.771739


Total learning time: 29.352 seconds
Total inference time: 6.756 seconds
AUC ROC: 0.844976


Results scoring model
   AUC ROC   = 0.831839
   AUC PR    = 0.834727
   CLL	      = -0.527878
   Precision = 0.717514 at threshold = 0.5
   Recall    = 0.814103
   F1        = 0.762763


Total scoring time: 7.723 seconds
Parameter learned model CLL: -0.527878


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), bankchiefexecutiveceo(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.549, 4, 6], 'true,false,false,true': [8.35, 97, 248], 'true,false,false,false': [3.17, 27, 16], 'false,true': [1.833, 21, 4], 'false,false': [5.551, 163, 38]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.549, 4, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.112, 124, 264], 'false,true': [0.0, 0, 0], 'false,false': [5.847, 184, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'true,false,false': 'companyceo(A, H), companyceo(D, H)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.866, 1, 3], 'true,false,false,false': [9.185, 127, 267], 'false,true': [0.0, 0, 0], 'false,false': [5.847, 184, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), companyalsoknownas(C, E)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyalsoknownas(C, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.97, 1, 7], 'true,false,false,true': [1.943, 7, 8], 'true,false,false,false': [4.752, 36, 166], 'false': [0.447, 268, 131]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), companyalsoknownas(C, E)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'bankboughtbank(A, K)', 'false,false,false': 'bankboughtbank(L, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.986, 1, 7], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.121, 43, 174], 'false,true': [3.609, 38, 25], 'false,false,true': [3.73e-09, 3, 0], 'false,false,false,true': [0.913, 2, 1], 'false,false,false,false': [8.102, 225, 105]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,true': 'economicsectorcompany(H, F), recursion_economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'companyceo(A, J)', 'false,false': 'bankboughtbank(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.115, 43, 179], 'false,true': [3.604, 38, 25], 'false,false,true': [0.918, 2, 1], 'false,false,false': [0.444, 228, 105]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 2], 'true,false,false,true': [0.77, 1, 3], 'true,false,false,false': [8.436, 127, 265], 'false,true': [0.0, 0, 0], 'false,false': [5.905, 184, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'companyceo(A, F), bankchiefexecutiveceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'companyceo(A, I), companyceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.29, 4, 6], 'true,false,false,true': [0.772, 1, 3], 'true,false,false,false': [8.333, 123, 261], 'false,true': [0.0, 0, 0], 'false,false': [0.393, 184, 42]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [1.232, 2, 6], 'true,false,true,false': [3.08, 14, 35], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.77, 112, 229], 'false,true': [0.0, 0, 0], 'false,false,true': [5.904, 184, 42], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'companyceo(A, E), bankchiefexecutiveceo(C, E)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 1, 0], 'true,false,false,false': [8.46, 127, 270], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.904, 184, 42]}]]
[{'': [0.21817630867907725, 0.1513039392278185], 'true': [nan, 0.21817630867907725], 'true,false': [0.23999999999999994, 0.217451376341804], 'true,false,true': [nan, 0.23999999999999994], 'true,false,false': [0.20210880067213172, 0.23363980530016176], 'false': [0.13439999999999985, 0.1533130368060208]}, {'': [0.21474332199432206, 0.1512845323931071], 'true': [nan, 0.21474332199432206], 'true,false': [0.24000000000000005, 0.21398185302156755], 'true,false,true': [nan, 0.24000000000000005], 'true,false,false': [nan, 0.21398185302156755], 'false': [nan, 0.1512845323931071]}, {'': [0.21388235205946604, 0.1512840354302663], 'true': [nan, 0.21388235205946562], 'true,false': [nan, 0.21388235205946562], 'true,false,false': [0.18749999999999994, 0.21410940339021153], 'false': [nan, 0.1512840354302665]}, {'': [0.12783975759424912, 0.200093765210147], 'true': [nan, 0.12783975759424898], 'true,false': [0.11762066127635057, 0.12787437979068553], 'true,false,false': [0.2517210932250162, 0.11180024953799438], 'true,false,true': [nan, 0.11762066127635057]}, {'': [0.12108083748845644, 0.199931313734171], 'false': [0.2067539898156835, 0.19827348664581712], 'false,false': [4.625929269271485e-18, 0.19967878929962396], 'false,false,false': [0.2778839555899579, 0.1989373679485839], 'true': [nan, 0.1210808374884564], 'true,false': [0.12144840266055928, 0.1208605519244354], 'true,false,true': [nan, 0.12144840266055928], 'true,false,false': [nan, 0.12086055192443533]}, {'': [0.1193897735944581, 0.19960080091357327], 'false': [0.20622861001796403, 0.19812301359096157], 'false,false': [0.2808435277661499, 0.19735526900015327], 'true': [nan, 0.119389773594458], 'true,false': [0.22222222222222224, 0.11786355513062238], 'true,false,true': [nan, 0.22222222222222224], 'true,false,false': [nan, 0.11786355513062231]}, {'': [0.18051713869491295, 0.15427652421397753], 'true': [nan, 0.18051713869491298], 'true,false': [0.0, 0.18120472114002412], 'true,false,false': [0.14815731303288074, 0.18152760492550266], 'false': [nan, 0.15427652421397753], 'true,false,true': [nan, 0.0]}, {'': [0.18077066731358538, 0.1542535964294674], 'true': [nan, 0.18077066731358474], 'true,false': [0.16651665018637635, 0.1805199860625644], 'true,false,false': [0.14912474228618583, 0.18084093780742386], 'true,false,true': [nan, 0.16651665018637635], 'false': [nan, 0.15425359642946748]}, {'': [0.18092023875166155, 0.1542342197963398], 'true': [nan, 0.18092023875166163], 'true,false': [0.19307469752363515, 0.17704763002994903], 'true,false,true': [0.18987237408741034, 0.19359746047458892], 'true,false,false': [nan, 0.17704763002994903], 'false': [nan, 0.15423421979633986], 'false,false': [0.1542342197963398, nan]}, {'': [0.18060197121223, 0.1542178278601555], 'true': [nan, 0.18060197121222982], 'true,false': [nan, 0.18060197121223], 'true,false,false': [0.0, 0.18027477961134825], 'false': [nan, 0.15421782786015606], 'false,false': [nan, 0.1542178278601555]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
4;false;companyceo(A, J).;true;true
4;false,false;bankboughtbank(A, K).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
6;true;bankboughtbank(A, F), acquired(G, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
9;true;bankboughtbank(F, A), companyalsoknownas(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( acquired(C, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(C, F), companyceo(F, G) )
%   | | then return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.4507415276921049;  // std dev = 0.491, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   else if ( countryhascompanyoffice(H, A), bankbankincountry(I, H) )
%   | then if ( countryhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | then return 0.7672398441904207;  // std dev = 0.287, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then if ( companyalsoknownas(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.3303711573217333;  // std dev = 4.236, 72.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=34 */
%   | | | else return 0.35814893509950807;  // std dev = 10.198, 416.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8013100212449443;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( cityhascompanyoffice(D, A), companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E), countryhascompanyoffice(F, E) )
%   | | then return 0.7837772174852773;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(E, G), companyalsoknownas(G, H) )
%   | | | then return -0.006686912331840794;  // std dev = 0.795, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4104430051461152;  // std dev = 2.245, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( acquired(A, I) )
%   | | then if ( cityhascompanyoffice(J, I), acquired(I, K) )
%   | | | then return 0.43305660446998995;  // std dev = 1.322, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.23210036284976854;  // std dev = 4.024, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   | | else if ( acquired(L, A), companyceo(L, M) )
%   | | | then return 0.11560714994601448;  // std dev = 2.615, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.30744030500768554;  // std dev = 10.561, 462.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=231 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.6453704792792172;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then if ( acquired(A, E), countryhascompanyoffice(F, E) )
%   | | then return 0.2659110274130519;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6864796631412144;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(G, A), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), countryhascompanyoffice(J, I) )
%   | | | then return 0.3575037788678595;  // std dev = 1.321, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03558214829432306;  // std dev = 2.397, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( bankboughtbank(A, K), acquired(A, K) )
%   | | | then return -0.1787124238750425;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24918913507109489;  // std dev = 11.456, 552.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=272 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   | then return 0.5352426180804539;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(E, C) )
%   | | then return -0.2465305121961887;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | | then return 0.6369150629948364;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.25849387913635224;  // std dev = 0.178, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | then return 0.5048176191036639;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(H, A), acquired(I, H) )
%   | | then if ( companyalsoknownas(H, J), countryhascompanyoffice(K, J) )
%   | | | then return 0.3256641946393592;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05606642114376305;  // std dev = 1.648, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( acquired(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.5067116053302382;  // std dev = 0.960, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.20119453115882685;  // std dev = 11.486, 569.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=281 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.2046164943848632;  // std dev = 0.346, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.4712635179421771;  // std dev = 0.378, 208.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=170 */
%   else if ( companyceo(A, F) )
%   | then if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.4985777933794793;  // std dev = 0.945, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.2594392956970898;  // std dev = 0.177, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.06980674171404323;  // std dev = 2.022, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.08283456740446697;  // std dev = 1.640, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( bankboughtbank(A, K) )
%   | | then return -0.182006189971151;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.4676111203886302;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.025584797193149746;  // std dev = 7.957, 327.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=100 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.34193173465724697;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, A), cityhascompanyoffice(E, D) )
%   | | then return -0.3014588391174697;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( countryhascompanyoffice(F, A) )
%   | | | then return 0.18493926381952508;  // std dev = 1.502, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.07331536123098428;  // std dev = 3.503, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | else if ( acquired(A, G), bankboughtbank(A, G) )
%   | | then return -0.15666278590146313;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | | | then return 0.06040397688877185;  // std dev = 1.522, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.12734037077565685;  // std dev = 10.243, 501.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=254 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(F, E) )
%   | then return 0.4058214455836613;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.3541997319619114;  // std dev = 1.720, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.2380009863804691;  // std dev = 0.086, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( acquired(J, A), countryhascompanyoffice(K, J) )
%   | | | then return 0.38658035673720786;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23908208513964654;  // std dev = 7.791, 342.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=232 */
%   else if ( companyalsoknownas(A, L) )
%   | then return -0.25938807796722807;  // std dev = 0.081, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( bankboughtbank(M, A), acquired(M, N) )
%   | | then return 0.14141978897262436;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(A, P) )
%   | | | then return -0.0706947043422685;  // std dev = 2.476, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.16990572919533614;  // std dev = 4.977, 168.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=31 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.2036679913011782;  // std dev = 0.463, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( countryhascompanyoffice(C, F), economicsectorcompany(B, F) )
%   | | then return 0.30708008900636546;  // std dev = 0.295, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else return -0.20382779148340452;  // std dev = 0.305, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( acquired(A, G) )
%   | then if ( economicsectorcompany(B, G) )
%   | | then return 0.36814881424388307;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(H, G), cityhascompanyoffice(I, A) )
%   | | | then return -0.1970881473330005;  // std dev = 0.689, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05805248794549382;  // std dev = 3.532, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.30395528810863204;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.22649667850848484;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06456275447032249;  // std dev = 9.396, 448.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=216 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( cityhascompanyoffice(E, A), acquired(A, F) )
%   | then return 0.06043059341290317;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( bankchiefexecutiveceo(G, D), economicsectorcompany(B, G) )
%   | | then return 0.26291618479328727;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07862925131152838;  // std dev = 0.285, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( acquired(A, H), companyceo(H, I) )
%   | then if ( economicsectorcompany(B, H) )
%   | | then return 0.26193745895930504;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(J, H) )
%   | | | then return 0.13667140364659935;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04510840382919874;  // std dev = 1.345, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.2576581915654559;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.19039014135670373;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.0469042161316474;  // std dev = 10.122, 538.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=258 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), companyalsoknownas(F, E) )
%   | then return -0.16764918033780368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then if ( companyceo(H, G), economicsectorcompany(B, H) )
%   | | | then return 0.29609054634464377;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19502758834524694;  // std dev = 0.944, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(I, A), countryhascompanyoffice(J, I) )
%   | | | then return 0.31580368489961275;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1468177295494691;  // std dev = 7.886, 377.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=256 */
%   else if ( cityhascompanyoffice(K, A), acquired(L, A) )
%   | then return -0.29847455608566403;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( bankboughtbank(M, A), acquired(M, N) )
%   | | then return 0.209884228229281;  // std dev = 0.537, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(A, P) )
%   | | | then return -0.05915409615765451;  // std dev = 2.395, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.15801114462252006;  // std dev = 4.959, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */


Results
   AUC ROC   = 0.885388
   AUC PR    = 0.895789
   CLL	      = -0.518713
   Precision = 0.908654 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.811159


Total learning time: 41.517 seconds
Total inference time: 4.8 seconds
AUC ROC: 0.885388


Results scoring model
   AUC ROC   = 0.883244
   AUC PR    = 0.88726
   CLL	      = -0.512544
   Precision = 0.906883 at threshold = 0.5
   Recall    = 0.717949
   F1        = 0.801431


Total scoring time: 6.174 seconds
Refined model CLL: -0.512544


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.885388
   AUC PR    = 0.895789
   CLL	      = -0.518713
   Precision = 0.908654 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.811159


Total learning time: 84.76600000000002 seconds
Total inference time: 4.8 seconds
AUC ROC: 0.885388
Total revision time: 84.76600000000002
Best scored revision CLL: -0.512544


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 20:05:16
{'AUC ROC': 0.885388, 'AUC PR': 0.895789, 'CLL': -0.518713, 'Precision': [0.908654, 0.5], 'Recall': 0.732558, 'F1': 0.811159, 'Learning time': 84.76600000000002, 'Inference time': 4.8, 'parameter_0.6': {'AUC ROC': 0.844976, 'AUC PR': 0.85879, 'CLL': -0.510186, 'Precision': [0.72449, 0.5], 'Recall': 0.825581, 'F1': 0.771739, 'Learning time': 29.352, 'Inference time': 6.756}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.5948745988163222;  // std dev = 9.363, 452.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=333 */
%   | | | else return 0.16849376268571928;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   else if ( economicsectorcompany(B, I), companyceo(I, J) )
%   | then return 0.062032430245143176;  // std dev = 4.089, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | else return 0.032061978577772224;  // std dev = 5.453, 207.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=36 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.448295606241962;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46528345141437916;  // std dev = 10.331, 510.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=351 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03681863664420822;  // std dev = 6.819, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankchiefexecutiveceo(D, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3746314888261688;  // std dev = 10.427, 522.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=359 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03214040467364123;  // std dev = 6.819, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E), bankchiefexecutiveceo(E, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return 0.5903011519718688;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, G), companyceo(H, G) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20073847287115498;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( companyalsoknownas(C, J) )
%   | | | then return 0.3311043193830216;  // std dev = 9.068, 432.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=319 */
%   | | | else return 0.06504043308516068;  // std dev = 4.701, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   else return 0.02275947061172904;  // std dev = 0.404, 265.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=57 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.44396372136011664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, F), companyceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1517879290607926;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20610742531271267;  // std dev = 10.385, 556.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=352 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return -0.014739574478669729;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( bankboughtbank(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return 0.17573661599752075;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.018418264807077325;  // std dev = 6.455, 255.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=55 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.33870860600648156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then if ( economicsectorcompany(H, F), recursion_economicsectorcompany(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17518212038746833;  // std dev = 3.339, 56.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=40 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15586309169469953;  // std dev = 9.920, 510.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=318 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return -0.012792610030729004;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( bankboughtbank(K, A) )
%   | | then return 0.15097982033391197;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.015590703413161646;  // std dev = 0.404, 255.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=55 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41311971050676294;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13680912452925756;  // std dev = 10.204, 519.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=356 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 8.928878663300055E-4;  // std dev = 6.818, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.19452323684625838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, F), companyceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027761130042314997;  // std dev = 1.516, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10663481072931531;  // std dev = 10.095, 511.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=352 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 7.601352874119805E-4;  // std dev = 0.387, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.16583941851542894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return 0.07924471583241752;  // std dev = 1.504, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.07248327446430192;  // std dev = 3.602, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08156623635178258;  // std dev = 9.436, 449.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=310 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return 6.470615148774666E-4;  // std dev = 6.818, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.14414942247687346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return -0.13779988350301708;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06267685961275304;  // std dev = 10.185, 519.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=357 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 5.507655744054837E-4;  // std dev = 6.818, 310.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=57 */


Results
   AUC ROC   = 0.771971
   AUC PR    = 0.715554
   CLL	      = -0.553725
   Precision = 0.715719 at threshold = 0.5
   Recall    = 0.829457
   F1        = 0.768402


Total learning time: 42.281 seconds
Total inference time: 6.756 seconds
AUC ROC: 0.771971


Results scoring model
   AUC ROC   = 0.781262
   AUC PR    = 0.726072
   CLL	      = -0.550575
   Precision = 0.72093 at threshold = 0.5
   Recall    = 0.819712
   F1        = 0.767154


Total scoring time: 8.318 seconds
Parameter learned model CLL: -0.550575


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), companyceo(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.633, 4, 8], 'true,false,false,true': [9.363, 119, 333], 'true,false,false,false': [3.523, 40, 18], 'false,true': [4.089, 82, 21], 'false,false': [5.453, 171, 36]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.633, 4, 8], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.331, 159, 351], 'false,true': [0.0, 0, 0], 'false,false': [6.819, 253, 57]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'true,false,false': 'bankchiefexecutiveceo(A, H), bankchiefexecutiveceo(D, H)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.427, 163, 359], 'false,true': [0.0, 0, 0], 'false,false': [6.819, 253, 57]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E), bankchiefexecutiveceo(E, D)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'bankchiefexecutiveceo(A, G), companyceo(H, G)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)', 'true,false,false': 'companyalsoknownas(C, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.55, 4, 6], 'true,false,false,true': [9.068, 113, 319], 'true,false,false,false': [4.701, 91, 33], 'false': [0.404, 208, 57]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), companyceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(A, K)', 'false,false,false': 'bankboughtbank(L, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.55, 4, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.385, 204, 352], 'false,true': [0.926, 6, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [6.455, 200, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,true': 'economicsectorcompany(H, F), recursion_economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.339, 16, 40], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.92, 192, 318], 'false,true': [0.926, 6, 1], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.404, 200, 55]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.178, 0, 3], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.204, 163, 356], 'false,true': [0.0, 0, 0], 'false,false': [6.818, 253, 57]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), companyceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.516, 4, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.095, 159, 352], 'false,true': [0.0, 0, 0], 'false,false': [0.387, 253, 57]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [1.504, 3, 7], 'true,false,true,false': [3.602, 21, 41], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.436, 139, 310], 'false,true': [0.0, 0, 0], 'false,false,true': [6.818, 253, 57], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.707, 1, 1], 'true,false,false,false': [10.185, 162, 357], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.818, 253, 57]}]]
[{'': [0.21475389380660312, 0.15006243496358054], 'true': [nan, 0.21475389380660284], 'true,false': [0.2222222222222221, 0.21456747404843685], 'true,false,true': [nan, 0.2222222222222222], 'true,false,false': [0.19396096013783667, 0.2140309155766939], 'false': [0.16231501555283298, 0.1436672967863905]}, {'': [0.20956981896302623, 0.15001542527161282], 'true': [nan, 0.20956981896302618], 'true,false': [0.2222222222222222, 0.20926548117569518], 'true,false,true': [nan, 0.2222222222222222], 'true,false,false': [nan, 0.20926548117569518], 'false': [nan, 0.15001542527161282]}, {'': [0.20828692448786082, 0.15001428259523691], 'true': [nan, 0.2082869244878608], 'true,false': [nan, 0.2082869244878608], 'true,false,false': [nan, 0.20828692448786104], 'false': [nan, 0.15001428259523691]}, {'': [0.2005144419676149, 0.16328438901946263], 'true': [0.0, 0.20068834538183922], 'true,false': [0.2401089376675547, 0.19989020841571736], 'true,false,true': [nan, 0.2401089376675547], 'true,false,false': [0.19032642317947684, 0.1782069065166042], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.19461235328452745, 0.16327893358802156], 'true': [0.0, 0.1948556039148228], 'true,false': [0.24011582865869624, 0.19398944021807243], 'true,false,true': [nan, 0.24011582865869624], 'true,false,false': [nan, 0.19398944021807238], 'false': [0.12244897959183673, 0.16435438835392285], 'false,false': [nan, 0.16435438835392285], 'false,false,false': [0.2222222222222222, 0.16338581049886367]}, {'': [0.19330946369945834, 0.16319458865819986], 'true': [0.0, 0.1935932623847781], 'true,false': [0.19905391945390932, 0.1929567339820205], 'true,false,true': [nan, 0.1990539194539096], 'true,false,false': [nan, 0.1929567339820205], 'false': [0.12244897959183668, 0.16427638323828017], 'false,false': [0.2222222222222222, 0.16338152547412585]}, {'': [0.19994934360563876, 0.14995802752466647], 'true': [nan, 0.1999493436056388], 'true,false': [0.010614514650045703, 0.20060498561718468], 'true,false,false': [nan, 0.20060498561718465], 'false': [nan, 0.1499580275246665], 'true,false,true': [nan, 0.010614514650045703]}, {'': [0.19977699827843745, 0.14995844036978867], 'true': [0.0, 0.20014513558350294], 'true,false': [0.22980861575081585, 0.19944523085594365], 'true,false,true': [nan, 0.22980861575081585], 'true,false,false': [nan, 0.19944523085594365], 'false': [nan, 0.14995844036978867]}, {'': [0.19978270785060195, 0.14995879227150516], 'true': [0.0, 0.20015219681950291], 'true,false': [0.21160558493809214, 0.19830640782285536], 'true,false,true': [0.22614611770498577, 0.20925398812187904], 'true,false,false': [nan, 0.19830640782285536], 'false': [nan, 0.14995879227150516], 'false,false': [0.14995879227150516, nan]}, {'': [0.19985311656665086, 0.14995909214310701], 'true': [0.0, 0.20022375438467574], 'true,false': [nan, 0.20022375438467577], 'true,false,false': [0.25, 0.19987765462989254], 'false': [nan, 0.1499590921431071], 'false,false': [nan, 0.14995909214310701]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
4;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
5;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
8;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
9;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(E, A), companyceo(A, F) )
%   | | then if ( acquired(D, G) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then return 0.7867203636709409;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return 0.1914822684328457;  // std dev = 3.367, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.3524992175853837;  // std dev = 13.303, 708.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=350 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7249607933832254;  // std dev = 0.101, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.48091275683008544;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.793986180155149;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then if ( bankboughtbank(H, F), economicsectorcompany(B, H) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11269569195658428;  // std dev = 3.177, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( acquired(A, I), acquired(I, J) )
%   | | | then return 0.1628821097826576;  // std dev = 2.613, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.3068300638917564;  // std dev = 13.332, 714.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=356 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return 0.3975043047764017;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6298363115160704;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( acquired(G, F), acquired(F, H) )
%   | | | then return 0.6895052785234421;  // std dev = 1.079, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.4260382414537069;  // std dev = 3.707, 63.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | | else return -0.23577728872418874;  // std dev = 0.177, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then return 0.669616171013084;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.08785380951583101;  // std dev = 3.162, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.2602075939009428;  // std dev = 12.075, 595.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=298 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.6928407864391664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(A, F), companyceo(F, G) )
%   | | then return 0.6832553666962422;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.39880511179527534;  // std dev = 3.762, 84.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=62 */
%   | | | else return 0.30682189389873404;  // std dev = 10.331, 479.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=293 */
%   else if ( companyceo(A, I) )
%   | then return -0.2197626926904141;  // std dev = 0.299, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( acquired(A, J) )
%   | | then if ( acquired(J, K), companyceo(J, L) )
%   | | | then return -0.23417597373933208;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2467197366157378;  // std dev = 1.838, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( acquired(M, A), companyceo(M, N) )
%   | | | then return -0.21522465669639287;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.02348587014487266;  // std dev = 5.954, 189.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.5301118207308969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F) )
%   | | then if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.18586692070495786;  // std dev = 2.358, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.3753360279845715;  // std dev = 2.799, 58.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.08142386816262435;  // std dev = 2.844, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.25468359791964845;  // std dev = 9.859, 440.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=276 */
%   else if ( companyceo(A, I) )
%   | then return -0.18478813297799626;  // std dev = 0.264, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( acquired(J, A), companyceo(J, K) )
%   | | then return -0.18120947726497644;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return -0.11780926411184124;  // std dev = 1.376, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.009126637246336089;  // std dev = 6.110, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.3990275565267587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), acquired(A, G) )
%   | | then if ( companyceo(G, H), countryhascompanyoffice(I, A) )
%   | | | then return 0.07992937664187792;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.30632972459251856;  // std dev = 2.193, 43.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.09049277298144028;  // std dev = 2.826, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return 0.19206722399792803;  // std dev = 10.239, 475.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=296 */
%   else if ( cityhascompanyoffice(K, A) )
%   | then return -0.11841155299069345;  // std dev = 0.191, 54.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=3 */
%   | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | then return 0.2145575519326005;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyceo(A, N) )
%   | | | then return -0.18774302293466683;  // std dev = 0.116, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.012151058851251107;  // std dev = 6.010, 190.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=51 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return 0.04304178432038963;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.28437497766211955;  // std dev = 0.066, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(A, E), acquired(A, F) )
%   | then if ( companyalsoknownas(F, G), companyalsoknownas(E, G) )
%   | | then return -0.25478299320279396;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.08003794167581954;  // std dev = 1.550, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.13114631064393778;  // std dev = 0.680, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( acquired(I, A), acquired(J, I) )
%   | | then if ( economicsectorcompany(B, J) )
%   | | | then return 0.37994460019982623;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05578957926165736;  // std dev = 1.807, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( acquired(K, A), countryhascompanyoffice(L, K) )
%   | | | then return 0.1360947370448563;  // std dev = 1.761, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09075896451578125;  // std dev = 12.380, 732.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=366 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.2990998560087481;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.2580628632392265;  // std dev = 3.145, 94.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=81 */
%   | | | else return -0.2691566909550046;  // std dev = 0.593, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( bankchiefexecutiveceo(A, H) )
%   | | | then return -0.10528484761298026;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22115144146496016;  // std dev = 8.783, 396.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=275 */
%   else if ( acquired(A, I) )
%   | then if ( countryhascompanyoffice(J, I) )
%   | | then return -0.2510618528853096;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.14568357238932866;  // std dev = 0.203, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.008655847435726555;  // std dev = 2.374, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else return -0.16924981661978653;  // std dev = 0.387, 251.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=44 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.24036347586303386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.20057882313168277;  // std dev = 3.142, 94.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=81 */
%   | | | else return -0.2225696719801585;  // std dev = 0.519, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.2945036752848023;  // std dev = 0.150, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1620844671600806;  // std dev = 8.851, 393.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=269 */
%   else if ( acquired(I, A), acquired(J, I) )
%   | then return -0.2623044258537755;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return -0.19790070954590627;  // std dev = 0.098, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( acquired(L, A) )
%   | | | then return -0.017993817457232428;  // std dev = 2.129, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return -0.12219298592808686;  // std dev = 6.189, 237.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=49 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.19923997956303718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.08354372813689005;  // std dev = 0.323, 120.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=81 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.10888469018445872;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return 0.12716851624425166;  // std dev = 8.430, 363.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=252 */
%   else if ( bankboughtbank(H, A), acquired(H, I) )
%   | then return 0.11200702711752197;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( acquired(A, J) )
%   | | then if ( countryhascompanyoffice(K, J) )
%   | | | then return -0.1894071672773034;  // std dev = 0.413, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.005277068436380797;  // std dev = 2.409, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( acquired(L, A) )
%   | | | then return -0.06655366137387973;  // std dev = 1.839, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return -0.12203346388353689;  // std dev = 5.678, 215.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=37 */


Results
   AUC ROC   = 0.844203
   AUC PR    = 0.838588
   CLL	      = -0.509513
   Precision = 0.781022 at threshold = 0.5
   Recall    = 0.829457
   F1        = 0.804511


Total learning time: 51.974 seconds
Total inference time: 6.307 seconds
AUC ROC: 0.844203


Results scoring model
   AUC ROC   = 0.840202
   AUC PR    = 0.831717
   CLL	      = -0.514243
   Precision = 0.770787 at threshold = 0.5
   Recall    = 0.824519
   F1        = 0.796748


Total scoring time: 6.254 seconds
Refined model CLL: -0.514243


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.844203
   AUC PR    = 0.838588
   CLL	      = -0.509513
   Precision = 0.781022 at threshold = 0.5
   Recall    = 0.829457
   F1        = 0.804511


Total learning time: 108.827 seconds
Total inference time: 6.307 seconds
AUC ROC: 0.844203
Total revision time: 108.827
Best scored revision CLL: -0.514243


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 20:07:19
{'AUC ROC': 0.844203, 'AUC PR': 0.838588, 'CLL': -0.509513, 'Precision': [0.781022, 0.5], 'Recall': 0.829457, 'F1': 0.804511, 'Learning time': 108.827, 'Inference time': 6.307, 'parameter_0.8': {'AUC ROC': 0.771971, 'AUC PR': 0.715554, 'CLL': -0.553725, 'Precision': [0.715719, 0.5], 'Recall': 0.829457, 'F1': 0.768402, 'Learning time': 42.281, 'Inference time': 6.756}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
0;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
0;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
0;true,true,false;teamalsoknownas(F, E), teamalsoknownas(F, D).;false;false
0;true,false;teamplaysagainstteam(G, A).;true;true
0;true,false,true;athleteledsportsteam(H, G), teamplaysagainstteam(A, G).;false;false
0;true,false,false;athleteplaysforteam(C, I), teamalsoknownas(D, I).;false;false
0;false;athleteplayssport(J, B), athleteplaysinleague(J, K).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
1;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;true
1;true,true,false;athleteplaysforteam(F, E), athleteplaysinleague(F, G).;false;false
1;true,false;teamplaysagainstteam(H, A).;true;true
1;true,false,true;athleteledsportsteam(I, H), teamplaysagainstteam(A, H).;false;false
1;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, J).;false;false
1;false;teamalsoknownas(A, K), recursion_teamplayssport(K, B).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
2;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
2;true,true;teamplaysagainstteam(D, E), recursion_teamplayssport(D, B).;false;false
2;true,false;teamplaysagainstteam(A, F), athleteledsportsteam(G, F).;true;true
2;true,false,true;teamplaysinleague(A, H), teamplaysinleague(F, H).;false;false
2;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
2;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;false
2;false,true;teamalsoknownas(K, J), athleteplaysforteam(L, K).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;true;true
3;true,true;recursion_teamplayssport(E, B), teamplaysinleague(E, D).;false;true
3;true,true,false;teamalsoknownas(F, A), teamplaysagainstteam(A, F).;false;false
3;true,false;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;true,false,true;athleteplayssport(H, I), recursion_teamplayssport(A, I).;false;false
3;true,false,false;athleteledsportsteam(C, J).;false;false
3;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
4;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
4;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
4;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
4;false;teamplaysinleague(A, J).;false;true
4;false,false;teamalsoknownas(K, A), teamplaysagainstteam(A, L).;false;true
4;false,false,false;teamplaysagainstteam(M, A).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
5;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
5;true,false;athleteledsportsteam(F, A), athleteledsportsteam(C, G).;true;true
5;true,false,true;athleteplayssport(F, H), recursion_teamplayssport(G, H).;false;false
5;true,false,false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;false;false
5;false;teamplaysinleague(A, J).;false;true
5;false,false;teamplaysagainstteam(K, A), teamalsoknownas(L, A).;false;true
5;false,false,false;teamalsoknownas(A, M).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
6;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
6;true,true;teamplaysinleague(A, F), teamplaysinleague(E, F).;false;true
6;true,true,false;athleteledsportsteam(G, A), teamalsoknownas(D, E).;false;false
6;true,false;teamplaysagainstteam(A, H), athleteplaysforteam(I, H).;true;true
6;true,false,true;athleteplayssport(I, J), recursion_teamplayssport(A, J).;false;false
6;true,false,false;teamplaysinleague(A, K), teamplaysinleague(D, K).;false;false
6;false;teamplaysagainstteam(L, A), recursion_teamplayssport(L, B).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
7;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
7;true,false;teamplaysinleague(A, F), athleteplaysinleague(G, F).;true;true
7;true,false,true;athleteplayssport(G, H), recursion_teamplayssport(A, H).;false;false
7;true,false,false;teamplaysinleague(A, I), teamplaysinleague(D, I).;false;false
7;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
7;false,true;athleteledsportsteam(K, J), teamalsoknownas(L, J).;false;false
7;false,false;teamalsoknownas(M, A), teamalsoknownas(N, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
8;true,false;athleteledsportsteam(F, A).;true;true
8;true,false,true;athleteplayssport(F, G), athleteplaysforteam(H, A).;false;false
8;true,false,false;athleteplaysforteam(C, D), teamalsoknownas(D, I).;false;false
8;false;teamplaysagainstteam(J, A), recursion_teamplayssport(J, B).;true;true
8;false,true;teamalsoknownas(K, J), teamplaysagainstteam(A, K).;false;false
8;false,false;teamalsoknownas(L, A), athleteplaysforteam(M, L).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
9;true;teamplaysinleague(A, E), athleteplaysinleague(C, E).;false;true
9;true,false;athleteplaysforteam(C, D), teamalsoknownas(D, F).;true;true
9;true,false,true;teamalsoknownas(F, D).;false;false
9;true,false,false;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
9;false;teamplaysagainstteam(I, A), recursion_teamplayssport(I, B).;true;true
9;false,true;teamalsoknownas(J, I), athleteplaysforteam(K, J).;false;false
9;false,false;teamalsoknownas(A, L), recursion_teamplayssport(L, B).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( acquired(C, H) )
%   | | | then return 0.5986894756400485;  // std dev = 10.327, 555.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=411 */
%   | | | else return 0.19148226843284455;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   else if ( economicsectorcompany(B, I), companyceo(I, J) )
%   | then return 0.02350326580817358;  // std dev = 4.187, 127.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=21 */
%   | else return 0.052805423649130476;  // std dev = 6.409, 262.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=51 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( companyalsoknownas(G, F), bankboughtbank(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4020741165900723;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46706260275832195;  // std dev = 11.489, 633.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=437 */
%   else if ( recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03788516823868744;  // std dev = 7.659, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankchiefexecutiveceo(D, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3748943538191562;  // std dev = 11.641, 651.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=448 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03306550595401766;  // std dev = 7.659, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then if ( recursion_economicsectorcompany(B, E), bankchiefexecutiveceo(E, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, F) )
%   | | | then return 0.588883942045465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, G), companyceo(H, G) )
%   | | then if ( economicsectorcompany(I, H), recursion_economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19528038461033057;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( companyalsoknownas(C, J) )
%   | | | then return 0.32824103728732973;  // std dev = 10.143, 538.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=396 */
%   | | | else return 0.040768590831502444;  // std dev = 4.918, 152.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=36 */
%   else return 0.041483137240723084;  // std dev = 0.418, 337.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=80 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.4428680158364072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, F), companyceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14813415718242728;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20048084831971216;  // std dev = 11.502, 690.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=432 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0.0868207725184389;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( bankboughtbank(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(L, A) )
%   | | | then return 0.17015410585177224;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.032583240537653234;  // std dev = 7.529, 326.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=77 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.3379600093274663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, A), companyalsoknownas(C, G) )
%   | | then if ( economicsectorcompany(H, F), recursion_economicsectorcompany(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20090140971640325;  // std dev = 3.512, 65.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=48 */
%   | | else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14888504170815786;  // std dev = 11.035, 637.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=391 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0.07461600356878655;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( bankboughtbank(K, A) )
%   | | then return 0.14556957366334186;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.02743948302499354;  // std dev = 0.417, 326.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=77 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42968436713195546;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13900584164636318;  // std dev = 11.418, 647.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=444 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -1.3491667621156966E-4;  // std dev = 7.679, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.19153872600222988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, F), companyceo(G, F) )
%   | | then if ( economicsectorcompany(H, G), recursion_economicsectorcompany(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027918233418570748;  // std dev = 1.689, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10836849311317179;  // std dev = 11.299, 638.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=440 */
%   else if ( bankboughtbank(J, A), recursion_economicsectorcompany(B, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -1.1460395853942183E-4;  // std dev = 0.389, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.16361382776369326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then if ( economicsectorcompany(G, F), acquired(H, A) )
%   | | | then return 0.12644063977495132;  // std dev = 1.560, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.10391909987011717;  // std dev = 3.844, 73.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=51 */
%   | | else if ( acquired(C, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07790017195390231;  // std dev = 10.646, 565.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=387 */
%   else if ( bankboughtbank(I, A), recursion_economicsectorcompany(B, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, K) )
%   | | then return -9.735082191117983E-5;  // std dev = 7.679, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.14243694243330096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(C, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, A), companyalsoknownas(G, F) )
%   | | | then return -0.1104275959141846;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06337918717396795;  // std dev = 11.405, 648.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=446 */
%   else if ( bankboughtbank(H, A), recursion_economicsectorcompany(B, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_economicsectorcompany(B, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -8.269604473393029E-5;  // std dev = 7.679, 389.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=72 */


Results
   AUC ROC   = 0.77128
   AUC PR    = 0.716828
   CLL	      = -0.554521
   Precision = 0.715719 at threshold = 0.5
   Recall    = 0.829457
   F1        = 0.768402


Total learning time: 46.472 seconds
Total inference time: 7.329 seconds
AUC ROC: 0.77128


Results scoring model
   AUC ROC   = 0.778983
   AUC PR    = 0.731241
   CLL	      = -0.553296
   Precision = 0.721843 at threshold = 0.5
   Recall    = 0.813462
   F1        = 0.764919


Total scoring time: 8.778 seconds
Parameter learned model CLL: -0.553296


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, H)', 'false': 'economicsectorcompany(B, I), companyceo(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.068, 7, 11], 'true,false,false,true': [10.327, 144, 411], 'true,false,false,false': [4.163, 52, 26], 'false,true': [4.187, 106, 21], 'false,false': [6.409, 211, 51]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,true': 'companyalsoknownas(G, F), bankboughtbank(A, F)', 'true,false,false': 'acquired(C, D)', 'false': 'recursion_economicsectorcompany(B, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.068, 7, 11], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.489, 196, 437], 'false,true': [0.0, 0, 0], 'false,false': [7.659, 317, 72]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'true,false,false': 'bankchiefexecutiveceo(A, H), bankchiefexecutiveceo(D, H)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.641, 203, 448], 'false,true': [0.0, 0, 0], 'false,false': [7.659, 317, 72]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,true': 'recursion_economicsectorcompany(B, E), bankchiefexecutiveceo(E, D)', 'true,true,false': 'bankboughtbank(A, F)', 'true,false': 'bankchiefexecutiveceo(A, G), companyceo(H, G)', 'true,false,true': 'economicsectorcompany(I, H), recursion_economicsectorcompany(I, A)', 'true,false,false': 'companyalsoknownas(C, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.723, 5, 7], 'true,false,false,true': [10.143, 142, 396], 'true,false,false,false': [4.918, 116, 36], 'false': [0.418, 257, 80]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), companyceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(A, K)', 'false,false,false': 'bankboughtbank(L, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.724, 5, 7], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.502, 258, 432], 'false,true': [1.225, 6, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [7.529, 249, 77]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'companyalsoknownas(F, A), companyalsoknownas(C, G)', 'true,false,true': 'economicsectorcompany(H, F), recursion_economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.512, 17, 48], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.035, 246, 391], 'false,true': [1.225, 6, 2], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.417, 249, 77]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F), acquired(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.203, 0, 4], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.418, 203, 444], 'false,true': [0.0, 0, 0], 'false,false': [7.679, 317, 72]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), companyceo(G, F)', 'true,false,true': 'economicsectorcompany(H, G), recursion_economicsectorcompany(H, A)', 'true,false,false': 'bankchiefexecutiveceo(A, I), bankchiefexecutiveceo(D, I)', 'false': 'bankboughtbank(J, A), recursion_economicsectorcompany(B, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.689, 5, 7], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [11.299, 198, 440], 'false,true': [0.0, 0, 0], 'false,false': [0.389, 317, 72]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'companyalsoknownas(F, A)', 'true,false,true': 'economicsectorcompany(G, F), acquired(H, A)', 'true,false,false': 'acquired(C, D)', 'false': 'bankboughtbank(I, A), recursion_economicsectorcompany(B, I)', 'false,false': 'acquired(J, K)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [1.56, 3, 9], 'true,false,true,false': [3.844, 22, 51], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [10.646, 178, 387], 'false,true': [0.0, 0, 0], 'false,false,true': [7.679, 317, 72], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankchiefexecutiveceo(A, E), companyceo(C, E)', 'true,false': 'acquired(C, D)', 'true,false,false': 'bankboughtbank(F, A), companyalsoknownas(G, F)', 'false': 'bankboughtbank(H, A), recursion_economicsectorcompany(B, H)', 'false,false': 'recursion_economicsectorcompany(B, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.707, 1, 1], 'true,false,false,false': [11.405, 202, 446], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.679, 317, 72]}]]
[{'': [0.21459128222915694, 0.15083167570925465], 'true': [nan, 0.21459128222915672], 'true,false': [0.23765432098765396, 0.21376179530757994], 'true,false,true': [nan, 0.23765432098765427], 'true,false,false': [0.19214024835646276, 0.22222222222222343], 'false': [0.13801227602455265, 0.15676534001515163]}, {'': [0.20945844370817182, 0.15078739870132424], 'true': [nan, 0.20945844370817213], 'true,false': [0.23765432098765457, 0.20853988631329398], 'true,false,true': [nan, 0.23765432098765457], 'true,false,false': [nan, 0.20853988631329398], 'false': [nan, 0.15078739870132424]}, {'': [0.20816164582476063, 0.1507862869666839], 'true': [nan, 0.20816164582476046], 'true,false': [nan, 0.20816164582476046], 'true,false,false': [nan, 0.20816164582476046], 'false': [nan, 0.1507862869666839]}, {'': [0.19912759752659923, 0.17487700889427563], 'true': [0.0, 0.19926085771946322], 'true,false': [0.24743131410156982, 0.19834022503008622], 'true,false,true': [nan, 0.24743131410156982], 'true,false,false': [0.191220396227737, 0.1591051076257708], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.192538489902795, 0.17485866194195807], 'true': [0.0, 0.19272857046911832], 'true,false': [0.24760458749009265, 0.19172736433907733], 'true,false,true': [nan, 0.24760458749009265], 'true,false,false': [nan, 0.19172736433907733], 'false': [0.18750000000000006, 0.17448463384315632], 'false,false': [nan, 0.17448463384315632], 'false,false,false': [0.22222222222222224, 0.1738727557186315]}, {'': [0.19103187793297421, 0.17478455934861095], 'true': [0.0, 0.19125570831379177], 'true,false': [0.1897961134200014, 0.19115411855522613], 'true,false,false': [nan, 0.19115411855522604], 'true,false,true': [nan, 0.18979611342000105], 'false': [0.18749999999999994, 0.17442492064375328], 'false,false': [0.2222222222222222, 0.17385782150368148]}, {'': [0.20083513509072612, 0.15157048297851866], 'true': [nan, 0.2008351350907262], 'true,false': [0.010312739002289628, 0.20149385258874347], 'true,false,false': [nan, 0.2014938525887435], 'false': [nan, 0.15157048297851866], 'true,false,true': [nan, 0.010312739002289628]}, {'': [0.20063579845939758, 0.1515703922721369], 'true': [0.0, 0.20093346039577184], 'true,false': [0.23783849792120434, 0.20011983417213114], 'true,false,true': [nan, 0.23783849792120434], 'true,false,false': [nan, 0.20011983417213114], 'false': [nan, 0.15157039227213687]}, {'': [0.2006483979832099, 0.15157031522721262], 'true': [0.0, 0.2009467854356772], 'true,false': [0.20253912952087808, 0.20059574208656325], 'true,false,true': [0.20289455241525178, 0.2024090963441261], 'true,false,false': [nan, 0.20059574208656325], 'false': [nan, 0.1515703152272126], 'false,false': [0.15157031522721262, nan]}, {'': [0.2006784211963736, 0.1515702497846299], 'true': [0.0, 0.20097742608723676], 'true,false': [nan, 0.20097742608723676], 'true,false,false': [0.25, 0.20073317169954225], 'false': [nan, 0.1515702497846299], 'false,false': [nan, 0.1515702497846299]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
4;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
5;true;bankchiefexecutiveceo(A, D), companyalsoknownas(C, E).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
8;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
9;true;bankchiefexecutiveceo(A, E), companyceo(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(C, E), bankboughtbank(C, E) )
%   | | then return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.3196873966379738;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then return 0.7993254056877476;  // std dev = 0.235, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I) )
%   | | | then return 0.35814893509951223;  // std dev = 3.082, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.3581489350995126;  // std dev = 4.637, 86.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.3581489350995112;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.3581489350995077;  // std dev = 13.583, 738.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=369 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7310118692542501;  // std dev = 0.200, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( companyalsoknownas(A, D), countryhascompanyoffice(E, D) )
%   | then if ( acquired(A, F), countryhascompanyoffice(E, F) )
%   | | then if ( companyalsoknownas(D, F) )
%   | | | then return 0.3028732763590175;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3087411357856349;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(G, A), acquired(A, H) )
%   | | | then return 0.16401254434762622;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1517703288027808;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( acquired(A, I), companyceo(I, J) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.540823313943113;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.27277193216823414;  // std dev = 3.279, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.2611326533573075;  // std dev = 3.914, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | | else return 0.30789123928679296;  // std dev = 14.738, 886.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=443 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D), countryhascompanyoffice(E, A) )
%   | then return 0.3664988962511378;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7338533820635303;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( acquired(A, F) )
%   | then if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.7319185305698808;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15131029115725128;  // std dev = 2.987, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( cityhascompanyoffice(I, A), cityhascompanyoffice(J, F) )
%   | | | then return 0.0584918085390271;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2242136223302792;  // std dev = 4.587, 90.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=42 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.644692449280907;  // std dev = 0.155, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.16333545307504757;  // std dev = 3.487, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | else return 0.25571397039034655;  // std dev = 0.495, 808.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=404 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.5233211621408524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.696550516134129;  // std dev = 0.189, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.321393400796555;  // std dev = 4.568, 104.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=66 */
%   | | | else return 0.30890248046279317;  // std dev = 11.465, 573.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=348 */
%   else if ( companyceo(A, H) )
%   | then return -0.25240693988961693;  // std dev = 0.306, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.29658110071180305;  // std dev = 1.311, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.28621243840490546;  // std dev = 0.107, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.14026383965368755;  // std dev = 2.200, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.004571023212352112;  // std dev = 6.828, 232.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=66 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.3941337871127336;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F), acquired(A, G) )
%   | | then if ( cityhascompanyoffice(H, A), cityhascompanyoffice(I, G) )
%   | | | then return 0.2685517805079377;  // std dev = 1.408, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.3961502735856297;  // std dev = 2.686, 50.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return 0.19055774317558027;  // std dev = 3.011, 49.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=28 */
%   | | | else return 0.2458064323631779;  // std dev = 11.586, 591.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=363 */
%   else if ( companyceo(A, K) )
%   | then return -0.2082085636055731;  // std dev = 0.264, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( acquired(L, A), companyceo(L, M) )
%   | | then return -0.27532690172380947;  // std dev = 0.134, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return -0.12227121546626005;  // std dev = 1.741, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.024401801144589032;  // std dev = 7.099, 239.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=75 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0.304893493811062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.36899894205599104;  // std dev = 3.918, 122.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=101 */
%   | | | else return -0.37866961041942515;  // std dev = 0.354, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.18020062268650808;  // std dev = 0.475, 555.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=338 */
%   else if ( companyceo(A, H) )
%   | then return -0.17621139150143478;  // std dev = 0.230, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( acquired(A, I) )
%   | | then if ( acquired(I, J) )
%   | | | then return 0.01977493086267149;  // std dev = 1.086, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2713486414637859;  // std dev = 1.719, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( acquired(K, A), companyceo(K, L) )
%   | | | then return -0.22413184852809445;  // std dev = 0.115, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.010706315600303487;  // std dev = 6.977, 252.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=70 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.38435956418805434;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.35198638067745547;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.46023266711536365;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( companyceo(F, G), countryhascompanyoffice(H, A) )
%   | | then return 0.03318862413501186;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.35201773641221046;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(I, A) )
%   | | then if ( cityhascompanyoffice(J, A), cityhascompanyoffice(J, I) )
%   | | | then return -0.15142176453593845;  // std dev = 1.138, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.027713646797405588;  // std dev = 4.518, 115.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=48 */
%   | | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.30095867053759373;  // std dev = 0.668, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.08424959878542045;  // std dev = 13.462, 857.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=416 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.2382705435234167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | | then if ( bankboughtbank(H, A) )
%   | | | then return 0.052660831908433424;  // std dev = 1.528, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1507512511945053;  // std dev = 2.552, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.14682469469486997;  // std dev = 3.427, 74.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   | | | else return 0.22144516144970353;  // std dev = 9.818, 503.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=349 */
%   else if ( acquired(A, J) )
%   | then if ( companyalsoknownas(A, K) )
%   | | then return -0.1897470278714985;  // std dev = 0.103, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.04613843279035853;  // std dev = 0.391, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( cityhascompanyoffice(L, A) )
%   | | then return -0.14910325486974246;  // std dev = 0.310, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else return -0.17355775162228448;  // std dev = 0.401, 283.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=52 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.19774388379129249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(F, A), countryhascompanyoffice(G, F) )
%   | | then if ( acquired(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.3366098739540531;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07319612675514692;  // std dev = 1.658, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | | then return 0.27236434151660777;  // std dev = 0.127, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.15303889506613197;  // std dev = 10.644, 609.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=413 */
%   else if ( acquired(A, J) )
%   | then return -0.06809298126016611;  // std dev = 0.348, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.12164986980669926;  // std dev = 0.311, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return -0.015223479689612787;  // std dev = 1.515, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.14289410210964404;  // std dev = 6.531, 268.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=48 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankchiefexecutiveceo(A, E), companyceo(C, E) )
%   | then return 0.168233464545956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.22048434942735987;  // std dev = 0.116, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( bankchiefexecutiveceo(A, G) )
%   | | | then return 0.003052231210939449;  // std dev = 1.873, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.11808378239514969;  // std dev = 10.614, 606.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=411 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return -0.29356848821015796;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( acquired(A, J) )
%   | | then if ( countryhascompanyoffice(K, J) )
%   | | | then return -0.14924876876344484;  // std dev = 0.904, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.011019486133023547;  // std dev = 2.523, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return -0.2269997198307483;  // std dev = 0.301, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.09610251716496603;  // std dev = 6.943, 299.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=58 */


Results
   AUC ROC   = 0.8555
   AUC PR    = 0.856035
   CLL	      = -0.518894
   Precision = 0.787004 at threshold = 0.5
   Recall    = 0.844961
   F1        = 0.814953


Total learning time: 59.051 seconds
Total inference time: 5.864 seconds
AUC ROC: 0.8555


Results scoring model
   AUC ROC   = 0.841594
   AUC PR    = 0.841599
   CLL	      = -0.528156
   Precision = 0.771325 at threshold = 0.5
   Recall    = 0.817308
   F1        = 0.793651


Total scoring time: 6.346 seconds
Refined model CLL: -0.528156


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.8555
   AUC PR    = 0.856035
   CLL	      = -0.518894
   Precision = 0.787004 at threshold = 0.5
   Recall    = 0.844961
   F1        = 0.814953


Total learning time: 120.647 seconds
Total inference time: 5.864 seconds
AUC ROC: 0.8555
Total revision time: 120.647
Best scored revision CLL: -0.528156


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 20:09:35
{'AUC ROC': 0.8555, 'AUC PR': 0.856035, 'CLL': -0.518894, 'Precision': [0.787004, 0.5], 'Recall': 0.844961, 'F1': 0.814953, 'Learning time': 120.647, 'Inference time': 5.864, 'parameter_1.0': {'AUC ROC': 0.77128, 'AUC PR': 0.716828, 'CLL': -0.554521, 'Precision': [0.715719, 0.5], 'Recall': 0.829457, 'F1': 0.768402, 'Learning time': 46.472, 'Inference time': 7.329}}


