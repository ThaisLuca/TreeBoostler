Starting experiment #1 for 9_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 9691
Source train pos examples: 397
Source train neg examples: 159991

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.8525623429207385;  // std dev = 0.075, 179.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   | else if ( athleteledsportsteam(E, A), athleteledsportsteam(C, F) )
%   | | then if ( athleteplayssport(E, G), recursion_teamplayssport(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return 0.7883814932390467;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0.8458789964492055;  // std dev = 1.406, 163.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=161 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.1387882777641948;  // std dev = 0.055, 653.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=2 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(A, L) )
%   | | then if ( teamplaysagainstteam(K, A), teamalsoknownas(K, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12262029566971844;  // std dev = 0.137, 156.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.7236941537578442;  // std dev = 0.156, 218.000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(F, G) )
%   | | | then return 0.7292403323232508;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0015665431989771092;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.7139337525814462;  // std dev = 0.987, 99.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=98 */
%   | | | else return 0.6778255423983215;  // std dev = 1.693, 68.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=65 */
%   else if ( teamalsoknownas(I, A), teamplaysagainstteam(A, J) )
%   | then if ( teamalsoknownas(K, J) )
%   | | then return -0.1257810372888581;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( teamalsoknownas(J, I), athleteplaysforteam(L, J) )
%   | | | then return 0.26231835276098747;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1262920706744947;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12082237818004006;  // std dev = 0.074, 723.000 (wgt'ed) examples reached here.  /* #neg=719 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( teamplaysagainstteam(F, A), teamalsoknownas(F, D) )
%   | | | then return 0.5319520357891765;  // std dev = 1.716, 111.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=108 */
%   | | | else return 0.5625402296166846;  // std dev = 0.196, 186.000 (wgt'ed) examples reached here.  /* #pos=186 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(G, H) )
%   | | | then return 0.44899931358234;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.5365974767372954;  // std dev = 1.390, 67.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | else if ( teamplaysinleague(A, I), athleteplaysforteam(J, A) )
%   | | then if ( athleteplaysinleague(C, K) )
%   | | | then return 0.22952758983816068;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1129607781822844;  // std dev = 0.000430, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return 0.5239882657722978;  // std dev = 0.741, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.6271796258354024;  // std dev = 0.409, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10988181773973052;  // std dev = 0.060, 771.000 (wgt'ed) examples reached here.  /* #neg=768 #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(E, D), athleteledsportsteam(C, E) )
%   | | then if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | | then return 0.4206892640358163;  // std dev = 0.026, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0.028708258472418;  // std dev = 1.541, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( athleteledsportsteam(G, A), athleteplaysforteam(G, A) )
%   | | | then return 0.38582096730439325;  // std dev = 1.412, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | | else return 0.4169096220143918;  // std dev = 1.919, 262.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=258 */
%   | else if ( teamplaysagainstteam(H, A), recursion_teamplayssport(H, B) )
%   | | then return 0.4282615841256479;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.24221062852743888;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2705217637327463;  // std dev = 1.036, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.10117680043985594;  // std dev = 0.963, 585.000 (wgt'ed) examples reached here.  /* #neg=584 #pos=1 */
%   | else return -0.09230440827484082;  // std dev = 0.108, 159.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamalsoknownas(E, F) )
%   | then return 0.3407201609293971;  // std dev = 0.231, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else if ( athleteledsportsteam(C, G) )
%   | | then if ( teamalsoknownas(A, H), athleteledsportsteam(I, A) )
%   | | | then return 0.23704092992823464;  // std dev = 0.768, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3242141972184596;  // std dev = 1.450, 298.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=296 */
%   | | else if ( athleteledsportsteam(J, A) )
%   | | | then return 0.11203929834960726;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3121052924184313;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | then if ( athleteledsportsteam(L, K) )
%   | | then return -0.09538653374326513;  // std dev = 0.069, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( athleteplaysinleague(L, M), teamplaysinleague(A, M) )
%   | | | then return -0.09316166011744548;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14864013376971638;  // std dev = 1.112, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.09039651052363624;  // std dev = 0.068, 731.000 (wgt'ed) examples reached here.  /* #neg=727 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), recursion_teamplayssport(D, B) )
%   | then return 0.2630006136876388;  // std dev = 0.260, 218.000 (wgt'ed) examples reached here.  /* #pos=218 */
%   | else if ( athleteplaysinleague(C, E) )
%   | | then if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | | then return 0.13308875247728674;  // std dev = 1.313, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.2549734033797974;  // std dev = 1.373, 163.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=161 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.14805457113518422;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4991735653661545;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | then return -0.08626950034439633;  // std dev = 0.012, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(L, A) )
%   | | then if ( teamalsoknownas(K, L), athleteplaysforteam(M, K) )
%   | | | then return 0.07888747583260848;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08576490048106229;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08501793234398701;  // std dev = 0.048, 428.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, F) )
%   | | then if ( teamplaysagainstteam(A, H), athleteplayssport(E, B) )
%   | | | then return 0.2111781405473818;  // std dev = 1.022, 203.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=202 */
%   | | | else return 0.10833901573582222;  // std dev = 1.394, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0.22185381734571383;  // std dev = 0.038, 155.000 (wgt'ed) examples reached here.  /* #pos=155 */
%   | else if ( athleteplaysinleague(C, I), teamplaysagainstteam(J, A) )
%   | | then return 0.22118279513445283;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | | | then return 0.2819652688691442;  // std dev = 0.523, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09831085414983971;  // std dev = 1.130, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( teamplaysagainstteam(A, M), teamalsoknownas(N, A) )
%   | then if ( teamalsoknownas(P, M) )
%   | | then return -0.07956950369708878;  // std dev = 0.018, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.004834058125119393;  // std dev = 0.311, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return -0.07877944967336023;  // std dev = 0.037, 710.000 (wgt'ed) examples reached here.  /* #neg=709 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), athleteplaysforteam(E, A) )
%   | then if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | | then if ( teamalsoknownas(F, D) )
%   | | | then return 0.1934797500405513;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.06637851966007141;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18363103496701638;  // std dev = 0.159, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysinleague(A, I) )
%   | | then if ( athleteplaysinleague(C, I) )
%   | | | then return 0.18036480568501467;  // std dev = 0.125, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.04046607588268695;  // std dev = 1.740, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | | | then return 0.36506818809825575;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15785244394533499;  // std dev = 2.273, 183.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=176 */
%   else if ( teamalsoknownas(L, A), teamplaysagainstteam(A, M) )
%   | then return -0.05780395072234868;  // std dev = 0.138, 88.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=2 */
%   | else return -0.07328384995433516;  // std dev = 0.037, 748.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then return 0.1541164975554069;  // std dev = 0.056, 244.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=243 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | | then return 0.15858072190616151;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15131780649500293;  // std dev = 1.388, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.15856968516976463;  // std dev = 0.089, 111.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=110 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.0701046161797603;  // std dev = 0.077, 653.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=11 */
%   | else if ( athleteplayssport(J, B) )
%   | | then if ( teamalsoknownas(A, K), teamalsoknownas(K, A) )
%   | | | then return -0.3026240155876018;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25530819383901243;  // std dev = 0.572, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysagainstteam(L, A), teamalsoknownas(M, A) )
%   | | | then return 0.01996230044719019;  // std dev = 0.880, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.06540987591776411;  // std dev = 0.997, 181.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamplaysagainstteam(E, A) )
%   | | then if ( recursion_teamplayssport(E, B) )
%   | | | then return 0.12699405767492955;  // std dev = 1.399, 187.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=185 */
%   | | | else return -0.0025935459940328977;  // std dev = 1.375, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | | then return 0.15520669955288913;  // std dev = 0.346, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return 0.13655116658947045;  // std dev = 1.065, 128.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=127 */
%   | else if ( teamplaysagainstteam(H, A), recursion_teamplayssport(H, B) )
%   | | then return 0.16650977113763937;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.2031326178248359;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.34698777000228337;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamalsoknownas(J, A), teamalsoknownas(K, J) )
%   | then return -0.0551872284454666;  // std dev = 0.114, 131.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=2 */
%   | else return -0.06381066952331846;  // std dev = 0.039, 653.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=1 */


Starting fold 1

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 260

Target test facts examples: 5307
Target test pos	 examples: 518
Target test neg examples: 518

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5630669678863977;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.045648935099512344;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.28295655462953906;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.4991676440077361;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   else return 0.013877801011027766;  // std dev = 0.363, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.6590120118142914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5634766211534843;  // std dev = 1.647, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.1707244144117682;  // std dev = 1.272, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.12697507889775203;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1596061652751272;  // std dev = 0.456, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4349027483642937;  // std dev = 1.657, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.1706727147660345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11610886106523294;  // std dev = 3.905, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1624855112333379;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2672740026854396;  // std dev = 3.199, 55.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.022559770497008424;  // std dev = 2.176, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.18987862654660975;  // std dev = 0.435, 66.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   | | else return -0.019271126655440583;  // std dev = 0.353, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.2348028221399456;  // std dev = 1.664, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return 0.03574471051783776;  // std dev = 3.781, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.18447402577333166;  // std dev = 0.327, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.46982767791854285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10173236891615389;  // std dev = 1.163, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.04594314727437835;  // std dev = 0.439, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14802904086865004;  // std dev = 0.327, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( companyalsoknownas(A, F) )
%   | then return -0.050369029615808886;  // std dev = 1.239, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.036581967477246055;  // std dev = 0.438, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.043186393645802096;  // std dev = 4.128, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.815997
   AUC PR    = 0.830851
   CLL	      = -0.532247
   Precision = 0.731794 at threshold = 0.5
   Recall    = 0.795367
   F1        = 0.762257


Total learning time: 3.828 seconds
Total inference time: 3.798 seconds
AUC ROC: 0.815997


Results scoring model
   AUC ROC   = 0.841346
   AUC PR    = 0.847848
   CLL	      = -0.504681
   Precision = 0.733333 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.785714


Total scoring time: 1.816 seconds
Parameter learned model CLL: -0.504681


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,false': 'companyalsoknownas(A, G), acquired(G, H)', 'false': 'companyalsoknownas(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.816, 2, 1], 'true,false,false,false': [3.562, 18, 43], 'false,true': [0.0, 6, 0], 'false,false': [0.39, 26, 6]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.359, 4, 4], 'true,false,false': [3.404, 16, 42], 'false': [0.363, 32, 6]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [1.647, 3, 22], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [1.272, 4, 3], 'true,false,true,false': [0.0, 6, 0], 'true,false,false': [0.456, 39, 26], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.657, 3, 23], 'true,false,true': [0.0, 1, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.905, 48, 29], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.477, 3, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.199, 17, 38], 'false,true': [2.176, 32, 6], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.435, 20, 46], 'true,false,false': [0.353, 32, 6], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [1.664, 3, 23], 'true,true,false': [3.781, 49, 29], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.327, 3, 23], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [1.163, 10, 2], 'true,false,false': [0.439, 39, 26], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.327, 3, 23], 'false,true': [1.239, 10, 3], 'false,false,true': [0.438, 39, 26], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.128, 52, 52], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.21120293847566604, 0.1329639889196678], 'true': [0.0, 0.2148437500000004], 'true,false': [nan, 0.2148437500000004], 'true,false,false': [0.22222222222222224, 0.20800859983875358], 'false': [-6.938893903907228e-18, 0.1523437500000002]}, {'': [0.2085058990292583, 0.13192898783906362], 'true': [nan, 0.2085058990292583], 'true,false': [0.23081690128807691, 0.19976218787158084]}, {'': [0.21050776913910305, nan], 'true': [0.10460534057112564, 0.19988584301587226], 'true,false': [0.14652288729669127, 0.20790059723680962], 'true,false,true': [0.23121009278942337, 0.0], 'true,true': [0.0, 0.10843851531440478], 'true,true,false': [0.10843851531440478, nan]}, {'': [0.19329071944817416, nan], 'true': [0.10554977293626111, 0.19654088381764045], 'true,false': [0.0, 0.1980389567739481], 'true,false,false': [nan, 0.1980389567739481], 'true,true': [nan, 0.10554977293626111]}, {'': [0.18963073425034177, 0.12464133639364956], 'true': [0.1983471074380166, 0.18605735495600564], 'true,true': [nan, 0.1983471074380166], 'true,false': [nan, 0.18605735495600564], 'false': [0.12464133639364956, nan]}, {'': [0.1755392703481805, nan], 'true': [nan, 0.1755392703481805], 'true,false': [0.18880888856899336, 0.12473166493750998]}, {'': [0.17152060760577392, nan], 'true': [0.17152060760577392, nan], 'true,true': [0.10653224097826769, 0.18327736353096905]}, {'': [0.16847436379779052, nan], 'true': [0.10670214111362772, 0.1829954660209272], 'true,false': [0.127193483040691, 0.19236325743520502], 'true,false,true': [0.0, 0.11266364095015775], 'true,true': [0.10670214111362772, nan]}, {'': [0.1066663973106898, 0.180786697355635], 'false': [0.11808692382469688, 0.19206657274590994], 'false,false': [0.19206657274590994, nan], 'true': [nan, 0.1066663973106898]}, {'': [0.1638848533229509, nan], 'true': [nan, 0.1638848533229509], 'true,false': [0.1638848533229509, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;false;companyalsoknownas(A, I).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;true;companyalsoknownas(A, E).;true;true
2;false;companyalsoknownas(A, H).;true;true
2;false,true;acquired(I, C).;true;true
3;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
3;false;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(F, A), acquired(G, F) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5939979917032852;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=39 */
%   else if ( companyalsoknownas(A, H) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(J, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then return -0.13922792860841146;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( countryhascompanyoffice(E, A), acquired(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.565109939036415;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.022463432811367774;  // std dev = 0.803, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return 0.05866428035368693;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.4002727453394728;  // std dev = 4.082, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( acquired(A, F), companyceo(A, G) )
%   | | then return 0.37062683187565176;  // std dev = 0.997, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( companyalsoknownas(A, H), cityhascompanyoffice(I, H) )
%   | | | then return 0.10614712532978858;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1345573526926028;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.5090243061787759;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1535718639059539;  // std dev = 0.122, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.31021473821923146;  // std dev = 0.470, 77.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | then if ( companyalsoknownas(E, G) )
%   | | then return 0.6530449960284096;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18373850739509387;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | | then return 0.3893776780002225;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03422946828848785;  // std dev = 1.089, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return -0.009063184779736997;  // std dev = 0.633, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21643639256351768;  // std dev = 4.065, 78.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( companyalsoknownas(C, D), economicsectorcompany(B, D) )
%   | then return 0.5324853540007808;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14594459358980527;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.3684673195238549;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16363030041927626;  // std dev = 0.122, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( acquired(G, A), countryhascompanyoffice(H, A) )
%   | | then return -0.16526510682800502;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(I, A), acquired(J, I) )
%   | | | then return 0.32924936152654094;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20514334507363663;  // std dev = 3.912, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), acquired(D, A) )
%   then return -0.14374271165478086;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( countryhascompanyoffice(G, A) )
%   | | | then return -0.0742122477172979;  // std dev = 0.665, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4827627536075722;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.15180439371185356;  // std dev = 0.140, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(A, I) )
%   | | | then return 0.04765757145482802;  // std dev = 0.379, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11143260586308647;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.09473378945404903;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16461862224215973;  // std dev = 3.897, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, C) )
%   then return 0.2313243367662782;  // std dev = 0.632, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( acquired(E, A), countryhascompanyoffice(F, E) )
%   | then return -0.08080213180950982;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( companyceo(G, H), companyceo(A, I) )
%   | | | then return -0.1704365550580067;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.025106646687526463;  // std dev = 0.600, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( acquired(J, A), acquired(K, J) )
%   | | | then return 0.22724392845905353;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.093163689749619;  // std dev = 3.986, 78.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=43 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( countryhascompanyoffice(E, A), acquired(F, A) )
%   | then return -0.11828643411001634;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.19090077800433813;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.14555192151151503;  // std dev = 0.121, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.027030228957427342;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08710824938192739;  // std dev = 3.910, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.02324732654342715;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.33460566226181837;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | then return 0.1792425237619291;  // std dev = 0.554, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | | then return -0.2687651067254299;  // std dev = 0.334, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyalsoknownas(A, J) )
%   | | | then return -0.0756230904491029;  // std dev = 0.381, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.05483533843371489;  // std dev = 3.926, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then return 0.19060255820053426;  // std dev = 0.396, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | then if ( acquired(G, E) )
%   | | then return 0.018240612556183637;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2666787044735562;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.19071740599111717;  // std dev = 0.728, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.12662142173491006;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.026997042880203527;  // std dev = 0.438, 79.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=40 */


Results
   AUC ROC   = 0.760815
   AUC PR    = 0.736525
   CLL	      = -0.60468
   Precision = 0.729128 at threshold = 0.5
   Recall    = 0.758687
   F1        = 0.743614


Total learning time: 11.346 seconds
Total inference time: 3.624 seconds
AUC ROC: 0.760815


Results scoring model
   AUC ROC   = 0.877959
   AUC PR    = 0.866343
   CLL	      = -0.495352
   Precision = 0.775862 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.818182


Total scoring time: 1.46 seconds
Refined model CLL: -0.495352


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.760815
   AUC PR    = 0.736525
   CLL	      = -0.60468
   Precision = 0.729128 at threshold = 0.5
   Recall    = 0.758687
   F1        = 0.743614


Total learning time: 18.450000000000003 seconds
Total inference time: 3.624 seconds
AUC ROC: 0.760815
Total revision time: 18.450000000000003
Best scored revision CLL: -0.495352


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:13:36
{'AUC ROC': 0.760815, 'AUC PR': 0.736525, 'CLL': -0.60468, 'Precision': [0.729128, 0.5], 'Recall': 0.758687, 'F1': 0.743614, 'Learning time': 18.450000000000003, 'Inference time': 3.624, 'parameter_0.2': {'AUC ROC': 0.815997, 'AUC PR': 0.830851, 'CLL': -0.532247, 'Precision': [0.731794, 0.5], 'Recall': 0.795367, 'F1': 0.762257, 'Learning time': 3.828, 'Inference time': 3.798}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, G), acquired(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5223825117418465;  // std dev = 5.528, 137.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=91 */
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.06153876560798695;  // std dev = 0.403, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.34641525224948677;  // std dev = 1.947, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0.4568406952752836;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=83 */
%   else return 0.02789206660613411;  // std dev = 0.378, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.38398579611511235;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5353102977232462;  // std dev = 2.426, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(C, I) )
%   | | | then return 0.2589616410110836;  // std dev = 1.749, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.128536732238525;  // std dev = 9.13e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.17989413655978193;  // std dev = 0.470, 138.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4046691069823013;  // std dev = 2.567, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.17789494212940857;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14106540131578132;  // std dev = 5.808, 158.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=65 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.42230340601798916;  // std dev = 1.385, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16241846253443457;  // std dev = 5.037, 100.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=55 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.013475932598142013;  // std dev = 3.109, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(C, E) )
%   | | then return 0.1786046320860507;  // std dev = 0.452, 139.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=92 */
%   | | else return -0.01144113765681799;  // std dev = 0.374, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.17120122742610044;  // std dev = 2.461, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | else return 0.06301209123145597;  // std dev = 5.706, 161.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.1339403772847116;  // std dev = 0.360, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(C, G) )
%   | | | then return 0.4480317526064399;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03662984930361726;  // std dev = 1.744, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.060871652795701114;  // std dev = 0.459, 138.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10644776914549461;  // std dev = 0.361, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   else if ( companyalsoknownas(A, F) )
%   | then return -0.013666854928968826;  // std dev = 1.784, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.047882720353935315;  // std dev = 0.459, 138.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.04305513612981483;  // std dev = 6.206, 208.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.769503
   AUC PR    = 0.76963
   CLL	      = -0.568294
   Precision = 0.644275 at threshold = 0.5
   Recall    = 0.814672
   F1        = 0.719523


Total learning time: 5.725 seconds
Total inference time: 3.533 seconds
AUC ROC: 0.769503


Results scoring model
   AUC ROC   = 0.789109
   AUC PR    = 0.789973
   CLL	      = -0.553274
   Precision = 0.677165 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.744589


Total scoring time: 1.791 seconds
Parameter learned model CLL: -0.553274


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,false': 'companyalsoknownas(A, G), acquired(H, G)', 'false': 'companyalsoknownas(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 1, 0], 'true,false,false,false': [5.528, 46, 91], 'false,true': [0.0, 10, 0], 'false,false': [0.403, 47, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.947, 7, 9], 'true,false,false': [5.195, 40, 83], 'false': [0.378, 57, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(C, I)'}, {'true,true,true': [0.471, 1, 2], 'true,true,false,true': [2.426, 7, 37], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [1.749, 6, 7], 'true,false,true,false': [9.13e-09, 10, 0], 'true,false,false': [0.47, 80, 58], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.567, 8, 39], 'true,false,true': [0.0, 3, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.808, 93, 65], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.385, 2, 37], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.037, 45, 55], 'false,true': [3.109, 57, 12], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.452, 47, 92], 'true,false,false': [0.374, 57, 12], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [2.461, 8, 39], 'true,true,false': [5.706, 96, 65], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(C, G)'}, {'true,true,true': [0.36, 8, 39], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [1.744, 16, 6], 'true,false,false': [0.459, 80, 58], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.361, 8, 39], 'false,true': [1.784, 16, 7], 'false,false,true': [0.459, 80, 58], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.206, 104, 104], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.22379794006521633, 0.14366729678638887], 'true': [0.0, 0.22458517118252694], 'true,false': [nan, 0.22458517118252694], 'true,false,false': [0.0, 0.22302733230326766], 'false': [-1.1102230246251566e-17, 0.16202240735420803]}, {'': [0.22270219866004295, 0.14252600838802315], 'true': [nan, 0.22270219866004295], 'true,false': [0.23694330287211965, 0.21944609689999073]}, {'': [0.22050216921944427, nan], 'true': [0.14079452515812585, 0.21472491200720348], 'true,false': [0.16989943056470522, 0.22105380316860856], 'true,false,true': [0.23530652228590968, 8.326672684688674e-18], 'true,true': [0.22222222222222218, 0.13378099173553631], 'true,true,false': [0.13378099173553631, nan]}, {'': [0.20801291652718903, nan], 'true': [0.14017092295845054, 0.21140034623915466], 'true,false': [-9.25185853854297e-18, 0.21351858057778714], 'true,false,false': [nan, 0.21351858057778714], 'true,true': [nan, 0.14017092295845054]}, {'': [0.20994565118491362, 0.14011221064070936], 'true': [0.04920360629599145, 0.25368492516548846], 'true,false': [nan, 0.25368492516548846], 'false': [0.14011221064070936, nan], 'true,true': [nan, 0.04920360629599145]}, {'': [0.19088069429916327, nan], 'true': [nan, 0.19088069429916327], 'true,false': [0.20408810360815452, 0.14013832044723537]}, {'': [0.18768423345145388, nan], 'true': [0.18768423345145388, nan], 'true,true': [0.1289143479466215, 0.20219580488571065]}, {'': [0.1866677145446583, nan], 'true': [0.12949989295761635, 0.20176255912748367], 'true,false': [0.14198525775495927, 0.21089095246661826], 'true,false,true': [0.0, 0.13822622578719557], 'true,true': [0.12949989295761635, nan]}, {'': [0.13003482246032413, 0.20076413955948005], 'false': [0.13840337038800002, 0.21061640819984503], 'false,false': [0.21061640819984503, nan], 'true': [nan, 0.13003482246032413]}, {'': [0.18517512813156028, nan], 'true': [nan, 0.18517512813156028], 'true,false': [0.18517512813156028, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;companyalsoknownas(A, G), acquired(H, G).;true;true
0;false;companyalsoknownas(A, I).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;false;companyalsoknownas(A, H).;true;true
2;false,true;acquired(C, I).;true;true
3;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
3;false;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E), acquired(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( cityhascompanyoffice(G, A), countryhascompanyoffice(H, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.53507201202259;  // std dev = 5.332, 130.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   else if ( companyalsoknownas(A, I) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( acquired(J, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(A, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( companyceo(E, F) )
%   | | then return 0.7968761840481235;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.45976442467681333;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.15240063198371118;  // std dev = 0.106, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.7798732668772278;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(H, A) )
%   | | then if ( companyalsoknownas(H, I), cityhascompanyoffice(J, I) )
%   | | | then return 0.36779329594397303;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03977544982934495;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.25587840951979945;  // std dev = 1.994, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3351897024719489;  // std dev = 5.806, 143.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=76 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( countryhascompanyoffice(F, E) )
%   | | then return -0.1859814522722559;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(E, G) )
%   | | | then return 0.3699227461076073;  // std dev = 1.337, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.03412903871450271;  // std dev = 1.283, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( countryhascompanyoffice(H, A), bankbankincountry(I, H) )
%   | | then if ( countryhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.5474360507749991;  // std dev = 0.860, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1385848157494401;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( acquired(K, A), acquired(A, L) )
%   | | | then return -0.006900905159636192;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.286829096481186;  // std dev = 6.053, 159.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | then return -0.15992317115644966;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.434274664205634;  // std dev = 0.863, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12447236774577958;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.287391228330634;  // std dev = 2.134, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.2073855561266351;  // std dev = 5.979, 157.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return -0.1399108988712115;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1104922269095934;  // std dev = 0.406, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.5109524255449653;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return -0.27659718680103845;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06798364391042505;  // std dev = 1.699, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( companyceo(A, G) )
%   | | then if ( acquired(A, H) )
%   | | | then return 0.2110582794866454;  // std dev = 1.334, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5697726939605271;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.07592246101448098;  // std dev = 1.101, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.17770255872195095;  // std dev = 5.534, 132.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=71 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), countryhascompanyoffice(D, C) )
%   then return -0.12413697242370043;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.41137418927767333;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(F, A) )
%   | | then if ( cityhascompanyoffice(G, A) )
%   | | | then return -0.22647199001551024;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08172132457432008;  // std dev = 1.756, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.04156429266332597;  // std dev = 1.729, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.13689958663588944;  // std dev = 5.818, 158.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=85 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), countryhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(D, E), bankchiefexecutiveceo(E, F) )
%   | then return 0.15804286898311035;  // std dev = 0.581, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.2108702747589173;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.31781032652383645;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, H) )
%   | | then return -0.13374741061692366;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.09834397391811775;  // std dev = 2.710, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.09126563455560012;  // std dev = 5.653, 155.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=78 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | then if ( cityhascompanyoffice(G, A), acquired(H, E) )
%   | | then return -0.0950187819883875;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.36905156715069226;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12812767267147385;  // std dev = 1.378, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyceo(J, K) )
%   | | | then return 0.04400722341963291;  // std dev = 0.830, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.18138547221025833;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return -0.006127378420862606;  // std dev = 1.724, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.08324195915221629;  // std dev = 5.792, 158.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( cityhascompanyoffice(E, A), cityhascompanyoffice(E, C) )
%   | then return -0.14695575881918357;  // std dev = 0.205, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(C, F), economicsectorcompany(B, F) )
%   | | then return 0.5035946958226903;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.24131605634661646;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( countryhascompanyoffice(G, A), bankbankincountry(H, G) )
%   | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.01776623852793095;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3174441011265865;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14389629100643775;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( companyceo(A, K), cityhascompanyoffice(L, A) )
%   | | then return 0.18067663952325405;  // std dev = 0.861, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.025278903353512003;  // std dev = 2.353, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.050194012973402806;  // std dev = 5.511, 142.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=73 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), countryhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(D, E), bankchiefexecutiveceo(E, F) )
%   | then return 0.1061345677090576;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.1848474916397379;  // std dev = 0.377, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( companyalsoknownas(A, G) )
%   | then if ( companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.3992016862882756;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2359853497315544;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.1690428972796881;  // std dev = 0.359, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17991820505889194;  // std dev = 0.883, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( acquired(K, A), acquired(A, L) )
%   | | then return -0.11920519363043142;  // std dev = 0.405, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.06074729840156283;  // std dev = 2.467, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.049977445810347784;  // std dev = 5.422, 144.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=76 */


Results
   AUC ROC   = 0.735954
   AUC PR    = 0.728983
   CLL	      = -0.613754
   Precision = 0.670927 at threshold = 0.5
   Recall    = 0.810811
   F1        = 0.734266


Total learning time: 151.64600000000002 seconds
Total inference time: 13.323 seconds
AUC ROC: 0.735954


Results scoring model
   AUC ROC   = 0.848049
   AUC PR    = 0.841021
   CLL	      = -0.546896
   Precision = 0.747899 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.798206


Total scoring time: 5.106 seconds
Refined model CLL: -0.546896


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.735954
   AUC PR    = 0.728983
   CLL	      = -0.613754
   Precision = 0.670927 at threshold = 0.5
   Recall    = 0.810811
   F1        = 0.734266


Total learning time: 164.268 seconds
Total inference time: 13.323 seconds
AUC ROC: 0.735954
Total revision time: 164.268
Best scored revision CLL: -0.546896


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:16:37
{'AUC ROC': 0.735954, 'AUC PR': 0.728983, 'CLL': -0.613754, 'Precision': [0.670927, 0.5], 'Recall': 0.810811, 'F1': 0.734266, 'Learning time': 164.268, 'Inference time': 13.323, 'parameter_0.4': {'AUC ROC': 0.769503, 'AUC PR': 0.76963, 'CLL': -0.568294, 'Precision': [0.644275, 0.5], 'Recall': 0.814672, 'F1': 0.719523, 'Learning time': 5.725, 'Inference time': 3.533}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, H), bankchiefexecutiveceo(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6668445872734242;  // std dev = 4.218, 115.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=93 */
%   else if ( companyceo(A, J) )
%   | then return 0.21926004621062345;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( companyalsoknownas(A, K), acquired(A, L) )
%   | | then if ( companyalsoknownas(K, A), acquired(K, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1613747415511249;  // std dev = 5.723, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.5678848696975242;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.5691595590742354;  // std dev = 4.031, 107.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=87 */
%   else if ( acquired(I, A), companyalsoknownas(A, J) )
%   | then if ( acquired(K, J) )
%   | | then return 0.3333285386242389;  // std dev = 0.701, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( acquired(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1451648971357822;  // std dev = 6.381, 191.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=59 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyalsoknownas(F, A), acquired(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21956949870621584;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( acquired(A, G), companyceo(G, H) )
%   | | | then return 0.6373765986465715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5226478457592368;  // std dev = 2.613, 67.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankchiefexecutiveceo(C, J) )
%   | | | then return 0.6376711630105839;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16802079249792035;  // std dev = 2.875, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.3271171798467428;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1454129432203084;  // std dev = 6.308, 186.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E), bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, F), recursion_economicsectorcompany(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2750124176093119;  // std dev = 2.427, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.2129329937869562;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19255404980530455;  // std dev = 7.488, 275.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=131 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(A, E), acquired(E, F) )
%   | then return -0.02409453270675127;  // std dev = 0.648, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( bankboughtbank(C, G) )
%   | | then if ( acquired(A, H), bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2533622807213469;  // std dev = 2.363, 36.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33199174118555674;  // std dev = 3.261, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   else if ( acquired(K, A) )
%   | then if ( bankboughtbank(L, K) )
%   | | then return -0.23948712779445847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( bankchiefexecutiveceo(L, M), companyceo(A, M) )
%   | | | then return -0.1853538331403208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06120038179668705;  // std dev = 2.182, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return 0.07099511886085651;  // std dev = 6.002, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, A), recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(C, E) )
%   | | then if ( companyalsoknownas(F, A), acquired(F, G) )
%   | | | then return 0.09200995122044812;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23151548132045183;  // std dev = 4.025, 115.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=94 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.03401089134179697;  // std dev = 2.632, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.05866912621127657;  // std dev = 5.825, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(F, A) )
%   | | then if ( companyalsoknownas(A, G), economicsectorcompany(B, D) )
%   | | | then return 0.15532484055106682;  // std dev = 0.809, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.047688099145762136;  // std dev = 2.790, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else return 0.09873690949173622;  // std dev = 7.102, 268.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=138 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(E, A), bankboughtbank(F, E) )
%   | | then if ( acquired(E, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30634154047543793;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18152189433425525;  // std dev = 2.833, 72.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=62 */
%   | else if ( companyalsoknownas(A, G), companyceo(A, H) )
%   | | then if ( bankchiefexecutiveceo(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10747792151886136;  // std dev = 2.124, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.026736486571834393;  // std dev = 2.200, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.03485980966712223;  // std dev = 6.345, 190.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E), companyceo(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.082866545338358;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14988577192552147;  // std dev = 2.713, 68.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=59 */
%   else if ( companyceo(A, G) )
%   | then return 0.09238641733297298;  // std dev = 2.901, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( acquired(A, I), acquired(I, A) )
%   | | | then return -0.201332231285641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.020037737680716657;  // std dev = 6.404, 196.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=74 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then if ( recursion_economicsectorcompany(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.01723853845204816;  // std dev = 2.892, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | else if ( acquired(A, E), companyceo(E, F) )
%   | | then return 0.36172226766543764;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( companyalsoknownas(G, A), recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.044314836993434345;  // std dev = 6.951, 262.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=133 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.765943
   AUC PR    = 0.791139
   CLL	      = -0.561874
   Precision = 0.824289 at threshold = 0.5
   Recall    = 0.61583
   F1        = 0.704972


Total learning time: 148.436 seconds
Total inference time: 37.677 seconds
AUC ROC: 0.765943


Results scoring model
   AUC ROC   = 0.776011
   AUC PR    = 0.776831
   CLL	      = -0.558739
   Precision = 0.813559 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.70073


Total scoring time: 11.255 seconds
Parameter learned model CLL: -0.558739


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyceo(A, H), bankchiefexecutiveceo(I, H)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(A, K), acquired(A, L)', 'false,false,true': 'companyalsoknownas(K, A), acquired(K, L)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [4.218, 22, 93], 'false,true': [2.882, 23, 13], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'false,false,false': [5.723, 108, 47]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(G, F)', 'true,false,false': 'companyceo(A, H)', 'false': 'acquired(I, A), companyalsoknownas(A, J)', 'false,true': 'acquired(K, J)', 'false,true,false': 'acquired(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.27, 2, 9], 'true,false,false,false': [4.031, 20, 87], 'false,true,true': [0.701, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false': [6.381, 132, 59]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyceo(A, E)', 'true,true,true': 'companyalsoknownas(F, A), acquired(F, D)', 'true,true,false': 'acquired(A, G), companyceo(G, H)', 'true,false': 'companyceo(A, I)', 'true,false,true': 'bankchiefexecutiveceo(C, J)', 'true,false,false': 'acquired(A, K)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [1.063, 2, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.613, 8, 59], 'true,false,true,true': [2.98e-08, 0, 6], 'true,false,true,false': [2.875, 23, 13], 'true,false,false,true': [1.588, 5, 6], 'true,false,false,false': [6.308, 118, 68], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E), bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, F), recursion_economicsectorcompany(B, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.427, 8, 25], 'true,false,true': [0.013, 4, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.488, 144, 131], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'acquired(A, E), acquired(E, F)', 'true,false': 'bankboughtbank(C, G)', 'true,false,true': 'acquired(A, H), bankboughtbank(I, A)', 'true,false,false': 'bankboughtbank(J, A)', 'false': 'acquired(K, A)', 'false,true': 'bankboughtbank(L, K)', 'false,true,false': 'bankchiefexecutiveceo(L, M), companyceo(A, M)'}, {'true,true': [0.648, 1, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.363, 7, 29], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.261, 14, 66], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [2.182, 16, 7], 'false,false': [6.002, 116, 53]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, A), recursion_economicsectorcompany(B, D)', 'true,false': 'bankchiefexecutiveceo(C, E)', 'true,false,true': 'companyalsoknownas(F, A), acquired(F, G)', 'true,false,false': 'companyalsoknownas(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.782, 1, 2], 'true,false,true,false': [4.025, 21, 94], 'true,false,false,true': [2.632, 24, 10], 'true,false,false,false': [5.825, 110, 50], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(F, A)', 'true,true,true': 'companyalsoknownas(A, G), economicsectorcompany(B, D)'}, {'true,true,true,true': [0.809, 1, 4], 'true,true,true,false': [2.79, 25, 14], 'true,true,false': [7.102, 130, 138], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(E, A), bankboughtbank(F, E)', 'true,true,true': 'acquired(E, D)', 'true,false': 'companyalsoknownas(A, G), companyceo(A, H)', 'true,false,true': 'bankchiefexecutiveceo(C, H)', 'true,false,false': 'acquired(I, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [2.833, 10, 62], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.124, 12, 9], 'true,false,false,true': [2.2, 18, 10], 'true,false,false,false': [6.345, 116, 74], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyceo(A, E), companyceo(D, E)', 'true,false': 'companyalsoknownas(A, F)', 'false': 'companyceo(A, G)', 'false,false': 'economicsectorcompany(B, H)', 'false,false,true': 'acquired(A, I), acquired(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.818, 1, 4], 'true,false,false': [2.713, 9, 59], 'false,true': [2.901, 23, 19], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [6.404, 122, 74], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'true,true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(A, E), companyceo(E, F)', 'true,false,false': 'companyalsoknownas(G, A), recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.892, 26, 18], 'true,false,true': [0.885, 1, 5], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.951, 129, 133], 'false': [0.0, 0, 0]}]]
[{'': [0.15168055156564425, 0.21362525241789806], 'false': [0.23070987654320937, 0.20898093254286268], 'false,false': [0.0, 0.21127991675338287], 'true': [0.0, 0.1526773321645137], 'true,false': [0.0, 0.1536860879904895], 'true,false,false': [0.0, 0.15470699432892365], 'false,false,true': [nan, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.15136411325726254, 0.21314727417055152], 'false': [0.21076967537457025, 0.21316541548914328], 'false,true': [0.24599690370361582, 0.0], 'true': [nan, 0.15136411325726218], 'true,false': [nan, 0.15136411325726218], 'true,false,false': [0.14652060501888506, 0.15186189254325644], 'false,true,false': [nan, 0.0]}, {'': [0.21446428415811417, nan], 'true': [0.1150899910591073, 0.21872813074722047], 'true,false': [0.2238416027856559, 0.2165257445767332], 'true,false,true': [1.4802973661668753e-16, 0.22963832650859642], 'true,false,false': [0.22917992533172862, 0.21393382206502443], 'true,true': [0.22601017393238743, 0.10057231230910363], 'true,true,true': [nan, 0.22601017393238743], 'true,true,false': [0.0, 0.10187982267466557]}, {'': [0.2014038899746409, nan], 'true': [0.17855926385159263, 0.203281798088889], 'true,false': [4.547095396616879e-05, 0.20388069055300456], 'true,false,false': [nan, 0.20388069055300564], 'true,true': [nan, 0.17855926385159263]}, {'': [0.14416273340071398, 0.2110527680678798], 'false': [0.19600095836279657, 0.2131499983755388], 'false,true': [0.0, 0.20079404361016964], 'false,true,false': [0.0, 0.20699134521500734], 'true': [0.20998450774364819, 0.1411632261694036], 'true,false': [0.15516508104034224, 0.13294365601279065], 'true,false,true': [nan, 0.15516508104034224], 'true,false,false': [nan, 0.13294365601279065]}, {'': [0.19217647706694485, nan], 'true': [nan, 0.19217647706694485], 'true,false': [0.14294054390227687, 0.21072337617493123], 'true,false,false': [0.20382463504778803, 0.21208279696035587], 'true,false,true': [0.2038080231366811, 0.14085790527226164]}, {'': [0.18906074817880442, nan], 'true': [0.18906074817880442, nan], 'true,true': [0.19298620427113794, 0.18820377462173185], 'true,true,true': [0.13103876538769885, 0.19961163042194688]}, {'': [0.1887849745915111, nan], 'true': [0.11014667201490272, 0.20802347969772722], 'true,false': [0.21481449493205051, 0.20689253669854674], 'true,false,true': [nan, 0.21481449493205051], 'true,false,false': [0.17281470305230512, 0.21190605766438717], 'true,true': [0.0, 0.1114630630127272], 'true,true,true': [nan, 0.0]}, {'': [0.11030345113067687, 0.2078012227111398], 'false': [0.20034359070517826, 0.20844253857223113], 'false,false': [0.20844253857223113, nan], 'false,false,true': [0.0, 0.20925726627655478], 'true': [nan, 0.11030345113067681], 'true,false': [0.13376422748190323, 0.10827075180408663]}, {'': [0.18623486592524194, nan], 'true': [0.19007196734427534, 0.1854401142104158], 'true,true': [nan, 0.19007196734427534], 'true,false': [0.13061158844358983, 0.1844401887734367], 'true,false,false': [nan, 0.18444018877343657]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
0;true;companyceo(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
0;true,false,false;companyceo(A, H), bankchiefexecutiveceo(I, H).;true;true
0;false;companyceo(A, J).;true;true
0;false,false;companyalsoknownas(A, K), acquired(A, L).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
1;false;acquired(I, A), companyalsoknownas(A, J).;true;true
1;false,true;acquired(K, J).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;true;companyceo(A, E).;true;true
2;true,false;acquired(A, G), companyceo(G, H).;true;true
2;false;companyceo(A, I).;true;true
2;false,true;bankchiefexecutiveceo(C, J).;true;true
3;;companyeconomicsector(A, B) :- acquired(D, E), bankboughtbank(C, D).;true;true
3;false;bankboughtbank(G, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
4;false;acquired(K, A).;true;true
4;false,true;bankboughtbank(L, K).;true;true
4;false,true,false;bankchiefexecutiveceo(L, M), companyceo(A, M).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;true;acquired(E, A), bankboughtbank(F, E).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankboughtbank(C, D).;true;true
8;false;companyceo(A, G).;true;true
8;false,false;acquired(A, I), acquired(I, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6684937626857177;  // std dev = 0.392, 116.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=94 */
%   else if ( companyceo(A, G) )
%   | then if ( countryhascompanyoffice(H, A) )
%   | | then return 0.039967116917694;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( companyalsoknownas(A, J), acquired(A, K) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(L, A), countryhascompanyoffice(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1673594614153011;  // std dev = 5.698, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(A, E), cityhascompanyoffice(F, A) )
%   | then return 0.25611676272719586;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5800353004374383;  // std dev = 0.380, 114.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=94 */
%   else if ( acquired(G, A), companyalsoknownas(A, H) )
%   | then if ( acquired(I, H) )
%   | | then return 0.340499241452625;  // std dev = 0.713, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14485892054887103;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=59 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyceo(A, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then if ( countryhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7286152900120075;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16587151556413457;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | | then return 0.18097013673709209;  // std dev = 1.573, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.3164646384009176;  // std dev = 2.229, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( acquired(A, J), companyceo(J, K) )
%   | | then return 0.5309373331624243;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24467004385543537;  // std dev = 0.460, 261.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=131 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D), bankboughtbank(E, C) )
%   then return 0.19937586125651757;  // std dev = 0.455, 312.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=156 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.5135045111532814;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.048383612865923485;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3487925109472092;  // std dev = 0.378, 109.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=90 */
%   else if ( acquired(F, A) )
%   | then if ( bankboughtbank(G, F) )
%   | | then return -0.2053891151356011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( bankchiefexecutiveceo(G, H), companyceo(A, H) )
%   | | | then return -0.17055915351528003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05291267902392923;  // std dev = 2.164, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else return 0.0511483087558841;  // std dev = 0.458, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), acquired(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7292504563004115;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(C, E), acquired(E, F) )
%   | | then return -0.03412443453672322;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.10881589569923722;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( acquired(A, G) )
%   | then if ( cityhascompanyoffice(H, G), companyceo(G, I) )
%   | | then return 0.5698558761380181;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(G, J), companyalsoknownas(A, K) )
%   | | | then return -0.05307613656800632;  // std dev = 1.000, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17356258944326794;  // std dev = 2.502, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return 0.10868210934637614;  // std dev = 0.437, 261.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=130 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C), economicsectorcompany(B, C) )
%   | then return 0.5650228268400073;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(E, C), companyalsoknownas(C, F) )
%   | | then if ( countryhascompanyoffice(G, F), companyceo(A, H) )
%   | | | then return -0.10459869297315129;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3489486750086453;  // std dev = 1.074, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( companyalsoknownas(C, I) )
%   | | | then return -0.15875314291868808;  // std dev = 0.620, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.009912698842206226;  // std dev = 1.593, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else if ( companyalsoknownas(A, J) )
%   | then if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.5166699293890702;  // std dev = 0.309, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, L), companyceo(L, M) )
%   | | | then return -0.23958312356122904;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.047836656155913725;  // std dev = 2.408, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return 0.10589841002448915;  // std dev = 0.441, 237.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=125 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), bankboughtbank(F, E) )
%   | then return 0.11359476875606153;  // std dev = 0.427, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.07220714165326134;  // std dev = 0.433, 310.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=155 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( countryhascompanyoffice(E, A) )
%   | then return 0.34485270698378767;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22906709848599438;  // std dev = 0.344, 65.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=55 */
%   else if ( companyceo(A, F) )
%   | then if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then return 0.4350970227227869;  // std dev = 0.243, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(H, A), cityhascompanyoffice(I, H) )
%   | | | then return 0.2729035268040702;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.030471967360998838;  // std dev = 2.458, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( acquired(A, J), acquired(J, A) )
%   | | then return -0.1762204614140767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.0054334702759541624;  // std dev = 3.004, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.023193043774242663;  // std dev = 5.530, 154.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=57 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), countryhascompanyoffice(D, A) )
%   then if ( countryhascompanyoffice(D, E), economicsectorcompany(B, E) )
%   | then if ( acquired(E, F), countryhascompanyoffice(D, F) )
%   | | then return 0.4117304784389331;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14066161942259106;  // std dev = 0.529, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.24122270043606847;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | then if ( acquired(H, I), companyceo(A, J) )
%   | | then return 0.16022660780748746;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( cityhascompanyoffice(K, H) )
%   | | | then return -0.06833338427039873;  // std dev = 1.108, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.27942146805297613;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( bankchiefexecutiveceo(A, L) )
%   | | then return -0.04724163883635223;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.002617962458481242;  // std dev = 2.396, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.059485210564228036;  // std dev = 6.783, 241.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=126 */


Results
   AUC ROC   = 0.779412
   AUC PR    = 0.810856
   CLL	      = -0.568556
   Precision = 0.824561 at threshold = 0.5
   Recall    = 0.635135
   F1        = 0.717557


Total learning time: 10.856 seconds
Total inference time: 2.516 seconds
AUC ROC: 0.779412


Results scoring model
   AUC ROC   = 0.828669
   AUC PR    = 0.832446
   CLL	      = -0.54503
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.744681


Total scoring time: 1.571 seconds
Refined model CLL: -0.54503


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.779412
   AUC PR    = 0.810856
   CLL	      = -0.568556
   Precision = 0.824561 at threshold = 0.5
   Recall    = 0.635135
   F1        = 0.717557


Total learning time: 172.118 seconds
Total inference time: 2.516 seconds
AUC ROC: 0.779412
Total revision time: 172.118
Best scored revision CLL: -0.54503


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:10
{'AUC ROC': 0.779412, 'AUC PR': 0.810856, 'CLL': -0.568556, 'Precision': [0.824561, 0.5], 'Recall': 0.635135, 'F1': 0.717557, 'Learning time': 172.118, 'Inference time': 2.516, 'parameter_0.6': {'AUC ROC': 0.765943, 'AUC PR': 0.791139, 'CLL': -0.561874, 'Precision': [0.824289, 0.5], 'Recall': 0.61583, 'F1': 0.704972, 'Learning time': 148.436, 'Inference time': 37.677}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, H), bankchiefexecutiveceo(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6775933795439549;  // std dev = 4.616, 144.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=118 */
%   else if ( companyceo(A, J) )
%   | then return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | else if ( companyalsoknownas(A, K), acquired(L, A) )
%   | | then if ( companyalsoknownas(K, A), acquired(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.15444523139580962;  // std dev = 6.711, 216.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=64 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyalsoknownas(E, A), recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( acquired(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5044348469176092;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.6163243089026137;  // std dev = 1.305, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.5785954466526717;  // std dev = 4.353, 131.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=108 */
%   else if ( acquired(A, I), companyalsoknownas(A, J) )
%   | then if ( acquired(J, K) )
%   | | then return 0.2768203172752771;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( acquired(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23147798355538635;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.13676599113474366;  // std dev = 7.097, 240.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=72 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyalsoknownas(F, A), acquired(D, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2694192069241993;  // std dev = 1.352, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( acquired(G, A), companyceo(G, H) )
%   | | | then return 0.2993652143341791;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5152165308255154;  // std dev = 2.817, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankchiefexecutiveceo(C, J) )
%   | | | then return 0.6247398211896507;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1756452210970427;  // std dev = 3.247, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.22767478607313799;  // std dev = 2.609, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.15809245751927048;  // std dev = 7.188, 240.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E), bankboughtbank(C, E) )
%   | then if ( companyalsoknownas(A, F), recursion_economicsectorcompany(B, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.38534538692346526;  // std dev = 3.043, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.21408455682069133;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( companyalsoknownas(H, A), recursion_economicsectorcompany(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15103266942526536;  // std dev = 8.381, 325.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=132 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(E, A), acquired(F, E) )
%   | then return 0.113159134485411;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankboughtbank(C, G) )
%   | | then if ( acquired(H, A), bankboughtbank(I, A) )
%   | | | then return 0.41842608049747615;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20233857970534044;  // std dev = 2.609, 42.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | else if ( bankboughtbank(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3356587396203898;  // std dev = 3.488, 103.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=87 */
%   else if ( acquired(A, K) )
%   | then if ( bankboughtbank(L, K) )
%   | | then return -0.2662676230109782;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( bankchiefexecutiveceo(L, M), companyceo(A, M) )
%   | | | then return -0.2496219813555713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21797675486051185;  // std dev = 3.395, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | else return 0.04822699564917527;  // std dev = 6.606, 216.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=61 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, A), recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(C, E) )
%   | | then if ( companyalsoknownas(F, A), acquired(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22449574212856996;  // std dev = 4.475, 151.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=125 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.0970504103264716;  // std dev = 3.203, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.05256899682102213;  // std dev = 6.764, 221.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=66 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(F, A) )
%   | | then if ( companyalsoknownas(A, G), economicsectorcompany(B, D) )
%   | | | then return 0.11436165906751901;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10233882315055357;  // std dev = 3.352, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | else return 0.09204489095064511;  // std dev = 8.106, 359.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=180 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(A, E), bankboughtbank(F, E) )
%   | | then if ( acquired(D, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0090223835729005;  // std dev = 0.403, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.15134860626921134;  // std dev = 3.129, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | else if ( companyalsoknownas(A, G), companyceo(A, H) )
%   | | then if ( bankchiefexecutiveceo(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09225535170573376;  // std dev = 2.336, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.1565083880914239;  // std dev = 2.846, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.03527724695227072;  // std dev = 7.271, 262.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E), companyceo(D, E) )
%   | then return 0.22871995883475205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.0604048283561915;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.12108276606380725;  // std dev = 3.051, 85.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=72 */
%   else if ( companyceo(A, G) )
%   | then return 0.07240837882112819;  // std dev = 3.248, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( acquired(I, A), acquired(A, I) )
%   | | | then return 0.052913360118543196;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.035878029436368676;  // std dev = 7.457, 268.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, A) )
%   | then if ( recursion_economicsectorcompany(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04896548417380851;  // std dev = 3.448, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | else if ( acquired(E, A), companyceo(E, F) )
%   | | then return 0.05072346468690109;  // std dev = 2.317, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( companyalsoknownas(G, A), recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0465003919787521;  // std dev = 7.729, 334.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=168 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.792069
   AUC PR    = 0.823797
   CLL	      = -0.555067
   Precision = 0.820051 at threshold = 0.5
   Recall    = 0.61583
   F1        = 0.703418


Total learning time: 151.593 seconds
Total inference time: 31.955 seconds
AUC ROC: 0.792069


Results scoring model
   AUC ROC   = 0.781238
   AUC PR    = 0.813969
   CLL	      = -0.557746
   Precision = 0.827815 at threshold = 0.5
   Recall    = 0.600962
   F1        = 0.696379


Total scoring time: 12.451 seconds
Parameter learned model CLL: -0.557746


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyceo(A, H), bankchiefexecutiveceo(I, H)', 'false': 'companyceo(A, J)', 'false,false': 'companyalsoknownas(A, K), acquired(L, A)', 'false,false,true': 'companyalsoknownas(K, A), acquired(L, K)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.11e-08, 0, 3], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [4.616, 26, 118], 'false,true': [3.252, 28, 17], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false': [6.711, 152, 64]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyalsoknownas(E, A), recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F), acquired(F, G)', 'true,false,true': 'acquired(G, F)', 'true,false,false': 'companyceo(A, H)', 'false': 'acquired(A, I), companyalsoknownas(A, J)', 'false,true': 'acquired(J, K)', 'false,true,false': 'acquired(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.866, 1, 3], 'true,false,false,true': [1.305, 2, 14], 'true,false,false,false': [4.353, 23, 108], 'false,true,true': [2.228, 11, 9], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.087, 3, 2], 'false,false': [7.097, 168, 72]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyceo(A, E)', 'true,true,true': 'companyalsoknownas(F, A), acquired(D, F)', 'true,true,false': 'acquired(G, A), companyceo(G, H)', 'true,false': 'companyceo(A, I)', 'true,false,true': 'bankchiefexecutiveceo(C, J)', 'true,false,false': 'acquired(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [1.352, 3, 6], 'true,true,false,true': [0.816, 1, 2], 'true,true,false,false': [2.817, 10, 69], 'true,false,true,true': [0.057, 0, 10], 'true,false,true,false': [3.247, 28, 17], 'true,false,false,true': [2.609, 17, 13], 'true,false,false,false': [7.188, 149, 91], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E), bankboughtbank(C, E)', 'true,true': 'companyalsoknownas(A, F), recursion_economicsectorcompany(B, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'companyalsoknownas(H, A), recursion_economicsectorcompany(B, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.043, 11, 76], 'true,false,true': [0.017, 4, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.381, 193, 132], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'acquired(E, A), acquired(F, E)', 'true,false': 'bankboughtbank(C, G)', 'true,false,true': 'acquired(H, A), bankboughtbank(I, A)', 'true,false,false': 'bankboughtbank(J, A)', 'false': 'acquired(A, K)', 'false,true': 'bankboughtbank(L, K)', 'false,true,false': 'bankchiefexecutiveceo(L, M), companyceo(A, M)'}, {'true,true': [0.797, 1, 2], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false': [2.609, 9, 33], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.488, 16, 87], 'false,true,true': [0.049, 2, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [3.395, 24, 22], 'false,false': [6.606, 155, 61]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, A), recursion_economicsectorcompany(B, D)', 'true,false': 'bankchiefexecutiveceo(C, E)', 'true,false,true': 'companyalsoknownas(F, A), acquired(G, F)', 'true,false,false': 'companyalsoknownas(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.475, 26, 125], 'true,false,false,true': [3.203, 27, 17], 'true,false,false,false': [6.764, 155, 66], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(F, A)', 'true,true,true': 'companyalsoknownas(A, G), economicsectorcompany(B, D)'}, {'true,true,true,true': [0.815, 1, 4], 'true,true,true,false': [3.352, 28, 24], 'true,true,false': [8.106, 179, 180], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(A, E), bankboughtbank(F, E)', 'true,true,true': 'acquired(D, E)', 'true,false': 'companyalsoknownas(A, G), companyceo(A, H)', 'true,false,true': 'bankchiefexecutiveceo(C, H)', 'true,false,false': 'acquired(A, I)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.403, 1, 1], 'true,true,false': [3.129, 13, 76], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.336, 13, 13], 'true,false,false,true': [2.846, 17, 20], 'true,false,false,false': [7.271, 164, 98], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyceo(A, E), companyceo(D, E)', 'true,false': 'companyalsoknownas(A, F)', 'false': 'companyceo(A, G)', 'false,false': 'economicsectorcompany(B, H)', 'false,false,true': 'acquired(I, A), acquired(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.822, 1, 4], 'true,false,false': [3.051, 13, 72], 'false,true': [3.248, 28, 27], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [7.457, 165, 103], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(A, D), companyalsoknownas(D, A)', 'true,true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, A), companyceo(E, F)', 'true,false,false': 'companyalsoknownas(G, A), recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.448, 29, 28], 'true,false,true': [2.317, 13, 12], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.729, 166, 168], 'false': [0.0, 0, 0]}]]
[{'': [0.14253760799965345, 0.21510857956568236], 'false': [0.2350617283950612, 0.21000000000000027], 'false,false': [0.25, 0.2085048010973941], 'false,false,true': [nan, 0.25], 'true': [1.4802973661668753e-16, 0.14481373265157454], 'true,false': [1.4802973661668753e-16, 0.14715814506540228], 'true,false,false': [0.0, 0.14795524691358303], 'true,false,true': [nan, 1.4802973661668753e-16]}, {'': [0.14203351248186086, 0.21472243482981648], 'false': [0.24609528076889967, 0.2098358172745092], 'false,true': [0.24810836647224957, 0.23639819617376728], 'false,true,false': [nan, 0.23639819617376728], 'true': [nan, 0.14203351248186025], 'true,false': [0.18750000000000006, 0.14063405774127086], 'true,false,true': [nan, 0.18750000000000006], 'true,false,false': [0.10638384250798882, 0.14466235494742166]}, {'': [0.21321855488788716, nan], 'true': [0.12111082710031075, 0.2189934835498507], 'true,false': [0.22172218497165552, 0.2170215701004251], 'true,false,true': [0.0003198912861376968, 0.23425252016457732], 'true,false,false': [0.22681234752339663, 0.2152597562062241], 'true,true': [0.2030486733684341, 0.10652018643763678], 'true,true,true': [nan, 0.2030486733684341], 'true,true,false': [0.22222222222222224, 0.10042186052995444]}, {'': [0.20179732390918434, nan], 'true': [0.10646304675083294, 0.21508611706762668], 'true,false': [6.935560889647502e-05, 0.21611167977520382], 'true,false,false': [nan, 0.21611167977520382], 'true,true': [nan, 0.10646304675083286]}, {'': [0.13431782598878633, 0.213597898784025], 'false': [0.24848607629671152, 0.20203638784329755], 'false,true': [0.0012063511690206669, 0.2498267324231277], 'false,true,false': [0.0, 0.2506056509387552], 'true': [0.21188963559264415, 0.13205554769287536], 'true,false': [0.15419152671417793, 0.11808497695511966], 'true,false,true': [-3.700743415417188e-17, 0.16209228666052258], 'true,false,false': [nan, 0.11808497695511966]}, {'': [0.18923133298895192, nan], 'true': [nan, 0.1892313329889506], 'true,false': [0.13264190661960074, 0.2116493633798597], 'true,false,false': [0.23314527711278707, 0.20704111232438882], 'true,false,true': [nan, 0.13264190661960076]}, {'': [0.18658222175010314, nan], 'true': [0.18658222175010314, nan], 'true,true': [0.20872745559487482, 0.1830484794229203], 'true,true,true': [0.13269161027509793, 0.2160259148676245]}, {'': [0.18646401415054864, nan], 'true': [0.10983457304808063, 0.20596331741496618], 'true,false': [0.20980947095964247, 0.20548790878275483], 'true,false,true': [nan, 0.20980947095964247], 'true,false,false': [0.2189635647645553, 0.20176616711034037], 'true,true': [0.08126022608274089, 0.1100314898273084], 'true,true,true': [nan, 0.08126022608274089]}, {'': [0.11007571046291367, 0.20527264329491407], 'false': [0.19179823315853986, 0.20779315526922368], 'false,false': [0.20779315526922368, nan], 'false,false,true': [0.25, 0.2074760291679242], 'true': [0.0, 0.11116335832905169], 'true,false': [0.1351661243357718, 0.10954688579886673]}, {'': [0.18509986160697528, nan], 'true': [0.20862119169322985, 0.18136463135587538], 'true,true': [nan, 0.20862119169322985], 'true,false': [0.21477699944069978, 0.1788624636551249], 'true,false,false': [nan, 0.1788624636551249]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
0;true;companyceo(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
0;true,false,false;companyceo(A, H), bankchiefexecutiveceo(I, H).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;false;companyceo(A, I).;true;true
2;false,true;bankchiefexecutiveceo(C, J).;true;true
3;;companyeconomicsector(A, B) :- acquired(D, E), bankboughtbank(C, E).;true;true
3;false;bankboughtbank(G, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
4;true;acquired(E, A), acquired(F, E).;true;true
4;true,false;bankboughtbank(C, G).;true;true
4;true,false,true;acquired(H, A), bankboughtbank(I, A).;true;true
4;false;acquired(A, K).;true;true
4;false,true;bankboughtbank(L, K).;true;true
4;false,true,false;bankchiefexecutiveceo(L, M), companyceo(A, M).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankboughtbank(C, D).;true;true
8;true;companyceo(A, E), companyceo(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6788385902719238;  // std dev = 0.384, 145.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=119 */
%   else if ( acquired(A, G) )
%   | then if ( economicsectorcompany(B, G), companyceo(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(I, A), acquired(G, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( countryhascompanyoffice(K, A) )
%   | | then return 0.024815601766178936;  // std dev = 0.373, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15070212658887452;  // std dev = 6.238, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.6572364012859981;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( companyceo(A, D), countryhascompanyoffice(E, A) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then if ( companyalsoknownas(A, A) )
%   | | | then return 0.15981560379085633;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.03220605987116621;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( countryhascompanyoffice(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.7368387473425303;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14489878247426094;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then if ( companyceo(A, I) )
%   | | | then return 0.44906809945894594;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8033563222266631;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, J), cityhascompanyoffice(K, J) )
%   | | | then return 0.24208225482948312;  // std dev = 2.153, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.2978160333597297;  // std dev = 9.130, 362.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=178 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then if ( countryhascompanyoffice(F, E) )
%   | | then return 0.3272039002874642;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6377807861683572;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyceo(A, G), countryhascompanyoffice(H, A) )
%   | | then if ( companyalsoknownas(A, A) )
%   | | | then return 0.32699137374469445;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12933181015637246;  // std dev = 1.406, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | | then return 0.22435546138063658;  // std dev = 2.634, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.2517837095895154;  // std dev = 9.000, 357.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D), bankboughtbank(E, D) )
%   then if ( acquired(F, A) )
%   | then if ( companyalsoknownas(F, G), acquired(G, H) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.6071085710052552;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10127874282971902;  // std dev = 1.218, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.47751658980851136;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09577014675472739;  // std dev = 2.617, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else return 0.20716574478362665;  // std dev = 0.470, 367.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=184 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(E, A), acquired(F, E) )
%   | then return 0.28342027894460936;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankboughtbank(C, G) )
%   | | then return 0.37376106331109044;  // std dev = 0.392, 45.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | | else return 0.4245239569390683;  // std dev = 0.360, 103.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=87 */
%   else if ( acquired(A, H) )
%   | then if ( bankboughtbank(I, H) )
%   | | then return -0.34662584396499896;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( bankchiefexecutiveceo(I, J), companyceo(A, J) )
%   | | | then return -0.3091420830573926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14928404438360546;  // std dev = 3.201, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | else if ( bankchiefexecutiveceo(A, K) )
%   | | then return -0.2027662594969376;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( companyalsoknownas(A, L), countryhascompanyoffice(M, L) )
%   | | | then return 0.24579577244311668;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0021560080929231688;  // std dev = 6.420, 206.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=59 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.47654504770161016;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6450711488309814;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(A, E), cityhascompanyoffice(F, E) )
%   | then if ( acquired(E, G), companyceo(G, H) )
%   | | then return -0.31804156118126814;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(A, I) )
%   | | | then return 0.10587066376869561;  // std dev = 1.703, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.152597426231259;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | then if ( countryhascompanyoffice(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.4865507461375695;  // std dev = 0.945, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.24644206392470563;  // std dev = 0.382, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.25973906057808416;  // std dev = 0.645, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.12209105554702199;  // std dev = 8.331, 339.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=170 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.202805712364831;  // std dev = 0.214, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( acquired(A, D) )
%   | | then if ( companyalsoknownas(A, E) )
%   | | | then return 0.12155486274454377;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.3903511910992265;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06977744015037232;  // std dev = 0.413, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   else if ( countryhascompanyoffice(F, A), bankbankincountry(G, F) )
%   | then return 0.0625540202224322;  // std dev = 0.353, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), companyceo(I, J) )
%   | | | then return 0.03626808013656101;  // std dev = 1.352, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1726548586281781;  // std dev = 2.248, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.36780628493609163;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09291688019773903;  // std dev = 7.681, 290.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(C, D) )
%   | then return 0.13681738097314197;  // std dev = 0.469, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3138443640631598;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, E) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.515087529347808;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | | then return -0.120242722833957;  // std dev = 1.511, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.039377052476809955;  // std dev = 2.728, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else if ( countryhascompanyoffice(I, A), bankbankincountry(J, I) )
%   | | then if ( countryhascompanyoffice(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.3549853216532283;  // std dev = 0.928, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.20461440570934455;  // std dev = 0.326, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( companyalsoknownas(A, L), companyceo(L, M) )
%   | | | then return 0.20968224132848814;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07449838920913315;  // std dev = 7.893, 313.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=158 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E), companyceo(D, E) )
%   | then return 0.11734552626314276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return -0.17897071281609853;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.29217600909611424;  // std dev = 0.308, 84.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=74 */
%   else if ( companyceo(A, G), acquired(A, H) )
%   | then if ( acquired(H, I), acquired(I, J) )
%   | | then return 0.257110501831859;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( economicsectorcompany(B, H) )
%   | | | then return 0.2588485844095489;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05967549247326833;  // std dev = 2.332, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.22735797111081424;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(L, A) )
%   | | | then return 0.016129702607026095;  // std dev = 2.327, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return -0.02497848278745073;  // std dev = 7.024, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), acquired(F, D) )
%   | | then return 0.4512615193678824;  // std dev = 0.146, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.24166232203291804;  // std dev = 0.368, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | else return -0.31938644825869345;  // std dev = 0.117, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( acquired(A, G) )
%   | then if ( acquired(G, H), economicsectorcompany(B, H) )
%   | | then return 0.4333389825918099;  // std dev = 0.298, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(G, I) )
%   | | | then return 0.09034628050337296;  // std dev = 1.434, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.06623036882994268;  // std dev = 1.682, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then return 0.011382705043100865;  // std dev = 0.295, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.08132296337427825;  // std dev = 1.424, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.04024887140436137;  // std dev = 6.994, 255.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=128 */


Results
   AUC ROC   = 0.856532
   AUC PR    = 0.865745
   CLL	      = -0.5337
   Precision = 0.845411 at threshold = 0.5
   Recall    = 0.675676
   F1        = 0.751073


Total learning time: 32.121 seconds
Total inference time: 3.689 seconds
AUC ROC: 0.856532


Results scoring model
   AUC ROC   = 0.871383
   AUC PR    = 0.888202
   CLL	      = -0.520193
   Precision = 0.849398 at threshold = 0.5
   Recall    = 0.677885
   F1        = 0.754011


Total scoring time: 2.318 seconds
Refined model CLL: -0.520193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.856532
   AUC PR    = 0.865745
   CLL	      = -0.5337
   Precision = 0.845411 at threshold = 0.5
   Recall    = 0.675676
   F1        = 0.751073


Total learning time: 198.483 seconds
Total inference time: 3.689 seconds
AUC ROC: 0.856532
Total revision time: 198.483
Best scored revision CLL: -0.520193


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:24:05
{'AUC ROC': 0.856532, 'AUC PR': 0.865745, 'CLL': -0.5337, 'Precision': [0.845411, 0.5], 'Recall': 0.675676, 'F1': 0.751073, 'Learning time': 198.483, 'Inference time': 3.689, 'parameter_0.8': {'AUC ROC': 0.792069, 'AUC PR': 0.823797, 'CLL': -0.555067, 'Precision': [0.820051, 0.5], 'Recall': 0.61583, 'F1': 0.703418, 'Learning time': 151.593, 'Inference time': 31.955}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.5456489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.5326455793948109;  // std dev = 8.089, 298.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=201 */
%   else if ( companyalsoknownas(A, J) )
%   | then return -0.026466449515872396;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else return 0.06403128804068767;  // std dev = 0.404, 170.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=35 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.49983774037996687;  // std dev = 2.929, 44.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=32 */
%   | | else return 0.4577749584276389;  // std dev = 7.803, 280.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=190 */
%   else return 0.04553304113478015;  // std dev = 0.395, 196.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=38 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.5291167543391683;  // std dev = 0.348, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5602564585585943;  // std dev = 3.630, 112.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.3765155912880691;  // std dev = 2.751, 37.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return -0.028803299944278896;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return 0.1454974554776595;  // std dev = 0.461, 338.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.42980059187582725;  // std dev = 3.758, 119.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=103 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.2086194883948292;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12993422593472317;  // std dev = 9.087, 396.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=157 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.37613615764693986;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2002510188342565;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.2946924881579603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2519840482920203;  // std dev = 7.312, 263.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=176 */
%   else if ( bankboughtbank(H, I) )
%   | then return 0.001710598054352248;  // std dev = 5.445, 196.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.18456211579442505;  // std dev = 0.445, 324.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=222 */
%   | | else return 0.0014459516995255716;  // std dev = 0.389, 196.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.2274222991386382;  // std dev = 3.786, 119.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=103 */
%   | | else return 0.046092118028144544;  // std dev = 8.881, 401.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=157 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.1775209214344647;  // std dev = 0.347, 119.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.36654334950621514;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04023265728813144;  // std dev = 3.216, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | else return 0.032155970610789425;  // std dev = 0.449, 338.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14133961248128085;  // std dev = 0.347, 119.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=103 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.0483604345423342;  // std dev = 3.251, 63.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=29 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.02550062524788713;  // std dev = 0.448, 338.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.04400472703806569;  // std dev = 9.673, 520.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.822377
   AUC PR    = 0.839709
   CLL	      = -0.524862
   Precision = 0.725203 at threshold = 0.5
   Recall    = 0.861004
   F1        = 0.78729


Total learning time: 12.057 seconds
Total inference time: 3.737 seconds
AUC ROC: 0.822377


Results scoring model
   AUC ROC   = 0.800533
   AUC PR    = 0.808034
   CLL	      = -0.543906
   Precision = 0.687307 at threshold = 0.5
   Recall    = 0.853846
   F1        = 0.761578


Total scoring time: 2.429 seconds
Parameter learned model CLL: -0.543906


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.21e-08, 0, 5], 'true,false,false,true': [1.854, 5, 11], 'true,false,false,false': [8.089, 97, 201], 'false,true': [1.629, 23, 3], 'false,false': [0.404, 135, 35]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.929, 12, 32], 'true,false,false': [7.803, 90, 190], 'false': [0.395, 158, 38]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.348, 1, 6], 'true,true,false,true': [3.63, 15, 97], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.751, 11, 26], 'true,false,true,false': [1.629, 23, 3], 'true,false,false': [0.461, 210, 128], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.758, 16, 103], 'true,false,true': [0.147, 5, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.087, 239, 157], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [3.231, 14, 41], 'true,false,true': [0.0, 1, 0], 'true,false,false': [7.312, 87, 176], 'false,true': [5.445, 158, 38], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.445, 102, 222], 'true,false,false': [0.389, 158, 38], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [3.786, 16, 103], 'true,true,false': [8.881, 244, 157], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.347, 16, 103], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [3.216, 34, 25], 'true,false,false': [0.449, 210, 128], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.347, 16, 103], 'false,true': [3.251, 34, 29], 'false,false,true': [0.448, 210, 128], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.673, 260, 260], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.215706447187933, 0.15628904623073833], 'true': [0.0, 0.21750965497587924], 'true,false': [0.0, 0.21931924215992987], 'true,false,false': [0.21484374999999967, 0.21955092112968366], 'false': [0.10207100591715962, 0.1634948096885825], 'true,false,true': [nan, 3.552713678800501e-16]}, {'': [0.21463454647320193, 0.15607086420182076], 'true': [nan, 0.21463454647320193], 'true,false': [0.19500467875731226, 0.21747896770126837]}, {'': [0.21856508884366752, nan], 'true': [0.11787340449756115, 0.21129559467079767], 'true,false': [0.2020958541066869, 0.21237197233978758], 'true,false,true': [0.2045840853726835, 0.10207100591715987], 'true,true': [0.12077710934973838, 0.11763488287495395], 'true,true,false': [0.11763488287495395, nan]}, {'': [0.20339087010546053, nan], 'true': [0.11867244845390659, 0.20737049326899332], 'true,false': [0.004303606264438081, 0.2085053092959787], 'true,false,false': [nan, 0.2085053092959787], 'true,true': [nan, 0.11867244845390659]}, {'': [0.19878226794815995, 0.15123807536990486], 'true': [0.1764046419678099, 0.20364117289868228], 'true,false': [0.0, 0.20328344652910416], 'true,true': [0.0, 0.18986346242998395], 'false': [0.15123807536990486, nan]}, {'': [0.18833230264305728, nan], 'true': [nan, 0.18833230264305728], 'true,false': [0.19813552069046486, 0.15123426075383167]}, {'': [0.18505978042076504, nan], 'true': [0.18505978042076504, nan], 'true,true': [0.12047872307960472, 0.1967001258393024]}, {'': [0.1825816660033355, nan], 'true': [0.12053331277324886, 0.19645557768090025], 'true,false': [0.17054989810606214, 0.20115388688881847], 'true,false,true': [0.0, 0.17535205272235158], 'true,true': [0.12053331277324886, nan]}, {'': [0.12045122944121035, 0.19586043858812718], 'false': [0.1677444214476297, 0.20101889833137887], 'false,false': [0.20101889833137887, nan], 'true': [nan, 0.12045122944121038]}, {'': [0.17991953229555094, nan], 'true': [nan, 0.17991953229555094], 'true,false': [0.17991953229555094, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
4;true,false;bankboughtbank(G, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5237118490067937;  // std dev = 8.199, 302.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=201 */
%   else if ( acquired(H, A) )
%   | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( companyceo(A, J), bankchiefexecutiveceo(K, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.03461952333480645;  // std dev = 2.223, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.1101814554247144;  // std dev = 4.815, 123.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.7402546998762967;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(C, F), companyalsoknownas(A, G) )
%   | | then return 0.09777514600865855;  // std dev = 0.420, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(C, H), companyalsoknownas(H, I) )
%   | | | then return 0.3281863183392947;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2912049176692832;  // std dev = 1.828, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | then return 0.7359812264346162;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.7818172752069809;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21441558702412153;  // std dev = 3.142, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | | then return 0.027254490835920086;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3033892723689912;  // std dev = 10.009, 427.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=212 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.6079461026990904;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then if ( countryhascompanyoffice(E, A) )
%   | | then return 0.30771897100140616;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.6546761208260351;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5718010450134163;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, G), cityhascompanyoffice(H, G) )
%   | | then if ( countryhascompanyoffice(I, A), countryhascompanyoffice(J, G) )
%   | | | then return -0.16205827657774208;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.15777683524730574;  // std dev = 2.146, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.20710768750359407;  // std dev = 2.556, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.249996197275522;  // std dev = 10.118, 442.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=218 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.39864455946843347;  // std dev = 0.229, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( acquired(D, A) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then if ( countryhascompanyoffice(E, D), companyceo(A, F) )
%   | | | then return 0.35650210867595766;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6767858668888219;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyceo(D, G), acquired(H, D) )
%   | | | then return -0.08400692569741719;  // std dev = 1.220, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1393502089918133;  // std dev = 2.880, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.47314273612214947;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1179167073773528;  // std dev = 3.188, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.21466978794057628;  // std dev = 4.079, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.20226473853596647;  // std dev = 8.549, 313.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=155 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.5449480142416424;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(G, A), cityhascompanyoffice(H, A) )
%   | | | then return 0.6243921321582174;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35398080201861165;  // std dev = 3.159, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( bankboughtbank(I, A) )
%   | | then return -0.35811558011832384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(A, J), companyceo(A, K) )
%   | | | then return 0.3848994847511769;  // std dev = 1.664, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.2691478224775053;  // std dev = 7.202, 239.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=156 */
%   else if ( cityhascompanyoffice(L, A) )
%   | then return -0.09353758224995953;  // std dev = 0.356, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | else if ( acquired(A, M), companyceo(M, N) )
%   | | then return 0.13686373050869935;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.06828341908202705;  // std dev = 0.395, 145.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=29 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.3633047416031974;  // std dev = 0.190, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( acquired(D, C), companyceo(C, E) )
%   | | then return -0.08665594770695131;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( countryhascompanyoffice(F, A), companyceo(C, G) )
%   | | | then return 0.1833543152374425;  // std dev = 0.967, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06111354629218064;  // std dev = 2.470, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   else if ( companyalsoknownas(A, H), countryhascompanyoffice(I, H) )
%   | then return 0.06891785929498828;  // std dev = 0.308, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( companyceo(A, J), companyalsoknownas(A, K) )
%   | | then if ( acquired(K, L), acquired(A, M) )
%   | | | then return 0.11794159965911655;  // std dev = 1.316, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.19221851784820757;  // std dev = 1.423, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.12953930383885973;  // std dev = 3.921, 78.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return 0.12055324063739646;  // std dev = 8.592, 340.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=170 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.447, 520.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=260 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( bankboughtbank(A, E), countryhascompanyoffice(F, E) )
%   | then return -0.0063504373096801014;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(G, H) )
%   | | | then return 0.30069874672578445;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24184769006909626;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.0737231875229399;  // std dev = 3.262, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | | else return 0.09245960173299092;  // std dev = 9.602, 440.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=217 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, D) )
%   | then return -0.003282806410996278;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.03000663474056426;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( companyalsoknownas(A, F), companyceo(F, G) )
%   | then if ( acquired(F, H) )
%   | | then if ( acquired(A, I), companyceo(I, J) )
%   | | | then return 0.04554593283332912;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.11455627539627196;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.20133828807151838;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( bankboughtbank(A, K), acquired(A, K) )
%   | | then return -0.0048648980236700445;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.25816535926806866;  // std dev = 0.672, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.06721757308414543;  // std dev = 9.805, 467.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=228 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( acquired(A, E), companyalsoknownas(E, F) )
%   | then return 0.012726647798465697;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( acquired(G, A), companyceo(G, H) )
%   | | then return -0.01638844573393386;  // std dev = 0.538, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( cityhascompanyoffice(C, I), economicsectorcompany(B, I) )
%   | | | then return 0.4315950149530542;  // std dev = 1.337, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.3221797040484244;  // std dev = 0.352, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.34607531223948274;  // std dev = 0.319, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | else return -0.35736709396376937;  // std dev = 0.098, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | then return 0.249383588243768;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, M) )
%   | | | then return 0.014952958864390915;  // std dev = 2.706, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.0571098487439918;  // std dev = 8.704, 357.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=177 */


Results
   AUC ROC   = 0.840857
   AUC PR    = 0.832646
   CLL	      = -0.565201
   Precision = 0.772031 at threshold = 0.5
   Recall    = 0.777992
   F1        = 0.775


Total learning time: 11.283 seconds
Total inference time: 2.109 seconds
AUC ROC: 0.840857


Results scoring model
   AUC ROC   = 0.831598
   AUC PR    = 0.831695
   CLL	      = -0.564397
   Precision = 0.737037 at threshold = 0.5
   Recall    = 0.765385
   F1        = 0.750943


Total scoring time: 1.801 seconds
Refined model CLL: -0.564397


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.822377
   AUC PR    = 0.839709
   CLL	      = -0.524862
   Precision = 0.725203 at threshold = 0.5
   Recall    = 0.861004
   F1        = 0.78729


Total learning time: 27.569999999999997 seconds
Total inference time: 3.737 seconds
AUC ROC: 0.822377
Total revision time: 27.569999999999997
Best scored revision CLL: -0.543906


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:24:39
{'AUC ROC': 0.822377, 'AUC PR': 0.839709, 'CLL': -0.524862, 'Precision': [0.725203, 0.5], 'Recall': 0.861004, 'F1': 0.78729, 'Learning time': 27.569999999999997, 'Inference time': 3.737, 'parameter_1.0': {'AUC ROC': 0.822377, 'AUC PR': 0.839709, 'CLL': -0.524862, 'Precision': [0.725203, 0.5], 'Recall': 0.861004, 'F1': 0.78729, 'Learning time': 12.057, 'Inference time': 3.737}}


Starting fold 2

Target train facts examples: 5307
Target train pos examples: 260
Target train neg examples: 260

Target test facts examples: 5307
Target test pos	 examples: 518
Target test neg examples: 518

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4295775065280836;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( bankboughtbank(A, H), companyalsoknownas(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.59952824544434;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   else if ( bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.013645936695359509;  // std dev = 0.334, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49479143335773096;  // std dev = 3.600, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   else return -0.011992930176393335;  // std dev = 0.334, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, G) )
%   | | | then return 0.3114097513114094;  // std dev = 4.172, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02330082900184563;  // std dev = 0.313, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2473192580239628;  // std dev = 4.133, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | else if ( acquired(F, A) )
%   | | then return -0.13599743692844193;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.00801126480299528;  // std dev = 1.428, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.1499976446368754;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.30137774094581715;  // std dev = 3.029, 51.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   | else if ( acquired(G, A) )
%   | | then return -0.4633281414071238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2731715111715663;  // std dev = 1.167, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( acquired(H, I) )
%   | then return -0.051744845978874666;  // std dev = 2.050, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, E) )
%   | | then return 0.20340920961806547;  // std dev = 0.441, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | else return -0.04432654844680369;  // std dev = 0.328, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.10841248892284476;  // std dev = 3.952, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | else return -0.024537485880806568;  // std dev = 1.356, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( acquired(E, F) )
%   | | then return 0.08431502818362596;  // std dev = 0.433, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02143369610605868;  // std dev = 0.296, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(A, E), bankboughtbank(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0656657474345407;  // std dev = 0.433, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   else if ( bankboughtbank(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( economicsectorcompany(B, G) )
%   | | then return -0.01875885335972413;  // std dev = 0.297, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(E, F) )
%   | | then return 0.037564542938307806;  // std dev = 4.180, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.766955
   AUC PR    = 0.708886
   CLL	      = -0.566444
   Precision = 0.720067 at threshold = 0.5
   Recall    = 0.824324
   F1        = 0.768677


Total learning time: 3.098 seconds
Total inference time: 2.728 seconds
AUC ROC: 0.766955


Results scoring model
   AUC ROC   = 0.814904
   AUC PR    = 0.749029
   CLL	      = -0.514848
   Precision = 0.737705 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.79646


Total scoring time: 1.16 seconds
Parameter learned model CLL: -0.514848


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, D)', 'true,false': 'acquired(E, A), acquired(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'bankboughtbank(A, H), companyalsoknownas(I, H)', 'false': 'bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.309, 3, 4], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.335, 15, 43], 'false,true': [0.0, 0, 0], 'false,false': [0.334, 34, 5]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.6, 18, 47], 'false': [0.334, 34, 5]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankboughtbank(A, E)', 'true,true,false': 'bankboughtbank(F, G)', 'true,false': 'bankboughtbank(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.172, 34, 49], 'true,true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.313, 18, 3], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'acquired(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.133, 34, 49], 'true,false,true': [0.0, 2, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.428, 16, 3], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'true,true': 'acquired(F, A)', 'true,false': 'acquired(G, A)', 'false': 'acquired(H, I)'}, {'true,true,true': [1.309, 3, 4], 'true,true,false': [3.029, 12, 39], 'true,false,true': [0.0, 1, 0], 'true,false,false': [1.167, 2, 4], 'false,true': [2.05, 34, 5], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.441, 18, 47], 'true,false,false': [0.328, 34, 5], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [3.952, 34, 49], 'true,true,false': [1.356, 18, 3], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'acquired(E, F)', 'true,false': 'bankboughtbank(A, G)'}, {'true,true,true': [0.433, 34, 49], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.296, 18, 3], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(A, E), bankboughtbank(D, E)', 'false': 'bankboughtbank(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.433, 34, 49], 'false,true': [0.0, 0, 0], 'false,false,true': [0.297, 18, 3], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'bankboughtbank(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.18, 52, 52], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20023668639053277, 0.11176857330703491], 'true': [nan, 0.20023668639053277], 'true,false': [0.24489795918367332, 0.1917360285374559], 'true,false,true': [nan, 0.2448979591836735], 'true,false,false': [nan, 0.1917360285374559], 'false': [nan, 0.11176857330703491]}, {'': [0.19937462768440362, 0.11176857330703467], 'true': [nan, 0.19937462768440362], 'true,false': [nan, 0.19937462768440362]}, {'': [0.2052212547210699, nan], 'true': [0.20966478176166403, 0.09824924958816936], 'true,true': [nan, 0.20966478176166403], 'true,true,false': [0.20966478176166403, nan], 'true,false': [nan, 0.09824924958816936]}, {'': [0.19566389725574884, nan], 'true': [0.20579812422511956, 0.09849377579969151], 'true,true': [nan, 0.20579812422511956], 'true,false': [0.0, 0.10730149783950284], 'true,false,false': [nan, 0.10730149783950284]}, {'': [0.1991102183732053, 0.10775978279248595], 'true': [0.19020358318270075, 0.2610763855412827], 'true,false': [0.0, 0.2270988681436111], 'true,true': [0.24489795918367344, 0.17993079584775107], 'false': [0.10775978279248595, nan]}, {'': [0.17643718155469315, nan], 'true': [nan, 0.17643718155469315], 'true,false': [0.1945844188339607, 0.10783365744926282]}, {'': [0.17066770113886973, nan], 'true': [0.17066770113886973, nan], 'true,true': [0.18813802339801933, 0.08751176729230933]}, {'': [0.16930704680053704, nan], 'true': [0.18768030812003453, 0.08776418994767658], 'true,true': [0.18768030812003453, nan], 'true,false': [nan, 0.08776418994767658]}, {'': [0.1874211733078833, 0.08798867666224408], 'true': [nan, 0.1874211733078833], 'false': [nan, 0.08798867666224408], 'false,false': [0.08798867666224408, nan]}, {'': [0.16800576192776442, nan], 'true': [nan, 0.16800576192776442], 'true,false': [0.16800576192776442, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;companyeconomicsector(A, B) :- acquired(C, D).;true;true
3;false;acquired(F, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
4;true;acquired(C, E).;true;true
4;true,false;acquired(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyalsoknownas(C, D) )
%   then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( acquired(A, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(E, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3653953119111053;  // std dev = 4.153, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(C, G) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4136573287083126;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( companyalsoknownas(A, H), cityhascompanyoffice(I, H) )
%   | then return 0.13432553629516283;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( acquired(J, A) )
%   | | then return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.30761776576210037;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.31022115572538067;  // std dev = 3.990, 64.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyalsoknownas(A, D) )
%   then return 0.44878886220299796;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( companyalsoknownas(A, E) )
%   | then if ( companyceo(E, F) )
%   | | then return 0.19892987241592416;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1938084819977071;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(G, A), cityhascompanyoffice(H, G) )
%   | | then return 0.50685803316156;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.2572112504480384;  // std dev = 1.521, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2521056959780067;  // std dev = 4.386, 78.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( acquired(E, A) )
%   | then if ( cityhascompanyoffice(F, E), acquired(G, E) )
%   | | then return 0.4050248022702529;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyceo(E, H) )
%   | | | then return 0.20496646004717145;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.22707928530151036;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6451924813397102;  // std dev = 0.228, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.30468628938401165;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19961723971932013;  // std dev = 0.495, 81.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( companyceo(A, F) )
%   | | then if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.46280667815511173;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.003391593394064474;  // std dev = 0.982, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.4904849614259792;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4065885618889034;  // std dev = 2.760, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | else if ( acquired(I, A) )
%   | | then return -0.19594290857790267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3305219399401689;  // std dev = 1.083, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( cityhascompanyoffice(J, A) )
%   | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | then return 0.05181512466059448;  // std dev = 0.938, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2589381286641676;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.2256736473910465;  // std dev = 0.283, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return 0.0039043852514969585;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.3398077912618122;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.168184014318119;  // std dev = 1.133, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.20310089791381344;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( companyalsoknownas(A, H) )
%   | then if ( companyalsoknownas(H, I), economicsectorcompany(B, I) )
%   | | then return 0.52006638657081;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.24785032888724792;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.11500145776691362;  // std dev = 0.441, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.13583366893324958;  // std dev = 0.383, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( companyceo(C, E) )
%   | | then return 0.0707877651346652;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.17063616471207013;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then return 0.2788459917052922;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I) )
%   | | | then return 0.09026369186640615;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.156713069039982;  // std dev = 1.323, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.06657810792752523;  // std dev = 1.577, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0863741671896563;  // std dev = 3.443, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.11290597195069574;  // std dev = 0.378, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( companyceo(C, E) )
%   | | then return 0.05633613235072279;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14812237454928448;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(A, F) )
%   | then if ( countryhascompanyoffice(G, A) )
%   | | then return 0.12825810079323421;  // std dev = 0.452, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(H, A), acquired(I, H) )
%   | | | then return 0.0022202021442180495;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13585089307713155;  // std dev = 1.529, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( acquired(J, A) )
%   | | then return -0.01645352343027921;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.05057641156711854;  // std dev = 1.576, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08097279430692333;  // std dev = 3.317, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return -0.02453772773297064;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.21271607532904346;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(C, G) )
%   | | | then return 0.10770889217999131;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06380379515244172;  // std dev = 1.311, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return 0.047975978140797335;  // std dev = 0.423, 85.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.08263877601046984;  // std dev = 0.376, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( companyceo(C, E) )
%   | | then return 0.03456586589720247;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.13381257410847383;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | then return 0.2013120294000078;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(H, A) )
%   | | then return -0.12221105320752523;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.09528483840504226;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.045641434345762386;  // std dev = 3.895, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */


Results
   AUC ROC   = 0.699117
   AUC PR    = 0.660409
   CLL	      = -0.645282
   Precision = 0.67156 at threshold = 0.5
   Recall    = 0.706564
   F1        = 0.688617


Total learning time: 13.073 seconds
Total inference time: 4.211 seconds
AUC ROC: 0.699117


Results scoring model
   AUC ROC   = 0.904956
   AUC PR    = 0.881111
   CLL	      = -0.533774
   Precision = 0.836364 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.859813


Total scoring time: 1.362 seconds
Refined model CLL: -0.533774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.766955
   AUC PR    = 0.708886
   CLL	      = -0.566444
   Precision = 0.720067 at threshold = 0.5
   Recall    = 0.824324
   F1        = 0.768677


Total learning time: 18.692999999999998 seconds
Total inference time: 2.728 seconds
AUC ROC: 0.766955
Total revision time: 18.692999999999998
Best scored revision CLL: -0.514848


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:25:06
{'AUC ROC': 0.766955, 'AUC PR': 0.708886, 'CLL': -0.566444, 'Precision': [0.720067, 0.5], 'Recall': 0.824324, 'F1': 0.768677, 'Learning time': 18.692999999999998, 'Inference time': 2.728, 'parameter_0.2': {'AUC ROC': 0.766955, 'AUC PR': 0.708886, 'CLL': -0.566444, 'Precision': [0.720067, 0.5], 'Recall': 0.824324, 'F1': 0.768677, 'Learning time': 3.098, 'Inference time': 2.728}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), acquired(F, C) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( bankboughtbank(A, H), companyalsoknownas(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5548702465749205;  // std dev = 5.077, 122.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=85 */
%   else if ( bankboughtbank(A, J) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0119950889456662;  // std dev = 0.361, 78.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=12 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.48030448079306237;  // std dev = 5.172, 129.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=91 */
%   else return 0.019502636712781466;  // std dev = 0.367, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(F, G) )
%   | | | then return 0.3963775222477358;  // std dev = 5.017, 131.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=90 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, H) )
%   | | then if ( companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7155203723817085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.019905232173961427;  // std dev = 0.369, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3107114653797271;  // std dev = 4.970, 131.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=90 */
%   | else if ( acquired(A, F) )
%   | | then return 0.012781352339262744;  // std dev = 1.493, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.014546871211843945;  // std dev = 2.900, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.331494075308731;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.36058390910216215;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else if ( acquired(A, G) )
%   | | then return 0.05075413167057837;  // std dev = 1.749, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0.2337181965051987;  // std dev = 4.025, 82.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( acquired(H, I) )
%   | then return -0.013462937926398511;  // std dev = 3.210, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, E) )
%   | | then return 0.18469230055878308;  // std dev = 0.431, 129.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=91 */
%   | | else return -0.011549395635468295;  // std dev = 0.361, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.14890451889072637;  // std dev = 4.810, 131.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=90 */
%   | | else return -0.02910266885708626;  // std dev = 3.273, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, F) )
%   | | then return 0.11472458364988349;  // std dev = 0.420, 131.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=90 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G) )
%   | | then if ( companyalsoknownas(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5617239824553375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.03240981555891903;  // std dev = 0.369, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(A, E), bankboughtbank(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08891192970522793;  // std dev = 0.420, 131.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=90 */
%   else if ( bankboughtbank(A, F) )
%   | then return 0.4222454665668024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return -0.02761654625314385;  // std dev = 0.369, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(E, F) )
%   | | then return 0.03658457452970867;  // std dev = 5.824, 208.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.782619
   AUC PR    = 0.747022
   CLL	      = -0.550313
   Precision = 0.753597 at threshold = 0.5
   Recall    = 0.80888
   F1        = 0.780261


Total learning time: 5.064 seconds
Total inference time: 3.066 seconds
AUC ROC: 0.782619


Results scoring model
   AUC ROC   = 0.833765
   AUC PR    = 0.797212
   CLL	      = -0.507779
   Precision = 0.781818 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.803738


Total scoring time: 1.575 seconds
Parameter learned model CLL: -0.507779


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, D)', 'true,false': 'acquired(A, E), acquired(F, C)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'bankboughtbank(A, H), companyalsoknownas(I, H)', 'false': 'bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.926, 1, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.077, 37, 85], 'false,true': [0.0, 0, 1], 'false,false': [0.361, 66, 12]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.172, 38, 91], 'false': [0.367, 66, 13]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(A, E)', 'true,true,false': 'bankboughtbank(F, G)', 'true,false': 'bankboughtbank(A, H)', 'true,false,true': 'companyalsoknownas(C, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [5.017, 41, 90], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.369, 63, 13], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'acquired(A, F)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.97, 41, 90], 'true,false,true': [1.493, 11, 3], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.9, 52, 11], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'acquired(A, G)', 'false': 'acquired(H, I)'}, {'true,true,true': [0.926, 1, 6], 'true,true,false': [1.84, 4, 22], 'true,false,true': [1.749, 7, 7], 'true,false,false': [4.025, 26, 56], 'false,true': [3.21, 66, 13], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.431, 38, 91], 'true,false,false': [0.361, 66, 13], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'economicsectorcompany(B, E)'}, {'true,true,true': [4.81, 41, 90], 'true,true,false': [3.273, 63, 14], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'acquired(E, F)', 'true,false': 'bankboughtbank(A, G)', 'true,false,true': 'companyalsoknownas(C, G)'}, {'true,true,true': [0.42, 41, 90], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.369, 63, 13], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(A, E), bankboughtbank(D, E)', 'false': 'bankboughtbank(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.42, 41, 90], 'false,true': [0.0, 0, 1], 'false,false,true': [0.369, 63, 13], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'bankboughtbank(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.824, 104, 104], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20780001201851067, 0.13747796827431447], 'true': [nan, 0.20780001201851067], 'true,false': [0.12244897959183662, 0.21130072561139532], 'true,false,false': [nan, 0.21130072561139654], 'false': [0.0, 0.13017751479289888], 'true,false,true': [nan, 0.12244897959183662]}, {'': [0.20736470874002524, 0.13481122490061123], 'true': [nan, 0.20736470874002524], 'true,false': [nan, 0.20736470874002524]}, {'': [0.21178485236584865, nan], 'true': [0.19213498410043064, 0.1410255984071872], 'true,true': [nan, 0.19213498410043064], 'true,true,false': [0.19213498410043064, nan], 'true,false': [0.0, 0.1358571617649814], 'true,false,true': [nan, 0.0]}, {'': [0.1938676987693572, nan], 'true': [0.18858962726496406, 0.13823819601363888], 'true,true': [nan, 0.18858962726496406], 'true,false': [0.15918208494479566, 0.13344821087293504], 'true,false,false': [nan, 0.13344821087293504]}, {'': [0.18947426759977098, 0.13045481186966754], 'true': [0.12867955347319182, 0.20481614633932543], 'true,false': [0.2185138704957165, 0.19759561585887875], 'false': [0.13045481186966754, nan], 'true,true': [0.12244897959183679, 0.13017751479289974]}, {'': [0.17395696762553278, nan], 'true': [nan, 0.17395696762553278], 'true,false': [0.18596101279534405, 0.13047132152746518]}, {'': [0.17011001095558714, nan], 'true': [0.17011001095558714, nan], 'true,true': [0.17659653820751384, 0.13911805203433514]}, {'': [0.1670358551066079, nan], 'true': [0.17628791980599168, 0.13905345280488537], 'true,true': [0.17628791980599168, nan], 'true,false': [0.0, 0.13629875324068846], 'true,false,true': [nan, 0.0]}, {'': [0.17619129638685035, 0.13700818717672403], 'true': [nan, 0.17619129638685035], 'false': [0.0, 0.1361826689417015], 'false,false': [0.1361826689417015, nan]}, {'': [0.16309090911944743, nan], 'true': [nan, 0.16309090911944743], 'true,false': [0.16309090911944743, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;false;bankboughtbank(A, J).;true;true
2;;companyeconomicsector(A, B) :- acquired(D, C).;true;true
2;false;bankboughtbank(A, H).;true;true
7;;companyeconomicsector(A, B) :- acquired(D, C).;true;true
7;false;bankboughtbank(A, G).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
8;false;bankboughtbank(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), acquired(E, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5581489350995121;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=77 */
%   else if ( bankboughtbank(A, I) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, J) )
%   | | then if ( companyceo(J, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.021161409728073902;  // std dev = 2.481, 58.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=7 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then return 0.29378719549736126;  // std dev = 0.952, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyalsoknownas(C, F) )
%   | | then return 0.799122068361627;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4730417457636921;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( countryhascompanyoffice(G, A), companyceo(A, H) )
%   | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | then return 0.7758860545469174;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16342564529822765;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.28370141303883534;  // std dev = 0.476, 184.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=88 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | then if ( acquired(A, G) )
%   | | then return 0.24224327944795698;  // std dev = 0.945, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( companyalsoknownas(E, H) )
%   | | | then return 0.6462662568873417;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3912486482399522;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( bankchiefexecutiveceo(A, I), acquired(A, J) )
%   | | then return 0.6440391689726341;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.6588446110032458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22886157122232834;  // std dev = 6.441, 189.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), acquired(D, A) )
%   then return -0.24569105011627787;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( acquired(E, A), cityhascompanyoffice(F, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.47182355554812333;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.1939501455270985;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32108921029165594;  // std dev = 1.048, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.6746490273412912;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.11833676960897879;  // std dev = 1.196, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.19794156117181538;  // std dev = 6.221, 180.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=88 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.5136563659875406;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( bankchiefexecutiveceo(A, D), companyceo(E, D) )
%   | then return 0.43847688427327824;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), cityhascompanyoffice(G, F) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.3597321031928938;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2093226240700498;  // std dev = 1.408, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( companyalsoknownas(A, H), cityhascompanyoffice(I, H) )
%   | | | then return -0.023025786840008798;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1497532413120753;  // std dev = 6.230, 182.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=87 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3579728800415018;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(D, A) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then if ( acquired(F, D) )
%   | | | then return 0.1006771396819569;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19952681186934332;  // std dev = 1.010, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return 0.055058471723495726;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2619159999151987;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | then return 0.3872189704794229;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.02710860128906599;  // std dev = 1.310, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.13035148731246063;  // std dev = 6.002, 168.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=83 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.300222978536684;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(D, A), bankboughtbank(D, E) )
%   | then return 0.2469602071093103;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.28251993780195245;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(G, A) )
%   | | | then return -0.04288115383486999;  // std dev = 1.444, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.09513786951736022;  // std dev = 6.134, 180.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=88 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( countryhascompanyoffice(E, A), companyalsoknownas(A, F) )
%   | then return 0.24382323805190426;  // std dev = 0.712, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | | then return -0.20595007637799354;  // std dev = 0.525, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, I), acquired(A, J) )
%   | | | then return 0.2943525390554628;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07121585752333827;  // std dev = 6.275, 196.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=97 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.24582973044413703;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(E, F) )
%   | | | then return -0.0744148677676751;  // std dev = 0.612, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.010428016482422031;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.24768567197798586;  // std dev = 1.629, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.4341025141813777;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( bankboughtbank(I, A), countryhascompanyoffice(J, I) )
%   | | | then return -0.11015572169240506;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24934329244952982;  // std dev = 4.004, 94.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=68 */
%   else if ( bankboughtbank(A, K) )
%   | then return 0.24192586309261999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.19357245666445103;  // std dev = 0.359, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyceo(C, E) )
%   | then if ( acquired(F, C) )
%   | | then return 0.04023959084685731;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1815404766426846;  // std dev = 0.623, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.0042888102224021285;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( companyceo(A, G), countryhascompanyoffice(H, A) )
%   | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.41156401433373413;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3033971808238395;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2318470262114697;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, K), companyalsoknownas(K, L) )
%   | | then return -0.15120351999577883;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( countryhascompanyoffice(M, A) )
%   | | | then return -0.02320512202457303;  // std dev = 1.335, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.03838838596311695;  // std dev = 5.569, 169.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=82 */


Results
   AUC ROC   = 0.785724
   AUC PR    = 0.760572
   CLL	      = -0.587906
   Precision = 0.783613 at threshold = 0.5
   Recall    = 0.720077
   F1        = 0.750503


Total learning time: 21.348 seconds
Total inference time: 4.228 seconds
AUC ROC: 0.785724


Results scoring model
   AUC ROC   = 0.899917
   AUC PR    = 0.897889
   CLL	      = -0.527112
   Precision = 0.843137 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.834951


Total scoring time: 1.865 seconds
Refined model CLL: -0.527112


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.782619
   AUC PR    = 0.747022
   CLL	      = -0.550313
   Precision = 0.753597 at threshold = 0.5
   Recall    = 0.80888
   F1        = 0.780261


Total learning time: 29.851999999999997 seconds
Total inference time: 3.066 seconds
AUC ROC: 0.782619
Total revision time: 29.851999999999997
Best scored revision CLL: -0.507779


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:25:44
{'AUC ROC': 0.782619, 'AUC PR': 0.747022, 'CLL': -0.550313, 'Precision': [0.753597, 0.5], 'Recall': 0.80888, 'F1': 0.780261, 'Learning time': 29.851999999999997, 'Inference time': 3.066, 'parameter_0.4': {'AUC ROC': 0.782619, 'AUC PR': 0.747022, 'CLL': -0.550313, 'Precision': [0.753597, 0.5], 'Recall': 0.80888, 'F1': 0.780261, 'Learning time': 5.064, 'Inference time': 3.066}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, A), acquired(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6498156017661789;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else if ( bankboughtbank(A, H), companyalsoknownas(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5460102067758102;  // std dev = 6.095, 173.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=119 */
%   else if ( bankboughtbank(A, J) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.007271742117056226;  // std dev = 0.356, 114.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=17 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0.10517469833917074;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.48198851983123026;  // std dev = 6.340, 194.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=137 */
%   else return 0.012585025623971268;  // std dev = 0.361, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0.7283709154227049;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( bankboughtbank(F, G) )
%   | | | then return 0.3337175206692846;  // std dev = 6.863, 224.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=138 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, H) )
%   | | then if ( companyalsoknownas(C, I) )
%   | | | then return -0.24070557735503617;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.011429607037257091;  // std dev = 0.373, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.26631426434380245;  // std dev = 6.819, 226.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=140 */
%   | else if ( acquired(F, A) )
%   | | then return -0.026722481949152416;  // std dev = 1.256, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01006439565731199;  // std dev = 3.195, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.3085154301780866;  // std dev = 1.989, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else return 0.27077788803525327;  // std dev = 5.396, 147.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=107 */
%   | else if ( acquired(G, A) )
%   | | then return -0.11812287451742595;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.16982253063570218;  // std dev = 2.232, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( acquired(H, I) )
%   | then return -0.029328145784001315;  // std dev = 3.820, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, E) )
%   | | then return 0.19143957910564252;  // std dev = 0.447, 197.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=138 */
%   | | else return -0.025012780711427523;  // std dev = 0.356, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.1172433539201348;  // std dev = 6.602, 226.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=140 */
%   | | else return -0.005543019467079529;  // std dev = 3.388, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( acquired(E, F) )
%   | | then return 0.09040142823765114;  // std dev = 0.439, 226.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=140 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G) )
%   | | then if ( companyalsoknownas(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23521039449987735;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 7.453280599387175E-4;  // std dev = 0.368, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(A, E), bankboughtbank(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06987960565165607;  // std dev = 0.438, 226.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=140 */
%   else if ( bankboughtbank(A, F) )
%   | then return -0.19571503414879068;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 6.383824734531988E-4;  // std dev = 0.368, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(E, F) )
%   | | then return 0.038312489109701454;  // std dev = 7.418, 312.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=156 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.773727
   AUC PR    = 0.722371
   CLL	      = -0.561147
   Precision = 0.721393 at threshold = 0.5
   Recall    = 0.839768
   F1        = 0.776093


Total learning time: 6.381 seconds
Total inference time: 2.768 seconds
AUC ROC: 0.773727


Results scoring model
   AUC ROC   = 0.791872
   AUC PR    = 0.740089
   CLL	      = -0.536563
   Precision = 0.731844 at threshold = 0.5
   Recall    = 0.839744
   F1        = 0.78209


Total scoring time: 1.886 seconds
Parameter learned model CLL: -0.536563


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, D)', 'true,false': 'acquired(E, A), acquired(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'bankboughtbank(A, H), companyalsoknownas(I, H)', 'false': 'bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.99, 5, 19], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.095, 54, 119], 'false,true': [0.0, 0, 1], 'false,false': [0.356, 97, 17]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.801, 2, 1], 'true,false,false': [6.34, 57, 137], 'false': [0.361, 97, 18]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankboughtbank(A, E)', 'true,true,false': 'bankboughtbank(F, G)', 'true,false': 'bankboughtbank(A, H)', 'true,false,true': 'companyalsoknownas(C, I)'}, {'true,true,true': [0.011, 0, 2], 'true,true,false,true': [6.863, 86, 138], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.373, 68, 16], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'acquired(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.819, 86, 140], 'true,false,true': [1.256, 10, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.195, 60, 14], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'true,true': 'acquired(F, A)', 'true,false': 'acquired(G, A)', 'false': 'acquired(H, I)'}, {'true,true,true': [1.989, 5, 19], 'true,true,false': [5.396, 40, 107], 'true,false,true': [0.919, 4, 1], 'true,false,false': [2.232, 10, 11], 'false,true': [3.82, 97, 18], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.447, 59, 138], 'true,false,false': [0.356, 97, 18], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [6.602, 86, 140], 'true,true,false': [3.388, 70, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'acquired(E, F)', 'true,false': 'bankboughtbank(A, G)', 'true,false,true': 'companyalsoknownas(C, G)'}, {'true,true,true': [0.439, 86, 140], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.041, 2, 0], 'true,false,false': [0.368, 68, 16], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(A, E), bankboughtbank(D, E)', 'false': 'bankboughtbank(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.438, 86, 140], 'false,true': [0.036, 2, 0], 'false,false,true': [0.368, 68, 16], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'bankboughtbank(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.418, 156, 156], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20979669664253608, 0.13202268431001835], 'true': [nan, 0.20979669664253608], 'true,false': [0.16493055555555536, 0.21470814260416685], 'true,false,false': [nan, 0.214708142604167], 'true,false,true': [nan, 0.16493055555555536], 'false': [0.0, 0.12688519544475169]}, {'': [0.20942340402697002, 0.13016510198135284], 'true': [nan, 0.20942340402697002], 'true,false': [0.21409998176227882, 0.20718882201658684]}, {'': [0.2118517325332278, nan], 'true': [0.20975790352269186, 0.13768349722884093], 'true,true': [0.00013097791628158273, 0.21025124239521076], 'true,true,false': [0.21025124239521076, nan], 'true,false': [0.0, 0.1394832536131608], 'true,false,true': [0.0, nan]}, {'': [0.20047513725501162, nan], 'true': [0.20573086490688505, 0.13717462152333174], 'true,true': [nan, 0.20573086490688505], 'true,false': [0.13141486457896875, 0.13791980718193025], 'true,false,false': [nan, 0.13791980718193025]}, {'': [0.20229851728872042, 0.1269124249814096], 'true': [0.1935761629259988, 0.23698951608221908], 'true,false': [0.1690496402828392, 0.2372209546120643], 'true,true': [0.16485398810724736, 0.19806562080614667], 'false': [0.1269124249814096, nan]}, {'': [0.184070400446925, nan], 'true': [nan, 0.184070400446925], 'true,false': [0.2001589838080172, 0.1269273616782365]}, {'': [0.17948800912633978, nan], 'true': [0.17948800912633978, nan], 'true,true': [0.19283781607423878, 0.13348516494872317]}, {'': [0.1779740563999049, nan], 'true': [0.1924010793699174, 0.13350408569306765], 'true,true': [0.1924010793699174, nan], 'true,false': [0.000846209888396024, 0.13536783670814762], 'true,false,true': [nan, 0.000846209888396024]}, {'': [0.1921574958337307, 0.13310771262882665], 'true': [nan, 0.19215749583373068], 'false': [0.0006471976385479042, 0.13536491431618786], 'false,false': [0.13536491431618786, nan]}, {'': [0.1763766881662017, nan], 'true': [nan, 0.1763766881662017], 'true,false': [0.1763766881662017, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;false;bankboughtbank(A, J).;true;true
2;;companyeconomicsector(A, B) :- acquired(C, D).;true;true
2;true;bankboughtbank(A, E).;true;true
2;false;bankboughtbank(A, H).;true;true
7;;companyeconomicsector(A, B) :- acquired(C, D).;true;true
7;false;bankboughtbank(A, G).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
8;false;bankboughtbank(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(F, A), countryhascompanyoffice(G, F) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5417647543085495;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=121 */
%   else if ( bankboughtbank(A, I) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, J) )
%   | | then if ( cityhascompanyoffice(K, A), companyceo(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( acquired(M, A), cityhascompanyoffice(N, M) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.040727469394869716;  // std dev = 2.844, 89.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( countryhascompanyoffice(D, A), companyceo(A, E) )
%   | then if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then return 0.7887247186597903;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.16289543928950034;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.1894649340698945;  // std dev = 2.659, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.2885747663033694;  // std dev = 7.573, 250.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=120 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.22720334490725924;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(G, A), companyceo(G, H) )
%   | | | then return 0.13109634834353967;  // std dev = 1.905, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.24906602139257236;  // std dev = 7.870, 282.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=139 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.49332830382308307;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.633454946553008;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.06784022450434656;  // std dev = 2.171, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.19672077249606545;  // std dev = 7.700, 268.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=129 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(A, D), cityhascompanyoffice(E, D) )
%   | then if ( companyceo(D, F) )
%   | | then return 0.41827546812710004;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.16378219613197478;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( companyalsoknownas(A, G), acquired(A, H) )
%   | | then if ( countryhascompanyoffice(I, G) )
%   | | | then return 0.21106567590881387;  // std dev = 0.780, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.28644229822189204;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( companyceo(A, J), acquired(A, K) )
%   | | | then return 0.2595891054257907;  // std dev = 1.617, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.14815083966990955;  // std dev = 7.618, 271.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=129 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( cityhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( acquired(E, F) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.44389229653418977;  // std dev = 0.317, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5781554372911076;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.315392129974373;  // std dev = 0.810, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( companyceo(G, H) )
%   | | | then return -0.23244804505908812;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.20781453632300653;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2904247529945189;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.12760373463525085;  // std dev = 0.456, 286.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=144 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.32387658060999197;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.310930816105527;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08865864327553169;  // std dev = 0.451, 303.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=147 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | then if ( companyceo(E, G) )
%   | | then return 0.24061282341845977;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.07085934645325626;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | then return 0.21085531986438324;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return -0.033361187769167154;  // std dev = 1.701, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.07233529014503466;  // std dev = 7.531, 276.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=135 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( countryhascompanyoffice(E, A), bankchiefexecutiveceo(A, F) )
%   | then return 0.4173173948752653;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.07429281752479695;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | | | then return 0.17794179833329718;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1374023370166377;  // std dev = 6.543, 210.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=126 */
%   else if ( bankboughtbank(A, I) )
%   | then return -0.34669608450142764;  // std dev = 0.178, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, J) )
%   | | then if ( cityhascompanyoffice(K, A) )
%   | | | then return -0.2039643595963435;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4301978525535696;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.012508828891101728;  // std dev = 1.467, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.16382902181513198;  // std dev = 2.928, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.15341135810334622;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(A, D), cityhascompanyoffice(E, D) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.2114112461296317;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.014496011979374175;  // std dev = 0.834, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.3060611094378605;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then return 0.17317682625345268;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return -0.01075623431093039;  // std dev = 1.714, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.04232183745395015;  // std dev = 7.283, 265.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=130 */


Results
   AUC ROC   = 0.796595
   AUC PR    = 0.780943
   CLL	      = -0.586081
   Precision = 0.74364 at threshold = 0.5
   Recall    = 0.733591
   F1        = 0.738581


Total learning time: 18.909 seconds
Total inference time: 4.065 seconds
AUC ROC: 0.796595


Results scoring model
   AUC ROC   = 0.840422
   AUC PR    = 0.826694
   CLL	      = -0.559468
   Precision = 0.768293 at threshold = 0.5
   Recall    = 0.807692
   F1        = 0.7875


Total scoring time: 2.012 seconds
Refined model CLL: -0.559468


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.773727
   AUC PR    = 0.722371
   CLL	      = -0.561147
   Precision = 0.721393 at threshold = 0.5
   Recall    = 0.839768
   F1        = 0.776093


Total learning time: 29.188 seconds
Total inference time: 2.768 seconds
AUC ROC: 0.773727
Total revision time: 29.188
Best scored revision CLL: -0.536563


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:26:20
{'AUC ROC': 0.773727, 'AUC PR': 0.722371, 'CLL': -0.561147, 'Precision': [0.721393, 0.5], 'Recall': 0.839768, 'F1': 0.776093, 'Learning time': 29.188, 'Inference time': 2.768, 'parameter_0.6': {'AUC ROC': 0.773727, 'AUC PR': 0.722371, 'CLL': -0.561147, 'Precision': [0.721393, 0.5], 'Recall': 0.839768, 'F1': 0.776093, 'Learning time': 6.381, 'Inference time': 2.768}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, E), acquired(F, C) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( bankboughtbank(A, H), companyalsoknownas(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5618526388032127;  // std dev = 7.118, 243.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=171 */
%   else if ( bankboughtbank(A, J) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -8.254238748468687E-4;  // std dev = 0.348, 156.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=22 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0.0252413710464826;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4948496059201047;  // std dev = 7.148, 255.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=184 */
%   else return 0.0038622756037926006;  // std dev = 0.352, 157.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=23 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0.7708127265946236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(F, G) )
%   | | | then return 0.4079745573434837;  // std dev = 6.892, 258.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=182 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, H) )
%   | | then if ( companyalsoknownas(C, I) )
%   | | | then return -0.22918727340537629;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7186932232658432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.027725994979298244;  // std dev = 0.358, 153.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31984619296355987;  // std dev = 6.828, 259.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=183 */
%   | else if ( acquired(A, F) )
%   | | then return 0.030920712188559407;  // std dev = 2.116, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03502448773570229;  // std dev = 3.924, 129.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.3361238037316723;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.2743609772869924;  // std dev = 3.284, 61.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | else if ( acquired(A, G) )
%   | | then return 0.15050228252532305;  // std dev = 2.266, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0.239260991639019;  // std dev = 5.367, 157.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=109 */
%   else if ( acquired(H, I) )
%   | then return -0.02133543148160633;  // std dev = 4.361, 157.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, E) )
%   | | then return 0.18512376278852521;  // std dev = 0.424, 259.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=185 */
%   | | else return -0.0184433565833992;  // std dev = 0.348, 157.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=23 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.15470816097290657;  // std dev = 6.622, 259.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=183 */
%   | | else return -0.039386709619397345;  // std dev = 4.515, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, F) )
%   | | then return 0.11941623459816661;  // std dev = 0.411, 259.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=183 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G) )
%   | | then if ( companyalsoknownas(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.045725507904232604;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.033396134839539605;  // std dev = 0.360, 153.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(A, E), bankboughtbank(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09284144940887436;  // std dev = 0.411, 259.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=183 */
%   else if ( bankboughtbank(A, F) )
%   | then return -0.03657444910777003;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return -0.028726047436915373;  // std dev = 0.360, 153.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(E, F) )
%   | | then return 0.03585162922481749;  // std dev = 8.060, 416.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=208 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.78443
   AUC PR    = 0.748726
   CLL	      = -0.544436
   Precision = 0.762075 at threshold = 0.5
   Recall    = 0.822394
   F1        = 0.791086


Total learning time: 8.337 seconds
Total inference time: 2.793 seconds
AUC ROC: 0.78443


Results scoring model
   AUC ROC   = 0.832124
   AUC PR    = 0.785371
   CLL	      = -0.492002
   Precision = 0.795455 at threshold = 0.5
   Recall    = 0.841346
   F1        = 0.817757


Total scoring time: 1.749 seconds
Parameter learned model CLL: -0.492002


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, D)', 'true,false': 'acquired(A, E), acquired(F, C)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'bankboughtbank(A, H), companyalsoknownas(I, H)', 'false': 'bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.323, 2, 14], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.118, 72, 171], 'false,true': [0.0, 0, 1], 'false,false': [0.348, 134, 22]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.866, 3, 1], 'true,false,false': [7.148, 71, 184], 'false': [0.352, 134, 23]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(A, E)', 'true,true,false': 'bankboughtbank(F, G)', 'true,false': 'bankboughtbank(A, H)', 'true,false,true': 'companyalsoknownas(C, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [6.892, 76, 182], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 3, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.358, 129, 24], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'acquired(A, F)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.828, 76, 183], 'true,false,true': [2.116, 22, 6], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.924, 110, 19], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'acquired(A, G)', 'false': 'acquired(H, I)'}, {'true,true,true': [1.323, 2, 14], 'true,true,false': [3.284, 14, 47], 'true,false,true': [2.266, 10, 15], 'true,false,false': [5.367, 48, 109], 'false,true': [4.361, 134, 23], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.424, 74, 185], 'true,false,false': [0.348, 134, 23], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'economicsectorcompany(B, E)'}, {'true,true,true': [6.622, 76, 183], 'true,true,false': [4.515, 132, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'acquired(E, F)', 'true,false': 'bankboughtbank(A, G)', 'true,false,true': 'companyalsoknownas(C, G)'}, {'true,true,true': [0.411, 76, 183], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.707, 3, 1], 'true,false,false': [0.36, 129, 24], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(A, E), bankboughtbank(D, E)', 'false': 'bankboughtbank(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.411, 76, 183], 'false,true': [0.709, 3, 1], 'false,false,true': [0.36, 129, 24], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'bankboughtbank(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.06, 208, 208], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2040816326530666, 0.12503549839750192], 'true': [nan, 0.2040816326530666], 'true,false': [0.10937499999999967, 0.20850480109739827], 'true,false,false': [nan, 0.20850480109739922], 'false': [0.0, 0.12113740959894904], 'true,false,true': [nan, 0.10937499999999978]}, {'': [0.20351781687964235, 0.12364852155468267], 'true': [nan, 0.20351781687964235], 'true,false': [0.18750000000000006, 0.2003631787713977]}, {'': [0.20787114297543868, nan], 'true': [0.18392723851220358, 0.12891106039804032], 'true,true': [0.0, 0.1841318276925897], 'true,true,false': [0.1841318276925897, nan], 'true,false': [0.16846451924431458, 0.12784485875911963], 'true,false,true': [9.25185853854297e-18, 0.0]}, {'': [0.1877478862211763, nan], 'true': [0.18000011072020758, 0.12723455019952384], 'true,true': [nan, 0.18000011072020758], 'true,false': [0.15996353700390223, 0.11935500736440106], 'true,false,false': [nan, 0.11935500736440106]}, {'': [0.18102787765900255, 0.12114736831725309], 'true': [0.1634446380744359, 0.18739217221928062], 'true,false': [0.20531564983090256, 0.1834559575215224], 'true,true': [0.10937500000000011, 0.17683418435904313], 'false': [0.12114736831725309, nan]}, {'': [0.16735891170896505, nan], 'true': [nan, 0.16735891170896505], 'true,false': [0.17973162344599133, 0.12114775949704996]}, {'': [0.16325925382449002, nan], 'true': [0.16325925382449002, nan], 'true,true': [0.16929897058961393, 0.12984069255536368]}, {'': [0.15962374358224768, nan], 'true': [0.16893664413630466, 0.12966196137889122], 'true,true': [0.16893664413630466, nan], 'true,false': [0.12493855503328842, 0.12978157617259903], 'true,false,true': [nan, 0.12493855503328842]}, {'': [0.1688082453768432, 0.12952139334048285], 'true': [nan, 0.1688082453768432], 'false': [0.12577331452066837, 0.1296178129685027], 'false,false': [0.1296178129685027, nan]}, {'': [0.1561682624493428, nan], 'true': [nan, 0.1561682624493428], 'true,false': [0.1561682624493428, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;false;bankboughtbank(A, J).;true;true
2;;companyeconomicsector(A, B) :- acquired(D, C).;true;true
2;true;bankboughtbank(A, E).;true;true
2;false;bankboughtbank(A, H).;true;true
2;false,true;companyalsoknownas(C, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( bankboughtbank(F, A) )
%   | | then if ( acquired(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5612057036584613;  // std dev = 6.914, 229.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=161 */
%   else if ( bankboughtbank(A, H) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.010691307980868306;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), acquired(E, F) )
%   | | then return 0.40264789310128285;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7359812264346162;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, G) )
%   | | then if ( economicsectorcompany(B, G) )
%   | | | then return 0.775354074369123;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29705288004755087;  // std dev = 3.825, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | else if ( acquired(H, A), companyceo(H, I) )
%   | | | then return 0.16197800481736263;  // std dev = 2.057, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.2839358834034738;  // std dev = 8.376, 309.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=147 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, D) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.1247800962952303;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.6021372668961551;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( bankboughtbank(G, A), cityhascompanyoffice(H, G) )
%   | | | then return 0.053123058201103066;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2511350512804545;  // std dev = 9.400, 402.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=200 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.45354194922358504;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(D, C), cityhascompanyoffice(D, A) )
%   | | then return -0.04186892094295403;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( cityhascompanyoffice(E, C), companyceo(C, F) )
%   | | | then return 0.4435161112274171;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22536657396629947;  // std dev = 3.568, 56.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.4259722199038746;  // std dev = 0.279, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( bankboughtbank(H, A), countryhascompanyoffice(I, H) )
%   | | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.4100848444291669;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07476991064043477;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.16335103392019287;  // std dev = 3.136, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.19731567683214257;  // std dev = 7.813, 281.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=137 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), acquired(C, A) )
%   then return 0.32132288322977504;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), acquired(E, F) )
%   | | then return 0.1697217872020437;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4096763752149731;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, G) )
%   | | then if ( companyceo(G, H), companyalsoknownas(A, I) )
%   | | | then return -0.009304275830240672;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18968382892445124;  // std dev = 3.660, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.4461208894866756;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14193360665742516;  // std dev = 8.410, 326.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=152 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then return -0.023196159672833797;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( acquired(E, A), bankboughtbank(E, A) )
%   | then return 0.24635225422463955;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.24951777402721703;  // std dev = 0.877, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.04276707706238159;  // std dev = 2.296, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( companyceo(A, H), acquired(I, A) )
%   | | | then return 0.28533704506847646;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12532236437296343;  // std dev = 8.810, 369.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=184 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.3164732218819638;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(A, D) )
%   | then if ( companyalsoknownas(A, E), companyceo(D, F) )
%   | | then return -0.11290316874439943;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.2875638877190114;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11297296307896214;  // std dev = 3.637, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( companyalsoknownas(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.5595045918898606;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.30234563769103423;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( countryhascompanyoffice(J, A), companyalsoknownas(A, K) )
%   | | | then return 0.284570206161769;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0893031697150291;  // std dev = 8.300, 326.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=158 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then return -0.03883374471440995;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.22991561070337782;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | | then return -0.0959890630542016;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0766949814876538;  // std dev = 3.360, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | then return 0.2069632446642624;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( bankboughtbank(K, A) )
%   | | | then return 0.2299144098785794;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06977043300736833;  // std dev = 8.319, 338.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=167 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.19175086834228933;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.07679474512054663;  // std dev = 0.782, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( acquired(E, A), companyalsoknownas(A, F) )
%   | | | then return 0.20204581321032056;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06445300646805203;  // std dev = 3.577, 56.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   else if ( companyalsoknownas(A, G), cityhascompanyoffice(H, G) )
%   | then return -0.013003685033153668;  // std dev = 0.277, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankboughtbank(A, J) )
%   | | | then return -0.11771548691566379;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.046001832482969254;  // std dev = 2.098, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.05327033311550992;  // std dev = 2.631, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.058714296957972284;  // std dev = 7.575, 276.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=136 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.17425794618723342;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( cityhascompanyoffice(F, D) )
%   | | then if ( cityhascompanyoffice(G, A) )
%   | | | then return -0.02085096969307048;  // std dev = 1.305, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09025983882161803;  // std dev = 1.405, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( companyalsoknownas(D, H) )
%   | | | then return 0.08839824303138488;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.37943388726269034;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(I, A) )
%   | | then if ( acquired(A, J), acquired(J, I) )
%   | | | then return -0.1016004832969037;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11182146718063034;  // std dev = 2.152, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.06823742358838528;  // std dev = 2.371, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.03672459060890808;  // std dev = 8.175, 322.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=157 */


Results
   AUC ROC   = 0.754398
   AUC PR    = 0.739042
   CLL	      = -0.616447
   Precision = 0.694915 at threshold = 0.5
   Recall    = 0.712355
   F1        = 0.703527


Total learning time: 17.521 seconds
Total inference time: 3.158 seconds
AUC ROC: 0.754398


Results scoring model
   AUC ROC   = 0.825259
   AUC PR    = 0.805345
   CLL	      = -0.592353
   Precision = 0.752294 at threshold = 0.5
   Recall    = 0.788462
   F1        = 0.769953


Total scoring time: 2.123 seconds
Refined model CLL: -0.592353


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.78443
   AUC PR    = 0.748726
   CLL	      = -0.544436
   Precision = 0.762075 at threshold = 0.5
   Recall    = 0.822394
   F1        = 0.791086


Total learning time: 29.73 seconds
Total inference time: 2.793 seconds
AUC ROC: 0.78443
Total revision time: 29.73
Best scored revision CLL: -0.492002


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:26:57
{'AUC ROC': 0.78443, 'AUC PR': 0.748726, 'CLL': -0.544436, 'Precision': [0.762075, 0.5], 'Recall': 0.822394, 'F1': 0.791086, 'Learning time': 29.73, 'Inference time': 2.793, 'parameter_0.8': {'AUC ROC': 0.78443, 'AUC PR': 0.748726, 'CLL': -0.544436, 'Precision': [0.762075, 0.5], 'Recall': 0.822394, 'F1': 0.791086, 'Learning time': 8.337, 'Inference time': 2.793}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(D, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(H, A), companyalsoknownas(I, H) )
%   | | | then return 0.5803711573217345;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.5680465460210107;  // std dev = 7.768, 293.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=208 */
%   else if ( acquired(J, A) )
%   | then return 0.045648935099512344;  // std dev = 2.208, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else return 0.0119950889456657;  // std dev = 0.361, 169.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=26 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, A) )
%   | | then return 0.44950722236522084;  // std dev = 3.480, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | else return 0.4961778817848914;  // std dev = 7.258, 263.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=190 */
%   else return 0.015220728990730436;  // std dev = 0.366, 201.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=32 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(E, A) )
%   | | then return 0.4988844098689909;  // std dev = 0.373, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( acquired(F, G) )
%   | | | then return 0.594734340163431;  // std dev = 2.787, 107.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A) )
%   | | then if ( companyalsoknownas(C, I) )
%   | | | then return 0.3317308601195614;  // std dev = 3.312, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | | | else return 0.017243234943702404;  // std dev = 2.041, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else return 0.13076641346668932;  // std dev = 0.448, 325.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=119 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4517037045048341;  // std dev = 2.984, 117.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=105 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.19724017983008282;  // std dev = 1.142, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12561330272956006;  // std dev = 8.880, 394.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=154 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.3741089383643071;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.34669706772641873;  // std dev = 1.649, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.2291205012663191;  // std dev = 0.705, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.26145220078314013;  // std dev = 7.236, 269.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=187 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.025574270119114555;  // std dev = 5.146, 201.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(C, E) )
%   | | then return 0.19929663802127887;  // std dev = 0.422, 319.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=228 */
%   | | else return -0.02177921388564942;  // std dev = 0.363, 201.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=32 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.2389276981067104;  // std dev = 2.887, 117.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=105 */
%   | | else return 0.04142119734244966;  // std dev = 8.664, 403.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=155 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.18999462000144235;  // std dev = 0.267, 117.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A) )
%   | | then if ( companyalsoknownas(C, G) )
%   | | | then return 0.1332572660726055;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07286485372511757;  // std dev = 3.701, 75.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=34 */
%   | | else return 0.02309961690787246;  // std dev = 0.431, 325.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=119 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( acquired(E, A), acquired(E, D) )
%   | then return 0.18837982946356913;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1536541964333458;  // std dev = 0.270, 115.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=103 */
%   else if ( acquired(F, A) )
%   | then return 0.059641519688145475;  // std dev = 3.786, 78.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=36 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.018497974929573096;  // std dev = 0.431, 325.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=119 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, F) )
%   | | then return 0.04501896876550608;  // std dev = 9.174, 520.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.792656
   AUC PR    = 0.792849
   CLL	      = -0.544387
   Precision = 0.677419 at threshold = 0.5
   Recall    = 0.851351
   F1        = 0.754491


Total learning time: 11.905 seconds
Total inference time: 3.312 seconds
AUC ROC: 0.792656


Results scoring model
   AUC ROC   = 0.83733
   AUC PR    = 0.843805
   CLL	      = -0.501914
   Precision = 0.728435 at threshold = 0.5
   Recall    = 0.876923
   F1        = 0.795812


Total scoring time: 2.426 seconds
Parameter learned model CLL: -0.501914


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(D, A)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'acquired(H, A), companyalsoknownas(I, H)', 'false': 'acquired(J, A)'}, {'true,true': [0.816, 1, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [4.21e-08, 0, 5], 'true,false,false,true': [1.9, 5, 13], 'true,false,false,false': [7.768, 85, 208], 'false,true': [2.208, 26, 6], 'false,false': [0.361, 143, 26]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'acquired(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.48, 18, 38], 'true,false,false': [7.258, 73, 190], 'false': [0.366, 169, 32]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(E, A)', 'true,true,false': 'acquired(F, G)', 'true,false': 'acquired(H, A)', 'true,false,true': 'companyalsoknownas(C, I)'}, {'true,true,true': [0.373, 2, 8], 'true,true,false,true': [2.787, 10, 97], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [3.312, 17, 31], 'true,false,true,false': [2.041, 25, 5], 'true,false,false': [0.448, 206, 119], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.984, 12, 105], 'true,false,true': [1.142, 8, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.88, 240, 154], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.036, 0, 5], 'true,true,false': [1.649, 3, 35], 'true,false,true': [0.705, 6, 1], 'true,false,false': [7.236, 82, 187], 'false,true': [5.146, 169, 32], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(C, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.422, 91, 228], 'true,false,false': [0.363, 169, 32], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [2.887, 12, 105], 'true,true,false': [8.664, 248, 155], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'acquired(G, A)', 'true,false,true': 'companyalsoknownas(C, G)'}, {'true,true,true': [0.267, 12, 105], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.816, 1, 2], 'true,false,true,false': [3.701, 41, 34], 'true,false,false': [0.431, 206, 119], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'acquired(E, A), acquired(E, D)', 'false': 'acquired(F, A)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.27, 12, 103], 'false,true': [3.786, 42, 36], 'false,false,true': [0.431, 206, 119], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.174, 260, 260], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.20388950580281676, 0.13385807281998077], 'true': [0.22222222222222224, 0.20369331837846935], 'true,false': [0.0, 0.20564303512164286], 'true,false,false': [0.20061728395061695, 0.20594299292945067], 'false': [0.1523437500000002, 0.1301775147929004], 'true,false,true': [nan, 3.552713678800501e-16]}, {'': [0.20343872540301985, 0.1338227374574302], 'true': [nan, 0.20343872540301985], 'true,false': [0.2163130062380974, 0.20031506242728012]}, {'': [0.21031272674515294, nan], 'true': [0.07902421968947723, 0.2048112525215237], 'true,false': [0.21749201527025064, 0.20052892232046493], 'true,false,true': [0.22857955910908265, 0.13888888888888884], 'true,true': [0.13926216372030614, 0.07260927374386317], 'true,true,false': [0.07260927374386317, nan]}, {'': [0.19238896107456688, nan], 'true': [0.07608585317639267, 0.20115929987789027], 'true,false': [0.14492324846116159, 0.2001160649911282], 'true,false,false': [nan, 0.2001160649911282], 'true,true': [nan, 0.07608585317639267]}, {'': [0.18057364807128137, 0.13173149167214823], 'true': [0.06332708362874605, 0.1974686855783783], 'true,false': [0.07100350939966418, 0.19465586532053392], 'false': [0.13173149167214823, nan], 'true,true': [0.0002650747391809816, 0.07153734304576033]}, {'': [0.17176242599692862, nan], 'true': [nan, 0.17176242599692862], 'true,false': [0.17808609776732962, 0.13174370412948952]}, {'': [0.16719614678892886, nan], 'true': [0.16719614678892886, nan], 'true,true': [0.0712295643637644, 0.18628042863936778]}, {'': [0.1644923303769761, nan], 'true': [0.0713318520456466, 0.18600606775465744], 'true,false': [0.18431562856790537, 0.18588664502536817], 'true,false,true': [0.22222222222222224, 0.18265908622676547], 'true,true': [0.0713318520456466, nan]}, {'': [0.07159059744426209, 0.1856369187814195], 'false': [0.1838088832727429, 0.18574801028247523], 'false,false': [0.18574801028247523, nan], 'true': [0.0, 0.07281503815748441]}, {'': [0.16183402360438978, nan], 'true': [nan, 0.16183402360438978], 'true,false': [0.16183402360438978, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(D, A).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankboughtbank(C, D).;true;true
8;true;acquired(E, A), acquired(E, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(D, A) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5561355122807171;  // std dev = 7.926, 298.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=208 */
%   else if ( acquired(A, H) )
%   | then if ( cityhascompanyoffice(I, A) )
%   | | then return -0.00851773156715447;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( companyalsoknownas(H, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( bankboughtbank(K, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.013802284412682945;  // std dev = 0.334, 164.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=21 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( acquired(C, D), economicsectorcompany(B, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(C, E), bankboughtbank(C, E) )
%   | | then return -0.02268543777897162;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.2880808502344404;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2492029329699165;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.6610941491928664;  // std dev = 0.236, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.7762359678824616;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2471249402916835;  // std dev = 3.767, 61.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.2897583353321299;  // std dev = 2.805, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.29729185098525723;  // std dev = 9.411, 390.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=190 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.35855213650286055;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7213203092283441;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(E, F), acquired(F, G) )
%   | | then return 0.2627789472977789;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5763269067570639;  // std dev = 0.076, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then if ( cityhascompanyoffice(J, H) )
%   | | | then return 0.17144448451554947;  // std dev = 2.302, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.02977528260286675;  // std dev = 1.194, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.1664034180778308;  // std dev = 2.812, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.25371685574068226;  // std dev = 9.745, 423.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=210 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), companyceo(D, F) )
%   | | then return 0.5903586626076822;  // std dev = 0.182, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( companyceo(A, G), acquired(H, D) )
%   | | | then return 0.6630763739096575;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15808728636448702;  // std dev = 2.259, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else return -0.24161184513440256;  // std dev = 0.287, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | then return 0.573740302164926;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | then if ( companyalsoknownas(J, K) )
%   | | | then return 0.17269023074900489;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4266407911799215;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, L), acquired(A, M) )
%   | | | then return 0.17402234478583306;  // std dev = 2.171, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.1980722695107825;  // std dev = 9.259, 387.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=188 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5360172447678717;  // std dev = 0.255, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | else if ( acquired(F, A) )
%   | | then if ( bankboughtbank(G, A) )
%   | | | then return -0.3038329671803345;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.25960258665862884;  // std dev = 2.585, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | | | then return 0.2805990451908587;  // std dev = 1.486, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.29741476303446013;  // std dev = 6.615, 212.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=145 */
%   else if ( acquired(A, J) )
%   | then if ( companyceo(A, K), countryhascompanyoffice(L, A) )
%   | | then return -0.2707298447164158;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( cityhascompanyoffice(M, A), cityhascompanyoffice(N, J) )
%   | | | then return -0.18411947904665743;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0931501258069597;  // std dev = 2.257, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else return -0.10949273950439192;  // std dev = 0.340, 167.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.22554317804968796;  // std dev = 0.203, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.06871703768805612;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.08575615249046288;  // std dev = 0.425, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   else if ( acquired(A, E), bankboughtbank(F, E) )
%   | then if ( acquired(F, E) )
%   | | then return 0.0786417083261075;  // std dev = 1.058, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.029587495770659084;  // std dev = 0.941, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.17471981899422806;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08606459514378366;  // std dev = 2.254, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( companyceo(A, I), cityhascompanyoffice(J, A) )
%   | | | then return 0.09335914812313892;  // std dev = 1.117, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12761046843721024;  // std dev = 8.507, 376.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=188 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.2188000129581913;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.005588414281224085;  // std dev = 0.352, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( acquired(E, A), companyceo(E, F) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.14978597699869875;  // std dev = 0.277, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( acquired(E, G), economicsectorcompany(B, G) )
%   | | | then return 0.5614958368154417;  // std dev = 0.270, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.28421518052245265;  // std dev = 0.392, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.31431434258954866;  // std dev = 2.144, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | | else return -0.2206398446658306;  // std dev = 0.393, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( acquired(A, J) )
%   | | | then return 0.07993171719313298;  // std dev = 3.132, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.09731985108641356;  // std dev = 8.136, 344.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=172 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.14594363079221725;  // std dev = 0.231, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( cityhascompanyoffice(E, C) )
%   | | then if ( cityhascompanyoffice(E, A) )
%   | | | then return -0.017415949814634006;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08544893782213775;  // std dev = 1.481, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return -0.08496627380479642;  // std dev = 0.286, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then return 0.3026436461862359;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, G), countryhascompanyoffice(H, G) )
%   | | then if ( companyalsoknownas(A, I), countryhascompanyoffice(H, I) )
%   | | | then return 0.1201358734281219;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.01353854233459431;  // std dev = 1.783, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( cityhascompanyoffice(J, A), companyceo(A, K) )
%   | | | then return 0.03564699520153559;  // std dev = 1.464, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.07247543745577355;  // std dev = 8.914, 429.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=214 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( acquired(E, A), acquired(E, D) )
%   | then return 0.2347478739246821;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.36120362153473395;  // std dev = 0.272, 115.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=103 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.21378227609379422;  // std dev = 0.217, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( cityhascompanyoffice(G, A), companyceo(A, H) )
%   | | | then return 0.08265417352093836;  // std dev = 1.055, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.07596448703896834;  // std dev = 1.916, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.19078865522483923;  // std dev = 2.351, 49.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=37 */
%   | | | else return -0.2037909860896688;  // std dev = 0.367, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( companyceo(A, K) )
%   | | | then return -0.044238716946557594;  // std dev = 2.334, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.07089379128390595;  // std dev = 6.818, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.12123630845443775;  // std dev = 0.206, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( companyalsoknownas(D, F), countryhascompanyoffice(G, F) )
%   | | then if ( countryhascompanyoffice(H, D) )
%   | | | then return 0.0993292103495026;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1116336754659778;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( bankchiefexecutiveceo(D, I) )
%   | | | then return 0.08483338822109467;  // std dev = 0.818, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.053277906731524965;  // std dev = 1.443, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | then if ( cityhascompanyoffice(K, J), companyceo(J, L) )
%   | | | then return 0.023120294948452247;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2426014269258506;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(A, M), economicsectorcompany(B, M) )
%   | | | then return 0.2285022324468551;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03692915675121037;  // std dev = 8.781, 456.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=221 */


Results
   AUC ROC   = 0.853237
   AUC PR    = 0.851221
   CLL	      = -0.524007
   Precision = 0.734043 at threshold = 0.5
   Recall    = 0.799228
   F1        = 0.76525


Total learning time: 11.699 seconds
Total inference time: 1.776 seconds
AUC ROC: 0.853237


Results scoring model
   AUC ROC   = 0.892685
   AUC PR    = 0.897531
   CLL	      = -0.496032
   Precision = 0.782609 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.80597


Total scoring time: 1.478 seconds
Refined model CLL: -0.496032


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.853237
   AUC PR    = 0.851221
   CLL	      = -0.524007
   Precision = 0.734043 at threshold = 0.5
   Recall    = 0.799228
   F1        = 0.76525


Total learning time: 27.508000000000003 seconds
Total inference time: 1.776 seconds
AUC ROC: 0.853237
Total revision time: 27.508000000000003
Best scored revision CLL: -0.496032


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:27:30
{'AUC ROC': 0.853237, 'AUC PR': 0.851221, 'CLL': -0.524007, 'Precision': [0.734043, 0.5], 'Recall': 0.799228, 'F1': 0.76525, 'Learning time': 27.508000000000003, 'Inference time': 1.776, 'parameter_1.0': {'AUC ROC': 0.792656, 'AUC PR': 0.792849, 'CLL': -0.544387, 'Precision': [0.677419, 0.5], 'Recall': 0.851351, 'F1': 0.754491, 'Learning time': 11.905, 'Inference time': 3.312}}


Starting fold 3

Target train facts examples: 5307
Target train pos examples: 258
Target train neg examples: 258

Target test facts examples: 5307
Target test pos	 examples: 520
Target test neg examples: 520

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6081489350995113;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=39 */
%   else if ( companyalsoknownas(A, J) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.04862512557570285;  // std dev = 0.393, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.43969526174873175;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5261199912362056;  // std dev = 3.017, 50.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   else return 0.0471123306038123;  // std dev = 0.397, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5871989079317121;  // std dev = 1.098, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.3541458393600589;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08817870687533103;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.13042720317452516;  // std dev = 0.452, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4502862695681454;  // std dev = 1.033, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.23836394401987562;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13272714075328307;  // std dev = 3.973, 76.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=30 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.3493826130901697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.40811723633506075;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0.04621550870378749;  // std dev = 0.512, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2668046977278258;  // std dev = 2.882, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   else if ( bankboughtbank(H, I) )
%   | then return -1.530986877258389E-4;  // std dev = 2.713, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.20952299519033493;  // std dev = 0.394, 56.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=42 */
%   | | else return -1.2915119971678422E-4;  // std dev = 0.400, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.23603270975986582;  // std dev = 0.857, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.044714610721373824;  // std dev = 3.920, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.1891906416562695;  // std dev = 0.181, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.3761881271658708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06167093309791857;  // std dev = 1.380, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.02763206174305706;  // std dev = 0.439, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15487971644007245;  // std dev = 0.184, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.0733458390977825;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.022191644410582724;  // std dev = 0.439, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.0468345421543633;  // std dev = 4.037, 102.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.799421
   AUC PR    = 0.784301
   CLL	      = -0.5283
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 3.648 seconds
Total inference time: 3.167 seconds
AUC ROC: 0.799421


Results scoring model
   AUC ROC   = 0.842753
   AUC PR    = 0.873012
   CLL	      = -0.497561
   Precision = 0.763636 at threshold = 0.5
   Recall    = 0.823529
   F1        = 0.792453


Total scoring time: 1.434 seconds
Parameter learned model CLL: -0.497561


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.707, 1, 1], 'true,false,false,false': [3.122, 13, 39], 'false,true': [0.866, 3, 1], 'false,false': [0.393, 34, 8]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.131, 2, 4], 'true,false,false': [3.017, 12, 38], 'false': [0.397, 37, 9]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.098, 2, 21], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [1.127, 2, 4], 'true,false,true,false': [0.866, 3, 1], 'true,false,false': [0.452, 44, 25], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.033, 2, 21], 'true,false,true': [0.16, 3, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.973, 46, 30], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.49e-08, 0, 6], 'true,false,true': [0.512, 1, 1], 'true,false,false': [2.882, 13, 34], 'false,true': [2.713, 37, 9], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.394, 14, 42], 'true,false,false': [0.4, 37, 9], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [0.857, 2, 21], 'true,true,false': [3.92, 49, 30], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.181, 2, 21], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [1.38, 5, 4], 'true,false,false': [0.439, 44, 25], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.184, 2, 21], 'false,true': [1.399, 5, 5], 'false,false,true': [0.439, 44, 25], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.037, 51, 51], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.18750000000000058, 0.15737240075614384], 'true': [0.0, 0.18975206611570314], 'true,false': [0.0, 0.19204389574760036], 'true,false,false': [0.25, 0.18750000000000178], 'false': [0.18750000000000003, 0.15419501133786864], 'true,false,true': [nan, 0.0]}, {'': [0.18604881516343946, 0.15730466932572168], 'true': [nan, 0.18604881516343946], 'true,false': [0.21322448179680145, 0.18198746011025907]}, {'': [0.20692000775854996, nan], 'true': [0.05244841887344485, 0.20785611102773852], 'true,false': [0.21889799802765714, 0.2045132113030437], 'true,false,true': [0.21153459048790246, 0.1875], 'true,true': [nan, 0.05244841887344485], 'true,true,false': [0.05244841887344485, nan]}, {'': [0.1885648141002694, nan], 'true': [0.04640778851689545, 0.2051500687054171], 'true,false': [0.008570615239176202, 0.2076803437257915], 'true,false,false': [nan, 0.2076803437257915], 'true,true': [nan, 0.04640778851689545]}, {'': [0.15692452169882692, 0.16002932839687606], 'false': [0.16002932839687606, nan], 'true': [0.0004224190980880925, 0.17676410832689107], 'true,false': [0.1309728604625003, 0.1767265663386878], 'true,true': [0.0, 3.700743415417188e-17]}, {'': [0.1684474272770897, nan], 'true': [nan, 0.1684474272770897], 'true,false': [0.15554009398734517, 0.16002908239797706]}, {'': [0.16425151027987306, nan], 'true': [0.16425151027987306, nan], 'true,true': [0.031935151811567315, 0.19452046355312255]}, {'': [0.16202514458298337, nan], 'true': [0.03272041288019885, 0.19437377410438636], 'true,false': [0.1994361259945268, 0.19309718631256004], 'true,false,true': [0.0, 0.21170358901303643], 'true,true': [0.03272041288019885, nan]}, {'': [0.03396253195246774, 0.19366256870549897], 'false': [0.19581043284792696, 0.19302004966311323], 'false,false': [0.19302004966311323, nan], 'true': [nan, 0.03396253195246774]}, {'': [0.15980478984597177, nan], 'true': [nan, 0.15980478984597177], 'true,false': [0.15980478984597177, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A), acquired(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5724346493852259;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   else if ( countryhascompanyoffice(I, A), cityhascompanyoffice(J, A) )
%   | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(L, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.045648935099512344;  // std dev = 2.208, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.7599124802764002;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A) )
%   | then return 0.5330931766042988;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.17386877117303787;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | | then return 0.017737849156672713;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3059118381204026;  // std dev = 4.385, 86.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=43 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then if ( countryhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E), acquired(D, F) )
%   | | then return 0.6264272270780172;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7393815016033943;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.26660703392796403;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1783553706403971;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( companyalsoknownas(A, H), companyceo(H, I) )
%   | then return 0.6408326515599551;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, J) )
%   | | then if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.3463104797850685;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.21567337741714734;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.6743495943579685;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22715095872044283;  // std dev = 3.925, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.48440515955404695;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.5285538027707283;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | | then return -0.030028208047402177;  // std dev = 0.761, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return 0.033620433779115035;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1902846702593477;  // std dev = 4.145, 85.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=41 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5250548296322585;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyceo(A, F) )
%   | | then if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | | then return -0.02054133537873688;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21533607131368146;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( acquired(A, I) )
%   | | | then return 0.44666249026510624;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3310387696486956;  // std dev = 2.617, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( cityhascompanyoffice(J, A), countryhascompanyoffice(K, A) )
%   | then return 0.22116063853265114;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( countryhascompanyoffice(L, A) )
%   | | then return 0.009323008579928899;  // std dev = 0.694, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( cityhascompanyoffice(M, A) )
%   | | | then return -0.21275450485285904;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0908137042722622;  // std dev = 2.027, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then return 0.29671035687035324;  // std dev = 0.576, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( companyalsoknownas(A, E) )
%   | then return -0.06324994023803526;  // std dev = 0.551, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | | then return 0.29236429044790047;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.03270453748630857;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11593613954581491;  // std dev = 3.682, 77.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), cityhascompanyoffice(D, C) )
%   then return 0.1645173162052274;  // std dev = 0.675, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.23689642149647358;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, F) )
%   | | then if ( countryhascompanyoffice(G, A), bankchiefexecutiveceo(A, H) )
%   | | | then return 0.1913500823812937;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1289660596777859;  // std dev = 0.632, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( acquired(I, A) )
%   | | | then return 0.011396680653707159;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10417880442170704;  // std dev = 3.538, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | then return 0.20033505731731913;  // std dev = 0.550, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then return 0.19748770662639997;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.05790689605572486;  // std dev = 0.407, 92.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=42 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, A) )
%   then return 0.16306396668119086;  // std dev = 0.457, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.13859645369960485;  // std dev = 0.845, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.41992382667750305;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(E, H), acquired(I, H) )
%   | | | then return -0.4056578181051294;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.23388287399291985;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(J, A) )
%   | | then if ( companyceo(J, K) )
%   | | | then return 0.07736467190974443;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.11342027954013253;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.0651577598450613;  // std dev = 0.414, 65.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=31 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.15123261636951302;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, D) )
%   | then if ( cityhascompanyoffice(E, D) )
%   | | then if ( cityhascompanyoffice(E, A) )
%   | | | then return 0.1089203597444065;  // std dev = 0.508, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.032690823422132476;  // std dev = 0.507, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.15594252792035582;  // std dev = 0.614, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.23298813365592372;  // std dev = 0.751, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2729522762785837;  // std dev = 0.268, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.058590966526467704;  // std dev = 0.947, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03640709849241211;  // std dev = 3.343, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */


Results
   AUC ROC   = 0.813903
   AUC PR    = 0.800893
   CLL	      = -0.554553
   Precision = 0.730634 at threshold = 0.5
   Recall    = 0.798077
   F1        = 0.762868


Total learning time: 5.052 seconds
Total inference time: 1.968 seconds
AUC ROC: 0.813903


Results scoring model
   AUC ROC   = 0.930796
   AUC PR    = 0.938404
   CLL	      = -0.456486
   Precision = 0.865385 at threshold = 0.5
   Recall    = 0.882353
   F1        = 0.873786


Total scoring time: 0.946 seconds
Refined model CLL: -0.456486


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.813903
   AUC PR    = 0.800893
   CLL	      = -0.554553
   Precision = 0.730634 at threshold = 0.5
   Recall    = 0.798077
   F1        = 0.762868


Total learning time: 11.08 seconds
Total inference time: 1.968 seconds
AUC ROC: 0.813903
Total revision time: 11.08
Best scored revision CLL: -0.456486


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:27:47
{'AUC ROC': 0.813903, 'AUC PR': 0.800893, 'CLL': -0.554553, 'Precision': [0.730634, 0.5], 'Recall': 0.798077, 'F1': 0.762868, 'Learning time': 11.08, 'Inference time': 1.968, 'parameter_0.2': {'AUC ROC': 0.799421, 'AUC PR': 0.784301, 'CLL': -0.5283, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 3.648, 'Inference time': 3.167}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6174081943587717;  // std dev = 4.443, 108.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=82 */
%   else if ( companyalsoknownas(A, J) )
%   | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0.02064893509951237;  // std dev = 0.369, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.4949867648420731;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0.5218030101778692;  // std dev = 4.346, 103.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=78 */
%   else return 0.02339400641381221;  // std dev = 0.374, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.6654339445554054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5791627733219283;  // std dev = 1.636, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.37887706622015627;  // std dev = 1.620, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.06726456509874436;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.133404516531361;  // std dev = 0.446, 139.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4447706109561996;  // std dev = 1.570, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.24718642012568753;  // std dev = 0.226, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13373617053626882;  // std dev = 5.595, 156.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=62 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.3534552954853166;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3268652300343136;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.07359461398591771;  // std dev = 0.593, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.28277411948805076;  // std dev = 4.141, 100.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=74 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.01850320569301662;  // std dev = 3.554, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.21200309541043288;  // std dev = 0.400, 117.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=88 */
%   | | else return -0.0157195075927357;  // std dev = 0.377, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.23090004028733324;  // std dev = 1.402, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | else return 0.04565360549663452;  // std dev = 5.453, 161.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.1849896740486849;  // std dev = 0.210, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.3529311387067322;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08027423188841566;  // std dev = 2.027, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.02793286258127908;  // std dev = 0.428, 139.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.151379424664056;  // std dev = 0.212, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.07357533877295332;  // std dev = 2.036, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.022497736843364875;  // std dev = 0.428, 139.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.045994719541278616;  // std dev = 5.657, 206.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.803445
   AUC PR    = 0.790129
   CLL	      = -0.526062
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 6.45 seconds
Total inference time: 3.217 seconds
AUC ROC: 0.803445


Results scoring model
   AUC ROC   = 0.846687
   AUC PR    = 0.857305
   CLL	      = -0.488011
   Precision = 0.765217 at threshold = 0.5
   Recall    = 0.854369
   F1        = 0.807339


Total scoring time: 1.728 seconds
Parameter learned model CLL: -0.488011


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 2], 'true,false,false,true': [1.225, 3, 3], 'true,false,false,false': [4.443, 26, 82], 'false,true': [1.247, 7, 2], 'false,false': [0.369, 67, 13]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.652, 4, 10], 'true,false,false': [4.346, 25, 78], 'false': [0.374, 74, 15]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [1.636, 4, 40], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [1.62, 4, 9], 'true,false,true,false': [1.247, 7, 2], 'true,false,false': [0.446, 88, 51], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.57, 4, 41], 'true,false,true': [0.226, 5, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.595, 94, 62], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.957, 1, 11], 'true,false,true': [0.593, 2, 1], 'true,false,false': [4.141, 26, 74], 'false,true': [3.554, 74, 15], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.4, 29, 88], 'true,false,false': [0.377, 74, 15], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [1.402, 4, 41], 'true,true,false': [5.453, 99, 62], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.21, 4, 41], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.027, 11, 10], 'true,false,false': [0.428, 88, 51], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.212, 4, 41], 'false,true': [2.036, 11, 11], 'false,false,true': [0.428, 88, 51], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.657, 103, 103], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.18642705822193173, 0.14013382148718542], 'true': [0.0, 0.18750000000000158], 'true,false': [0.0, 0.18967374576793], 'true,false,false': [0.24999999999999992, 0.18278463648833979], 'false': [0.17283950617283952, 0.13609374999999946], 'true,false,true': [nan, 0.0]}, {'': [0.18487195249175975, 0.14005716660836154], 'true': [nan, 0.18487195249175975], 'true,false': [0.19496997995155657, 0.18341335759829042]}, {'': [0.20324087583612124, nan], 'true': [0.05961028113504317, 0.20270322528814763], 'true,false': [0.2134289693542792, 0.19910313776740832], 'true,false,true': [0.20180567795523535, 0.1728395061728395], 'true,true': [0.0, 0.060799666585393174], 'true,true,false': [0.060799666585393174, nan]}, {'': [0.18537996217505556, nan], 'true': [0.05477337566819891, 0.19911373379528743], 'true,false': [0.010240976598080265, 0.20066107389259563], 'true,false,false': [nan, 0.20066107389259563], 'true,true': [nan, 0.05477337566819891]}, {'': [0.16090167845389736, 0.14191427111090926], 'true': [0.06556276577178495, 0.17345408816512475], 'true,false': [0.11702791922692883, 0.17144788272265393], 'false': [0.14191427111090926, nan], 'true,true': [0.0, 0.07638888888888885]}, {'': [0.16470344434531212, nan], 'true': [nan, 0.16470344434531212], 'true,false': [0.15965074319368633, 0.14189266556341704]}, {'': [0.15974090787448955, nan], 'true': [0.15974090787448955, nan], 'true,true': [0.04370658163153911, 0.18467659604493072]}, {'': [0.1575301599863732, nan], 'true': [0.04410542641065822, 0.18443421441142055], 'true,false': [0.1899713151072383, 0.18298520981371985], 'true,false,true': [0.0, 0.19563839598777696], 'true,true': [0.04410542641065822, nan]}, {'': [0.04487452702565798, 0.18392886220897417], 'false': [0.18850769450296, 0.18284765636044542], 'false,false': [0.18284765636044542, nan], 'true': [nan, 0.04487452702565798]}, {'': [0.15537045035222904, nan], 'true': [nan, 0.15537045035222904], 'true,false': [0.15537045035222904, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;true;companyalsoknownas(A, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyceo(A, G), countryhascompanyoffice(H, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6266674536180304;  // std dev = 4.383, 108.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=83 */
%   else if ( cityhascompanyoffice(I, A), countryhascompanyoffice(J, A) )
%   | then if ( bankchiefexecutiveceo(A, K) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( cityhascompanyoffice(L, A) )
%   | | then return -0.07042249347191636;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( acquired(A, M) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0056899187060697205;  // std dev = 2.770, 61.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), cityhascompanyoffice(D, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7637468608098755;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(E, A) )
%   | | then return 0.5394369345856157;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( companyceo(A, F) )
%   | | | then return 0.09961658279601267;  // std dev = 1.120, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.46466695917752915;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.5939711871648119;  // std dev = 0.377, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else return -0.164243521229284;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.7526784986601454;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.008737104281121824;  // std dev = 1.302, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2932600758048735;  // std dev = 5.558, 139.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=68 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.6783302247691824;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | | | then return 0.6274507070340836;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05219705186472883;  // std dev = 1.496, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( companyceo(A, H) )
%   | | then if ( countryhascompanyoffice(I, A), bankchiefexecutiveceo(J, H) )
%   | | | then return 0.3989912692937341;  // std dev = 0.984, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04920434496596134;  // std dev = 1.412, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.6235327502093059;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24494475196816173;  // std dev = 5.807, 160.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), acquired(D, A) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.5449003722430334;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20720507823640555;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.44363934942222805;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.22360742150992718;  // std dev = 1.542, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.08960980922112803;  // std dev = 0.995, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( acquired(H, A), countryhascompanyoffice(I, H) )
%   | | then return -0.2135094351746296;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.2214270609560495;  // std dev = 2.165, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.21002205581779426;  // std dev = 5.396, 139.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=71 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5104746179516736;  // std dev = 0.262, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( companyceo(A, F) )
%   | | then if ( cityhascompanyoffice(G, A), countryhascompanyoffice(H, A) )
%   | | | then return -0.2305797270449275;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19849085668645616;  // std dev = 1.179, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.3873713882761558;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3413069088424702;  // std dev = 3.785, 83.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=63 */
%   else if ( cityhascompanyoffice(J, A), countryhascompanyoffice(K, A) )
%   | then if ( bankchiefexecutiveceo(A, L) )
%   | | then return 0.21000112852528985;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.370642960112337;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(M, A) )
%   | | then return -0.21200441649026458;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10180823370005931;  // std dev = 0.339, 74.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then if ( acquired(C, E), companyceo(E, F) )
%   | then return 0.043164336343435236;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( companyalsoknownas(C, G), companyalsoknownas(G, G) )
%   | | then return 0.440276852251201;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1774868568061197;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.3724266364598575;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyceo(A, I) )
%   | | then if ( bankchiefexecutiveceo(A, J), countryhascompanyoffice(K, A) )
%   | | | then return 0.17162196585344938;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03913727819019844;  // std dev = 1.138, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( cityhascompanyoffice(L, A) )
%   | | | then return 0.10518750206094715;  // std dev = 2.025, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.11212198391845188;  // std dev = 5.009, 138.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=68 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( cityhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( acquired(F, E), companyceo(F, G) )
%   | | then return -0.010500319413676108;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.32866850556021737;  // std dev = 0.289, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.18023413378728848;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(I, J), acquired(J, K) )
%   | | | then return 0.20124926418777864;  // std dev = 1.055, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.37845670202323556;  // std dev = 0.767, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.24249157971010035;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( bankboughtbank(L, A), cityhascompanyoffice(M, L) )
%   | | then return -0.0742907905038614;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( acquired(N, A), economicsectorcompany(B, N) )
%   | | | then return 0.2662802360354405;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08218517943297317;  // std dev = 5.116, 146.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=69 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), cityhascompanyoffice(F, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.28205852062374126;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07470075717866903;  // std dev = 0.509, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( acquired(G, A), countryhascompanyoffice(H, G) )
%   | | then return -0.0975719126544822;  // std dev = 0.277, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.3152655613192508;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06356168332483887;  // std dev = 5.564, 191.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( countryhascompanyoffice(D, C) )
%   | then return -0.007016606361967349;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.23336651495751187;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(E, C) )
%   | | | then return -0.09996288744592777;  // std dev = 0.516, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1076434596962505;  // std dev = 1.237, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.25243801567543406;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then if ( countryhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.42412922973134287;  // std dev = 0.345, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.33897806333982894;  // std dev = 0.402, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(I, A) )
%   | | | then return -0.055391415983837254;  // std dev = 1.296, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04373057979441287;  // std dev = 4.896, 140.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=66 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then return 0.11385248559105311;  // std dev = 0.229, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( countryhascompanyoffice(F, A), bankchiefexecutiveceo(G, C) )
%   | | then return 0.08019160974556629;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( bankchiefexecutiveceo(A, H) )
%   | | | then return -0.16179989919320528;  // std dev = 0.607, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.02246302752504843;  // std dev = 1.052, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( acquired(I, A) )
%   | then if ( acquired(I, J), economicsectorcompany(B, J) )
%   | | then return 0.2972611983301267;  // std dev = 0.121, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.28432981893021503;  // std dev = 0.158, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( acquired(A, K) )
%   | | then return 0.1991859645248529;  // std dev = 0.270, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.0755523649926516;  // std dev = 1.131, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.03833059072137083;  // std dev = 4.786, 133.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=65 */


Results
   AUC ROC   = 0.816313
   AUC PR    = 0.817518
   CLL	      = -0.549503
   Precision = 0.748175 at threshold = 0.5
   Recall    = 0.788462
   F1        = 0.76779


Total learning time: 10.164 seconds
Total inference time: 2.647 seconds
AUC ROC: 0.816313


Results scoring model
   AUC ROC   = 0.920068
   AUC PR    = 0.924838
   CLL	      = -0.46099
   Precision = 0.851852 at threshold = 0.5
   Recall    = 0.893204
   F1        = 0.872038


Total scoring time: 1.464 seconds
Refined model CLL: -0.46099


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.816313
   AUC PR    = 0.817518
   CLL	      = -0.549503
   Precision = 0.748175 at threshold = 0.5
   Recall    = 0.788462
   F1        = 0.76779


Total learning time: 19.805999999999997 seconds
Total inference time: 2.647 seconds
AUC ROC: 0.816313
Total revision time: 19.805999999999997
Best scored revision CLL: -0.46099


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:28:13
{'AUC ROC': 0.816313, 'AUC PR': 0.817518, 'CLL': -0.549503, 'Precision': [0.748175, 0.5], 'Recall': 0.788462, 'F1': 0.76779, 'Learning time': 19.805999999999997, 'Inference time': 2.647, 'parameter_0.4': {'AUC ROC': 0.803445, 'AUC PR': 0.790129, 'CLL': -0.526062, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 6.45, 'Inference time': 3.217}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5975428744934493;  // std dev = 5.639, 165.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=122 */
%   else if ( companyalsoknownas(A, J) )
%   | then return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return 0.0188632208137981;  // std dev = 0.367, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.49419298619132657;  // std dev = 2.044, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0.5108557968397098;  // std dev = 5.510, 160.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=119 */
%   else return 0.013712625788624071;  // std dev = 0.364, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.6700174846604223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.563041578327332;  // std dev = 2.231, 64.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.38470859719127437;  // std dev = 2.019, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return -0.009151279934577466;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.14845724334036944;  // std dev = 0.451, 208.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.43264865426372856;  // std dev = 2.170, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.2485402569701112;  // std dev = 0.273, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13962481959601394;  // std dev = 6.884, 236.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.36246183300887985;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.23705822219394618;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.12771578665151123;  // std dev = 0.638, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.28724940582817127;  // std dev = 5.233, 155.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=114 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.027469000707353256;  // std dev = 4.126, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.20915985166430026;  // std dev = 0.412, 181.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=134 */
%   | | else return -0.023383252271168803;  // std dev = 0.366, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.22356818096588152;  // std dev = 2.000, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0.04832439512373719;  // std dev = 6.677, 243.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=96 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.1779857790055488;  // std dev = 0.249, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.3494610663549804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05509309467737754;  // std dev = 2.428, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else return 0.03470889241870113;  // std dev = 0.430, 208.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14458016921872052;  // std dev = 0.250, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.050910873779146625;  // std dev = 2.436, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.02784375432113327;  // std dev = 0.430, 208.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=80 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.04491682978648135;  // std dev = 6.995, 308.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=154 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.808149
   AUC PR    = 0.81867
   CLL	      = -0.527432
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 8.887 seconds
Total inference time: 3.681 seconds
AUC ROC: 0.808149


Results scoring model
   AUC ROC   = 0.842954
   AUC PR    = 0.859871
   CLL	      = -0.496248
   Precision = 0.752809 at threshold = 0.5
   Recall    = 0.87013
   F1        = 0.807229


Total scoring time: 2.123 seconds
Parameter learned model CLL: -0.496248


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 6], 'true,false,false,true': [1.491, 4, 5], 'true,false,false,false': [5.639, 43, 122], 'false,true': [1.317, 13, 2], 'false,false': [0.367, 94, 18]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.044, 6, 15], 'true,false,false': [5.51, 41, 119], 'false': [0.364, 107, 20]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [2.231, 7, 57], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.019, 6, 14], 'true,false,true,false': [1.317, 13, 2], 'true,false,false': [0.451, 128, 80], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [2.17, 7, 58], 'true,false,true': [0.273, 7, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.884, 140, 96], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [1.05e-08, 0, 6], 'true,true,false': [1.561, 3, 13], 'true,false,true': [0.638, 3, 1], 'true,false,false': [5.233, 41, 114], 'false,true': [4.126, 107, 20], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.412, 47, 134], 'true,false,false': [0.366, 107, 20], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [2.0, 7, 58], 'true,true,false': [6.677, 147, 96], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.249, 7, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.428, 19, 15], 'true,false,false': [0.43, 128, 80], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.25, 7, 58], 'false,true': [2.436, 19, 16], 'false,false,true': [0.43, 128, 80], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.995, 154, 154], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.19224077409114962, 0.1326802653605308], 'true': [0.0, 0.19293209876543674], 'true,false': [-1.4802973661668753e-16, 0.19715286035143764], 'true,false,false': [0.2469135802469134, 0.19269054178145428], 'false': [0.11555555555555559, 0.1348852040816321], 'true,false,true': [nan, -1.4802973661668753e-16]}, {'': [0.19081894325866547, 0.13266234861569892], 'true': [nan, 0.19081894325866547], 'true,false': [0.19892177734103011, 0.1897232328354495]}, {'': [0.20441061805066302, nan], 'true': [0.07675250615264953, 0.20368281182616743], 'true,false': [0.20394297753719873, 0.2029836729586466], 'true,false,true': [0.20375114281932039, 0.1155555555555556], 'true,true': [0.0, 0.0777757049145803], 'true,true,false': [0.0777757049145803, nan]}, {'': [0.18813001066123988, nan], 'true': [0.07246892618066074, 0.1995384015049751], 'true,false': [0.010667400495492712, 0.2008001581393055], 'true,false,false': [nan, 0.2008001581393055], 'true,true': [nan, 0.07246892618066074]}, {'': [0.17109307914534036, 0.13404499413932203], 'true': [0.11391467416967077, 0.17900081150269123], 'true,false': [0.1016688602820775, 0.1766644971255395], 'false': [0.13404499413932203, nan], 'true,true': [1.850371707708594e-17, 0.15234375000000008]}, {'': [0.16802029880295916, nan], 'true': [nan, 0.16802029880295916], 'true,false': [0.169580504222942, 0.13401809691016733]}, {'': [0.16285238146567876, nan], 'true': [0.16285238146567876, nan], 'true,true': [0.06156903588526748, 0.1834635467657281]}, {'': [0.16077993710999228, nan], 'true': [0.06184745300929984, 0.18315827389058414], 'true,false': [0.17083863088254764, 0.18511186791203638], 'true,false,true': [0.0, 0.17338751070389488], 'true,true': [0.06184745300929984, nan]}, {'': [0.06245225730861625, 0.18276897550885265], 'false': [0.16952261073163463, 0.18492129235495797], 'false,false': [0.18492129235495797, nan], 'true': [nan, 0.06245225730861625]}, {'': [0.1588673041014758, nan], 'true': [nan, 0.1588673041014758], 'true,false': [0.1588673041014758, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
2;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
2;true;companyalsoknownas(A, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.6220378239883989;  // std dev = 5.096, 144.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=110 */
%   else if ( countryhascompanyoffice(H, A), cityhascompanyoffice(I, A) )
%   | then if ( bankchiefexecutiveceo(A, J) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, K) )
%   | | then return -0.09423201728144018;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.00868656950811451;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.4536713864798619;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7819927434167929;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyceo(A, E) )
%   | then if ( acquired(F, A), acquired(A, G) )
%   | | then return 0.4885567565149061;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.04394325317141628;  // std dev = 1.438, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.22261641952292321;  // std dev = 2.698, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6505497778700057;  // std dev = 1.808, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return -0.16547454802455147;  // std dev = 0.184, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.36549310681538405;  // std dev = 1.839, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.2916581221608441;  // std dev = 6.364, 182.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=89 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then if ( cityhascompanyoffice(G, F), cityhascompanyoffice(G, A) )
%   | | | then return 0.35826590261595787;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6499879346603583;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | | | then return 0.7042361930435644;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04979208235075817;  // std dev = 1.866, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then if ( acquired(A, J), companyalsoknownas(I, K) )
%   | | | then return 0.5992128254670107;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7126803941977635;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.18364854424237329;  // std dev = 2.666, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.24107055723162565;  // std dev = 6.916, 229.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=113 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(A, E) )
%   | then return 0.4520033300673383;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.549127779667591;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyceo(A, F) )
%   | then if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( acquired(G, I), acquired(I, J) )
%   | | | then return 0.22500384857572447;  // std dev = 1.309, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2724844196424693;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( companyalsoknownas(A, K) )
%   | | | then return 0.03922082284462493;  // std dev = 0.981, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1507778417299046;  // std dev = 2.657, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( countryhascompanyoffice(L, A), acquired(M, A) )
%   | | then return -0.02540022620671422;  // std dev = 0.703, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( acquired(A, N), companyceo(N, P) )
%   | | | then return 0.08682114337817051;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20212544725074427;  // std dev = 6.869, 233.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=117 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.5288719347586456;  // std dev = 0.265, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.25486624407563224;  // std dev = 0.872, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.460316773846276;  // std dev = 1.312, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( companyceo(A, H) )
%   | | then if ( countryhascompanyoffice(I, A), cityhascompanyoffice(J, A) )
%   | | | then return -0.27711005863706256;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22096114380808055;  // std dev = 2.181, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( acquired(A, K) )
%   | | | then return 0.45479574306758047;  // std dev = 0.832, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.32901921117686067;  // std dev = 4.564, 116.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=86 */
%   else if ( companyceo(A, L), cityhascompanyoffice(M, A) )
%   | then return 0.16040472909575407;  // std dev = 0.453, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.11308890410602955;  // std dev = 0.323, 115.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(D, E), companyalsoknownas(E, A) )
%   | | then return 0.5107497322980664;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( acquired(A, F), companyceo(F, G) )
%   | | | then return -0.04452536535959654;  // std dev = 1.020, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3654376082154705;  // std dev = 1.898, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | else return -0.22279554690914824;  // std dev = 0.084, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.3791716094598467;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.37516260659855566;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.027159119474712293;  // std dev = 2.037, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return 0.14382571674479433;  // std dev = 1.539, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.10531910559632046;  // std dev = 5.783, 182.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=89 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then return 0.11437167075780537;  // std dev = 0.673, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3185756367670136;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyalsoknownas(A, F), companyceo(A, G) )
%   | then if ( acquired(F, H), companyceo(F, I) )
%   | | then if ( countryhascompanyoffice(J, H) )
%   | | | then return 0.13622214393233267;  // std dev = 0.664, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16377895920957442;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1717408101180021;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( countryhascompanyoffice(K, A) )
%   | | then if ( countryhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.37999294653647353;  // std dev = 1.244, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.2893906010054394;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( companyalsoknownas(A, M) )
%   | | | then return 0.048253488294814066;  // std dev = 1.045, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08618319569602804;  // std dev = 6.437, 243.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=120 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then if ( acquired(E, F) )
%   | | then return 0.051739904865352106;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.25565020755222784;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24178066396115647;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(H, A), countryhascompanyoffice(I, H) )
%   | | then return -0.06242810190497903;  // std dev = 0.537, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.2738869504596768;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06045482069531491;  // std dev = 6.802, 282.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=133 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( acquired(E, D), acquired(A, F) )
%   | | then if ( acquired(E, A) )
%   | | | then return 0.2812057179698747;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10083222459884575;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.26079443518854845;  // std dev = 0.302, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else return -0.20443006437393038;  // std dev = 0.083, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( companyalsoknownas(A, G) )
%   | then return -0.020107690731403324;  // std dev = 0.264, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( acquired(H, A) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.22004596259088055;  // std dev = 0.161, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06171556075051535;  // std dev = 1.556, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.11022890900964917;  // std dev = 1.336, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.05548795503652424;  // std dev = 5.729, 176.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=85 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then return 0.055618224681030545;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( cityhascompanyoffice(F, C) )
%   | | then return 0.24608802576710032;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19181437807815163;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then if ( acquired(A, H) )
%   | | then return 0.15744987191469226;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21126402785686485;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(I, A) )
%   | | then if ( companyalsoknownas(I, J), companyalsoknownas(J, J) )
%   | | | then return 0.22585813258315204;  // std dev = 0.587, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.059596835072213666;  // std dev = 1.682, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( companyalsoknownas(A, K), companyceo(A, L) )
%   | | | then return -0.0406627419721071;  // std dev = 0.867, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.04286465515369542;  // std dev = 6.358, 243.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=119 */


Results
   AUC ROC   = 0.830869
   AUC PR    = 0.823389
   CLL	      = -0.54104
   Precision = 0.738516 at threshold = 0.5
   Recall    = 0.803846
   F1        = 0.769797


Total learning time: 19.591 seconds
Total inference time: 3.0 seconds
AUC ROC: 0.830869


Results scoring model
   AUC ROC   = 0.911305
   AUC PR    = 0.909457
   CLL	      = -0.470859
   Precision = 0.810651 at threshold = 0.5
   Recall    = 0.88961
   F1        = 0.848297


Total scoring time: 1.62 seconds
Refined model CLL: -0.470859


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.830869
   AUC PR    = 0.823389
   CLL	      = -0.54104
   Precision = 0.738516 at threshold = 0.5
   Recall    = 0.803846
   F1        = 0.769797


Total learning time: 32.221000000000004 seconds
Total inference time: 3.0 seconds
AUC ROC: 0.830869
Total revision time: 32.221000000000004
Best scored revision CLL: -0.470859


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:28:53
{'AUC ROC': 0.830869, 'AUC PR': 0.823389, 'CLL': -0.54104, 'Precision': [0.738516, 0.5], 'Recall': 0.803846, 'F1': 0.769797, 'Learning time': 32.221000000000004, 'Inference time': 3.0, 'parameter_0.6': {'AUC ROC': 0.808149, 'AUC PR': 0.81867, 'CLL': -0.527432, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 8.887, 'Inference time': 3.681}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.5878786648292391;  // std dev = 6.617, 222.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=162 */
%   else if ( companyalsoknownas(A, J) )
%   | then return -0.005487428536851416;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else return 0.02938181181184062;  // std dev = 0.377, 146.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.4981928574957342;  // std dev = 2.524, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | else return 0.5003570796036528;  // std dev = 6.444, 212.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=155 */
%   else return 0.021761815232175602;  // std dev = 0.373, 168.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=28 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.3734109871774712;  // std dev = 0.435, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5487476678989905;  // std dev = 2.954, 91.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.3871720568466332;  // std dev = 2.345, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return -9.865628335941042E-4;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.14330566976940382;  // std dev = 0.452, 267.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4138907999207523;  // std dev = 3.093, 97.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=83 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.1426128830233612;  // std dev = 1.070, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.134224866686642;  // std dev = 7.844, 305.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.37258465436205507;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.20721210808000318;  // std dev = 2.307, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.07370530619656719;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2866876244274198;  // std dev = 6.028, 202.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=147 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.021268666563070217;  // std dev = 4.850, 168.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.20447555001513426;  // std dev = 0.420, 244.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   | | else return -0.018061958448002974;  // std dev = 0.374, 168.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=28 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.21448819127939014;  // std dev = 2.907, 97.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=83 */
%   | | else return 0.046013459591587716;  // std dev = 7.677, 315.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=123 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.16907390216830995;  // std dev = 0.295, 97.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=83 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.35093875711520905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.060853321957686904;  // std dev = 2.869, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | else return 0.031566627092396014;  // std dev = 0.435, 267.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13565232108666483;  // std dev = 0.296, 97.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=83 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.05362928510738885;  // std dev = 2.875, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.025288188920408145;  // std dev = 0.435, 267.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=101 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.04413805100306333;  // std dev = 8.236, 412.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=206 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.808219
   AUC PR    = 0.820484
   CLL	      = -0.530066
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 11.061 seconds
Total inference time: 3.224 seconds
AUC ROC: 0.808219


Results scoring model
   AUC ROC   = 0.833797
   AUC PR    = 0.85146
   CLL	      = -0.510253
   Precision = 0.741667 at threshold = 0.5
   Recall    = 0.864078
   F1        = 0.798206


Total scoring time: 2.096 seconds
Parameter learned model CLL: -0.510253


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 6], 'true,false,false,true': [1.897, 6, 9], 'true,false,false,false': [6.617, 60, 162], 'false,true': [1.61, 19, 3], 'false,false': [0.377, 121, 25]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.524, 9, 23], 'true,false,false': [6.444, 57, 155], 'false': [0.373, 140, 28]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.435, 2, 4], 'true,true,false,true': [2.954, 12, 79], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.345, 8, 19], 'true,false,true,false': [1.604, 18, 3], 'true,false,false': [0.452, 166, 101], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.093, 14, 83], 'true,false,true': [1.07, 9, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.844, 183, 122], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [1.05e-08, 0, 6], 'true,true,false': [2.307, 7, 23], 'true,false,true': [0.886, 4, 2], 'true,false,false': [6.028, 55, 147], 'false,true': [4.85, 140, 28], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.42, 66, 178], 'true,false,false': [0.374, 140, 28], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [2.907, 14, 83], 'true,true,false': [7.677, 192, 123], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.295, 14, 83], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.869, 26, 21], 'true,false,false': [0.435, 166, 101], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.296, 14, 83], 'false,true': [2.875, 26, 22], 'false,false,true': [0.435, 166, 101], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.236, 206, 206], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.19732598763773745, 0.13888888888888992], 'true': [0.0, 0.1978356957780883], 'true,false': [-1.4802973661668753e-16, 0.20092933824708134], 'true,false,false': [0.2399999999999999, 0.19722425127831017], 'false': [0.11776859504132217, 0.14191217864515018], 'true,false,true': [nan, -1.4802973661668753e-16]}, {'': [0.1962844058657625, 0.13885699787377112], 'true': [nan, 0.1962844058657625], 'true,false': [0.19902022564641073, 0.19587083766023689]}, {'': [0.2078450259063692, nan], 'true': [0.1034110804790119, 0.20541156269679453], 'true,false': [0.20523340893710276, 0.20460809214907563], 'true,false,true': [0.20370443603883964, 0.12244897959183666], 'true,true': [0.18881253265839337, 0.09587858962758836], 'true,true,false': [0.09587858962758836, nan]}, {'': [0.1921220061202619, nan], 'true': [0.09862026540272133, 0.20132485291327], 'true,false': [0.11456453200767573, 0.20173646503792148], 'true,false,false': [nan, 0.20173646503792148], 'true,true': [nan, 0.09862026540272133]}, {'': [0.17781450175520191, 0.14000711969099364], 'true': [0.1516676822572368, 0.1820855963163175], 'true,false': [0.13072082106000993, 0.17986465585111505], 'true,true': [1.850371707708594e-17, 0.17744320553138265], 'false': [0.14000711969099364, nan]}, {'': [0.1734452351910815, nan], 'true': [nan, 0.1734452351910815], 'true,false': [0.17628922264587302, 0.13998556059408274]}, {'': [0.1686639857966443, nan], 'true': [0.1686639857966443, nan], 'true,true': [0.08709735314358757, 0.1870987513828895]}, {'': [0.16654998004279917, nan], 'true': [0.08728948023287487, 0.18684724100269468], 'true,false': [0.17323746356204847, 0.18910373778128034], 'true,false,true': [0.0, 0.17517025121520605], 'true,true': [0.08728948023287487, nan]}, {'': [0.08778759712395341, 0.18650122142870454], 'false': [0.17214718102927637, 0.18895932799040974], 'false,false': [0.18895932799040974, nan], 'true': [nan, 0.08778759712395341]}, {'': [0.16462501359950704, nan], 'true': [nan, 0.16462501359950704], 'true,false': [0.16462501359950704, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5635060779566523;  // std dev = 6.823, 224.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=158 */
%   else if ( cityhascompanyoffice(H, A), countryhascompanyoffice(I, A) )
%   | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(A, K) )
%   | | then return -0.08921948595311938;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( acquired(L, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03414893509951206;  // std dev = 4.258, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(A, D), companyceo(D, E) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.7672529832306733;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A), cityhascompanyoffice(H, D) )
%   | | | then return 0.2947000936472002;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09455711972640946;  // std dev = 1.674, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( companyceo(A, I) )
%   | | then if ( companyalsoknownas(A, J), companyceo(J, K) )
%   | | | then return 0.38808996252405253;  // std dev = 1.575, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.20648556581600963;  // std dev = 3.248, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | else if ( countryhascompanyoffice(L, A) )
%   | | | then return 0.314623293396468;  // std dev = 2.163, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.3020755289948255;  // std dev = 8.197, 295.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=146 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(D, A) )
%   | then if ( companyceo(A, E) )
%   | | then if ( companyceo(D, F) )
%   | | | then return -0.15263505253653706;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08496420848645968;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.3387565779307446;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14437816407789775;  // std dev = 2.158, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( countryhascompanyoffice(H, A), companyceo(A, I) )
%   | | then if ( countryhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.4477003012418772;  // std dev = 1.385, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.21144747449612492;  // std dev = 0.164, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | | then return 0.597957301509483;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.24688517874958604;  // std dev = 8.614, 330.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=161 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), bankchiefexecutiveceo(D, C) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.6241167284413459;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.07732813553736224;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.22419349972836092;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( acquired(F, A), companyceo(A, G) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.05290919877993295;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.18094260066781478;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then return 0.481615964078522;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.15734984150709486;  // std dev = 3.168, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.20472504838498226;  // std dev = 8.398, 329.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=165 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.5174032230644388;  // std dev = 0.265, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.016660320604325228;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4590672689698978;  // std dev = 1.835, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then if ( countryhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.49941620275058707;  // std dev = 0.859, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.2762217727001898;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.21883257848926707;  // std dev = 2.400, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.3424796550310719;  // std dev = 5.486, 160.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=118 */
%   else if ( countryhascompanyoffice(K, A), cityhascompanyoffice(L, A) )
%   | then return 0.19795289803457405;  // std dev = 0.399, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.10711708056451075;  // std dev = 0.349, 159.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.27807972977652107;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(D, A) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.29124494828617625;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( companyalsoknownas(D, F), acquired(G, F) )
%   | | | then return 0.24816371310067703;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.008968424934932077;  // std dev = 2.034, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.36681045187099254;  // std dev = 2.708, 54.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=43 */
%   | | | else return -0.29792292520172065;  // std dev = 0.570, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.11918483298991214;  // std dev = 0.437, 273.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=135 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.22598420609865638;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyceo(A, D), acquired(E, A) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then return 0.04413565581891254;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.14629854107196086;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.3614420991597289;  // std dev = 0.270, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.029788898249839792;  // std dev = 2.527, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.09132478355441433;  // std dev = 7.921, 341.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=167 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), cityhascompanyoffice(F, E) )
%   | then if ( acquired(A, G), companyalsoknownas(G, H) )
%   | | then return -0.09520607387903235;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(E, I), acquired(I, J) )
%   | | | then return 0.22819199118149547;  // std dev = 1.275, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.045439857854870494;  // std dev = 1.017, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( acquired(A, K), companyceo(K, L) )
%   | | then if ( cityhascompanyoffice(M, A) )
%   | | | then return 0.010342616781111213;  // std dev = 1.022, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.16732098111563182;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( companyalsoknownas(A, N) )
%   | | | then return 0.01825890709471414;  // std dev = 1.750, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.07526332061214541;  // std dev = 7.838, 349.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=176 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(C, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.19859674578148448;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(C, G), companyceo(A, H) )
%   | | | then return -0.1754247055799767;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04767530501656523;  // std dev = 1.351, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.13353338023143857;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( cityhascompanyoffice(I, A), acquired(A, J) )
%   | then return 0.10170649462264361;  // std dev = 0.331, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then if ( cityhascompanyoffice(K, L), economicsectorcompany(B, L) )
%   | | | then return 0.24117520246790203;  // std dev = 2.185, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | | else return -0.2830614981052666;  // std dev = 0.422, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( bankboughtbank(M, A), cityhascompanyoffice(N, M) )
%   | | | then return -0.038555959799562535;  // std dev = 1.162, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.059126954110225866;  // std dev = 7.284, 295.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=148 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.16772223528407113;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyalsoknownas(A, D), economicsectorcompany(B, D) )
%   | then return 0.25635025597007743;  // std dev = 0.231, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then if ( companyalsoknownas(E, F), economicsectorcompany(B, F) )
%   | | | then return 0.3504747322315686;  // std dev = 1.064, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.28281634588817833;  // std dev = 0.735, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.02021774283579815;  // std dev = 2.659, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.041501632986935266;  // std dev = 7.329, 304.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=150 */


Results
   AUC ROC   = 0.839761
   AUC PR    = 0.839438
   CLL	      = -0.543159
   Precision = 0.75763 at threshold = 0.5
   Recall    = 0.811538
   F1        = 0.783658


Total learning time: 12.052 seconds
Total inference time: 2.03 seconds
AUC ROC: 0.839761


Results scoring model
   AUC ROC   = 0.90316
   AUC PR    = 0.903598
   CLL	      = -0.500365
   Precision = 0.824074 at threshold = 0.5
   Recall    = 0.864078
   F1        = 0.843602


Total scoring time: 1.869 seconds
Refined model CLL: -0.500365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.839761
   AUC PR    = 0.839438
   CLL	      = -0.543159
   Precision = 0.75763 at threshold = 0.5
   Recall    = 0.811538
   F1        = 0.783658


Total learning time: 27.078 seconds
Total inference time: 2.03 seconds
AUC ROC: 0.839761
Total revision time: 27.078
Best scored revision CLL: -0.500365


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:29:26
{'AUC ROC': 0.839761, 'AUC PR': 0.839438, 'CLL': -0.543159, 'Precision': [0.75763, 0.5], 'Recall': 0.811538, 'F1': 0.783658, 'Learning time': 27.078, 'Inference time': 2.03, 'parameter_0.8': {'AUC ROC': 0.808219, 'AUC PR': 0.820484, 'CLL': -0.530066, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 11.061, 'Inference time': 3.224}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D).;false;true
0;true,false;athleteledsportsteam(E, A), athleteledsportsteam(C, F).;true;true
0;true,false,true;athleteplayssport(E, G), recursion_teamplayssport(A, G).;false;false
0;true,false,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;false;false
0;false;teamplaysinleague(A, J).;false;true
0;false,false;teamplaysagainstteam(A, K), teamalsoknownas(A, L).;true;false
0;false,false,true;teamplaysagainstteam(K, A), teamalsoknownas(K, L).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;false;true
1;true,false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;true,false,true;teamalsoknownas(F, G).;false;false
1;true,false,false;teamplaysinleague(A, H).;false;false
1;false;teamalsoknownas(I, A), teamplaysagainstteam(A, J).;true;false
1;false,true;teamalsoknownas(K, J).;false;true
1;false,true,false;teamalsoknownas(J, I), athleteplaysforteam(L, J).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;true;true
2;true,true,true;teamplaysagainstteam(F, A), teamalsoknownas(F, D).;false;false
2;true,true,false;teamalsoknownas(A, G), teamplaysinleague(G, H).;false;false
2;true,false;teamplaysinleague(A, I), athleteplaysforteam(J, A).;true;true
2;true,false,true;athleteplaysinleague(C, K).;false;false
2;true,false,false;teamalsoknownas(A, L).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;athleteplaysforteam(C, D).;true;true
3;true,true;teamalsoknownas(E, D), athleteledsportsteam(C, E).;true;true
3;true,true,true;teamplaysagainstteam(A, F), recursion_teamplayssport(F, B).;false;false
3;true,true,false;athleteledsportsteam(G, A), athleteplaysforteam(G, A).;false;false
3;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
3;true,false,false;teamplaysinleague(A, I).;false;false
3;false;teamplaysinleague(A, J).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
4;true;teamalsoknownas(A, E), teamalsoknownas(E, F).;false;true
4;true,false;athleteledsportsteam(C, G).;true;true
4;true,false,true;teamalsoknownas(A, H), athleteledsportsteam(I, A).;false;false
4;true,false,false;athleteledsportsteam(J, A).;false;false
4;false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;true;false
4;false,true;athleteledsportsteam(L, K).;false;true
4;false,true,false;athleteplaysinleague(L, M), teamplaysinleague(A, M).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;teamplaysagainstteam(D, A), recursion_teamplayssport(D, B).;false;true
5;true,false;athleteplaysinleague(C, E).;true;true
5;true,false,true;teamplaysagainstteam(F, A), teamalsoknownas(F, G).;false;false
5;true,false,false;teamplaysagainstteam(A, H).;false;false
5;false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;false;true
5;false,false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;true;false
5;false,false,true;teamalsoknownas(K, L), athleteplaysforteam(M, K).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
6;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
6;true,true;teamplaysagainstteam(F, A), athleteplaysforteam(G, F).;true;false
6;true,true,true;teamplaysagainstteam(A, H), athleteplayssport(E, B).;false;false
6;true,false;athleteplaysinleague(C, I), teamplaysagainstteam(J, A).;false;true
6;true,false,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;false
6;false;teamplaysagainstteam(A, M), teamalsoknownas(N, A).;true;false
6;false,true;teamalsoknownas(P, M).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;athleteledsportsteam(C, D), athleteplaysforteam(E, A).;true;true
7;true,true;teamalsoknownas(F, A), athleteledsportsteam(G, F).;true;false
7;true,true,true;teamalsoknownas(F, D).;false;false
7;true,false;teamplaysagainstteam(A, H), teamplaysinleague(A, I).;true;true
7;true,false,true;athleteplaysinleague(C, I).;false;false
7;true,false,false;teamalsoknownas(J, A), athleteplaysforteam(K, J).;false;false
7;false;teamalsoknownas(L, A), teamplaysagainstteam(A, M).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteledsportsteam(C, D).;true;true
8;true;teamplaysinleague(A, E), teamplaysinleague(D, E).;false;true
8;true,false;athleteplaysforteam(F, A).;true;false
8;true,false,true;teamplaysagainstteam(A, G), athleteplaysforteam(H, G).;false;false
8;false;teamplaysinleague(A, I).;false;true
8;false,false;athleteplayssport(J, B).;true;true
8;false,false,true;teamalsoknownas(A, K), teamalsoknownas(K, A).;false;false
8;false,false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, A).;false;false
9;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
9;true;athleteplaysforteam(C, D).;true;true
9;true,true;teamplaysagainstteam(A, E), teamplaysagainstteam(E, A).;true;true
9;true,true,true;recursion_teamplayssport(E, B).;false;false
9;true,true,false;teamalsoknownas(A, F), teamplaysinleague(F, G).;false;false
9;true,false;teamplaysagainstteam(H, A), recursion_teamplayssport(H, B).;false;true
9;true,false,false;teamplaysinleague(A, I).;false;false
9;false;teamalsoknownas(J, A), teamalsoknownas(K, J).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then if ( economicsectorcompany(G, E), recursion_economicsectorcompany(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( companyalsoknownas(A, H), acquired(H, I) )
%   | | | then return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.583148935099509;  // std dev = 7.472, 280.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=203 */
%   else if ( companyalsoknownas(A, J) )
%   | then return 0.036720363670940885;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else return 0.023894791453102776;  // std dev = 0.372, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( recursion_economicsectorcompany(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.5026614833973431;  // std dev = 2.802, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | else return 0.4967364541293424;  // std dev = 7.271, 267.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=194 */
%   else return 0.022465657154465513;  // std dev = 0.373, 209.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=35 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(A, E) )
%   | | then return 0.37358071682302973;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( companyalsoknownas(F, G) )
%   | | | then return 0.5370063712981192;  // std dev = 3.550, 118.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=101 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( acquired(I, C) )
%   | | | then return 0.3790631421409408;  // std dev = 2.617, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | | | else return 0.04309811874717517;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else return 0.13960731315310237;  // std dev = 0.451, 330.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( recursion_economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.40438295852508976;  // std dev = 3.715, 127.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=107 */
%   | else if ( bankboughtbank(F, A) )
%   | | then return -0.14601950938520117;  // std dev = 1.070, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( recursion_economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13344344399363683;  // std dev = 8.747, 377.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=150 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.3831278688009905;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.18380887680199973;  // std dev = 2.708, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return -0.06900292788042595;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2853731525556906;  // std dev = 6.796, 255.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=185 */
%   else if ( bankboughtbank(H, I) )
%   | then return -0.020421314329342084;  // std dev = 5.424, 209.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(E, C) )
%   | | then return 0.2031217837250082;  // std dev = 0.423, 307.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=223 */
%   | | else return -0.017339679114335663;  // std dev = 0.375, 209.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=35 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, D) )
%   | | then return 0.2073136442998809;  // std dev = 3.505, 127.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=107 */
%   | | else return 0.04602186334473621;  // std dev = 8.559, 389.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=151 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0.16288140194383632;  // std dev = 0.311, 127.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( acquired(G, C) )
%   | | | then return 0.35255349466669816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07488573353071641;  // std dev = 3.310, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | | else return 0.029338519376831806;  // std dev = 0.433, 330.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyalsoknownas(A, E), companyalsoknownas(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13013978385099242;  // std dev = 0.312, 127.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=107 */
%   else if ( companyalsoknownas(A, F) )
%   | then return 0.06357053514136202;  // std dev = 3.314, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | else if ( economicsectorcompany(B, G) )
%   | | then return 0.023524194400195323;  // std dev = 0.433, 330.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=123 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( recursion_economicsectorcompany(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.04381399388198202;  // std dev = 9.274, 516.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=258 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.809987
   AUC PR    = 0.821137
   CLL	      = -0.531403
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 13.303 seconds
Total inference time: 3.319 seconds
AUC ROC: 0.809987


Results scoring model
   AUC ROC   = 0.830456
   AUC PR    = 0.845154
   CLL	      = -0.515115
   Precision = 0.735974 at threshold = 0.5
   Recall    = 0.864341
   F1        = 0.795009


Total scoring time: 2.751 seconds
Parameter learned model CLL: -0.515115


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'bankboughtbank(E, A), bankboughtbank(C, F)', 'true,false,true': 'economicsectorcompany(G, E), recursion_economicsectorcompany(G, A)', 'true,false,false': 'companyalsoknownas(A, H), acquired(H, I)', 'false': 'companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 7], 'true,false,false,true': [2.068, 7, 11], 'true,false,false,false': [7.472, 77, 203], 'false,true': [2.027, 23, 5], 'false,false': [0.372, 151, 30]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'companyalsoknownas(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.802, 11, 29], 'true,false,false': [7.271, 73, 194], 'false': [0.373, 174, 35]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(A, E)', 'true,true,false': 'companyalsoknownas(F, G)', 'true,false': 'companyalsoknownas(A, H)', 'true,false,true': 'acquired(I, C)'}, {'true,true,true': [0.415, 3, 6], 'true,true,false,true': [3.55, 17, 101], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.617, 10, 23], 'true,false,true,false': [2.01, 21, 5], 'true,false,false': [0.451, 207, 123], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'recursion_economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, A)', 'true,false,false': 'recursion_economicsectorcompany(B, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.715, 20, 107], 'true,false,true': [1.07, 11, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.747, 227, 150], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'bankboughtbank(G, A)', 'false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.035, 0, 8], 'true,true,false': [2.708, 10, 28], 'true,false,true': [0.89, 4, 2], 'true,false,false': [6.796, 70, 185], 'false,true': [5.424, 174, 35], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'acquired(E, C)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.423, 84, 223], 'true,false,false': [0.375, 174, 35], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'economicsectorcompany(B, D)'}, {'true,true,true': [3.505, 20, 107], 'true,true,false': [8.559, 238, 151], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'bankboughtbank(E, F)', 'true,false': 'companyalsoknownas(A, G)', 'true,false,true': 'acquired(G, C)'}, {'true,true,true': [0.311, 20, 107], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [3.31, 31, 27], 'true,false,false': [0.433, 207, 123], 'false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankboughtbank(C, D)', 'true': 'companyalsoknownas(A, E), companyalsoknownas(D, E)', 'false': 'companyalsoknownas(A, F)', 'false,false': 'economicsectorcompany(B, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.312, 20, 107], 'false,true': [3.314, 31, 28], 'false,false,true': [0.433, 207, 123], 'false,false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'recursion_economicsectorcompany(B, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.274, 258, 258], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.19875011936466616, 0.1394198850758922], 'true': [0.0, 0.19955925826391205], 'true,false': [-2.5376526277146434e-16, 0.2024233142651277], 'true,false,false': [0.23765432098765396, 0.199375000000005], 'false': [0.1466836734693877, 0.13827416745520693], 'true,false,true': [nan, -2.5376526277146434e-16]}, {'': [0.19775378609186964, 0.1394154324514381], 'true': [nan, 0.19775378609186964], 'true,false': [0.19621781813840208, 0.19797931958245155]}, {'': [0.20858030388816506, nan], 'true': [0.11319427429550759, 0.2056704680640407], 'true,false': [0.2123848746753133, 0.203202864951483], 'true,false,true': [0.20760036753857544, 0.15532544378698215], 'true,true': [0.1725882881221454, 0.10677153341028332], 'true,true,false': [0.10677153341028332, nan]}, {'': [0.19350344607680545, nan], 'true': [0.10867283714845322, 0.20196319353799563], 'true,false': [0.09533236463506416, 0.20294803789783078], 'true,false,false': [nan, 0.20294803789783078], 'true,true': [nan, 0.10867283714845322]}, {'': [0.18060279685779979, 0.1407847794626854], 'true': [0.16517444815891374, 0.18280473510221082], 'true,false': [0.1320511582800006, 0.18111198503886677], 'true,true': [0.0001553775077405284, 0.19300607721263094], 'false': [0.1407847794626854, nan]}, {'': [0.1752992392368394, nan], 'true': [nan, 0.1752992392368394], 'true,false': [0.17912495587708954, 0.1407625920662467]}, {'': [0.17059908614837307, nan], 'true': [0.17059908614837307, nan], 'true,true': [0.09672377050051853, 0.18831483629732212]}, {'': [0.16856650679470653, nan], 'true': [0.09687392021366698, 0.18807000949619126], 'true,false': [0.18699971385370612, 0.18787833420249897], 'true,false,true': [0.0, 0.18891707760416232], 'true,true': [0.09687392021366698, nan]}, {'': [0.09731355440898187, 0.18770392532982455], 'false': [0.18616156883811227, 0.18773644384421034], 'false,false': [0.18773644384421034, nan], 'true': [nan, 0.09731355440898187]}, {'': [0.16668166185701222, nan], 'true': [nan, 0.16668166185701222], 'true,false': [0.16668166185701222, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
0;true;companyalsoknownas(A, D).;true;true
0;true,false;bankboughtbank(E, A), bankboughtbank(C, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(D, C).;true;true
4;true;bankboughtbank(C, E).;true;true
4;true,true;bankboughtbank(F, A).;true;true
7;;companyeconomicsector(A, B) :- bankboughtbank(C, D).;true;true
7;false;companyalsoknownas(A, G).;true;true
7;false,true;acquired(G, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(E, A), bankboughtbank(C, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.5623742872121851;  // std dev = 7.691, 284.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=200 */
%   else if ( companyceo(A, H), countryhascompanyoffice(I, A) )
%   | then if ( countryhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | then if ( cityhascompanyoffice(K, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( acquired(L, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.025778992902979858;  // std dev = 0.374, 173.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=29 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( bankboughtbank(D, A), countryhascompanyoffice(E, A) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0.14161876371475612;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3030316369523398;  // std dev = 1.067, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.761231201679986;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.1599909505669864;  // std dev = 3.041, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.29876043539389063;  // std dev = 10.011, 437.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=215 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( cityhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(E, F) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.5989302491515827;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7093493651708894;  // std dev = 0.199, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return -0.2811296082371878;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4279277812620856;  // std dev = 1.356, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.2067426817478072;  // std dev = 0.054, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.5989302491515827;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(J, A), companyceo(J, K) )
%   | | | then return 0.10782065085673637;  // std dev = 2.034, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.25033304111381766;  // std dev = 9.842, 431.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=212 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), cityhascompanyoffice(E, C) )
%   | then return 0.26619846799957153;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyceo(A, F) )
%   | | then if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.5278870568209274;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5861781326675457;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6805008631015751;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.4452432693511173;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyceo(A, I) )
%   | | then if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.42392651812802395;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1356721406134576;  // std dev = 3.889, 80.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=33 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.17662735482658276;  // std dev = 2.879, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return 0.2000706013326711;  // std dev = 8.990, 363.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=178 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.5075677198865964;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.05128829172194676;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.42966641489242086;  // std dev = 2.211, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | | then return 0.45085116172775275;  // std dev = 2.149, 52.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | | else return -0.32821034082390227;  // std dev = 0.214, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.2616617692027227;  // std dev = 2.066, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.3410442110483684;  // std dev = 5.714, 174.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=128 */
%   else if ( companyceo(A, K) )
%   | then return 0.0027691220476601247;  // std dev = 0.374, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else return -0.11363178067213298;  // std dev = 0.349, 167.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=24 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2756022666483982;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( bankchiefexecutiveceo(A, D) )
%   | | then return 0.16726065612211877;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | | then return 0.2747974190132338;  // std dev = 0.723, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.020894409852067853;  // std dev = 2.638, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.27955176555463007;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, G) )
%   | | then if ( acquired(H, A), companyceo(H, I) )
%   | | | then return -0.033091695228371264;  // std dev = 0.706, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.11727220757572655;  // std dev = 2.607, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.041217385364459395;  // std dev = 2.273, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.12768369404192303;  // std dev = 8.384, 358.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=179 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0.421, 516.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=258 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( acquired(E, A), economicsectorcompany(B, E) )
%   | then return 0.22527143886686884;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(A, F) )
%   | | then if ( economicsectorcompany(B, F) )
%   | | | then return 0.2700272971840987;  // std dev = 0.785, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.03502442002476048;  // std dev = 3.341, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | else if ( countryhascompanyoffice(G, A) )
%   | | | then return 0.1336895572170171;  // std dev = 2.479, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.08925569754917231;  // std dev = 8.517, 379.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=185 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), acquired(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then return -0.09293399305856263;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.035301610563063524;  // std dev = 0.272, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( bankboughtbank(F, A) )
%   | then if ( bankchiefexecutiveceo(F, G) )
%   | | then return 0.09183433058970517;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( countryhascompanyoffice(H, A), cityhascompanyoffice(I, F) )
%   | | | then return 0.08070159407500635;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0025675478034584837;  // std dev = 1.226, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( countryhascompanyoffice(K, A), companyceo(A, L) )
%   | | | then return 0.13423010459007292;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.045347949452591935;  // std dev = 2.429, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( acquired(M, A) )
%   | | | then return 0.06685822722995304;  // std dev = 2.496, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | | else return 0.07977237272011171;  // std dev = 8.489, 374.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=187 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.20155875045103133;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( acquired(C, D), companyceo(D, E) )
%   | | then return -0.11041376831265189;  // std dev = 0.765, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.033167656441227066;  // std dev = 0.374, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | then return 0.3034274614383483;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20569733528088832;  // std dev = 0.780, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( companyceo(A, I) )
%   | | then if ( cityhascompanyoffice(J, A), acquired(A, K) )
%   | | | then return 0.15648861893792784;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05262391977122522;  // std dev = 2.900, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.09335183271506656;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.05754880511132569;  // std dev = 8.222, 366.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=183 */


Results
   AUC ROC   = 0.823754
   AUC PR    = 0.822524
   CLL	      = -0.559975
   Precision = 0.741697 at threshold = 0.5
   Recall    = 0.773077
   F1        = 0.757062


Total learning time: 13.508 seconds
Total inference time: 2.184 seconds
AUC ROC: 0.823754


Results scoring model
   AUC ROC   = 0.874114
   AUC PR    = 0.871989
   CLL	      = -0.53499
   Precision = 0.807692 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.810811


Total scoring time: 1.909 seconds
Refined model CLL: -0.53499


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.809987
   AUC PR    = 0.821137
   CLL	      = -0.531403
   Precision = 0.700787 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.770563


Total learning time: 31.471 seconds
Total inference time: 3.319 seconds
AUC ROC: 0.809987
Total revision time: 31.471
Best scored revision CLL: -0.515115


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:04
{'AUC ROC': 0.809987, 'AUC PR': 0.821137, 'CLL': -0.531403, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 31.471, 'Inference time': 3.319, 'parameter_1.0': {'AUC ROC': 0.809987, 'AUC PR': 0.821137, 'CLL': -0.531403, 'Precision': [0.700787, 0.5], 'Recall': 0.855769, 'F1': 0.770563, 'Learning time': 13.303, 'Inference time': 3.319}}


