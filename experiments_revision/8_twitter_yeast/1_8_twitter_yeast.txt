Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.8482479450005014;  // std dev = 0.099, 101.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=100 */
%   | else return 0.8581489350995118;  // std dev = 2.67e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.14185106490048732;  // std dev = 3.01e-07, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16403128804068778;  // std dev = 4.248, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return 0.12420398097107084;  // std dev = 4.614, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.7088816367314653;  // std dev = 0.108, 170.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.6772269971953317;  // std dev = 0.925, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(D, G), follows(G, D) )
%   | | | then return 0.23357657279494526;  // std dev = 0.973, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.1062774368983299;  // std dev = 2.187, 277.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=6 */
%   | | | else return 0.006230901846571593;  // std dev = 3.803, 154.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=24 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.07772639345895191;  // std dev = 4.443, 108.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=26 */
%   | | | else return 0.14761020981546905;  // std dev = 4.489, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.5461488366057777;  // std dev = 0.115, 148.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=146 */
%   | else return 0.514502093955821;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.40735432721401;  // std dev = 1.752, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.6746164499660533;  // std dev = 1.297, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else return -0.1183328215086878;  // std dev = 0.113, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.7122184581609399;  // std dev = 1.704, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.16601325430693029;  // std dev = 0.804, 73.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.1849108493729781;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.15665960781802396;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D) )
%   | then return 0.43111664869276484;  // std dev = 0.384, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return 0.17830303499938868;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(E, A), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then return 0.25567220498115995;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.42749833237933305;  // std dev = 0.021, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.08866125993534764;  // std dev = 1.872, 308.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=6 */
%   | | | else return -0.01250525401530158;  // std dev = 3.066, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.03806260980421694;  // std dev = 4.164, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.13564043265291084;  // std dev = 3.983, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then return 0.2772456547934011;  // std dev = 0.214, 124.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=118 */
%   | else return 0.3283805457674528;  // std dev = 0.077, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.07795115532994988;  // std dev = 0.121, 278.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=7 */
%   | | else if ( follows(G, E), recursion_accounttype(G, B) )
%   | | | then return 0.4995143072707896;  // std dev = 0.571, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.10493865790535835;  // std dev = 0.865, 145.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=3 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.5177608120001362;  // std dev = 2.200, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.1498699557524795;  // std dev = 0.719, 90.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1475226058573836;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.22405661450496803;  // std dev = 2.770, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.25200388500699683;  // std dev = 0.107, 153.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=151 */
%   | else return 0.07129543888895812;  // std dev = 0.421, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( follows(E, A), follows(A, F) )
%   | then if ( follows(F, A), follows(F, E) )
%   | | then return -0.06143745686650548;  // std dev = 0.132, 247.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=11 */
%   | | else if ( follows(G, E), recursion_accounttype(G, B) )
%   | | | then return 0.3849392772678363;  // std dev = 0.493, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.0986235845096594;  // std dev = 0.358, 126.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=1 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.5512636282815601;  // std dev = 1.835, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | | else return -0.16278210604693885;  // std dev = 0.469, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.029228678819295258;  // std dev = 2.170, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.008124440620156366;  // std dev = 2.359, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.2152197517466353;  // std dev = 0.088, 138.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else return 0.18095176631206966;  // std dev = 0.242, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.06653408469250609;  // std dev = 0.117, 289.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.31485900427254293;  // std dev = 0.424, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.09403820203151775;  // std dev = 0.025, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.3968482256997243;  // std dev = 1.615, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.1565193877893508;  // std dev = 0.449, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06700775051379641;  // std dev = 2.571, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.023453012397812112;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, E) )
%   | then return 0.1807646359932624;  // std dev = 0.086, 143.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=142 */
%   | else if ( follows(C, F), follows(F, A) )
%   | | then return 0.1766069194068581;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return -0.05825722105990666;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.08162452671293792;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.31464375143239;  // std dev = 1.580, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.08158113906713728;  // std dev = 0.075, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.17263017097634287;  // std dev = 0.128, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.0030117752635369878;  // std dev = 2.392, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.06924019299049995;  // std dev = 3.436, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( recursion_accounttype(E, B) )
%   | | | then return 0.14708688450026042;  // std dev = 0.993, 81.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=80 */
%   | | | else return 0.04720940209991088;  // std dev = 1.883, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else return -0.00861038027116832;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.18229313151436294;  // std dev = 0.214, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(F, A) )
%   | then return -0.04122196907110398;  // std dev = 0.114, 475.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=48 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.28220742226720674;  // std dev = 1.411, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.10915475997634842;  // std dev = 0.649, 93.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=1 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.033728608890385654;  // std dev = 2.077, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.05475351439895735;  // std dev = 3.011, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then return 0.14275363299750712;  // std dev = 0.098, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.0781329033266988;  // std dev = 1.682, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | | else return 0.13223063513299274;  // std dev = 0.984, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.02797743942972386;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(G, A) )
%   | then return -0.045642693500797735;  // std dev = 0.137, 471.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=48 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.281019460502224;  // std dev = 1.617, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.14064652800558783;  // std dev = 0.564, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.03155572798572873;  // std dev = 1.602, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.0918090054798509;  // std dev = 2.711, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 87

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 282

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5160900577342101;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.13506682606002446;  // std dev = 1.397, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.32186491774538006;  // std dev = 1.739, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.604860983110068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.34782373968893404;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5049190568329419;  // std dev = 1.405, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.15714693007480524;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.45534430988907504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5002131558403854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2680591725859212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0650070984089258;  // std dev = 1.317, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.21184445004461122;  // std dev = 1.386, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13637023346435792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3465034936260727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20240845736655003;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.053692935619933914;  // std dev = 1.314, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1705475382388634;  // std dev = 1.335, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12830007847517153;  // std dev = 0.353, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.27270376398261553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3480411762363753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.21422512202048885;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13301053887901604;  // std dev = 0.852, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13542257003772976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09124825135243193;  // std dev = 1.195, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05190994003773867;  // std dev = 1.035, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.22206867927587737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1291261268811085;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0177761456508329;  // std dev = 1.286, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41107566123397643;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21290251826426485;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07670533100169752;  // std dev = 0.279, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18607472484412202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return -0.06944114561680514;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.43055885438319486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24115699028962126;  // std dev = 1.258, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return -0.17179644110701342;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2587631360301552;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12869373916235377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15952119371655615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07496327365906515;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then return 0.038473228544429645;  // std dev = 1.533, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04867587884856496;  // std dev = 0.231, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13927602138006223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42920547288627864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.1287856874626091;  // std dev = 0.625, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.031698962177847526;  // std dev = 1.529, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04214035132142474;  // std dev = 0.229, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.908694
   AUC PR    = 0.861454
   CLL	      = -0.395338
   Precision = 0.857724 at threshold = 0.5
   Recall    = 0.748227
   F1        = 0.799242


Total learning time: 1.924 seconds
Total inference time: 1.817 seconds
AUC ROC: 0.908694


Results scoring model
   AUC ROC   = 0.982699
   AUC PR    = 0.98306
   CLL	      = -0.323213
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.823529
   F1        = 0.875


Total scoring time: 0.772 seconds
Parameter learned model CLL: -0.323213


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.816, 1, 2], 'false,true,true,true': [1.225, 3, 3], 'false,true,true,false': [0.0, 0, 9], 'false,true,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.85, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.397, 7, 3], 'false,false,true,false': [1.739, 8, 9], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.816, 1, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.405, 3, 12], 'false,true,false': [0.039, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.472, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.816, 1, 2], 'false,false,true,true': [1.317, 7, 3], 'false,false,true,false': [1.386, 8, 9], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.816, 1, 2], 'false,true,true': [1.314, 7, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.335, 8, 9], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.353, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true': [0.911, 2, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.852, 4, 4], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [1.195, 5, 4], 'false,false,false,false': [1.035, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.816, 1, 2], 'false,true,true': [1.286, 7, 3], 'false,true,false,true': [0.028, 0, 9], 'false,true,false,false': [0.015, 8, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.279, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.707, 1, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.258, 3, 12], 'false,true,false': [0.041, 12, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.773, 1, 2], 'false,true': [1.533, 15, 12], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.231, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.625, 1, 1], 'false,true': [1.529, 15, 12], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.229, 1, 1]}]]
[{'': [0.18750000000000006, 0.24888888888888847], 'false': [0.2469135802469131, 0.22222222222222224], 'false,true': [0.15999999999999973, -1.1564823173178714e-17], 'false,false': [0.0, 0.25], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.22222222222222224], 'false,true,true': [0.24999999999999992, -2.9605947323337506e-16], 'false,false,true': [nan, 0.0]}, {'': [0.18045492962607107, 0.19213820647761895], 'false': [0.0, 0.191595309334631], 'false,false': [0.19243188222099533, 0.178471628116294], 'false,false,true': [0.19524414878800098, 0.1778540792300783], 'false,false,false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.17905444376145452, 0.1745414766046287], 'true': [0.0, 0.22222222222222224], 'false': [0.1814357892761647, 0.09906674252579038], 'false,true': [0.13166654011473977, 0.00012992238342980633], 'false,true,true': [nan, 0.1316665401147395], 'false,false': [0.0, 0.11145008534151415], 'false,false,false': [0.11145008534151415, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0005033033342505822, 0.14520574604837008], 'false': [0.2222222222222222, 0.13606748236576782], 'false,true': [nan, 0.2222222222222222], 'false,false': [0.14044563853669503, 0.0766968208560652], 'false,false,true': [0.17357503435140956, 0.11297212611406329], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [0.17055980031816037, 0.125145680789734], 'true': [0.0, 0.2222222222222222], 'false': [0.1331048252669569, 0.049691049071729186], 'false,true': [0.1725518369523476, 0.1048432940227212], 'false,true,false': [nan, 0.1048432940227212], 'false,false': [0.0, 0.062195810698099915], 'false,false,false': [nan, 0.062195810698099915], 'false,false,true': [nan, 0.0]}, {'': [0.0014189314212732368, 0.1317865671960563], 'false': [0.1312278574879684, 0.1291062987330546], 'false,true': [0.20765389069661652, 0.09081623804536328], 'false,false': [0.038141076908917174, 0.13919984663352458], 'false,false,false': [0.15859911600887805, 0.11902682588962528], 'false,true,false': [nan, 0.09081623804536328], 'false,false,true': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [0.16828635130022684, 0.11530304252495843], 'true': [0.0, 0.22222222222222224], 'false': [0.12463720663794238, 0.02981719826097427], 'false,true': [0.16526631340817327, 0.09705896954852367], 'false,true,false': [8.564122659188772e-05, 2.8145298376129613e-05], 'false,false': [0.0, 0.03882481837281059], 'false,false,false': [0.03882481837281059, nan], 'false,false,true': [0.0, nan]}, {'': [0.16814682560695554, 0.09367962197349682], 'true': [0.0, 0.2222222222222222], 'true,false': [0.25, 0.0], 'false': [0.10079794220753178, 0.027811104325635744], 'false,true': [0.10553132089305632, 0.0001420319049288595], 'false,true,true': [nan, 0.10553132089305632], 'false,false': [0.0, 0.02337691724700629], 'false,false,false': [0.0, 0.0]}, {'': [0.15064986328395238, 0.08054322558385059], 'true': [0.0, 0.19907897391749094], 'false': [0.08704057476507245, 0.020253322336474783], 'false,false': [0.0, 0.026769935403325562], 'false,false,false': [nan, 0.026769935403325562], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.15084100193992372, 0.08002166965209104], 'true': [0.02101477171267388, 0.19537181432972267], 'false': [0.08658896165780822, 0.019398443143926362], 'true,true': [0.0, 0.0], 'false,false': [0.0, 0.026284502498254706], 'false,false,false': [nan, 0.026284502498254706], 'true,true,false': [nan, 0.0], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,false;phenotype(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;false;interaction(G, A).;true;true
9;false,false;phenotype(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5160900577342101;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.13307574401382583;  // std dev = 1.522, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3637419421494264;  // std dev = 1.587, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.604860983110068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.34782373968893404;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.7049281938086756;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3270377151468193;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.15592482375200925;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.45534430988907504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5002131558403854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2680591725859212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.20723640803668106;  // std dev = 1.281, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.1020791449947686;  // std dev = 1.356, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13637023346435792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3465034936260727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20240845736655003;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.2915313363413421;  // std dev = 0.761, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.19582170209057378;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12683329566563747;  // std dev = 1.520, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12830007847517153;  // std dev = 0.353, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.27270376398261553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3480411762363753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.14228906559470325;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16758447295634718;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3055615979825404;  // std dev = 0.559, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13542257003772976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.1503825474635509;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17940762314292547;  // std dev = 1.221, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.22206867927587737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13468035959141322;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.13135881681709918;  // std dev = 0.853, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.2668955025303627;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.40491417268098284;  // std dev = 0.224, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21249216057485087;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07670533100169752;  // std dev = 0.279, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18607472484412202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return -0.05156225519483193;  // std dev = 0.650, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.4077474860104542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.38723327024533105;  // std dev = 0.289, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16286535895270546;  // std dev = 0.801, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.17231033997728393;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2587631360301552;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12869373916235377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.15952119371655615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.07879006688710471;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( enzyme(A, H), interaction(F, F) )
%   | | | then return -0.16998359300734925;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0318551662713281;  // std dev = 0.839, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.25894768510880933;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.041220514873538394;  // std dev = 0.743, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04867587884856496;  // std dev = 0.231, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13927602138006223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4011891347526019;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11014843959699006;  // std dev = 0.576, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.14000381990218316;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14579165521032975;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09426064709994557;  // std dev = 0.584, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.044262070318692025;  // std dev = 0.533, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04214035132142474;  // std dev = 0.229, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.900778
   AUC PR    = 0.859038
   CLL	      = -0.394396
   Precision = 0.84507 at threshold = 0.5
   Recall    = 0.851064
   F1        = 0.848057


Total learning time: 2.923 seconds
Total inference time: 1.438 seconds
AUC ROC: 0.900778


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.251614
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.787 seconds
Refined model CLL: -0.251614


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900778
   AUC PR    = 0.859038
   CLL	      = -0.394396
   Precision = 0.84507 at threshold = 0.5
   Recall    = 0.851064
   F1        = 0.848057


Total learning time: 6.406 seconds
Total inference time: 1.438 seconds
AUC ROC: 0.900778
Total revision time: 6.406
Best scored revision CLL: -0.251614


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:39:20
{'AUC ROC': 0.900778, 'AUC PR': 0.859038, 'CLL': -0.394396, 'Precision': [0.84507, 0.5], 'Recall': 0.851064, 'F1': 0.848057, 'Learning time': 6.406, 'Inference time': 1.438, 'parameter_0.2': {'AUC ROC': 0.908694, 'AUC PR': 0.861454, 'CLL': -0.395338, 'Precision': [0.857724, 0.5], 'Recall': 0.748227, 'F1': 0.799242, 'Learning time': 1.924, 'Inference time': 1.817}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.2970143868412817;  // std dev = 1.690, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.22660454927966941;  // std dev = 1.443, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.40564015880039006;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.11856181366859946;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6618896058836103;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1574570176610558;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.40166665172504445;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1781475775373148;  // std dev = 2.502, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.4545798150192006;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.34921191084772957;  // std dev = 0.644, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5110557164890537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.17708239360983644;  // std dev = 1.275, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1361729867610912;  // std dev = 1.104, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13684316605700705;  // std dev = 2.486, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.37053640012262584;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.3357703074172587;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.14356530336090612;  // std dev = 1.232, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11235499478126647;  // std dev = 1.074, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.25743597042863847;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11410882411618856;  // std dev = 2.469, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.5239092701025282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17269404970398286;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3008881115402743;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1355867895445907;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.11559460053304745;  // std dev = 0.951, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08437743340455814;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42994101739426255;  // std dev = 1.588, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.3026608477474574;  // std dev = 0.242, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.43386482925595765;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04527121362869886;  // std dev = 0.297, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.21100816982436887;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.24306650514959027;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09000157459060736;  // std dev = 1.168, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4139974108862541;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1757626366472243;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3247935851066549;  // std dev = 1.020, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.32844051698641097;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A) )
%   | | | then return -3.864194439568471E-4;  // std dev = 1.701, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.1830171105700905;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20431313437449095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34439025951962815;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1861382090729214;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.12917201655365587;  // std dev = 0.503, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04334189168793454;  // std dev = 2.049, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.15491719118946615;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15278997074340694;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.171825544391713;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.04052023349401775;  // std dev = 1.148, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.08251999316264695;  // std dev = 0.515, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.038914148240652625;  // std dev = 2.046, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.20786368490158647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07903562882723375;  // std dev = 0.582, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.13404302840979465;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1487336609654652;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.03391280724965872;  // std dev = 1.142, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.22250011575799603;  // std dev = 1.010, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.28402522038486505;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.03063104084272103;  // std dev = 1.582, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.06028509022631831;  // std dev = 0.581, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.95944
   AUC PR    = 0.95172
   CLL	      = -0.364528
   Precision = 0.941634 at threshold = 0.5
   Recall    = 0.858156
   F1        = 0.897959


Total learning time: 1.828 seconds
Total inference time: 1.465 seconds
AUC ROC: 0.95944


Results scoring model
   AUC ROC   = 0.982699
   AUC PR    = 0.984292
   CLL	      = -0.327688
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.882353
   F1        = 0.9375


Total scoring time: 0.845 seconds
Parameter learned model CLL: -0.327688


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 8], 'false,true,true,false': [0.0, 0, 5], 'false,true,false': [0.0, 15, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [1.754, 5, 8], 'false,false,false,false': [1.9, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'phenotype(A, J)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.69, 8, 8], 'false,false,true,false': [1.443, 7, 5], 'false,false,false,true': [1.754, 5, 8], 'false,false,false,false': [1.9, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.028, 0, 13], 'false,true,false': [0.018, 15, 0], 'false,false,true,true': [0.693, 1, 2], 'false,false,true,false': [2.502, 17, 12], 'false,false,false,true': [0.776, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.644, 1, 5], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [1.275, 8, 8], 'false,false,true,false': [1.104, 7, 5], 'false,false,false,true': [2.486, 17, 11], 'false,false,false,false': [0.768, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [7.45e-09, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true': [1.232, 8, 8], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.074, 7, 5], 'false,false,true,true': [0.679, 1, 2], 'false,false,true,false': [2.469, 17, 12], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.123, 0, 4], 'true,false': [0.594, 1, 2], 'false,true,true': [0.951, 5, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.174, 9, 7], 'false,false,true,true': [1.588, 4, 13], 'false,false,true,false': [0.242, 14, 0], 'false,false,false,true': [0.025, 0, 2], 'false,false,false,false': [0.297, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.005, 0, 2], 'false,true,true': [1.168, 8, 8], 'false,true,false,true': [0.074, 0, 5], 'false,true,false,false': [0.005, 7, 0], 'false,false,true,true': [1.02, 2, 11], 'false,false,true,false': [0.06, 4, 0], 'false,false,false,true': [1.701, 13, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.017, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.119, 0, 13], 'false,true,false': [0.125, 15, 0], 'false,false,true': [0.503, 1, 3], 'false,false,false,true': [2.049, 17, 11], 'false,false,false,false': [0.594, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.002, 0, 2], 'false,true': [1.148, 15, 13], 'false,false,true,true': [0.515, 1, 2], 'false,false,true,false': [2.046, 17, 12], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.582, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.002, 0, 2], 'false,true': [1.142, 15, 13], 'false,false,true,true': [1.01, 2, 11], 'false,false,true,false': [0.08, 4, 0], 'false,false,false,true': [1.582, 12, 4], 'false,false,false,false': [0.581, 1, 1]}]]
[{'': [0.0, 0.24842529604434316], 'false': [0.2487244897959179, 0.24816326530612198], 'false,true': [-2.7328566760003855e-16, -1.4802973661668754e-17], 'false,false': [0.18750000000000006, 0.24349635796045738], 'false,false,false': [0.23668639053254428, 0.20061728395061712], 'false,false,true': [0.25, 0.0], 'true': [1.4802973661668753e-16, 0.0], 'false,true,true': [-2.220446049250313e-16, 0.0]}, {'': [0.0, 0.2098249263461293], 'false': [0.16717525072438116, 0.20836066865177372], 'false,false': [0.17756105858508833, 0.23581054138404156], 'false,false,false': [0.23668639053254437, 0.2006172839506174], 'false,false,true': [0.17847162811629386, 0.17351408289084147], 'false,true': [0.0, 0.18431850651618772], 'false,true,false': [0.0, 0.0], 'false,true,true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.19577024846760496], 'false': [0.1670146591931839, 0.21877302404494553], 'false,false': [0.2148793981199841, 0.20063082753896944], 'false,false,true': [0.16029386035100934, 0.21584235508990027], 'false,false,false': [0.20063082753896944, nan], 'false,true': [5.8440692685397705e-05, 2.16355716189498e-05], 'false,true,true': [nan, 5.8440692685397705e-05], 'true': [0.0, 0.0]}, {'': [0.06240778203673932, 0.16229412115417347], 'false': [0.0, 0.1656129928476889], 'false,false': [0.10197962625605236, 0.22308828776168763], 'false,false,false': [0.2206600327343215, 0.19642455702316922], 'false,false,true': [0.10154067618643736, 0.10160856183341543], 'true': [0.06906716226793867, 0.0], 'false,true': [nan, 0.0]}, {'': [5.4421734075571494e-05, 0.15790289049167103], 'false': [0.09568583584862189, 0.2076201755276022], 'false,false': [0.2066341300704716, 0.194078251342133], 'false,false,true': [0.1538894262969918, 0.2101646033426245], 'false,false,false': [0.0, 0.24999999999999997], 'false,true': [0.09489648117842443, 0.09618168967842661], 'false,true,false': [nan, 0.09618168967842661], 'true': [1.850371707708594e-17, 0.0]}, {'': [0.059206638735983357, 0.1525158688175163], 'false': [0.08803728968080354, 0.20026424655291153], 'false,false': [0.21611606581897713, 0.05993353773205191], 'false,false,true': [0.14826106829772653, 0.004189052927564171], 'false,true': [0.09046471644547598, 0.08614533582844958], 'false,true,false': [nan, 0.08614533582844955], 'false,false,false': [0.0003061344605683469, 0.04405844195040261], 'true': [0.0037733621877239637, 0.11750365867450786]}, {'': [0.00025183300810702745, 0.125133024747337], 'false': [0.08522067897087585, 0.15706192007073946], 'false,false': [0.1381368565978233, 0.16065332893438478], 'false,false,false': [0.16065332893438478, nan], 'false,false,true': [0.0799635229448295, 0.0008888793356211927], 'false,true': [0.08521533268886307, 0.08499853004621995], 'false,true,false': [0.0010978697241302404, 3.859105639139207e-06], 'true': [0.0, 1.2940401972971749e-05]}, {'': [0.0001326594826600025, 0.10873699688934878], 'false': [0.07107287059813625, 0.13886543941976248], 'false,false': [0.06334389019726766, 0.14796674078073188], 'false,false,false': [0.15001047386063723, 0.11764759777103528], 'false,true': [0.0010968012123840824, 0.0010407285479419345], 'false,true,true': [nan, 0.0010968012123840824], 'true': [7.512022734948443e-05, 0.0], 'true,false': [nan, 0.0]}, {'': [8.760704342708481e-05, 0.09751384735685609], 'false': [0.0470863229366446, 0.13781782806172635], 'false,false': [0.13926056559694694, 0.11672601994962288], 'false,false,true': [0.0883605741677247, 0.144347819166254], 'false,false,false': [0.0, 0.16955680724713548], 'true': [0.0, 1.6057700956695342e-06], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [5.230400289654158e-05, 0.09691295872097956], 'false': [0.04657609797631079, 0.13716794559730974], 'false,false': [0.10655240794704245, 0.1586327039141882], 'false,false,false': [0.15644924070936297, 0.16875308254073376], 'false,false,true': [0.07848114684506372, 0.0015850118219851023], 'true': [0.0, 1.2711963099237833e-06], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(I, A), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,false;phenotype(A, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,false;phenotype(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(A, H).;true;true
6;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,false;phenotype(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, F).;true;true
9;false,false;phenotype(A, G).;true;true
9;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6476857073247434;  // std dev = 1.294, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.15354457788033607;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.1716831681351456;  // std dev = 2.386, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5730155742373889;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6835572120591424;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.10954514646605022;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1344530931166603;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4921994109037006;  // std dev = 1.281, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.179920509604379;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.18356325462811812;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.17357960251473908;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.3467314655585931;  // std dev = 0.543, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.4329508536562925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.18449369943833094;  // std dev = 1.713, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.46932728279615005;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.11192833422032979;  // std dev = 2.170, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.09959355650023267;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.3363237428427295;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(A, H), interaction(F, I) )
%   | | | then return 0.22030804853958183;  // std dev = 0.745, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.008355959870081605;  // std dev = 0.950, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.29925266595947386;  // std dev = 0.454, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.18058300529390708;  // std dev = 1.518, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.03404265706454376;  // std dev = 1.702, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.4297806984257644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2697468222655832;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.1139009279828231;  // std dev = 0.405, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3117047781703802;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I), interaction(G, J) )
%   | | | then return 0.16564278766830048;  // std dev = 0.702, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.031972467313477686;  // std dev = 0.971, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.23418605283263486;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06808076111793336;  // std dev = 2.227, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.2553606948074193;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.26745067618142265;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08173337476681258;  // std dev = 0.245, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.23046592625009293;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.0030933775811307074;  // std dev = 0.655, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1514846192334955;  // std dev = 0.658, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.36245394349013127;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12179503136217971;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23639225627613758;  // std dev = 1.253, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.22919166905758998;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.03328184671690072;  // std dev = 1.248, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11527368943707465;  // std dev = 1.331, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1921993289268066;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.22769202449542894;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32415009949435936;  // std dev = 0.252, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.15582334398405578;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10947666759181406;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, A), phenotype(L, K) )
%   | | | then return -0.0017300375003656925;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05010970882907101;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.18196014364839458;  // std dev = 0.995, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.02591082845569884;  // std dev = 1.841, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.15689985571664364;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17500955770702764;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.19381109961674453;  // std dev = 0.413, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.017051380820849255;  // std dev = 0.720, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.12219056451826574;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.03225266747623661;  // std dev = 0.658, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05547540650497607;  // std dev = 2.086, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.20000873877573455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14886327159711255;  // std dev = 0.683, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13726437553827783;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15116074715844824;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.15964944924434316;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.014906758749655543;  // std dev = 0.723, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.10537415709197728;  // std dev = 0.287, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1488493292308173;  // std dev = 1.248, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1985890952278244;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.18555756085762543;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06622190009219768;  // std dev = 1.778, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */


Results
   AUC ROC   = 0.92772
   AUC PR    = 0.923578
   CLL	      = -0.391046
   Precision = 0.914286 at threshold = 0.5
   Recall    = 0.794326
   F1        = 0.850095


Total learning time: 4.241 seconds
Total inference time: 1.516 seconds
AUC ROC: 0.92772


Results scoring model
   AUC ROC   = 0.9641
   AUC PR    = 0.965713
   CLL	      = -0.324377
   Precision = 0.935484 at threshold = 0.5
   Recall    = 0.852941
   F1        = 0.892308


Total scoring time: 0.893 seconds
Refined model CLL: -0.324377


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.92772
   AUC PR    = 0.923578
   CLL	      = -0.391046
   Precision = 0.914286 at threshold = 0.5
   Recall    = 0.794326
   F1        = 0.850095


Total learning time: 7.8069999999999995 seconds
Total inference time: 1.516 seconds
AUC ROC: 0.92772
Total revision time: 7.8069999999999995
Best scored revision CLL: -0.324377


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:39:32
{'AUC ROC': 0.92772, 'AUC PR': 0.923578, 'CLL': -0.391046, 'Precision': [0.914286, 0.5], 'Recall': 0.794326, 'F1': 0.850095, 'Learning time': 7.8069999999999995, 'Inference time': 1.516, 'parameter_0.4': {'AUC ROC': 0.95944, 'AUC PR': 0.95172, 'CLL': -0.364528, 'Precision': [0.941634, 0.5], 'Recall': 0.858156, 'F1': 0.897959, 'Learning time': 1.828, 'Inference time': 1.465}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6187578536943906;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.2970143868412816;  // std dev = 2.154, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.27477970129550944;  // std dev = 1.839, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.18340385319677519;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.29415244793700734;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.46577216173951896;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6200498640750869;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.65789188306832;  // std dev = 0.012, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.160506714974615;  // std dev = 0.007, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4173395652456637;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20435722870618533;  // std dev = 3.265, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2724359239976146;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.3414902275188483;  // std dev = 1.027, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.6507940939392985;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15982226205431985;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.1777671919830198;  // std dev = 1.626, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16502016990732593;  // std dev = 1.395, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1680781607523441;  // std dev = 3.191, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.2211562490963514;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.40527796276491407;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12005445012599558;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.14413798349993096;  // std dev = 1.572, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return -0.15941892690040466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1508497798324041;  // std dev = 1.316, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.27173478781099564;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12822572298475887;  // std dev = 3.249, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.28660836156272346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3284715603015525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3274524827065702;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.04586386589394342;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.0836966545795456;  // std dev = 1.501, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return -0.1391968374045087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.12098239732102233;  // std dev = 1.420, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.46945969018204464;  // std dev = 1.955, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.3209804411571086;  // std dev = 0.169, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2647858261931607;  // std dev = 0.515, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.10840271291170507;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.37213523812331656;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09648404562540738;  // std dev = 1.508, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3909281752481853;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.19409088287349058;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4832030276405142;  // std dev = 0.773, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2803501185002653;  // std dev = 0.269, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1032906452030562;  // std dev = 2.374, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.12107110510489959;  // std dev = 0.795, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.259784722322006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3421829736227655;  // std dev = 0.161, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.19357216603037566;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.06774381477907904;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.053571061080743505;  // std dev = 2.572, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.09507023710310963;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1905603244425378;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08708384787292246;  // std dev = 0.798, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F) )
%   | then return 0.04758614507730823;  // std dev = 1.472, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.13142836924142784;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03679652566242039;  // std dev = 2.649, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.15384166876124364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15108654613594735;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.18703640570301394;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06072325067102887;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.03967735697942197;  // std dev = 1.463, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.345339710681949;  // std dev = 0.749, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.24529060287774548;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04704967017148199;  // std dev = 2.253, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.11478026150679772;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.978233
   AUC PR    = 0.971042
   CLL	      = -0.361864
   Precision = 0.942953 at threshold = 0.5
   Recall    = 0.996454
   F1        = 0.968966


Total learning time: 2.017 seconds
Total inference time: 1.422 seconds
AUC ROC: 0.978233


Results scoring model
   AUC ROC   = 0.983913
   AUC PR    = 0.981848
   CLL	      = -0.353985
   Precision = 0.928571 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.962963


Total scoring time: 0.876 seconds
Parameter learned model CLL: -0.353985


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.0, 0, 13], 'false,true,true,false': [0.0, 0, 9], 'false,true,false': [1.49e-08, 23, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.97, 11, 6], 'false,false,false,false': [2.691, 15, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'enzyme(A, J)'}, {'true': [0.928, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [2.154, 13, 13], 'false,false,true,false': [1.839, 10, 9], 'false,false,false,true': [1.97, 11, 6], 'false,false,false,false': [2.691, 15, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.915, 1, 6], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.012, 0, 22], 'false,true,false': [0.007, 23, 0], 'false,false,true,true': [0.715, 1, 2], 'false,false,true,false': [3.265, 25, 19], 'false,false,false,true': [0.98, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.027, 2, 7], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.801, 1, 2], 'false,false,true,true': [1.626, 13, 13], 'false,false,true,false': [1.395, 10, 9], 'false,false,false,true': [3.191, 24, 18], 'false,false,false,false': [0.977, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.044, 0, 5], 'true,false': [0.801, 1, 2], 'false,true,true': [1.572, 13, 13], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.316, 9, 9], 'false,false,true,true': [0.704, 1, 2], 'false,false,true,false': [3.249, 25, 19], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.09, 0, 6], 'true,false': [0.912, 2, 2], 'false,true,true': [1.501, 11, 10], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.42, 11, 11], 'false,false,true,true': [1.955, 5, 20], 'false,false,true,false': [0.169, 21, 0], 'false,false,false,true': [0.515, 1, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.759, 1, 5], 'true,false': [0.049, 0, 2], 'false,true,true': [1.508, 13, 13], 'false,true,false,true': [0.032, 0, 9], 'false,true,false,false': [0.078, 10, 0], 'false,false,true,true': [0.773, 1, 7], 'false,false,true,false': [0.269, 11, 0], 'false,false,false,true': [2.374, 16, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.795, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.161, 0, 22], 'false,true,false': [0.136, 23, 0], 'false,false,true': [0.879, 2, 3], 'false,false,false,true': [2.572, 24, 18], 'false,false,false,false': [0.713, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.798, 1, 5], 'false,true': [1.472, 23, 22], 'false,false,true,true': [0.557, 1, 2], 'false,false,true,false': [2.649, 25, 19], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.657, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.044, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.734, 1, 2], 'false,true': [1.463, 23, 22], 'false,false,true,true': [0.749, 1, 7], 'false,false,true,false': [0.263, 11, 0], 'false,false,false,true': [2.253, 15, 14], 'false,false,false,false': [0.657, 1, 2]}]]
[{'': [0.10937499999999978, 0.2490234375000012], 'false': [0.24987654320987762, 0.2475970780469062], 'false,true': [1.6148698540002277e-16, 9.654113257610057e-18], 'false,false': [0.23999999999999994, 0.2457466918714553], 'false,false,false': [0.2283737024221454, 0.2497027348394764], 'false,false,true': [0.25, 0.22222222222222224], 'true': [0.0, 0.13888888888888898], 'false,true,true': [-2.7328566760003855e-16, -2.9605947323337506e-16]}, {'': [0.10754787457576787, 0.21427312506164417], 'false': [0.2380074413871763, 0.21219080803971635], 'false,true': [0.0, 0.2433597767942928], 'false,true,false': [0.0, 0.2222222222222222], 'false,false': [0.17838349397895206, 0.24467790757551494], 'false,false,false': [0.22837370242214564, 0.24970273483947725], 'false,false,true': [0.17847162811629386, 0.1779772468749745], 'false,true,true': [nan, 0.0]}, {'': [0.1071763321341514, 0.20637512534991664], 'false': [0.16736545888537682, 0.24065392175207806], 'false,false': [0.24046774676982585, 0.24010578771815938], 'false,false,true': [0.1706134300884582, 0.24233512774787283], 'false,false,false': [0.24010578771815938, nan], 'false,true': [6.046048425790605e-06, 2.2013758018545953e-06], 'true': [0.11951203554500167, 0.0], 'false,true,true': [nan, 6.046048425952093e-06]}, {'': [0.11403716335513266, 0.1742596572165793], 'false': [0.21399130974952482, 0.1729446597014366], 'false,true': [nan, 0.21399130974952482], 'false,false': [0.10205007675616269, 0.2422980089883759], 'false,false,false': [0.24239907014457995, 0.23866456455660953], 'true': [0.1171410711052167, 0.0], 'false,false,true': [0.10174125684847828, 0.10237879128893708]}, {'': [0.09958516274888585, 0.17040653192763958], 'false': [0.09547327094953112, 0.23652408912343587], 'false,false': [0.2363231148865812, 0.2376022873442724], 'false,false,false': [0.0, 0.22222222222222224], 'false,false,true': [0.1651847182572227, 0.23985889510999314], 'true': [0.0003843150640853388, 0.21407462628891794], 'false,true': [0.0950492917039962, 0.0960000037007032], 'false,true,false': [0.0, 0.09626667037764959]}, {'': [0.10305964557795888, 0.16692896631685653], 'false': [0.09867033456148296, 0.22673081461547745], 'false,false': [0.2387358719934245, 0.06623205632113538], 'false,false,true': [0.1528950867188168, 0.0013644562783974089], 'true': [0.0013620635788477904, 0.20803072910555645], 'false,true': [0.10722157581147798, 0.09054069795876762], 'false,true,false': [0.0, 0.09171300013473536], 'false,false,false': [0.06623205632113538, nan]}, {'': [0.08541661266320547, 0.13501260296347978], 'false': [0.08679446123421042, 0.17750473578053644], 'false,false': [0.177377245864371, 0.1761416620133768], 'false,false,true': [0.0746981525393493, 0.00657362084538925], 'false,false,false': [0.1761416620133768, nan], 'false,true': [0.08751939500519354, 0.08569775975520394], 'false,true,false': [0.00011273958760655351, 0.0006071365749807988], 'true': [0.09609766679950033, 0.001207316613450915]}, {'': [0.08112241660333003, 0.11641528810321576], 'false': [0.07271420622657478, 0.15492689630007653], 'false,false': [0.1546057049660776, 0.15495086714314305], 'false,false,false': [0.15745931602839744, 0.12703972716009185], 'true': [0.09030614981076689, 0.0], 'false,true': [0.001183749302686095, 0.0008071203369930198], 'false,true,true': [nan, 0.001183749302686095], 'true,false': [nan, 0.0]}, {'': [0.08161115033230809, 0.10439146736252626], 'false': [0.04812018681133214, 0.15404024924514398], 'false,false': [0.15639054841534764, 0.12547950723773374], 'false,false,true': [0.10324620891404462, 0.1594424185031399], 'false,false,false': [0.0, 0.14406070559021478], 'true': [0.0, 0.10613802180892862], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.08199379255556925, 0.10352763116780388], 'false': [0.047558605282799545, 0.15290078017437045], 'false,false': [0.11820010844497453, 0.17257279852802707], 'false,false,false': [0.1750894941305737, 0.14408737987810813], 'false,false,true': [0.07010538923154332, 0.0062963314039539845], 'true': [0.00038893376979118874, 0.17963636095275115], 'true,true': [0.00038893376979118874, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,false;enzyme(A, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,true;interaction(A, F), interaction(E, F).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), enzyme(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,false;enzyme(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.7389009653977034;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41851933418886933;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.48355232626350836;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J), complex(J, I) )
%   | | | then return 0.41223048466937423;  // std dev = 1.348, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.16036153531514108;  // std dev = 2.658, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.2888303467210491;  // std dev = 2.832, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.48933154480169644;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.5709652301750935;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3077665042882251;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6659665702405452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.647500347088335;  // std dev = 0.024, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.15776577628962982;  // std dev = 0.014, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(A, J) )
%   | | | then return 0.33336401836094803;  // std dev = 1.446, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09554098225507246;  // std dev = 1.852, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.05266279339883218;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.31070982744595327;  // std dev = 2.257, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.32791694741658806;  // std dev = 0.320, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.7057714721555763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3711818315710011;  // std dev = 0.544, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.15706730751951253;  // std dev = 2.315, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.014074583730506898;  // std dev = 1.240, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5469629985028819;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1363241163052929;  // std dev = 2.470, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.26362243311905637;  // std dev = 0.528, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36387412309652;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3043650803734605;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14259040584947355;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18137210774587123;  // std dev = 1.330, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return -0.12419072132922335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1397392024437844;  // std dev = 1.300, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.058739846961514436;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.17266414130295452;  // std dev = 2.887, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.2177407214885659;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21811072607899976;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32576973898123507;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09352832668394931;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.014194522083665562;  // std dev = 1.028, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.16003931369460112;  // std dev = 0.733, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return -0.11130097444114503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1284336310658389;  // std dev = 1.432, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4608955265599002;  // std dev = 1.836, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.31532036614258013;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.20359953669429437;  // std dev = 0.502, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1177387660922928;  // std dev = 0.659, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.38481569822634093;  // std dev = 0.090, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.017304800822793835;  // std dev = 0.699, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.15229407646522744;  // std dev = 1.079, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.37803663435507345;  // std dev = 0.138, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.19582253105355113;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2576711486024862;  // std dev = 1.707, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.27915233026405084;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.05086251983590961;  // std dev = 0.400, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.0480720118482271;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24599545715172064;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2437238212295887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.3115960538588526;  // std dev = 0.049, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.17678019631178435;  // std dev = 0.040, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.2557215743274193;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.26385974493801884;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.12203955916995124;  // std dev = 1.777, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.03507639641809171;  // std dev = 1.891, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.1558019964785302;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1097213070262288;  // std dev = 0.697, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 1.7042504053760873E-4;  // std dev = 0.190, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.24560507373421628;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.045061760942820696;  // std dev = 0.992, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.0371467218622834;  // std dev = 1.120, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06558800938018539;  // std dev = 2.414, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.11660919579941849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09202976784419582;  // std dev = 0.588, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17879687608437161;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.02849383615927914;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( complex(E, G), phenotype(A, H) )
%   | | | then return 0.16288888969391152;  // std dev = 0.746, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.026389941662506057;  // std dev = 0.924, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return -0.19746024155653008;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03812274835832337;  // std dev = 0.743, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.09784289470632304;  // std dev = 0.210, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.010652386399569802;  // std dev = 1.391, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.06016799638350033;  // std dev = 2.061, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */


Results
   AUC ROC   = 0.968129
   AUC PR    = 0.962159
   CLL	      = -0.385087
   Precision = 0.953782 at threshold = 0.5
   Recall    = 0.804965
   F1        = 0.873077


Total learning time: 5.094 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.968129


Results scoring model
   AUC ROC   = 0.989645
   AUC PR    = 0.988998
   CLL	      = -0.342887
   Precision = 0.958333 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.92


Total scoring time: 0.923 seconds
Refined model CLL: -0.342887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968129
   AUC PR    = 0.962159
   CLL	      = -0.385087
   Precision = 0.953782 at threshold = 0.5
   Recall    = 0.804965
   F1        = 0.873077


Total learning time: 8.91 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.968129
Total revision time: 8.91
Best scored revision CLL: -0.342887


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:39:45
{'AUC ROC': 0.968129, 'AUC PR': 0.962159, 'CLL': -0.385087, 'Precision': [0.953782, 0.5], 'Recall': 0.804965, 'F1': 0.873077, 'Learning time': 8.91, 'Inference time': 1.532, 'parameter_0.6': {'AUC ROC': 0.978233, 'AUC PR': 0.971042, 'CLL': -0.361864, 'Precision': [0.942953, 0.5], 'Recall': 0.996454, 'F1': 0.968966, 'Learning time': 2.017, 'Inference time': 1.422}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7470378239884011;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.274815601766179;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.38446472457319614;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6464578760543233;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.23741223726281935;  // std dev = 2.628, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.24972723021199536;  // std dev = 2.051, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.23796730798362156;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.33095332360970464;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4948626959212687;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6002493801059667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6124057109700584;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.1545406107241009;  // std dev = 0.004, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5052063481971837;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2328508551284341;  // std dev = 3.818, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.25643901668495106;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.35147134608791386;  // std dev = 1.036, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.6442910986207371;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22137224015061324;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.13848424456339872;  // std dev = 2.164, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.1588735243732538;  // std dev = 1.614, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19782993523150927;  // std dev = 3.782, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   | | | else return 0.20623826852862293;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.38306974318296216;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.211801745317905;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11295552095737327;  // std dev = 2.122, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return -0.15606657645946967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1434811349928497;  // std dev = 1.539, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3413812648486936;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14269426138501376;  // std dev = 3.805, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.30480083595577834;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3173182778859896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3067458216383724;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.0903016126859607;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.048426795223069814;  // std dev = 1.804, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23692455619681627;  // std dev = 0.463, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12169330551207737;  // std dev = 1.677, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.49009320699380277;  // std dev = 2.033, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return -0.3548105035631945;  // std dev = 0.173, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1280198529509945;  // std dev = 1.003, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15870268278161645;  // std dev = 0.852, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.33213191089081956;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07629800511848006;  // std dev = 2.066, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.43682612707772295;  // std dev = 0.001, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19230922265205663;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46781939569647685;  // std dev = 0.772, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.30237694643871754;  // std dev = 0.326, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10767640413962547;  // std dev = 2.634, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.14340933698713249;  // std dev = 0.869, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25217026150706356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3277871627180019;  // std dev = 1.331, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.17831661459014092;  // std dev = 0.073, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.040190829860821696;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06309672780654443;  // std dev = 2.935, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   | | | else return 0.08637130732596042;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.17611867516630453;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11528550420157352;  // std dev = 0.874, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.036115923609611786;  // std dev = 2.061, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1441704513151028;  // std dev = 0.577, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04087343792958796;  // std dev = 2.998, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.1544447893447158;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1422503559840738;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.1774081268996226;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01874943309969962;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.029944641430490405;  // std dev = 2.052, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.32784232299260113;  // std dev = 0.753, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.26339402287020947;  // std dev = 0.318, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05089081566767618;  // std dev = 2.529, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return 0.1083132830926174;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.976699
   AUC PR    = 0.96622
   CLL	      = -0.354818
   Precision = 0.942953 at threshold = 0.5
   Recall    = 0.996454
   F1        = 0.968966


Total learning time: 2.247 seconds
Total inference time: 1.306 seconds
AUC ROC: 0.976699


Results scoring model
   AUC ROC   = 0.97511
   AUC PR    = 0.967253
   CLL	      = -0.365743
   Precision = 0.92 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.958333


Total scoring time: 0.905 seconds
Parameter learned model CLL: -0.365743


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.97, 1, 16], 'false,true,true,false': [0.953, 1, 10], 'false,true,false': [2.98e-08, 32, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [2.415, 14, 10], 'false,false,false,false': [3.078, 18, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'enzyme(A, J)'}, {'true': [0.95, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [2.628, 21, 16], 'false,false,true,false': [2.051, 13, 10], 'false,false,false,true': [2.415, 14, 10], 'false,false,false,false': [3.078, 18, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.944, 1, 9], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.36, 2, 26], 'false,true,false': [0.004, 32, 0], 'false,false,true,true': [0.778, 1, 3], 'false,false,true,false': [3.818, 31, 28], 'false,false,false,true': [0.982, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.036, 2, 9], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.859, 1, 3], 'false,false,true,true': [2.164, 21, 16], 'false,false,true,false': [1.614, 13, 10], 'false,false,false,true': [3.782, 30, 28], 'false,false,false,false': [0.98, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.03, 0, 6], 'true,false': [0.882, 1, 4], 'false,true,true': [2.122, 21, 16], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.539, 12, 10], 'false,false,true,true': [0.772, 1, 3], 'false,false,true,false': [3.805, 31, 28], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.066, 0, 7], 'true,false': [0.968, 2, 3], 'false,true,true': [1.804, 16, 10], 'false,true,false,true': [0.463, 1, 2], 'false,true,false,false': [1.677, 15, 13], 'false,false,true,true': [2.033, 5, 30], 'false,false,true,false': [0.173, 27, 0], 'false,false,false,true': [1.003, 3, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.852, 1, 8], 'true,false': [0.018, 0, 2], 'false,true,true': [2.066, 21, 16], 'false,true,false,true': [0.001, 0, 10], 'false,true,false,false': [0.026, 13, 0], 'false,false,true,true': [0.772, 1, 11], 'false,false,true,false': [0.326, 14, 0], 'false,false,false,true': [2.634, 19, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.869, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.331, 2, 26], 'false,true,false': [0.073, 32, 0], 'false,false,true': [0.888, 2, 3], 'false,false,false,true': [2.935, 30, 28], 'false,false,false,false': [0.7, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.874, 1, 8], 'false,true': [2.061, 34, 26], 'false,false,true,true': [0.577, 1, 3], 'false,false,true,false': [2.998, 31, 28], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.647, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.069, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.82, 1, 3], 'false,true': [2.052, 34, 26], 'false,false,true,true': [0.753, 1, 11], 'false,false,true,false': [0.318, 14, 0], 'false,false,false,true': [2.529, 18, 20], 'false,false,false,false': [0.647, 1, 2]}]]
[{'': [0.0826446280991734, 0.24874449748899644], 'false': [0.24555555555555691, 0.24994430830920183], 'false,false': [0.23999999999999994, 0.2497398543184198], 'false,false,false': [0.24305555555555558, 0.24930747922437657], 'false,true': [0.0663265306122458, 2.7755575615628914e-17], 'false,false,true': [0.25, 0.22222222222222224], 'true': [0.0, 0.09876543209876537], 'false,true,true': [0.055363321799307655, 0.0826446280991734]}, {'': [0.08199280714591174, 0.21970249668030606], 'false': [0.2380074413871763, 0.21835186076125104], 'false,true': [0.0, 0.2433597767942928], 'false,true,false': [0.0, 0.2222222222222222], 'false,false': [0.18532724195687322, 0.2489387626691821], 'false,false,false': [0.24305555555555544, 0.2493074792243767], 'false,false,true': [0.18672813369781177, 0.18298011042239992], 'false,true,true': [nan, 0.0]}, {'': [0.08186217918374866, 0.21362453527078357], 'false': [0.17724080501099015, 0.24515662112671066], 'false,false': [0.2454074777500746, 0.24116835920527896], 'false,false,true': [0.1512812328580302, 0.2470792346147721], 'false,false,false': [0.24116835920527896, nan], 'false,true': [0.06609079131573267, 6.254929134710818e-07], 'true': [0.08903872862908298, 0.0], 'false,true,true': [nan, 0.06609079131573299]}, {'': [0.09597803198071951, 0.18558064174620414], 'false': [0.18435254602456475, 0.18554589609645633], 'false,false': [0.12152285868469587, 0.24617013900644213], 'false,false,false': [0.2465883011430859, 0.24004064925103594], 'false,true': [nan, 0.18435254602456475], 'false,false,true': [0.12651306251537053, 0.11323877712794352], 'true': [0.09755802365921507, 0.0]}, {'': [0.07810364566612486, 0.18254195343608734], 'false': [0.11600609508103323, 0.241512945978302], 'false,false': [0.24165505834053266, 0.23923520263052916], 'false,false,true': [0.1489708858115224, 0.24543228500068948], 'false,false,false': [0.0, 0.22222222222222224], 'false,true': [0.12165817398305136, 0.10672472729628307], 'false,true,false': [0.0, 0.10767459772358629], 'true': [0.00015179077487672185, 0.15564620221232892]}, {'': [0.08978633480241845, 0.178509950531694], 'false': [0.11259923274318676, 0.23259284819174164], 'false,false': [0.2426395838740808, 0.14357652866391898], 'false,false,true': [0.11808844871339375, 0.0011079880508563522], 'false,false,false': [0.14357652866391898, nan], 'false,true': [0.12514357914751362, 0.0988275360368194], 'false,true,false': [0.0715056876417688, 0.10046988585876945], 'true': [0.000617373536494048, 0.18729482481444207]}, {'': [0.07053378924472765, 0.14194711771848986], 'false': [0.10845091263176519, 0.17191110186503], 'false,false': [0.1744134183762432, 0.16916832612843935], 'false,false,true': [0.04960442321980977, 0.007606831494788151], 'false,false,false': [0.16916832612843935, nan], 'false,true': [0.11537348301115628, 0.09729961646362485], 'false,true,false': [2.178705116762103e-07, 5.344321969994544e-05], 'true': [0.08070520162402667, 0.00015340858670136182]}, {'': [0.06956551533206558, 0.12204898108708417], 'false': [0.09335627309320865, 0.14773254587482476], 'false,false': [0.1577052743406698, 0.14688383647011755], 'false,false,false': [0.14854158680268031, 0.12233969937368722], 'false,true': [0.06324870819700808, 0.0001679101214513909], 'true': [0.07544670880141485, 0.0], 'false,true,true': [nan, 0.06324870819700808], 'true,false': [nan, 0.0]}, {'': [0.07001182363502015, 0.11101245955825632], 'false': [0.07079743515338278, 0.14695152060219174], 'false,false': [0.1485714695479179, 0.12103657028670503], 'false,false,true': [0.08321451841855496, 0.15232497163633563], 'false,false,false': [0.0, 0.13937509140018883], 'true': [0.0, 0.08489715672145659], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.07052315179221023, 0.11023680382206832], 'false': [0.07019380330911487, 0.14606999176684424], 'false,false': [0.11260697923010693, 0.1664832337843927], 'false,false,false': [0.16837098996095856, 0.13951558454602853], 'false,false,true': [0.04730685256813912, 0.0072429394446861094], 'true': [0.0006735361230650962, 0.16827411390283115], 'true,true': [0.0006735361230650962, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,false;enzyme(A, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), enzyme(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,false;enzyme(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7867203636709403;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.41078051404688004;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7330729979326023;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4932726872238381;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.800467609295229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.44563881500835806;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.38156007468476116;  // std dev = 1.613, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.123973269361734;  // std dev = 2.171, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2663386899480047;  // std dev = 2.811, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.3378367168049463;  // std dev = 3.000, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.5693538958976705;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3153487290437094;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6103011773891991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.604263434634119;  // std dev = 0.265, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.14802260922885693;  // std dev = 0.073, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5891825771935144;  // std dev = 0.949, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.15722979707417514;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.29529922404872283;  // std dev = 3.052, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.11419263745359316;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.34430790988008275;  // std dev = 0.282, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.49759077015372144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.419660298220531;  // std dev = 0.228, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.015100231091620689;  // std dev = 1.380, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.15774094475655598;  // std dev = 2.682, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5105048543434348;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17319850785892874;  // std dev = 2.741, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.10361825362183891;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35715355265387594;  // std dev = 1.010, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32706278579813447;  // std dev = 0.246, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.03772311822254232;  // std dev = 1.253, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.14653497187562023;  // std dev = 1.507, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return -0.15143196312670662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1459531043442622;  // std dev = 1.499, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.05219162215062263;  // std dev = 1.090, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.16630952162409884;  // std dev = 3.299, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.1577585239505754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.26509721884096477;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.30350711718640466;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10849094342632841;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13708951127699756;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.09118344161230194;  // std dev = 2.014, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.19969382642405104;  // std dev = 1.104, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4411239746896241;  // std dev = 1.751, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return -0.31135747178268147;  // std dev = 0.576, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.039253776648308314;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20544539938466877;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21366637428368637;  // std dev = 0.246, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.015097241284594432;  // std dev = 1.200, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.1009174082647089;  // std dev = 1.454, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.4199270092891629;  // std dev = 0.174, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1771748405024852;  // std dev = 0.128, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), phenotype(H, K) )
%   | | | then return 0.00936260182689768;  // std dev = 1.798, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.15084126255513072;  // std dev = 1.162, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.05263478551527071;  // std dev = 1.024, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13181923574798712;  // std dev = 1.821, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.03636434949191876;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.28360033465856993;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3004146763365898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.29641312109143575;  // std dev = 0.245, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.16304429381415608;  // std dev = 0.202, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.21938344315116262;  // std dev = 1.609, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.25670456041743017;  // std dev = 0.450, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.09785960421065316;  // std dev = 1.963, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.007151792601279554;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.17002016388266095;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13490721167065192;  // std dev = 0.259, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, G) )
%   | | | then return 0.049883753799529425;  // std dev = 1.412, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.057432004914304176;  // std dev = 0.933, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.07101669622656392;  // std dev = 0.223, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0031934962452018637;  // std dev = 1.281, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.058722128017973475;  // std dev = 2.471, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.09535114514244135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09715190096958459;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1183798066103395;  // std dev = 0.236, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.13525807650171467;  // std dev = 0.641, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.07107504107635423;  // std dev = 1.206, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.18327870706409172;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0049899613279027364;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.35258553058053055;  // std dev = 0.249, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.25215151965682575;  // std dev = 0.578, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.06056253142921066;  // std dev = 2.414, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | | else return -0.03318554710273927;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.987193
   AUC PR    = 0.983899
   CLL	      = -0.320109
   Precision = 0.946309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972414


Total learning time: 5.409 seconds
Total inference time: 1.373 seconds
AUC ROC: 0.987193


Results scoring model
   AUC ROC   = 0.992439
   AUC PR    = 0.99219
   CLL	      = -0.322569
   Precision = 0.931507 at threshold = 0.5
   Recall    = 0.985507
   F1        = 0.957746


Total scoring time: 1.046 seconds
Refined model CLL: -0.322569


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987193
   AUC PR    = 0.983899
   CLL	      = -0.320109
   Precision = 0.946309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.972414


Total learning time: 9.607 seconds
Total inference time: 1.373 seconds
AUC ROC: 0.987193
Total revision time: 9.607
Best scored revision CLL: -0.322569


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:39:58
{'AUC ROC': 0.987193, 'AUC PR': 0.983899, 'CLL': -0.320109, 'Precision': [0.946309, 0.5], 'Recall': 1.0, 'F1': 0.972414, 'Learning time': 9.607, 'Inference time': 1.373, 'parameter_0.8': {'AUC ROC': 0.976699, 'AUC PR': 0.96622, 'CLL': -0.354818, 'Precision': [0.942953, 0.5], 'Recall': 0.996454, 'F1': 0.968966, 'Learning time': 2.247, 'Inference time': 1.306}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7581489350995122;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.3396304165809938;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.35814893509951123;  // std dev = 3.674, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6525847456697516;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.2224702451844067;  // std dev = 2.745, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.2661603122258112;  // std dev = 2.525, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.29307067657968533;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.3087411357856347;  // std dev = 3.674, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5007806932336468;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5961060681185573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6234455596246823;  // std dev = 1.367, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.15459980980658708;  // std dev = 0.018, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5037755959733795;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24274745324432545;  // std dev = 4.350, 76.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2584937236603852;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.35829842213801605;  // std dev = 1.039, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.6420197705863728;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21623110438412915;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.12905416916371015;  // std dev = 2.247, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.16622711828089462;  // std dev = 1.963, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.20314171709583045;  // std dev = 4.317, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
%   | | | else return 0.2080554184465139;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.37798040151661905;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2073621121673696;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10576206559159172;  // std dev = 2.205, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16349830720605393;  // std dev = 0.456, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13416052639199355;  // std dev = 1.846, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.33824051913030667;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1492433852219207;  // std dev = 4.340, 76.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.168353983694016;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16073263465392462;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3025024665863605;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08602360538943107;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.05235289520853498;  // std dev = 1.881, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2779296087780534;  // std dev = 0.537, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11379461695830778;  // std dev = 1.902, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4980616879800605;  // std dev = 2.278, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return -0.3664089131667001;  // std dev = 0.026, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.0899983280417369;  // std dev = 1.039, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.13740161937191686;  // std dev = 0.446, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1629886989793854;  // std dev = 0.855, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.33526749060806055;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07175923327445137;  // std dev = 2.146, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.42189737917135683;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1967730542261422;  // std dev = 0.032, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4820354129720426;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.3098262114493294;  // std dev = 0.277, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08989486796659023;  // std dev = 3.163, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.1455718644469106;  // std dev = 0.871, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2581322802959374;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33058511940634155;  // std dev = 1.336, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.17558590502806176;  // std dev = 0.059, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.026908997291286395;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06660351703348275;  // std dev = 3.367, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
%   | | | else return 0.08188204964965633;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.17875466296172196;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11125301832002281;  // std dev = 0.875, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.03637926878758843;  // std dev = 2.221, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.08163128490243916;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04795208784493372;  // std dev = 3.412, 76.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.06292623937928557;  // std dev = 0.435, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0636894186735495;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.17206373088662497;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.019961646630143798;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.030289632945690554;  // std dev = 2.211, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3401379719923344;  // std dev = 0.214, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2703278224046947;  // std dev = 0.256, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0408811030826444;  // std dev = 3.044, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.048671414423641646;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.978579
   AUC PR    = 0.970813
   CLL	      = -0.35115
   Precision = 0.927632 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.962457


Total learning time: 2.367 seconds
Total inference time: 1.653 seconds
AUC ROC: 0.978579


Results scoring model
   AUC ROC   = 0.974765
   AUC PR    = 0.968429
   CLL	      = -0.364075
   Precision = 0.915789 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956044


Total scoring time: 1.011 seconds
Parameter learned model CLL: -0.364075


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.972, 1, 17], 'false,true,true,false': [0.97, 1, 16], 'false,true,false': [4.34e-08, 41, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [2.596, 14, 13], 'false,false,false,false': [3.674, 27, 27]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'complex(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'complex(A, J)'}, {'true': [0.954, 1, 11], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [2.745, 24, 17], 'false,false,true,false': [2.525, 19, 16], 'false,false,false,true': [2.596, 14, 13], 'false,false,false,false': [3.674, 27, 27]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.949, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.367, 2, 33], 'false,true,false': [0.018, 41, 0], 'false,false,true,true': [0.776, 1, 3], 'false,false,true,false': [4.35, 39, 37], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.039, 2, 10], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.859, 1, 3], 'false,false,true,true': [2.247, 24, 17], 'false,false,true,false': [1.963, 19, 16], 'false,false,false,true': [4.317, 38, 37], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.028, 0, 7], 'true,false': [0.882, 1, 4], 'false,true,true': [2.205, 24, 17], 'false,true,false,true': [0.456, 1, 1], 'false,true,false,false': [1.846, 18, 15], 'false,false,true,true': [0.768, 1, 3], 'false,false,true,false': [4.34, 39, 37], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.068, 0, 8], 'true,false': [0.966, 2, 3], 'false,true,true': [1.881, 18, 11], 'false,true,false,true': [0.537, 1, 3], 'false,true,false,false': [1.902, 20, 17], 'false,false,true,true': [2.278, 6, 40], 'false,false,true,false': [0.026, 35, 0], 'false,false,false,true': [1.039, 4, 4], 'false,false,false,false': [0.446, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.855, 1, 9], 'true,false': [0.011, 0, 2], 'false,true,true': [2.146, 24, 17], 'false,true,false,true': [0.046, 0, 16], 'false,true,false,false': [0.032, 19, 0], 'false,false,true,true': [0.251, 0, 15], 'false,false,true,false': [0.277, 15, 0], 'false,false,false,true': [3.163, 28, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.871, 1, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.336, 2, 33], 'false,true,false': [0.059, 41, 0], 'false,false,true': [0.857, 2, 3], 'false,false,false,true': [3.367, 38, 37], 'false,false,false,false': [0.906, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true,true': [0.012, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.875, 1, 8], 'false,true': [2.221, 43, 33], 'false,false,true,true': [0.609, 1, 3], 'false,false,true,false': [3.412, 39, 37], 'false,false,false,true': [0.435, 1, 1], 'false,false,false,false': [0.791, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.063, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.823, 1, 3], 'false,true': [2.211, 43, 33], 'false,false,true,true': [0.214, 0, 15], 'false,false,true,false': [0.256, 15, 0], 'false,false,false,true': [3.044, 26, 26], 'false,false,false,false': [0.789, 2, 2]}]]
[{'': [0.07638888888888877, 0.24904740131077688], 'false': [0.24567174515235612, 0.25000000000000056], 'false,false': [0.23999999999999994, 0.2499618960524322], 'false,false,false': [0.24965706447187883, 0.2500000000000014], 'false,true': [0.0538775510204098, 4.603363760640893e-17], 'false,false,true': [0.25, 0.22222222222222224], 'true': [0.0, 0.08999999999999986], 'false,true,true': [0.05246913580246885, 0.055363321799307655]}, {'': [0.07589481874233213, 0.21971195383502498], 'false': [0.2380074413871763, 0.2186962616606332], 'false,true': [0.0, 0.2433597767942928], 'false,true,false': [0.0, 0.2222222222222222], 'false,false': [0.1834815813029434, 0.24994025777767773], 'false,false,false': [0.24965706447187894, 0.25000000000000133], 'false,false,true': [0.18377475121448303, 0.182108394478051], 'false,true,true': [0.0, nan]}, {'': [0.07579612089476266, 0.21412619700622276], 'false': [0.17499168196856896, 0.2474281264993187], 'false,false': [0.24723407950977108, 0.25000866407645445], 'false,false,false': [0.25000866407645445, nan], 'false,false,true': [0.15037354351694532, 0.24892521789193292], 'false,true': [0.05339954618181026, 8.124411023919104e-06], 'true': [0.08192943341499531, 0.0], 'false,true,true': [nan, 0.05339954618181052]}, {'': [0.08883530692266078, 0.18594287121441921], 'false': [0.18464553099800735, 0.18593521581857914], 'false,false': [0.11747647900637236, 0.24857694321387852], 'false,false,false': [0.24846042652260536, 0.2500110458724197], 'false,true': [nan, 0.1846455309980074], 'false,false,true': [0.1231753112869743, 0.11005524412819034], 'true': [0.09004611043041937, 0.0]}, {'': [0.071989474960501, 0.1828476468498693], 'false': [0.11180368734095338, 0.24490239784487203], 'false,false': [0.24451764623148856, 0.25001290776915347], 'false,false,false': [0.25, 0.24999999999999997], 'false,false,true': [0.14761031686687098, 0.2478320361562419], 'false,true': [0.11857792162847233, 0.10338020183420181], 'false,true,false': [0.10414535135435633, 0.10328464597126241], 'true': [0.00011156106656952578, 0.15563737069340097]}, {'': [0.08322560261497249, 0.1801206077780734], 'false': [0.10921732653976458, 0.23441004358785136], 'false,false': [0.2474419183727011, 0.12829348902477583], 'false,false,true': [0.1127864554353165, 1.9727299317752664e-05], 'false,false,false': [0.13504665714364875, 0.0994831589261373], 'false,true': [0.12200632025231561, 0.0976860451221333], 'false,true,false': [0.07220052474906832, 0.0978129149977509], 'true': [0.0005792428307805353, 0.18662094913422148]}, {'': [0.06506600712053952, 0.14069122596723985], 'false': [0.10443751256876965, 0.1726802638997797], 'false,false': [0.16142473641967428, 0.17870499932499878], 'false,false,false': [0.17870499932499878, nan], 'false,false,true': [0.00420728140123187, 0.005119775322489683], 'false,true': [0.11233624017462658, 0.09507457803789], 'false,true,false': [0.00013065660732980433, 5.450590615746195e-05], 'true': [0.07311984236612926, 6.351252172710764e-05]}, {'': [0.06421097560889155, 0.12058466145710803], 'false': [0.08719500187089133, 0.1500629486138531], 'false,false': [0.1470258007049089, 0.1501535208483086], 'false,false,false': [0.15119604584603313, 0.13690581619258205], 'false,true': [0.051020939410573556, 8.426344582348694e-05], 'true': [0.06899251642653954, 0.0], 'false,true,true': [nan, 0.051020939410573556], 'true,false': [nan, 0.0]}, {'': [0.06463219452694567, 0.10973644201786206], 'false': [0.0649113025408105, 0.14925449946804062], 'false,false': [0.15025145419943509, 0.13578464246916794], 'false,false,true': [0.09280484744181607, 0.15321824540253523], 'false,false,false': [0.09467179847114113, 0.15634087032063626], 'true': [4.888292580691733e-05, 0.08502084705332506], 'true,true': [4.888292580691733e-05, nan], 'true,true,true': [4.888292580691733e-05, nan]}, {'': [0.06500953450359849, 0.10919422244716041], 'false': [0.06431914261172969, 0.14881436667365086], 'false,false': [0.09687345418089006, 0.1766249694800429], 'false,false,false': [0.178226610661924, 0.15574728008985564], 'false,false,true': [0.0030493693423330045, 0.004363295955049236], 'true': [0.0004961029631929577, 0.16945390051077117], 'true,true': [0.0004961029631929577, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), complex(C, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8010060779566543;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5664822684328457;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7744336664642285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4411003331308952;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24061444872140114;  // std dev = 2.067, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3247315431005343;  // std dev = 2.315, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.2790096120890447;  // std dev = 4.829, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.32923911954932666;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.66257245288266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6166506295983251;  // std dev = 0.231, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.15520993141167233;  // std dev = 0.080, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7299032707170546;  // std dev = 0.151, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.24679886425017797;  // std dev = 0.154, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.25555267942301246;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2660565861784748;  // std dev = 3.322, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.33320392131724047;  // std dev = 0.247, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.5156234442051322;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5251941438229876;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, H), interaction(H, A) )
%   | | | then return -0.2067313994317368;  // std dev = 0.394, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.16196335957568908;  // std dev = 1.624, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.544758315935802;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16649235073427482;  // std dev = 0.175, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2180655527565543;  // std dev = 2.537, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.19351451409681072;  // std dev = 3.482, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.3393498812539071;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28498714978688955;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( complex(E, F), phenotype(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3154978791977946;  // std dev = 1.391, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.1608605263959118;  // std dev = 0.263, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.40804854980640404;  // std dev = 0.612, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13090238429536588;  // std dev = 4.147, 98.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=44 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.06319809248950886;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.14453757200672415;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2700033822040753;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11501106715977424;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10480409892601239;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.07604096105987951;  // std dev = 1.511, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.11230578643603667;  // std dev = 1.829, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.43954679805998254;  // std dev = 2.170, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return -0.28399614144397384;  // std dev = 0.479, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.059035162886605125;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11961717588173426;  // std dev = 0.684, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20832445178277983;  // std dev = 0.213, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.007911933886280937;  // std dev = 1.126, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.09018653210407143;  // std dev = 1.406, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3849731846088916;  // std dev = 0.201, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.17667298394785003;  // std dev = 0.139, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.08204103040345115;  // std dev = 1.987, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.03801880304611992;  // std dev = 1.424, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.11241321371245513;  // std dev = 2.257, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.12783901881520143;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.0699912404357313;  // std dev = 0.629, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2588641840785956;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.31806350203406797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.2789408049206439;  // std dev = 0.204, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.15586237818235707;  // std dev = 0.274, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.016966735684659968;  // std dev = 0.607, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03786984762466874;  // std dev = 0.680, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.041688330304124256;  // std dev = 1.484, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08778580960989595;  // std dev = 2.912, 58.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13945021594965726;  // std dev = 0.206, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( location(A, F), enzyme(E, G) )
%   | | | then return -0.23447351299168254;  // std dev = 0.421, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02232911415660436;  // std dev = 0.838, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.18464430058556872;  // std dev = 1.286, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.2124635828267595;  // std dev = 0.414, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2632936132426058;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.039319307756040374;  // std dev = 3.220, 101.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=45 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.1117309076228424;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.056808264673843846;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1589869384877051;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.03406213730234764;  // std dev = 0.690, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( recursion_proteinclass(E, B), interaction(G, E) )
%   | | then return -0.16991846441110692;  // std dev = 0.419, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0839150142315228;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03397868191218776;  // std dev = 2.679, 82.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=40 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(H, I), interaction(A, H) )
%   | | | then return -0.005677623992183055;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05873413762685877;  // std dev = 2.531, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.007634094861523659;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010168976190622587;  // std dev = 0.395, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.986551
   AUC PR    = 0.981779
   CLL	      = -0.321097
   Precision = 0.943144 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97074


Total learning time: 6.775 seconds
Total inference time: 1.448 seconds
AUC ROC: 0.986551


Results scoring model
   AUC ROC   = 0.988836
   AUC PR    = 0.988291
   CLL	      = -0.330555
   Precision = 0.925532 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961326


Total scoring time: 0.96 seconds
Refined model CLL: -0.330555


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986551
   AUC PR    = 0.981779
   CLL	      = -0.321097
   Precision = 0.943144 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97074


Total learning time: 11.113 seconds
Total inference time: 1.448 seconds
AUC ROC: 0.986551
Total revision time: 11.113
Best scored revision CLL: -0.330555


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:40:13
{'AUC ROC': 0.986551, 'AUC PR': 0.981779, 'CLL': -0.321097, 'Precision': [0.943144, 0.5], 'Recall': 1.0, 'F1': 0.97074, 'Learning time': 11.113, 'Inference time': 1.448, 'parameter_1.0': {'AUC ROC': 0.978579, 'AUC PR': 0.970813, 'CLL': -0.35115, 'Precision': [0.927632, 0.5], 'Recall': 1.0, 'F1': 0.962457, 'Learning time': 2.367, 'Inference time': 1.653}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 104

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 265

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7439976143448208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7580193346218546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.1737374655958724;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.24650384636862208;  // std dev = 1.810, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5874082191654569;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5222911122873521;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return -0.1496051905494709;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.44176264888187017;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10943778048933908;  // std dev = 1.493, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.14840679292049758;  // std dev = 1.602, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10426608552375408;  // std dev = 1.489, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return -0.050016031631618385;  // std dev = 0.557, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15753331844031476;  // std dev = 1.468, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.30776616868276174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2885863019904395;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.019343547062674146;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return -0.4317621201166372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13402591749519102;  // std dev = 0.755, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07430172485888598;  // std dev = 1.397, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.16344405962565214;  // std dev = 1.143, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21302992955762245;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2253671587439331;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06731231919101087;  // std dev = 1.452, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28286906067463535;  // std dev = 1.126, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.19506212681009577;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18337309495706255;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.18846343521969278;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17181326342816094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27236281520353445;  // std dev = 1.485, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return -0.17237893255857797;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15727383524959332;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then return 0.03491919512403003;  // std dev = 1.824, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14115102147961567;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13513610712260146;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.028673101911658425;  // std dev = 1.818, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.844507
   AUC PR    = 0.871543
   CLL	      = -0.438494
   Precision = 0.902954 at threshold = 0.5
   Recall    = 0.807547
   F1        = 0.85259


Total learning time: 1.436 seconds
Total inference time: 1.357 seconds
AUC ROC: 0.844507


Results scoring model
   AUC ROC   = 0.97625
   AUC PR    = 0.974399
   CLL	      = -0.315771
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.789 seconds
Parameter learned model CLL: -0.315771


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.935, 1, 7], 'false,true,true,false': [1.265, 2, 8], 'false,true,false': [0.0, 17, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.741, 11, 6], 'false,false,true,false': [1.81, 9, 7], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.01, 0, 2], 'false,true,true,false': [1.561, 3, 13], 'false,true,false': [0.019, 17, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)'}, {'true,true': [0.011, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [1.493, 11, 6], 'false,false,true,false': [1.602, 9, 7], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true,true': [1.489, 11, 7], 'false,true,false,true': [0.557, 1, 1], 'false,true,false,false': [1.468, 8, 7], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'phenotype(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.082, 0, 3], 'false,true,true': [0.6, 3, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.755, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.397, 7, 5], 'false,false,false,false': [1.143, 6, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.021, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true': [1.452, 11, 7], 'false,true,false,true': [1.126, 2, 8], 'false,true,false,false': [0.017, 7, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)'}, {'true,true': [0.016, 0, 2], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.485, 3, 15], 'false,true,false': [0.038, 17, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.018, 0, 5], 'false,true': [1.824, 20, 15], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.014, 0, 3], 'false,true': [1.818, 20, 15], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.244897959183673], 'false': [0.244897959183673, nan], 'false,true': [0.1388888888888886, -3.2653618371328133e-18], 'false,true,true': [0.10937499999999978, 0.15999999999999986], 'true': [nan, 0.0]}, {'': [0.0, 0.19730922360671993], 'false': [4.915215988188226e-05, 0.19247846356474593], 'false,false': [0.1924784635647459, nan], 'false,false,true': [0.1782914986789725, 0.20482441421336525], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.1850741142470297], 'false': [0.1850741142470297, nan], 'false,true': [0.1358255912229517, 2.0934920569037896e-05], 'false,true,true': [5.4593140240366544e-05, 0.1523258284712714], 'true': [3.700743415417188e-17, 0.0]}, {'': [0.00017526649362573088, 0.13987716004021408], 'false': [-3.700743415417188e-17, 0.1456244257455009], 'false,false': [0.1456244257455009, nan], 'false,false,true': [0.13103713652554227, 0.16034111972935472], 'true': [5.652441726769486e-05, 0.0], 'false,true': [nan, -3.700743415417188e-17]}, {'': [-2.2204460492503132e-17, 0.13618533007128977], 'false': [0.13618533007128977, nan], 'false,true': [0.12312779456361264, 0.1495829143518779], 'false,true,false': [0.15528064411331674, 0.14375536614267245], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0017437241666680148, 0.1267542676636467], 'false': [0.10979004880653237, 0.13227430501543597], 'false,false': [nan, 0.13227430501543597], 'false,false,false': [0.16255300114606389, 0.1005104885495131], 'false,true': [0.09008324748626106, 0.12063427979920636], 'false,true,false': [0.0, 0.0950091211698393], 'true': [0.0, 0.0022329987339735624]}, {'': [0.0001285560843644562, 0.12339446741150906], 'false': [0.12339446741150906, nan], 'false,true': [0.11706740601799336, 0.12991268256185903], 'false,true,false': [0.12676725918778348, 4.2485718609391086e-05], 'true': [0.00015337725100921426, 0.0]}, {'': [9.04663662820604e-05, 0.1124948238974945], 'false': [0.1124948238974945, nan], 'false,true': [0.12258932504318015, 8.327143405505248e-05], 'false,true,true': [nan, 0.12258932504318014], 'true': [0.00013362970497658722, 6.160627126389207e-05], 'true,false': [0.0, 0.0]}, {'': [6.31348840087087e-05, 0.0950473846896083], 'false': [0.0950473846896083, nan], 'true': [nan, 6.31348840087087e-05]}, {'': [5.055293271927219e-05, 0.09445070697743137], 'false': [0.09445070697743137, nan], 'true': [0.0, 6.978320997657235e-05], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,true;interaction(F, A), interaction(F, E).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(F, E), interaction(F, A).;true;true
6;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), interaction(H, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.827334239218108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7947201338223617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.15692538669739178;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09504216006317073;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.017811348267873763;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.38974696160045363;  // std dev = 2.016, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.6565435818908119;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.022357301739758743;  // std dev = 1.239, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.25117392856726695;  // std dev = 2.290, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.49816940565794554;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5685491614118018;  // std dev = 1.231, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.20511851745466542;  // std dev = 0.275, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.0222109835739021;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(A, H), enzyme(F, E) )
%   | | | then return 0.15128445457969877;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1541520507261372;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.2037033655326292;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.17455371617135312;  // std dev = 1.455, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.3306297118678697;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.017445139175272878;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3500317780949096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.27558110922590506;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.03335995060560737;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return -0.41543844857612716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14929639069549003;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4149749573736777;  // std dev = 0.825, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.20966680014103975;  // std dev = 0.289, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11602712171641993;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21354539587246446;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18449440083126678;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, F), interaction(E, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.20666092784413936;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04629882157148315;  // std dev = 0.345, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.1830326299991668;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.1583330620208595;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17359776128581317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | then if ( complex(A, I), enzyme(A, J) )
%   | | then return -0.10050194054984977;  // std dev = 0.543, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.04322448017121747;  // std dev = 0.862, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10189501239729555;  // std dev = 1.711, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1482574317409872;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.22309334954029003;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.10764272021351025;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.16992411482495962;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40429621615708655;  // std dev = 0.281, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2690588817090687;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.06735746942867264;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19876513329830145;  // std dev = 1.153, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.12160972397696457;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13643917901155844;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.1720187327532387;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.09777138422503291;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14737042837027448;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3188522752132099;  // std dev = 0.263, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2199552524669031;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04050574608687975;  // std dev = 1.050, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2113967402043196;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.857302
   AUC PR    = 0.864144
   CLL	      = -0.48694
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.581132
   F1        = 0.698413


Total learning time: 16.877 seconds
Total inference time: 11.695 seconds
AUC ROC: 0.857302


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.994994
   CLL	      = -0.29695
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 1.33 seconds
Refined model CLL: -0.29695


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.857302
   AUC PR    = 0.864144
   CLL	      = -0.48694
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.581132
   F1        = 0.698413


Total learning time: 20.432000000000002 seconds
Total inference time: 11.695 seconds
AUC ROC: 0.857302
Total revision time: 20.432000000000002
Best scored revision CLL: -0.29695


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:40:47
{'AUC ROC': 0.857302, 'AUC PR': 0.864144, 'CLL': -0.48694, 'Precision': [0.875, 0.5], 'Recall': 0.581132, 'F1': 0.698413, 'Learning time': 20.432000000000002, 'Inference time': 11.695, 'parameter_0.2': {'AUC ROC': 0.844507, 'AUC PR': 0.871543, 'CLL': -0.438494, 'Precision': [0.902954, 0.5], 'Recall': 0.807547, 'F1': 0.85259, 'Learning time': 1.436, 'Inference time': 1.357}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.6981489350995119;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7636183198639678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7506067787080475;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.11420397086874347;  // std dev = 2.305, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.3110197559699355;  // std dev = 2.756, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5915623707623102;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5066536816853727;  // std dev = 2.358, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | else return -0.14889433430695445;  // std dev = 0.072, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4381039384585513;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.06814916111850566;  // std dev = 2.043, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.19195661319289253;  // std dev = 2.419, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3162427758566534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06635176221591674;  // std dev = 2.047, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.24846878918153298;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14955901194222782;  // std dev = 2.231, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2934087697170243;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26936408469375706;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.0013752679482503189;  // std dev = 0.998, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.12768399881560202;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04598529836403309;  // std dev = 1.025, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06999440926221032;  // std dev = 2.039, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.19380621416609503;  // std dev = 1.602, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.22175633385444066;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22011086400183988;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.042916943942856924;  // std dev = 2.009, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2719020318619812;  // std dev = 1.817, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.20746336477402244;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18907698794563124;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.1846536184612051;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1733118974547665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2469551203045974;  // std dev = 2.376, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | else return -0.16098749220177416;  // std dev = 0.088, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.14287941524329661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1610138496083185;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.034226557670366455;  // std dev = 2.757, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.12625807721658489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13814314543056017;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14182823539076034;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.028238846579146507;  // std dev = 2.749, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.913151
   AUC PR    = 0.872678
   CLL	      = -0.399137
   Precision = 0.864469 at threshold = 0.5
   Recall    = 0.890566
   F1        = 0.877323


Total learning time: 2.221 seconds
Total inference time: 1.47 seconds
AUC ROC: 0.913151


Results scoring model
   AUC ROC   = 0.948245
   AUC PR    = 0.936069
   CLL	      = -0.333664
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.95122
   F1        = 0.906977


Total scoring time: 0.869 seconds
Parameter learned model CLL: -0.333664


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 8], 'false,true,true,true': [1.519, 3, 10], 'false,true,true,false': [1.833, 4, 21], 'false,true,false': [3.33e-08, 34, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'phenotype(A, J)'}, {'true': [2.98e-08, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.305, 23, 9], 'false,false,true,false': [2.756, 18, 19], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.011, 0, 3], 'false,true,true,false': [2.358, 7, 28], 'false,true,false': [0.072, 34, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.026, 0, 4], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 6], 'false,false,true,true': [2.043, 23, 9], 'false,false,true,false': [2.419, 18, 19], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 8], 'false,true,true': [2.047, 23, 10], 'false,true,false,true': [0.832, 1, 4], 'false,true,false,false': [2.231, 17, 17], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.058, 0, 2], 'true,false': [0.028, 0, 4], 'false,true,true': [0.998, 7, 2], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [1.025, 8, 5], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.039, 16, 10], 'false,false,false,false': [1.602, 9, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.046, 0, 5], 'true,false': [0.0, 0, 4], 'false,true,true': [2.009, 23, 10], 'false,true,false,true': [1.817, 4, 21], 'false,true,false,false': [0.039, 14, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.037, 0, 4], 'true,false,true': [0.0, 0, 4], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.376, 7, 31], 'false,true,false': [0.088, 34, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 8], 'false,true': [2.757, 41, 31], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.027, 0, 5], 'false,true': [2.749, 41, 31], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.24620003753049505], 'false': [0.24517746913580396, 0.0], 'false,true': [0.15027700831025087, 3.2653618371328135e-17], 'false,true,true': [0.1775147928994082, 0.13440000000000019], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan], 'true': [0.0, -2.220446049250313e-16]}, {'': [9.868649107779169e-17, 0.20028653930676266], 'false': [3.7622267389310814e-05, 0.19740906472558148], 'false,false': [0.19670248545373992, 0.0], 'false,false,true': [0.1660315933099674, 0.20526393049396188], 'false,true': [0.0, 0.0], 'false,false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [-1.4802973661668753e-16, 0.18599283442511452], 'false': [0.18685223366028836, 0.0], 'false,true': [0.14679248676863024, 0.00015378786728905756], 'false,true,true': [4.311653681450996e-05, 0.1588018343106961], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0], 'true': [-4.4408920985006264e-17, 0.0]}, {'': [0.00021107998494906965, 0.14204425796542583], 'false': [7.401486830834377e-17, 0.14807711464813592], 'false,false': [0.1490792339992565, 0.0], 'false,false,true': [0.13037608384625837, 0.1581461614860814], 'true': [0.0001752990806871968, 0.0], 'false,true': [nan, -3.700743415417188e-17], 'false,false,false': [0.0, nan]}, {'': [1.972602302749118e-06, 0.1384493154065869], 'false': [0.13981093266380168, 0.0], 'false,true': [0.12700029558934234, 0.14643655359069227], 'false,true,false': [0.13851300295995772, 0.14634753238955597], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0008309937797144525, 0.12933011236008396], 'false': [0.11011557411236657, 0.13589472909440822], 'false,false': [0.0, 0.1383025726666465], 'false,false,false': [0.1598496146415367, 0.10698867508306564], 'false,true': [0.11075928555312023, 0.10833916661370506], 'false,true,false': [0.22222222222222224, 0.08080695941287643], 'true': [0.0017047333214710997, 0.00020140838288013052], 'false,false,true': [0.0, nan]}, {'': [0.00023115228745415297, 0.12981793766334332], 'false': [0.1313675309163504, 0.0], 'false,true': [0.12227513707609439, 0.13757691901439534], 'false,true,false': [0.13207052699615243, 0.00010772120411910764], 'true': [0.00041487075251269714, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}, {'': [0.00017812269703039915, 0.11852394628806229], 'false': [0.11996360316322442, 0.0], 'false,true': [0.14851005495521535, 0.00022745842050383175], 'false,true,true': [nan, 0.1485100549552154], 'true': [0.0003501719012122123, 2.0581541662062498e-05], 'true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0001346608595917583, 0.10432859059712193], 'false': [0.10558518303959087, 0.0], 'true': [0.0, 0.0001149537215141376], 'false,false': [0.0, nan], 'true,true': [0.0, nan], 'false,false,true': [nan, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.00010164786937178544, 0.10370747202818048], 'false': [0.10499460826048576, 0.0], 'true': [2.6485283709531265e-05, 0.00014208589848214715], 'true,true': [0.0, -2.3129646346357427e-18], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan], 'true,true,false': [nan, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(H, A).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(C, D).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;false;interaction(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7447648631331598;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7447648631331598;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.19245035124910706;  // std dev = 3.489, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.5707229628008496;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5808146396981555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5085144673527088;  // std dev = 2.309, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.14812280149856477;  // std dev = 1.49e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.15898577034057398;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.43187935758382306;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.11759819282657621;  // std dev = 3.071, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.3627337831795453;  // std dev = 0.605, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31759027434561304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.18455888317695143;  // std dev = 2.766, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | | else return -0.1650766728632712;  // std dev = 0.226, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.27579382379508455;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.27402968687651136;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.27509527503751574;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.08451537204679338;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2080366925173652;  // std dev = 0.228, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.26693387810372293;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06482284247207766;  // std dev = 1.033, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.15482988527628955;  // std dev = 2.314, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return -0.019469327711126538;  // std dev = 0.783, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.22077156795946765;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23487845671707008;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.0380596071744338;  // std dev = 1.772, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.2311324637767177;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2745977387856738;  // std dev = 1.794, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.16171835038552754;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.1883339463527221;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.1953509205588191;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17263290815987742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.36554538778241275;  // std dev = 0.813, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.187516092599206;  // std dev = 2.017, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.1602660965240672;  // std dev = 0.158, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.125597376904926;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.1460911619662505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.15753447194069733;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1710181976141416;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.18359808231461058;  // std dev = 1.187, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.17254371603283233;  // std dev = 0.265, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0724579231709331;  // std dev = 1.954, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return -0.01236561244437778;  // std dev = 0.682, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.1287916942687396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14702065994185887;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14049546487941075;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.0620018780085437;  // std dev = 1.167, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.003846116955893342;  // std dev = 2.173, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else return 0.14591439421613428;  // std dev = 0.350, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.845461
   AUC PR    = 0.778333
   CLL	      = -0.448131
   Precision = 0.811075 at threshold = 0.5
   Recall    = 0.939623
   F1        = 0.870629


Total learning time: 4.338 seconds
Total inference time: 1.758 seconds
AUC ROC: 0.845461


Results scoring model
   AUC ROC   = 0.96044
   AUC PR    = 0.953924
   CLL	      = -0.29725
   Precision = 0.891304 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.942529


Total scoring time: 1.016 seconds
Refined model CLL: -0.29725


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.845461
   AUC PR    = 0.778333
   CLL	      = -0.448131
   Precision = 0.811075 at threshold = 0.5
   Recall    = 0.939623
   F1        = 0.870629


Total learning time: 8.443999999999999 seconds
Total inference time: 1.758 seconds
AUC ROC: 0.845461
Total revision time: 8.443999999999999
Best scored revision CLL: -0.29725


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:40:59
{'AUC ROC': 0.845461, 'AUC PR': 0.778333, 'CLL': -0.448131, 'Precision': [0.811075, 0.5], 'Recall': 0.939623, 'F1': 0.870629, 'Learning time': 8.443999999999999, 'Inference time': 1.758, 'parameter_0.4': {'AUC ROC': 0.913151, 'AUC PR': 0.872678, 'CLL': -0.399137, 'Precision': [0.864469, 0.5], 'Recall': 0.890566, 'F1': 0.877323, 'Learning time': 2.221, 'Inference time': 1.47}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7152917922423695;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.7470378239884004;  // std dev = 1.886, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7473839334745775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7413433124639608;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.18214198785585087;  // std dev = 2.925, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.30626367221296363;  // std dev = 3.408, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5793670424335763;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5610580358096771;  // std dev = 2.466, 54.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | else return -0.15463428047223482;  // std dev = 0.059, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.19123909051776852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1684018135902855;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.42654062515870317;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11110228017033379;  // std dev = 2.488, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.18639473223534372;  // std dev = 2.870, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06727130616996732;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31874844528204005;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.097217403872311;  // std dev = 2.464, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.30931664925224794;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13533973930016796;  // std dev = 2.638, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.17279499086734945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13374806846416049;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.26972108562259717;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26170268980745365;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.08644051654721627;  // std dev = 1.307, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.27478918985254724;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.034318389928517185;  // std dev = 1.484, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.745083018838979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.18637762850246928;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10268092880765546;  // std dev = 2.320, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.1511234456223929;  // std dev = 1.765, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21905101164037738;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22752532731798503;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06093027425577572;  // std dev = 2.392, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.30424963850424414;  // std dev = 1.912, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return -0.20118745123285617;  // std dev = 0.039, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5811448058744916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1742245020636179;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.13190122655072337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18547128247695685;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19002265314218147;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1748022215497702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2718179195418421;  // std dev = 2.516, 57.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | else return -0.17265819990474485;  // std dev = 0.047, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.004408901324706345;  // std dev = 0.504, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1477294788089959;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1477294788089959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16405293589127182;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.03893502567298629;  // std dev = 3.133, 109.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=50 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.1095900965917417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.041522427107368136;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13008010122678126;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.13008010122678126;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14137230044086369;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14364343422411904;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.032163335588205645;  // std dev = 3.121, 109.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=50 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4256549187595604;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14959772676828265;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.12236503934409057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.959744
   AUC PR    = 0.941107
   CLL	      = -0.347822
   Precision = 0.913858 at threshold = 0.5
   Recall    = 0.920755
   F1        = 0.917293


Total learning time: 2.231 seconds
Total inference time: 1.366 seconds
AUC ROC: 0.959744


Results scoring model
   AUC ROC   = 0.957206
   AUC PR    = 0.941433
   CLL	      = -0.310096
   Precision = 0.898551 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.946565


Total scoring time: 0.963 seconds
Parameter learned model CLL: -0.310096


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 8], 'false,true,true,true': [1.604, 3, 18], 'false,true,true,false': [1.886, 4, 32], 'false,true,false': [5.37e-08, 52, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'phenotype(A, J)'}, {'true': [4.21e-08, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.925, 30, 17], 'false,false,true,false': [3.408, 29, 30], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.005, 0, 3], 'false,true,true,false': [2.466, 7, 47], 'false,true,false': [0.059, 52, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.786, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.023, 0, 6], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 6], 'false,false,true,true': [2.488, 30, 17], 'false,false,true,false': [2.87, 29, 30], 'false,false,false,true': [0.827, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 8], 'false,true,true': [2.464, 30, 18], 'false,true,false,true': [0.895, 1, 6], 'false,true,false,false': [2.638, 28, 26], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.782, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.055, 0, 4], 'true,false': [0.013, 0, 4], 'false,true,true': [1.307, 8, 5], 'false,true,false,true': [0.938, 1, 5], 'false,true,false,false': [1.484, 17, 9], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.084, 3, 0], 'false,false,false,true': [2.32, 20, 17], 'false,false,false,false': [1.765, 13, 17]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.05, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true': [2.392, 30, 18], 'false,true,false,true': [1.912, 4, 32], 'false,true,false,false': [0.039, 25, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.066, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.043, 0, 6], 'true,false,true': [0.0, 0, 4], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.516, 7, 50], 'false,true,false': [0.047, 52, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.504, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.031, 0, 8], 'false,true': [3.133, 59, 50], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.486, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.027, 0, 5], 'false,true': [3.121, 59, 50], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.071, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.24763098128279443], 'false': [0.24829559801363538, 0.18750000000000003], 'false,true': [0.10772545398584199, 5.551115123125783e-17], 'false,false': [nan, 0.18750000000000003], 'false,false,false': [0.22222222222222224, 0.0], 'false,true,true': [0.12244897959183638, 0.09876543209876695], 'true': [1.4802973661668753e-16, -2.220446049250313e-16]}, {'': [1.6148698540002277e-16, 0.19576115229724428], 'false': [8.108689376618017e-06, 0.1945193355714281], 'false,false': [0.19406299201198107, 0.18265185592665556], 'false,false,true': [0.18197818833502882, 0.19685882188716594], 'false,false,false': [0.2222222222222222, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [-2.0185873175002846e-16, 0.184446642833494], 'false': [0.18394361808963308, 0.17880255993209265], 'false,true': [0.10667361726957723, 6.583363561770608e-05], 'false,false': [0.17880255993209265, nan], 'false,false,true': [0.0, 0.20606801826587562], 'false,true,true': [8.708503033435141e-06, 0.11258180239104008], 'true': [-6.344131569286608e-17, 0.0]}, {'': [7.972620393395524e-05, 0.1353290940963821], 'false': [7.401486830834377e-17, 0.13900614591271657], 'false,false': [0.1375326840147818, 0.17096901947787566], 'false,false,false': [0.17096901947787566, nan], 'false,false,true': [0.13175372455217724, 0.13962266937399628], 'true': [8.592973793960142e-05, 0.0], 'false,true': [nan, -3.700743415417188e-17]}, {'': [7.64617573882505e-07, 0.1310529506741197], 'false': [0.12942528391645383, 0.17032094187352734], 'false,false': [0.17032094187352734, nan], 'false,false,true': [0.0, 0.2036024273586227], 'false,true': [0.1264595051904636, 0.13027317460048918], 'false,true,false': [0.1145115870806958, 0.1288429702977216], 'true': [0.0, 0.0]}, {'': [0.0004160889780504967, 0.12353045385097611], 'false': [0.11273439993950767, 0.1297966643103561], 'false,false': [0.1644436387851558, 0.12738644573873695], 'false,false,true': [0.0, 0.002353450660436939], 'false,false,false': [0.14545173767826566, 0.10380999266842511], 'false,true': [0.13137016845335395, 0.10514932618310602], 'false,true,false': [0.14669352362943514, 0.0847197901424723], 'true': [0.0007573838792489795, 4.2646741127833065e-05]}, {'': [0.0002411209570007753, 0.12046519436239693], 'false': [0.12094290501769044, 0.10442526168978056], 'false,true': [0.11920172984248606, 0.12173679557690759], 'false,true,false': [0.10153487611064663, 6.035533703234286e-05], 'false,false': [0.12826462924684442, 0.0], 'false,false,true': [0.0, 0.00220268007863382], 'true': [0.00035279016965442507, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.00018257909606522738, 0.10591591568540829], 'false': [0.10736720919542315, 0.06341135093782325], 'false,true': [0.11102923381940552, 4.238623910833679e-05], 'false,true,true': [nan, 0.11102923381940553], 'false,false': [nan, 0.06341135093782325], 'false,false,false': [0.06341135093782325, nan], 'true': [0.00030280745314657337, 3.706584605748242e-05], 'true,false': [0.0, 0.0]}, {'': [0.00013991681008957373, 0.08913652204065699], 'false': [0.09004092990680004, 0.06329685696980551], 'false,false': [0.06329685696980551, nan], 'false,false,true': [0.0, 0.07868706058839549], 'true': [0.0, 0.00011971599993219201], 'true,true': [0.0, nan], 'true,true,true': [0.0, 0.0]}, {'': [0.00010149522053821591, 0.08842642724996487], 'false': [0.0893805877928036, 0.06149019478041131], 'false,false': [0.0752203673002073, 0.0], 'false,false,true': [0.0, 0.002525348888050189], 'true': [3.187844077263043e-05, 0.0001508448555897629], 'true,true': [0.0, 2.3908830579472823e-05], 'true,true,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,false;phenotype(A, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,false;phenotype(A, J).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(A, H).;true;true
6;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(C, D).;true;true
8;true,true;recursion_proteinclass(E, B).;true;true
8;false;interaction(F, A).;true;true
8;false,false;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;true,true,false;interaction(A, F), interaction(F, C).;true;true
9;false;interaction(G, A).;true;true
9;false,false;phenotype(A, H).;true;true
9;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.7002541982574063;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7502124734683524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7299724186538793;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.23533530867944102;  // std dev = 4.402, 101.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
%   | | | else return 0.5750810510690036;  // std dev = 0.783, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5726645892591606;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5613148267812504;  // std dev = 2.446, 54.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.15361618451626938;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.15980693652349606;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.07849158756327199;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.42401980575238235;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.561070928441831;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.14940037564525638;  // std dev = 0.315, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.30722087110380786;  // std dev = 1.280, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.16521976896500462;  // std dev = 3.007, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31929608578491964;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | | then return 0.35760912565849245;  // std dev = 0.827, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.07884959159495715;  // std dev = 3.241, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | | else return 0.3189586199832226;  // std dev = 0.585, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.05606075100912817;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2721727115051674;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.253415665016842;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return -0.11356741641510103;  // std dev = 0.588, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12588531481798776;  // std dev = 1.594, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else return -0.11986770390879688;  // std dev = 0.651, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.731099019256735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1805710145457031;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1156314201243623;  // std dev = 2.718, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.2426423832710185;  // std dev = 0.718, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21463421340405045;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22832822727328334;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08348730585626174;  // std dev = 1.915, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return -0.10307002842926602;  // std dev = 0.733, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3092223037576638;  // std dev = 1.791, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return -0.17031262790846013;  // std dev = 0.178, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5668735826032218;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.186587971340072;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09425834481248216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18136093068034;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19061893600291485;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17664227935108223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.3199819926436245;  // std dev = 0.930, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2215285226926664;  // std dev = 2.096, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.1265315939646886;  // std dev = 0.074, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.17714151298503544;  // std dev = 0.136, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.004900320693413555;  // std dev = 0.491, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.14874573054306017;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return 0.1648071312508892;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15660068242662487;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.05290990903087298;  // std dev = 0.538, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.0828221949694013;  // std dev = 0.668, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.1105260318343348;  // std dev = 0.824, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.040290740895116924;  // std dev = 2.590, 76.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=35 */
%   | else if ( recursion_proteinclass(L, B) )
%   | | then return 0.00417508528684702;  // std dev = 0.490, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.13581362437264535;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14112310710286488;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.09427211727438088;  // std dev = 0.862, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.18380334277039617;  // std dev = 0.375, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.04657238600400744;  // std dev = 2.472, 81.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=38 */
%   | | | else return -0.03248427938643289;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4238856815812929;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16121395494204352;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08723302005120295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.966757
   AUC PR    = 0.949092
   CLL	      = -0.320162
   Precision = 0.910448 at threshold = 0.5
   Recall    = 0.920755
   F1        = 0.915572


Total learning time: 7.159 seconds
Total inference time: 1.719 seconds
AUC ROC: 0.966757


Results scoring model
   AUC ROC   = 0.988424
   AUC PR    = 0.987711
   CLL	      = -0.275251
   Precision = 0.911765 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.953846


Total scoring time: 1.298 seconds
Refined model CLL: -0.275251


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966757
   AUC PR    = 0.949092
   CLL	      = -0.320162
   Precision = 0.910448 at threshold = 0.5
   Recall    = 0.920755
   F1        = 0.915572


Total learning time: 11.651 seconds
Total inference time: 1.719 seconds
AUC ROC: 0.966757
Total revision time: 11.651
Best scored revision CLL: -0.275251


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:41:15
{'AUC ROC': 0.966757, 'AUC PR': 0.949092, 'CLL': -0.320162, 'Precision': [0.910448, 0.5], 'Recall': 0.920755, 'F1': 0.915572, 'Learning time': 11.651, 'Inference time': 1.719, 'parameter_0.6': {'AUC ROC': 0.959744, 'AUC PR': 0.941107, 'CLL': -0.347822, 'Precision': [0.913858, 0.5], 'Recall': 0.920755, 'F1': 0.917293, 'Learning time': 2.231, 'Inference time': 1.366}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6968586125188665;  // std dev = 2.048, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.6879361691420652;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7508482441320855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4938372506172881;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.20210077545230493;  // std dev = 3.507, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.29629090427192406;  // std dev = 3.910, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38364645215416804;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.538427218368844;  // std dev = 3.170, 74.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=62 */
%   | | else return -0.1545132315361581;  // std dev = 0.066, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.30430332034404367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4046404974361306;  // std dev = 1.042, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4102227081803417;  // std dev = 0.565, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.13040113684309756;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.12485808861065811;  // std dev = 3.020, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.18179053570985731;  // std dev = 3.379, 75.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=37 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1965182412452092;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32230227838976755;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.33380586755583136;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09844182168044675;  // std dev = 3.043, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.298913803798018;  // std dev = 1.023, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13288940303656013;  // std dev = 3.167, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.2819774501919005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2696007541244107;  // std dev = 1.010, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2786424278915231;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15043402290129018;  // std dev = 0.856, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.14657153500564832;  // std dev = 1.774, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2905911239626122;  // std dev = 0.933, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.017099467302979714;  // std dev = 1.707, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5390375560079196;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.31681243023555966;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.14312935754150208;  // std dev = 2.102, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.10229919469261162;  // std dev = 2.757, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2318683305113084;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2309718344671321;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05654298307951288;  // std dev = 2.950, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2995695636478096;  // std dev = 2.449, 46.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=39 */
%   | | | else return -0.19728258853973957;  // std dev = 0.046, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3582636787093557;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17748746272603289;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05946263880714309;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.19111648412827792;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19345869916261493;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19696367477777646;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2543057356754221;  // std dev = 3.306, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | else return -0.17463896209201082;  // std dev = 0.080, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3001997591576895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.048928637623191246;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1458982322792376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16626124282964752;  // std dev = 0.069, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then return 0.035022123175774654;  // std dev = 3.901, 145.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=65 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.15949067690177715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.10584450086277353;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.1263744798273585;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.12863979359635713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14463694779612069;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15225649634952562;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.028658678739911948;  // std dev = 3.890, 145.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=65 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25050043614303497;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.13925239359684233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 4.0090013866825314E-4;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.958206
   AUC PR    = 0.939608
   CLL	      = -0.349814
   Precision = 0.908127 at threshold = 0.5
   Recall    = 0.969811
   F1        = 0.937956


Total learning time: 2.749 seconds
Total inference time: 1.422 seconds
AUC ROC: 0.958206


Results scoring model
   AUC ROC   = 0.942444
   AUC PR    = 0.92591
   CLL	      = -0.345002
   Precision = 0.864583 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.927374


Total scoring time: 0.983 seconds
Parameter learned model CLL: -0.345002


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 13], 'false,true,true,true': [2.048, 5, 26], 'false,true,true,false': [2.576, 8, 39], 'false,true,false': [6.66e-08, 67, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'enzyme(A, J)'}, {'true': [5.16e-08, 0, 14], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.858, 1, 3], 'false,false,true,true': [3.507, 40, 25], 'false,false,true,false': [3.91, 38, 37], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.851, 1, 3], 'false,true,true,false': [3.17, 12, 62], 'false,true,false': [0.066, 67, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.042, 2, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.565, 1, 8], 'true,false': [0.703, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 8], 'false,false,true,true': [3.02, 40, 25], 'false,false,true,false': [3.379, 38, 37], 'false,false,false,true': [1.113, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.083, 0, 10], 'false,true,true': [3.043, 41, 26], 'false,true,false,true': [1.023, 2, 6], 'false,true,false,false': [3.167, 37, 33], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.01, 2, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.1, 0, 5], 'true,false': [0.856, 2, 5], 'false,true,true': [1.774, 13, 11], 'false,true,false,true': [0.933, 1, 6], 'false,true,false,false': [1.707, 21, 10], 'false,false,true,true': [0.122, 0, 3], 'false,false,true,false': [0.108, 3, 0], 'false,false,false,true': [2.102, 15, 17], 'false,false,false,false': [2.757, 28, 26]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.092, 0, 9], 'true,false': [0.008, 0, 5], 'false,true,true': [2.95, 41, 26], 'false,true,false,true': [2.449, 7, 39], 'false,true,false,false': [0.046, 32, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.715, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.064, 0, 7], 'true,false,true': [0.005, 0, 4], 'true,false,false': [0.049, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.306, 13, 65], 'false,true,false': [0.08, 67, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.771, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.069, 0, 13], 'false,true': [3.901, 80, 65], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.753, 2, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.63e-09, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.049, 0, 7], 'false,true': [3.89, 80, 65], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.696, 2, 2], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.24787915512465356], 'false': [0.24732461355529112, 0.24489795918367332], 'false,true': [0.138888888888888, 6.628197161941232e-17], 'false,false': [0.0, 0.24999999999999992], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,true,true': [0.13527575442247766, 0.1412403802625632], 'false,false,true': [nan, 0.0], 'true': [0.0, -2.7328566760003855e-16]}, {'': [1.9032394707859825e-16, 0.2020492450946293], 'false': [0.19407711104606326, 0.2011171083918962], 'false,false': [0.19923835829101919, 0.24206894322747874], 'false,false,false': [0.2222222222222222, 0.2222222222222222], 'false,false,true': [0.1892268999689312, 0.20379591461878965], 'false,true': [0.0, 0.20871587416286957], 'false,true,false': [0.0, 0.18419283105881865], 'false,true,true': [nan, 0.0]}, {'': [-2.5376526277146434e-16, 0.1931097262219766], 'false': [0.19160958867612066, 0.2165611318843494], 'false,false': [0.2165611318843494, nan], 'false,false,true': [0.0, 0.18085446289811294], 'false,true': [0.13932571975608313, 6.449445212548333e-05], 'false,true,true': [0.1811528002106661, 0.13583622799647327], 'true': [-1.4802973661668753e-16, -4.4408920985006264e-17]}, {'': [0.08248529179701809, 0.14555559600137252], 'false': [1.1102230246251565e-16, 0.1500069997312352], 'false,false': [0.14751231796573885, 0.20659166822240158], 'false,false,false': [0.20659166822240158, nan], 'false,false,true': [0.14027749964804465, 0.15227760291517492], 'true': [0.035449656180725965, 0.16486711480666125], 'false,true': [nan, 0.0]}, {'': [0.0005168734174319908, 0.14431394814924503], 'false': [0.14225625849520382, 0.18294770804190344], 'false,false': [0.18294770804190344, nan], 'false,false,true': [0.0, 0.16997634764743877], 'false,true': [0.13819508962316632, 0.14452033105911566], 'false,true,false': [0.13070385037952725, 0.1432722700739638], 'true': [0.0, 0.0006858134804900828]}, {'': [0.06582288289724858, 0.13403575897549802], 'false': [0.12015771127719879, 0.14324332451828198], 'false,false': [0.1875687575208829, 0.14014819843719414], 'false,false,true': [0.005000694520613876, 0.0038972210446700886], 'false,false,false': [0.13812548432621122, 0.14072652673926572], 'false,true': [0.13113850396525098, 0.11080097113432479], 'false,true,false': [0.12422445128968128, 0.09399134155854195], 'true': [0.002004397878602837, 0.10455860042419925]}, {'': [0.0006148046918062081, 0.13258807382107116], 'false': [0.1339174512739964, 0.10398933406073792], 'false,true': [0.12987784366373195, 0.13667770642894422], 'false,true,false': [0.13043426627705665, 6.733354296989402e-05], 'false,false': [0.06378428567762706, 0.12794931799421555], 'false,false,false': [0.12794931799421555, nan], 'false,false,true': [0.0, 0.0], 'true': [0.000949094481786619, 1.2566402240477003e-05]}, {'': [0.0004740294779795159, 0.11986881347508933], 'false': [0.12114370462101108, 0.09267345726149641], 'false,true': [0.14010406366854036, 9.460810146409766e-05], 'false,true,true': [nan, 0.14010406366854028], 'false,false': [0.0, 0.09909943682643085], 'false,false,false': [0.09909943682643085, nan], 'true': [0.0005874692400026678, 0.0003532002123334266], 'true,false': [7.514436509654943e-06, 0.0008070946634910944]}, {'': [0.00037059111351567253, 0.10428578949548983], 'false': [0.10494594778265426, 0.08957743046141782], 'false,false': [0.08957743046141782, nan], 'false,false,true': [0.0, 0.09444946555365236], 'true': [0.0, 0.00036948010805649007], 'true,true': [0.0, nan], 'true,true,true': [nan, 0.0]}, {'': [0.00029050493613287057, 0.10357708906936348], 'false': [0.104344704041067, 0.08716088000462847], 'false,false': [0.03375717073116483, 0.12102350680588599], 'false,false,false': [0.12102350680588599, nan], 'false,false,true': [0.0, 0.0], 'true': [7.724043660571413e-05, 0.0003465641148796193], 'true,true': [2.3129646346357427e-18, 4.7982926717066166e-05], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(D, G), interaction(G, D).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;enzyme(A, H).;true;true
6;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), enzyme(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;true,true,false;interaction(A, F), interaction(F, C).;true;true
9;false;interaction(G, A).;true;true
9;false,false;enzyme(A, H).;true;true
9;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.6512523833753745;  // std dev = 3.085, 58.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=46 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, D) )
%   | | then return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7592820896702903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4844155690923239;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16386906246216415;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2524883966016563;  // std dev = 5.095, 131.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=58 */
%   | | | else return 0.38655715802818236;  // std dev = 1.618, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.5073664574856677;  // std dev = 3.204, 68.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=55 */
%   | | | else return 0.6921750075305356;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.14773152975360504;  // std dev = 0.072, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.15659820600746627;  // std dev = 0.026, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.4084568447888796;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20944404069742772;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11019660331346354;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.46681702498255573;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | | then return 0.5124258912511578;  // std dev = 0.987, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.09816318442849452;  // std dev = 4.010, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.08233643922700765;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.34577818414176703;  // std dev = 0.844, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.31645393218977913;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1793063181693594;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, G) )
%   | | | then return 0.1244252118199255;  // std dev = 4.214, 131.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=59 */
%   | | | else return 0.20628146674703576;  // std dev = 1.120, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.3129778161625108;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10065335763260774;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2700954333604023;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.06064460022882226;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3047380621814452;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.3504474977914831;  // std dev = 2.696, 72.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=63 */
%   | | | else return -0.11979655847004167;  // std dev = 1.308, 41.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | else return -0.20100598895767913;  // std dev = 0.087, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.28862800385688353;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11367892651699392;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17494711268565966;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.20037735776658328;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20235567668284485;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.06066361510920567;  // std dev = 2.247, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return -0.03552378617969359;  // std dev = 0.994, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2731512949503292;  // std dev = 2.337, 46.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=39 */
%   | | | else return -0.1546448374859854;  // std dev = 0.164, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5844243495054904;  // std dev = 0.081, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.3580945815672584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.08712207883879991;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.171599740349439;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.17345050861144096;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1650593257319417;  // std dev = 0.000610, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.13913253572109016;  // std dev = 1.666, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.23391956776137954;  // std dev = 2.543, 59.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   | | else if ( location(A, J) )
%   | | | then return -0.1368385067617497;  // std dev = 0.135, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.1938259405449631;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3293030225407104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.09054691645426349;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.15273789540870386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1475302714005774;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.07511550963386115;  // std dev = 3.166, 106.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return -0.16134292323731778;  // std dev = 0.676, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.14302840156000457;  // std dev = 0.548, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04247422638589551;  // std dev = 0.528, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.19171043330537985;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02603688815144918;  // std dev = 0.703, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.13448842505916375;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.12595862247201436;  // std dev = 0.000473, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( complex(F, H), interaction(I, F) )
%   | | | then return -0.03471869936718922;  // std dev = 1.948, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.06441251273530926;  // std dev = 1.077, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.015036263701400245;  // std dev = 1.123, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.05016940855950745;  // std dev = 2.325, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.3947992602901916;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.3046705780685347;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.008869391561155307;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.973649
   AUC PR    = 0.95823
   CLL	      = -0.307541
   Precision = 0.910448 at threshold = 0.5
   Recall    = 0.920755
   F1        = 0.915572


Total learning time: 8.48 seconds
Total inference time: 2.322 seconds
AUC ROC: 0.973649


Results scoring model
   AUC ROC   = 0.974452
   AUC PR    = 0.96431
   CLL	      = -0.29674
   Precision = 0.891304 at threshold = 0.5
   Recall    = 0.987952
   F1        = 0.937143


Total scoring time: 1.016 seconds
Refined model CLL: -0.29674


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973649
   AUC PR    = 0.95823
   CLL	      = -0.307541
   Precision = 0.910448 at threshold = 0.5
   Recall    = 0.920755
   F1        = 0.915572


Total learning time: 13.228 seconds
Total inference time: 2.322 seconds
AUC ROC: 0.973649
Total revision time: 13.228
Best scored revision CLL: -0.29674


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:41:32
{'AUC ROC': 0.973649, 'AUC PR': 0.95823, 'CLL': -0.307541, 'Precision': [0.910448, 0.5], 'Recall': 0.920755, 'F1': 0.915572, 'Learning time': 13.228, 'Inference time': 2.322, 'parameter_0.8': {'AUC ROC': 0.958206, 'AUC PR': 0.939608, 'CLL': -0.349814, 'Precision': [0.908127, 0.5], 'Recall': 0.969811, 'F1': 0.937956, 'Learning time': 2.749, 'Inference time': 1.422}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.648846609518116;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | | else return 0.6857351419960642;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7563224414597658;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5840807839031593;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.20873065752318834;  // std dev = 3.948, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | | | else return 0.2834050613467692;  // std dev = 4.375, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.47990024525057207;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5147769099187799;  // std dev = 3.810, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | else return -0.15460639035047016;  // std dev = 0.061, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.25505409731093065;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.41754717334054836;  // std dev = 0.559, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2196464422287504;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.1275311059559772;  // std dev = 3.487, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | | | else return 0.17682083806387217;  // std dev = 3.808, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17072482078485082;  // std dev = 1.480, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32070452960745194;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32962012427615206;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10813070655038742;  // std dev = 3.544, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.320626585611792;  // std dev = 1.037, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.12941137302728695;  // std dev = 3.589, 89.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=41 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.16951067257854857;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16298447359411006;  // std dev = 1.327, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2751998940902126;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19163349588840728;  // std dev = 0.952, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.09065575871135967;  // std dev = 2.201, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3419863934898427;  // std dev = 0.971, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.004257311005211147;  // std dev = 1.888, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6494690403061325;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3401765207806616;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12640835861028235;  // std dev = 2.337, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.125987013060163;  // std dev = 3.101, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.221182196620888;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.23036027270204817;  // std dev = 8.18e-05, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06577080880107398;  // std dev = 3.446, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.29734734959259557;  // std dev = 2.765, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.1943587641452201;  // std dev = 0.062, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4730884609237082;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2927858551498192;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10601893330440601;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18493456140153;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19207627362785673;  // std dev = 5.66e-05, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18968023343715454;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24123478723597624;  // std dev = 3.917, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | | else return -0.17400333150590674;  // std dev = 0.102, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3152974799983348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04315267109798127;  // std dev = 0.969, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14772495824503185;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16231351121416165;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then return 0.03648729357778687;  // std dev = 4.510, 181.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.05141562944159064;  // std dev = 0.419, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05707431431249038;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.12843464807585792;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.13007654984177208;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14296737086410627;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15013413717343596;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.029755122969298803;  // std dev = 4.497, 181.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=82 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3364444101696404;  // std dev = 0.000406, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.25419931374127286;  // std dev = 0.000345, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.049326687768240646;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965625
   AUC PR    = 0.944939
   CLL	      = -0.341577
   Precision = 0.912587 at threshold = 0.5
   Recall    = 0.984906
   F1        = 0.947368


Total learning time: 3.119 seconds
Total inference time: 1.39 seconds
AUC ROC: 0.965625


Results scoring model
   AUC ROC   = 0.935374
   AUC PR    = 0.916152
   CLL	      = -0.359023
   Precision = 0.845528 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9163


Total scoring time: 1.106 seconds
Parameter learned model CLL: -0.359023


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 15], 'false,true,true,true': [2.668, 9, 34], 'false,true,true,false': [2.877, 10, 48], 'false,true,false': [7.6e-08, 80, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'enzyme(A, J)'}, {'true': [7.3e-08, 0, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.005, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.904, 1, 5], 'false,false,true,true': [3.948, 48, 31], 'false,false,true,false': [4.375, 49, 45], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.911, 1, 6], 'false,true,true,false': [3.81, 18, 76], 'false,true,false': [0.061, 80, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.348, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.559, 1, 13], 'true,false': [0.81, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 8], 'false,false,true,true': [3.487, 48, 31], 'false,false,true,false': [3.808, 49, 45], 'false,false,false,true': [1.48, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.05e-08, 0, 7], 'true,false': [0.056, 0, 10], 'false,true,true': [3.544, 49, 34], 'false,true,false,true': [1.037, 2, 7], 'false,true,false,false': [3.589, 48, 41], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.327, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.113, 0, 9], 'true,false': [0.952, 2, 7], 'false,true,true': [2.201, 19, 13], 'false,true,false,true': [0.971, 1, 8], 'false,true,false,false': [1.888, 25, 11], 'false,false,true,true': [0.06, 0, 4], 'false,false,true,false': [0.076, 5, 0], 'false,false,false,true': [2.337, 19, 19], 'false,false,false,false': [3.101, 33, 33]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.08, 0, 12], 'true,false': [8.18e-05, 0, 5], 'false,true,true': [3.446, 49, 34], 'false,true,false,true': [2.765, 9, 48], 'false,true,false,false': [0.062, 41, 0], 'false,false,true,true': [0.002, 0, 3], 'false,false,true,false': [0.001, 3, 0], 'false,false,false,true': [0.694, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.06, 0, 10], 'true,false,true': [5.66e-05, 0, 4], 'true,false,false': [0.038, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.917, 19, 82], 'false,true,false': [0.102, 80, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.969, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.06, 0, 15], 'false,true': [4.51, 99, 82], 'false,false,true,true': [0.419, 1, 1], 'false,false,true,false': [0.894, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.039, 0, 7], 'false,true': [4.497, 99, 82], 'false,false,true,true': [0.000406, 0, 3], 'false,false,true,false': [0.000345, 3, 0], 'false,false,false,true': [0.667, 2, 2], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.0898315757650005e-16, 0.24801951700885466], 'false': [0.24779463386343595, 0.24999999999999983], 'false,false': [0.0, 0.2469135802469134], 'false,true': [0.15273012449759935, 7.216449660063518e-17], 'false,false,false': [0.24999999999999992, 0.22222222222222224], 'false,true,true': [0.1654948620876167, 0.14268727705112988], 'false,false,true': [nan, 0.0], 'true': [0.0, -2.3684757858670006e-16]}, {'': [3.134747363647501e-16, 0.20564405827936902], 'false': [0.15162132631970118, 0.20425312737816004], 'false,false': [0.20211399061561117, 0.24523440681107944], 'false,false,false': [0.24999999999999992, 0.2222222222222222], 'false,false,true': [0.19730639166909794, 0.20360803188552415], 'false,true': [1.1553771421701775e-05, 0.17830322843505783], 'false,true,false': [0.0, 0.13610238673470976], 'false,true,true': [nan, 1.1553771421701775e-05]}, {'': [-2.0898315757650005e-16, 0.19656639943522672], 'false': [0.19455540848771308, 0.23161433377844495], 'false,false': [0.23161433377844495, nan], 'false,false,true': [0.24999999999999997, 0.2270175482427911], 'false,true': [0.15200602521147827, 4.6256808563530094e-05], 'false,true,true': [0.11844154830360384, 0.15442120384956612], 'true': [-2.590520390792032e-16, -4.4408920985006264e-17]}, {'': [0.06061634907596742, 0.15516719297270265], 'false': [1.1102230246251565e-16, 0.15908886208084924], 'false,false': [0.15469588889845784, 0.24327553442252178], 'false,false,false': [0.24327553442252178, nan], 'false,false,true': [0.15388731714326548, 0.15426601857764016], 'true': [0.022331637754166214, 0.16415140585537247], 'false,true': [nan, 0.0]}, {'': [0.00020597640408330918, 0.15261866626234408], 'false': [0.14849270292698122, 0.22612916980572587], 'false,false': [0.22612916980572587, nan], 'false,false,true': [0.25, 0.22015294400252042], 'false,true': [0.15128535231193913, 0.14543569144367263], 'false,true,false': [0.1195487968583622, 0.14469561711986276], 'true': [1.586032892321652e-17, 0.0003174296047019354]}, {'': [0.052798825064257184, 0.14495247481347343], 'false': [0.13222535462954801, 0.15282622099553905], 'false,false': [0.24285968305293404, 0.14497903770231033], 'false,false,true': [0.0008940139274226655, 0.0011440687627673584], 'false,false,false': [0.14372860820087538, 0.14569891709322386], 'false,true': [0.15139274861754184, 0.11844750007270104], 'false,true,false': [0.10481524532419023, 0.09904337712864653], 'true': [0.0014141796928878552, 0.10069179898141518]}, {'': [0.0003978248999646037, 0.13971584653732502], 'false': [0.13989682927748046, 0.13617499430361735], 'false,true': [0.1430925801339366, 0.13688349893780333], 'false,true,false': [0.13412630346841728, 9.249526605883894e-05], 'false,false': [0.14664159261258883, 0.12032402782312104], 'false,false,true': [8.582814647513833e-07, 5.929331662879456e-07], 'false,false,false': [0.12032402782312104, nan], 'true': [0.0005388091050062271, 1.3392400854961296e-09]}, {'': [0.0003031214832266492, 0.1259550385238307], 'false': [0.12735179738449084, 0.10052174634771809], 'false,true': [0.15191235484666984, 0.0001303244123240399], 'false,true,true': [nan, 0.15191235484666984], 'false,false': [0.0, 0.10428454957410133], 'false,false,false': [0.10428454957410133, nan], 'true': [0.0003577660555583673, 0.0002030629602080003], 'true,false': [8.015117805570959e-10, 0.0004705319287960548]}, {'': [0.00023619176454843106, 0.11159516182402826], 'false': [0.11235465596759023, 0.09748962693559488], 'false,false': [0.09748962693559488, nan], 'false,false,true': [0.0877731977486825, 0.09991233008942933], 'true': [0.0, 0.00024264566126473616], 'true,true': [0.0, nan], 'true,true,true': [nan, 0.0]}, {'': [0.00018443304391137471, 0.11097365114447659], 'false': [0.11174262568451274, 0.09685185176420527], 'false,false': [0.08721504936860569, 0.11126667061411115], 'false,false,false': [0.11126667061411115, nan], 'false,false,true': [5.485672131359346e-08, 3.958281452609569e-08], 'true': [4.1919984884700165e-05, 0.0002177972150725349], 'true,true': [0.0, 3.98815839911637e-05], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(D, G), interaction(G, D).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;enzyme(A, H).;true;true
6;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), enzyme(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;true,true,false;interaction(A, F), interaction(F, C).;true;true
9;false;interaction(G, A).;true;true
9;false,false;enzyme(A, H).;true;true
9;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.524815601766179;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.7230137999643776;  // std dev = 2.941, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, D) )
%   | | then return 0.7194734122109543;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7459232260998325;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5867501616101738;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16261520728691675;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.2174101147193345;  // std dev = 3.378, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.28281220434999604;  // std dev = 4.949, 119.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.4793304093183631;  // std dev = 3.785, 86.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=67 */
%   | | | else return 0.6924189220086409;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.14608461013466237;  // std dev = 0.078, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.15989106067442369;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return 0.286806569386431;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23887585040716197;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.11474592941571665;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.48383179219995814;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4698460265077579;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40215086520269144;  // std dev = 3.056, 69.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=53 */
%   | | | else return -0.17019085469474726;  // std dev = 0.553, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.19122517755710833;  // std dev = 1.608, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.09391625808820091;  // std dev = 2.583, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.3155987946939791;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(F, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5247425293950583;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07560352015250155;  // std dev = 2.920, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else return -0.06211980448176028;  // std dev = 0.609, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return -0.17586968368502262;  // std dev = 0.231, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.13062794032611783;  // std dev = 2.051, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.15746090882000027;  // std dev = 3.233, 76.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.27082965359991135;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21079723558124844;  // std dev = 0.299, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.173590250163756;  // std dev = 0.244, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.045259790092316746;  // std dev = 2.056, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.1306471425536595;  // std dev = 1.964, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6011616025527526;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27578504336625453;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11003000817535007;  // std dev = 3.556, 99.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21355414747085286;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.03165659829541123;  // std dev = 2.392, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.08168215825728438;  // std dev = 1.973, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.285628414865005;  // std dev = 2.609, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.16707395527577662;  // std dev = 0.161, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.44157248376073815;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22890872705619802;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.09456237069882106;  // std dev = 0.634, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17864376982381486;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1796856612556106;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.20060692819228923;  // std dev = 3.573, 86.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=67 */
%   | | | else return 0.34691027253861606;  // std dev = 0.133, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.14047444230934922;  // std dev = 0.204, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.1634770919065274;  // std dev = 0.221, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3065195547372954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.09957789217565574;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.00691935782116061;  // std dev = 0.602, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.1500458125727575;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15023979674305882;  // std dev = 0.000539, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1694833281734287;  // std dev = 0.000120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1524090874115296;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1663618000735353;  // std dev = 0.278, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.33918459859728795;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.003148759535292451;  // std dev = 2.664, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.18958353831249677;  // std dev = 0.342, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.043760887860967025;  // std dev = 3.126, 110.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1324405996132516;  // std dev = 0.000854, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), location(E, F) )
%   | | then return 0.14314289473928152;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13357322119499557;  // std dev = 0.000422, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14673449798481067;  // std dev = 0.250, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return -0.00514106834186674;  // std dev = 1.441, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.03834742550089781;  // std dev = 3.816, 156.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=73 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31914654667405834;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.20400114669032968;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03414725126170642;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.974197
   AUC PR    = 0.959994
   CLL	      = -0.306961
   Precision = 0.933824 at threshold = 0.5
   Recall    = 0.958491
   F1        = 0.945996


Total learning time: 6.356 seconds
Total inference time: 1.391 seconds
AUC ROC: 0.974197


Results scoring model
   AUC ROC   = 0.973419
   AUC PR    = 0.970733
   CLL	      = -0.317026
   Precision = 0.87395 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.932735


Total scoring time: 1.18 seconds
Refined model CLL: -0.317026


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974197
   AUC PR    = 0.959994
   CLL	      = -0.306961
   Precision = 0.933824 at threshold = 0.5
   Recall    = 0.958491
   F1        = 0.945996


Total learning time: 11.761 seconds
Total inference time: 1.391 seconds
AUC ROC: 0.974197
Total revision time: 11.761
Best scored revision CLL: -0.317026


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:41:48
{'AUC ROC': 0.974197, 'AUC PR': 0.959994, 'CLL': -0.306961, 'Precision': [0.933824, 0.5], 'Recall': 0.958491, 'F1': 0.945996, 'Learning time': 11.761, 'Inference time': 1.391, 'parameter_1.0': {'AUC ROC': 0.965625, 'AUC PR': 0.944939, 'CLL': -0.341577, 'Precision': [0.912587, 0.5], 'Recall': 0.984906, 'F1': 0.947368, 'Learning time': 3.119, 'Inference time': 1.39}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 92

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 277

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.23666309750275685;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.25007449513354013;  // std dev = 1.260, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.24811816884741303;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.667637012246732;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1547630374092175;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20202439026757832;  // std dev = 1.621, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.1476167937218563;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.4613008620579682;  // std dev = 0.062, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.14133212230092745;  // std dev = 0.843, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14919332119068077;  // std dev = 0.958, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1366805404688563;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.12999156901545686;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11629104674159829;  // std dev = 0.820, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14217599331599184;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3112483421611948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13533651395709198;  // std dev = 1.599, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.11598379849294968;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2487036809840868;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3251727417776293;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.16765651912083349;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -3.1987979952877166E-4;  // std dev = 0.610, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7116396730956427;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23443388222703998;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.30751603385328696;  // std dev = 0.546, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15705618796180415;  // std dev = 0.624, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2231720131960955;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.06789127131061257;  // std dev = 0.725, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3555514579086946;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18382305643221847;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6382404656177723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14206450934665749;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.11085777367576119;  // std dev = 1.051, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.175150047796939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.18977967596629752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19144062486987606;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31279252547913405;  // std dev = 0.181, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16684967269238785;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2271078680026068;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.030340040886305063;  // std dev = 1.163, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07422658989409914;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1602062349326435;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then return 0.04125056361521729;  // std dev = 0.831, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.1554857777731402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04088667442787583;  // std dev = 1.176, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.06928442084505522;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14167728447207895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13922713854815597;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.034959766956775676;  // std dev = 0.826, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46462624937454233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12806216745483218;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06372639607933604;  // std dev = 1.033, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.955858
   AUC PR    = 0.942382
   CLL	      = -0.364607
   Precision = 0.921429 at threshold = 0.5
   Recall    = 0.931408
   F1        = 0.926391


Total learning time: 1.337 seconds
Total inference time: 1.398 seconds
AUC ROC: 0.955858


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.249932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.73 seconds
Parameter learned model CLL: -0.249932


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 5], 'false,true,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.913, 5, 1], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'enzyme(A, J)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.106, 4, 3], 'false,false,true,false': [1.26, 5, 4], 'false,false,false,true': [0.913, 5, 1], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.004, 0, 7], 'false,true,false': [0.003, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.621, 7, 5], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.062, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [0.843, 4, 3], 'false,false,true,false': [0.958, 5, 4], 'false,false,false,true': [1.577, 7, 4], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.82, 4, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.948, 5, 5], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.599, 7, 5], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.049, 0, 2], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.61, 4, 2], 'false,false,true,true': [0.082, 0, 4], 'false,false,true,false': [0.242, 9, 0], 'false,false,false,true': [0.546, 1, 5], 'false,false,false,false': [0.624, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.041, 0, 4], 'false,true,true': [0.725, 4, 3], 'false,true,false,true': [0.155, 0, 5], 'false,true,false,false': [0.026, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.105, 5, 0], 'false,false,false,true': [1.051, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.034, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.181, 0, 8], 'false,true,false': [0.07, 9, 0], 'false,false,true': [0.056, 0, 2], 'false,false,false,true': [1.163, 7, 4], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'enzyme(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.031, 0, 4], 'false,true': [0.831, 9, 8], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.176, 7, 5], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.028, 0, 3], 'false,true': [0.826, 9, 8], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.115, 5, 0], 'false,false,false,true': [1.033, 4, 5], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24609375000000003], 'false': [0.24913494809688583, 0.24000000000000007], 'false,true': [-2.220446049250313e-16, -9.25185853854297e-18], 'false,false': [0.0, 0.21301775147928975], 'false,false,false': [0.13888888888888892, 0.24489795918367335], 'true': [nan, 0.0], 'false,false,true': [0.0, 0.0], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.0, 0.19789764320307174], 'false': [0.0, 0.19298624080530158], 'false,false': [0.17568300892697686, 0.208703518203021], 'false,false,false': [0.13888888888888887, 0.2448979591836735], 'false,false,true': [0.17482934999147157, 0.17626827468275957], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.18082836420755277], 'false': [0.16344878101054708, 0.199367475825913], 'false,false': [0.2111068187380537, 0.0], 'false,false,true': [0.0, 0.2190951611859869], 'false,true': [0.0013805336557463632, 7.591538475749794e-07], 'false,true,true': [0.0, 2.1674840241355956e-06], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.001704289516321622, 0.1381513361753199], 'false': [0.0, 0.146714047976076], 'false,false': [0.10176543724698825, 0.20065058277573314], 'false,false,false': [0.22619188938188114, 0.0], 'false,false,true': [0.10159809369457515, 0.10186855652231637], 'true': [0.0019173257058618942, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0, 0.1338684673142302], 'false': [0.09261044891616566, 0.18045613879623967], 'false,false': [0.19886574469808668, 0.0], 'false,false,true': [0.0, 0.21305750768173934], 'false,true': [0.09600861195113565, 0.0899558398967388], 'false,true,false': [nan, 0.0899558398967388], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.002098262084608874, 0.12515345787118085], 'false': [0.05477619291080316, 0.1454566860766453], 'false,false': [0.19568103991614355, 0.06806774816079474], 'false,false,true': [0.0016663380860695298, 0.006508204875557305], 'false,false,false': [0.04970535391638329, 0.07775453113098552], 'false,true': [0.0, 0.061193441132371025], 'false,true,false': [0.0, 0.06206717304596258], 'true': [0.0, 0.0011982207073644863]}, {'': [0.00042525556665772707, 0.09243398196188733], 'false': [0.07521125539526197, 0.11180394509326975], 'false,false': [0.08640070723541926, 0.12270047932887021], 'false,false,false': [0.12270047932887021, nan], 'false,false,true': [0.0, 0.0022015396901298944], 'false,true': [0.07504853699844428, 0.0751921474880065], 'false,true,false': [0.004785678127605664, 0.00013618348815943592], 'true': [nan, 0.00042525556665772707]}, {'': [0.0003283252537863851, 0.07712018998459834], 'false': [0.05952963649780792, 0.09691619923537848], 'false,false': [0.001553877311013807, 0.10554635882050226], 'false,false,false': [0.12305442429834995, 0.0], 'false,true': [0.004086463243413788, 0.0005505097487054448], 'false,true,true': [nan, 0.004086463243413774], 'true': [0.0, 0.000375854283748057], 'true,false': [0.0, 0.000562861841868649]}, {'': [0.0002467443849665761, 0.06598598568952715], 'false': [0.04066966597848914, 0.09464861776929873], 'false,false': [0.10732224144897295, 0.0], 'false,false,true': [0.0, 0.11525553430144847], 'true': [nan, 0.0002467443849665761], 'false,false,false': [0.0, nan]}, {'': [0.00019766063832706016, 0.06520631727786126], 'false': [0.04015138082584285, 0.09356410282707289], 'false,false': [0.05100183894845201, 0.11847881263405184], 'false,false,false': [0.11847881263405184, nan], 'false,false,true': [0.0, 0.0026556134975240287], 'true': [0.0, 0.0002620467140072834], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(I, A), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(A, G).;true;true
3;false,false,false;interaction(I, A), interaction(J, I).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,true;interaction(A, F), interaction(E, F).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;false,false;enzyme(A, H).;true;true
6;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;true,false;interaction(F, C), interaction(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;false,false,false;interaction(J, A), interaction(K, J).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, E).;true;true
8;false,false;interaction(F, A), interaction(G, F).;true;true
8;false,false,true;recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, G).;true;true
9;false,false;enzyme(A, H).;true;true
9;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return -0.05177032880278083;  // std dev = 0.912, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.2327214762711538;  // std dev = 1.433, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5504898020630853;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.29701438684128156;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6240488813576023;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.11987426314801596;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.16377274740190456;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21162565316142667;  // std dev = 1.553, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.1516265306258363;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.46010077907250324;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.028819637753210062;  // std dev = 0.595, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.25808795432676107;  // std dev = 0.873, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1469934657841234;  // std dev = 1.501, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.13326418162526105;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.2480348907720056;  // std dev = 0.457, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11996882956121609;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.260836187500313;  // std dev = 0.532, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13297041351439395;  // std dev = 0.616, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3115056655824323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14371905956026132;  // std dev = 1.515, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.11870261983198968;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2488798774895682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3125801852288273;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.1125261531036314;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04609347738204305;  // std dev = 0.566, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6846041703391031;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21260354476536725;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.21252851826378347;  // std dev = 0.523, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13640639093948534;  // std dev = 0.618, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2258262162472133;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.1575939160259895;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3093576208100532;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3190874678928399;  // std dev = 0.192, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15531894624639117;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5760744473709052;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15843654346958352;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.010055438694219482;  // std dev = 0.473, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.30788963869636443;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.17476691898930752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19352001390296866;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2661760743541531;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23981692358039697;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.09669173384655783;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.21894198929109673;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24845266087292456;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.026120764698484192;  // std dev = 1.027, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07642517982780228;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16157627759956197;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.02735651150744443;  // std dev = 0.342, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.17949176116681057;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02679448565931682;  // std dev = 0.552, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1691206364923885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03951137956191096;  // std dev = 1.046, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.07122326616552374;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14087935232988813;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.15558518154347462;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11511328147638118;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.03895047402404582;  // std dev = 0.444, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.0035641859321586347;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.417017848778365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14100802927188028;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.03749980533081103;  // std dev = 0.422, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.21808852807446255;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.941326
   AUC PR    = 0.92821
   CLL	      = -0.417578
   Precision = 0.947115 at threshold = 0.5
   Recall    = 0.711191
   F1        = 0.812371


Total learning time: 2.452 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.941326


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203774
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.707 seconds
Refined model CLL: -0.203774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941326
   AUC PR    = 0.92821
   CLL	      = -0.417578
   Precision = 0.947115 at threshold = 0.5
   Recall    = 0.711191
   F1        = 0.812371


Total learning time: 5.226 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.941326
Total revision time: 5.226
Best scored revision CLL: -0.203774


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:41:56
{'AUC ROC': 0.941326, 'AUC PR': 0.92821, 'CLL': -0.417578, 'Precision': [0.947115, 0.5], 'Recall': 0.711191, 'F1': 0.812371, 'Learning time': 5.226, 'Inference time': 1.378, 'parameter_0.2': {'AUC ROC': 0.955858, 'AUC PR': 0.942382, 'CLL': -0.364607, 'Precision': [0.921429, 0.5], 'Recall': 0.931408, 'F1': 0.926391, 'Learning time': 1.337, 'Inference time': 1.398}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.726856726623609;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.0435389716194778;  // std dev = 1.069, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.23729502883541573;  // std dev = 2.531, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.34706599335169436;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.567227898115793;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6290695780207255;  // std dev = 0.976, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.14688700119445508;  // std dev = 0.056, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30350783278955734;  // std dev = 1.948, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.2111316778425026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4326067037136237;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.42341770990812283;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.021750678303153782;  // std dev = 0.862, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.14128719068279652;  // std dev = 2.031, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2264420650225659;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1781035797020575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31743265994341263;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32045487036839343;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.01890150184919202;  // std dev = 0.858, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.32737190636294955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12157402784734767;  // std dev = 1.996, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31743265994341263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18871083785779386;  // std dev = 1.940, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.15350740225599013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25293339567371775;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.286157881758892;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.11872635116529419;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14991714638287118;  // std dev = 1.278, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5978247517135357;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.36674089497389584;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.12575257530105946;  // std dev = 1.082, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.05013114112931535;  // std dev = 1.272, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21471084773042473;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22842039217093474;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.008743748495902143;  // std dev = 0.809, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.36171620691455975;  // std dev = 0.977, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.1852507746716156;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36968042639966103;  // std dev = 0.265, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21619242028646835;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0854273885959866;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18073609403837979;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19385858874420636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18966357608258258;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30250376150569946;  // std dev = 1.022, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.14735156215780895;  // std dev = 0.102, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.17852512863132647;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07115222324159637;  // std dev = 1.417, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.07989361327701881;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15040750770736877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16136857022601428;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.026891612758409986;  // std dev = 1.610, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.13191096482115428;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.062392382451155734;  // std dev = 1.419, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.07421422645972715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.1315542897829866;  // std dev = 0.000885, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.138137740535316;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1494916253650525;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.022853772879218803;  // std dev = 1.603, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25973021770349936;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19605579227608846;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.033793992911780674;  // std dev = 1.261, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.946943
   AUC PR    = 0.924951
   CLL	      = -0.342665
   Precision = 0.860759 at threshold = 0.5
   Recall    = 0.981949
   F1        = 0.917369


Total learning time: 1.377 seconds
Total inference time: 1.748 seconds
AUC ROC: 0.946943


Results scoring model
   AUC ROC   = 0.990355
   AUC PR    = 0.988468
   CLL	      = -0.267102
   Precision = 0.972973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986301


Total scoring time: 0.798 seconds
Parameter learned model CLL: -0.267102


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.972, 1, 17], 'false,true,false': [2.36e-08, 27, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.651, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'complex(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'complex(A, J)'}, {'true': [2.98e-08, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.009, 0, 3], 'false,false,true,true': [1.069, 8, 2], 'false,false,true,false': [2.531, 20, 15], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.651, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.976, 1, 17], 'false,true,false': [0.056, 27, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.948, 7, 9], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.052, 0, 4], 'true,false': [0.007, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [0.862, 8, 2], 'false,false,true,false': [2.031, 20, 15], 'false,false,false,true': [1.931, 7, 8], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.001, 0, 5], 'false,true,true': [0.858, 8, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.996, 20, 16], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.94, 7, 9], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.062, 0, 4], 'false,true,true': [0.0, 4, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.278, 8, 8], 'false,false,true,true': [0.078, 0, 8], 'false,false,true,false': [0.26, 8, 0], 'false,false,false,true': [1.082, 7, 7], 'false,false,false,false': [1.272, 9, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.016, 0, 3], 'true,false': [0.031, 0, 4], 'false,true,true': [0.809, 8, 2], 'false,true,false,true': [0.977, 1, 17], 'false,true,false,false': [0.029, 19, 0], 'false,false,true,true': [0.265, 0, 4], 'false,false,true,false': [0.146, 3, 0], 'false,false,false,true': [1.265, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.014, 0, 3], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.027, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.022, 1, 19], 'false,true,false': [0.102, 27, 0], 'false,false,true': [0.035, 0, 2], 'false,false,false,true': [1.417, 7, 8], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.027, 0, 6], 'false,true': [1.61, 28, 19], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.419, 7, 9], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.000885, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 3], 'true,false': [0.007, 0, 2], 'false,true': [1.603, 28, 19], 'false,false,true,true': [0.237, 0, 4], 'false,false,true,false': [0.155, 3, 0], 'false,false,false,true': [1.261, 5, 6], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.24710059171597595], 'false': [0.24083295608872746, 0.24691358024691354], 'false,false': [0.0, 0.24999999999999997], 'false,false,false': [0.24000000000000005, 0.2479338842975207], 'false,true': [0.047499999999999785, 2.05596856412066e-17], 'false,true,true': [0.0, 0.05246913580246885], 'false,false,true': [0.0, 0.0], 'true': [0.0, -1.4802973661668753e-16]}, {'': [1.2688263138573217e-16, 0.1987047035117176], 'false': [3.066374909022063e-05, 0.1962988715634653], 'false,false': [0.1742334148188004, 0.2487225049060307], 'false,false,false': [0.24000000000000005, 0.2479338842975206], 'false,false,true': [0.11422184199442809, 0.1830370429922701], 'false,true': [0.0, 2.725666585812192e-05], 'false,true,false': [nan, 2.725666585812192e-05], 'false,true,true': [0.0, nan]}, {'': [-6.344131569286608e-17, 0.18525205417171026], 'false': [0.16532947337813006, 0.22880170067488104], 'false,false': [0.22668716294873079, 0.0], 'false,false,true': [0.0, 0.23712377202202456], 'false,true': [0.04796705261064629, 0.00011584877355450716], 'false,true,true': [0.0, 0.05291428578559391], 'false,false,false': [0.0, nan], 'true': [0.0, 3.700743415417188e-17]}, {'': [0.000418666475705035, 0.1422184581574869], 'false': [0.0, 0.1467155506799185], 'false,false': [0.11067690835211799, 0.24256290327111985], 'false,false,false': [0.2485051898225907, 0.0], 'false,false,true': [0.07429883581506877, 0.11789531496450605], 'true': [0.0006834067737330196, 1.7429350434805535e-05], 'false,true': [nan, 0.0]}, {'': [2.052709153876897e-06, 0.13567042380311947], 'false': [0.10328851045430056, 0.21639706328625952], 'false,false': [0.2223289066112209, 0.0], 'false,false,true': [0.0, 0.23524979812847857], 'false,true': [0.0736193064930588, 0.1088147173532749], 'false,true,false': [0.0, 0.11069267901785175], 'true': [0.0, 2.6414828599996556e-07], 'false,false,false': [0.0, nan]}, {'': [0.0008193638828673759, 0.13073100064028173], 'false': [0.09315185247194283, 0.14743268185589625], 'false,false': [0.23718646709909558, 0.09761630860319921], 'false,false,true': [0.0007586602628880668, 0.008420830550531555], 'false,false,false': [0.08369621353517905, 0.10784769325450014], 'false,true': [0.0, 0.10200594983494625], 'false,true,false': [nan, 0.10200594983494626], 'true': [0.0, 0.0009608011626076746]}, {'': [0.00021657486062121034, 0.10328889449788087], 'false': [0.09393530202840025, 0.12693313877160986], 'false,false': [0.09712573760419671, 0.14547374776648292], 'false,false,false': [0.14547374776648292, nan], 'false,false,true': [0.017563333205145665, 0.007067804907250193], 'false,true': [0.06538322022074919, 0.1005461122425192], 'false,true,false': [0.05300218005350726, 4.416948081772807e-05], 'true': [8.543550620746891e-05, 0.00023437868696023212]}, {'': [0.00015490882226937286, 0.08380869854433239], 'false': [0.07190227323367462, 0.11421997922128452], 'false,false': [0.0006148069785351512, 0.12690447685292708], 'false,false,false': [0.13393884751418833, 0.0], 'false,true': [0.05219096106124486, 0.00038843149903953377], 'false,true,true': [nan, 0.05219096106124486], 'true': [6.60541519711122e-05, 0.00017889613829700363], 'true,false': [0.0, 0.00023412865158820942]}, {'': [0.00011544974061871478, 0.07142744195887535], 'false': [0.0551416239295296, 0.1132215290082149], 'false,false': [0.11878187746272625, 0.0], 'false,false,true': [0.0, 0.12592146049269168], 'true': [0.0, 0.00011752780812121037], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [8.925289674692274e-05, 0.07088930832658424], 'false': [0.05469931730547623, 0.1127859703234816], 'false,false': [0.062375685965961256, 0.14450111733894946], 'false,false,false': [0.14450111733894946, nan], 'false,false,true': [0.014097996700789442, 0.00803686009488771], 'true': [5.944010133157318e-05, 2.4039466831292378e-05], 'true,true': [3.9204415181945396e-07, 8.14687432614004e-05], 'true,true,false': [nan, 8.14687432614004e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(A, I), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,true;interaction(F, A), interaction(F, E).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
7;false,false,false;interaction(A, J), interaction(J, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), complex(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.726856726623609;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.30162895834919085;  // std dev = 2.092, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.20005441721733142;  // std dev = 2.643, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.567227898115793;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.617697988390564;  // std dev = 0.956, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.14851927695566616;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.15286362480711338;  // std dev = 0.049, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3226053991272661;  // std dev = 1.922, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return -0.20996606446864463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.43141597967924744;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.42341770990812283;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.14913878048138357;  // std dev = 1.425, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0792619526197983;  // std dev = 1.663, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2461592894285737;  // std dev = 1.904, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1772492966404686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31769070919343334;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32045487036839343;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.010251609242673265;  // std dev = 0.249, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.32737190636294955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12449571354553468;  // std dev = 1.985, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31769070919343334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2044658122471225;  // std dev = 1.910, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return -0.152859761512568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2531096727296194;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.28415540033370756;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.11870255807464836;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.23766048405849624;  // std dev = 1.014, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.15829465623749914;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6045195003658984;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.34652692818480635;  // std dev = 0.239, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.12422214955830656;  // std dev = 1.383, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return -0.028779279001398983;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2097725313467408;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22526919006715085;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.09482546354432142;  // std dev = 0.615, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14285597128736094;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3582679707303081;  // std dev = 0.931, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.17515526623744623;  // std dev = 0.109, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L), enzyme(A, L) )
%   | | | then return 0.35764131566328033;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.020645848088335625;  // std dev = 1.243, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.20072195936132778;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.1771081161553932;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.1945912703122653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18636320650891625;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.3433963789830712;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2534933885983428;  // std dev = 0.918, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.14535995311560754;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20253813363021766;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.07986257506701748;  // std dev = 1.427, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.10055381349526074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.15160269536804716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15863725456653413;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, F) )
%   | | | then return -0.11459390558173173;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07034331245850645;  // std dev = 0.807, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0680560629398763;  // std dev = 0.923, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.07516435746952134;  // std dev = 0.783, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.1738779182843816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06844546647849516;  // std dev = 1.427, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return -0.09181770355615623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13271067756505295;  // std dev = 0.000573, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.13926770050369033;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14074862843946195;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), interaction(I, H) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.14058798402044356;  // std dev = 0.621, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.12072423450695464;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07418671464144157;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return -0.1209290982816275;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.041457439397893196;  // std dev = 1.499, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.08596767989940556;  // std dev = 0.766, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */


Results
   AUC ROC   = 0.931773
   AUC PR    = 0.904078
   CLL	      = -0.352246
   Precision = 0.868167 at threshold = 0.5
   Recall    = 0.974729
   F1        = 0.918367


Total learning time: 3.154 seconds
Total inference time: 1.696 seconds
AUC ROC: 0.931773


Results scoring model
   AUC ROC   = 0.995756
   AUC PR    = 0.995533
   CLL	      = -0.25654
   Precision = 0.972973 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986301


Total scoring time: 0.806 seconds
Refined model CLL: -0.25654


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.931773
   AUC PR    = 0.904078
   CLL	      = -0.352246
   Precision = 0.868167 at threshold = 0.5
   Recall    = 0.974729
   F1        = 0.918367


Total learning time: 6.135 seconds
Total inference time: 1.696 seconds
AUC ROC: 0.931773
Total revision time: 6.135
Best scored revision CLL: -0.25654


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:42:07
{'AUC ROC': 0.931773, 'AUC PR': 0.904078, 'CLL': -0.352246, 'Precision': [0.868167, 0.5], 'Recall': 0.974729, 'F1': 0.918367, 'Learning time': 6.135, 'Inference time': 1.696, 'parameter_0.4': {'AUC ROC': 0.946943, 'AUC PR': 0.924951, 'CLL': -0.342665, 'Precision': [0.860759, 0.5], 'Recall': 0.981949, 'F1': 0.917369, 'Learning time': 1.377, 'Inference time': 1.748}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 5.16e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7243216853139202;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.01537503659483293;  // std dev = 1.091, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2752344424636386;  // std dev = 3.231, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3087411357856349;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.22373365448410584;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5621241829437491;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6378330001010399;  // std dev = 0.989, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.15073870300497472;  // std dev = 0.087, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22889682428509608;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.43742473047543157;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.42128674864291205;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.002501287284752133;  // std dev = 0.882, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.16446254783315342;  // std dev = 2.535, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17366676544550036;  // std dev = 2.475, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.2061374073445397;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3163896615554598;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3205944973118032;  // std dev = 0.000761, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.002192765114279215;  // std dev = 0.881, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.32440008223242445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14007908670344424;  // std dev = 2.480, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3163896615554598;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14811265379166264;  // std dev = 2.487, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2522207390404432;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29123728633400786;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.11179649505148308;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12235106464315748;  // std dev = 1.512, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5824709114812889;  // std dev = 0.982, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.3330165171106971;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12120065203514854;  // std dev = 1.107, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.11124420923401948;  // std dev = 1.762, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21599469526991552;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2291039796817016;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.0036788401813200463;  // std dev = 0.844, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.36090553999894287;  // std dev = 1.011, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.19856487447640322;  // std dev = 0.005, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4675814705022036;  // std dev = 0.191, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3241128951010955;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07734064361424361;  // std dev = 1.516, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18168239891216897;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19600623338979106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1902225268107234;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2955737596241844;  // std dev = 1.063, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.15429596972227738;  // std dev = 0.159, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20008417477764356;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.05558686899721519;  // std dev = 1.827, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.06517958819047177;  // std dev = 0.428, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.14973245261626844;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1642015994002839;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then return 0.03465334005096724;  // std dev = 1.892, 72.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=32 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.16569521571781154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0486085622263835;  // std dev = 1.825, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05166440341498106;  // std dev = 0.426, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13165165891847297;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13824978818684294;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14638674534595983;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.029428633753283712;  // std dev = 1.883, 72.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=32 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33037912381690393;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2795522241273524;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03641192463370729;  // std dev = 1.496, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.945985
   AUC PR    = 0.922965
   CLL	      = -0.338268
   Precision = 0.886121 at threshold = 0.5
   Recall    = 0.898917
   F1        = 0.892473


Total learning time: 1.63 seconds
Total inference time: 1.538 seconds
AUC ROC: 0.945985


Results scoring model
   AUC ROC   = 0.993223
   AUC PR    = 0.991579
   CLL	      = -0.264959
   Precision = 0.982143 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990991


Total scoring time: 0.826 seconds
Parameter learned model CLL: -0.264959


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.984, 1, 30], 'false,true,false': [4.08e-08, 39, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.732, 6, 6], 'false,false,false,false': [1.897, 9, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'enzyme(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'enzyme(A, J)'}, {'true': [5.16e-08, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.006, 0, 4], 'false,false,true,true': [1.091, 10, 2], 'false,false,true,false': [3.231, 30, 27], 'false,false,false,true': [1.732, 6, 6], 'false,false,false,false': [1.897, 9, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.989, 1, 29], 'false,true,false': [0.087, 39, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.497, 14, 12], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.069, 0, 4], 'true,false': [0.004, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.11e-08, 0, 6], 'false,false,true,true': [0.882, 10, 2], 'false,false,true,false': [2.535, 30, 27], 'false,false,false,true': [2.475, 14, 11], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.000761, 0, 7], 'false,true,true': [0.881, 10, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [2.48, 30, 29], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.487, 14, 12], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.081, 0, 5], 'false,true,true': [0.0, 5, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.512, 12, 11], 'false,false,true,true': [0.982, 1, 12], 'false,false,true,false': [0.082, 14, 0], 'false,false,false,true': [1.107, 7, 7], 'false,false,false,false': [1.762, 16, 17]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.028, 0, 6], 'false,true,true': [0.844, 10, 2], 'false,true,false,true': [1.011, 1, 30], 'false,true,false,false': [0.005, 29, 0], 'false,false,true,true': [0.191, 0, 7], 'false,false,true,false': [0.193, 6, 0], 'false,false,false,true': [1.516, 9, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.018, 0, 3], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.024, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.063, 1, 32], 'false,true,false': [0.159, 39, 0], 'false,false,true': [0.007, 0, 2], 'false,false,false,true': [1.827, 14, 11], 'false,false,false,false': [0.428, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 7], 'false,true': [1.892, 40, 32], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.825, 14, 12], 'false,false,false,true': [0.426, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 3], 'true,false': [0.001, 0, 4], 'false,true': [1.883, 40, 32], 'false,false,true,true': [0.177, 0, 7], 'false,false,true,false': [0.182, 6, 0], 'false,false,false,true': [1.496, 9, 7], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.24801490049995195], 'false': [0.24691358024691512, 0.2497027348394764], 'false,false': [0.0, 0.2469135802469131], 'false,true': [0.02938475665748541, 4.2700885562506023e-17], 'false,false,false': [0.25, 0.24000000000000007], 'false,true,true': [0.0, 0.03121748178980358], 'false,false,true': [0.0, 0.0], 'true': [0.0, -2.5376526277146434e-16]}, {'': [2.9605947323337506e-16, 0.19885309599132212], 'false': [1.0029120887722343e-05, 0.19759068353655487], 'false,false': [0.17827981603653828, 0.24622870910548902], 'false,false,false': [0.25000000000000006, 0.2400000000000002], 'false,false,true': [0.09915090450905213, 0.18319472367572268], 'false,true': [0.0, 7.835250693588591e-06], 'false,true,false': [nan, 7.835250693588591e-06], 'false,true,true': [nan, 0.0]}, {'': [-1.4802973661668753e-16, 0.18602016413383687], 'false': [0.16559613185442512, 0.23587879651099924], 'false,false': [0.234816374392088, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.0, 0.2399002768197403], 'false,true': [0.030094903150951747, 0.00019201544866641294], 'false,true,true': [0.0, 0.03258331846646942], 'true': [0.0, -4.4408920985006264e-17]}, {'': [0.0006621620309373855, 0.14249016364941183], 'false': [7.401486830834377e-17, 0.14710657767781812], 'false,false': [0.10819305210789891, 0.24541506227124213], 'false,false,false': [0.24497016780217593, 0.24999999999999997], 'false,false,true': [0.0647892139757504, 0.11276871095082164], 'true': [0.0011893612429855205, 4.745590075905248e-06], 'false,true': [nan, 7.401486830834377e-17]}, {'': [3.1201783379971224e-06, 0.13755886542882417], 'false': [0.09941157454982136, 0.23138663682736213], 'false,false': [0.23000421066790186, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.0, 0.23780174307978644], 'false,true': [0.06472000789552851, 0.10303834569687356], 'false,true,false': [0.0, 0.10421852117925706], 'true': [0.0, 8.262592143815084e-08]}, {'': [0.0011780700603144234, 0.13222293418902162], 'false': [0.08973869398176591, 0.1480287290404103], 'false,false': [0.24523164420330565, 0.09217364194356681], 'false,false,true': [0.07423479078217796, 0.0004765101906124241], 'false,false,false': [0.0875756230808937, 0.09409478830310025], 'false,true': [-1.3877787807814458e-18, 0.09945691291140468], 'false,true,false': [nan, 0.09945691291140463], 'true': [-9.25185853854297e-18, 0.0013140529854864913]}, {'': [0.0001737930102759059, 0.10808683504659274], 'false': [0.09044352837287846, 0.15175753489142377], 'false,false': [0.16144235789226438, 0.14361194218630982], 'false,false,true': [0.005207997428342611, 0.0062188723030393205], 'false,false,false': [0.14361194218630982, nan], 'false,true': [0.05929187606762506, 0.0951957451711647], 'false,true,false': [0.03296238124774217, 7.071460758335956e-07], 'true': [0.00013858041868213453, 0.00013411486014308638]}, {'': [0.00012371708629324265, 0.08254550603871537], 'false': [0.06630019535708019, 0.12273251942604034], 'false,false': [2.3542253142182223e-05, 0.13039623709269724], 'false,false,false': [0.13348864529295715, 0.09165593064359595], 'false,true': [0.03426667455914609, 0.0006467110525660732], 'false,true,true': [nan, 0.03426667455914609], 'true': [0.00010715872358569208, 0.00010188709513220262], 'true,false': [0.0, 0.0001166893038598571]}, {'': [9.154298013234875e-05, 0.07042079898421723], 'false': [0.04973334158434274, 0.12154654141046586], 'false,false': [0.12382802045190779, 0.09074504727157683], 'false,false,true': [0.0, 0.12808288534810458], 'false,false,false': [0.09074504727157683, nan], 'true': [0.0, 7.117451538915917e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [6.57221146473868e-05, 0.06983197289323162], 'false': [0.04924506092554659, 0.1208316868575929], 'false,false': [0.09741376950443424, 0.1397891444344448], 'false,false,false': [0.1397891444344448, nan], 'false,false,true': [0.004474752217968955, 0.005526181125642553], 'true': [6.642665910988332e-05, 3.2661321721499936e-07], 'true,true': [0.0, 9.329697457961805e-05], 'true,true,false': [nan, 9.329697457961805e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(A, I), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,true;interaction(F, A), interaction(F, E).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), enzyme(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7243216853139202;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, G), enzyme(H, I) )
%   | | | then return 0.17681566858475545;  // std dev = 1.812, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.14238520752422568;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.29995273417641255;  // std dev = 2.822, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.22366034559763506;  // std dev = 2.655, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5621241829437491;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6341199130041433;  // std dev = 0.973, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.13826695223767815;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.15951290464944068;  // std dev = 0.024, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2390417999142709;  // std dev = 2.490, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0.2717449929121969;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4367907136979809;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.42128674864291205;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12173833116174129;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.13769796531849057;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16989711431632523;  // std dev = 3.672, 89.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31652680725747717;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3205944973118032;  // std dev = 0.000287, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.06462471255925978;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1398386021584857;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.32440008223242445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14289405702069274;  // std dev = 2.457, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.31652680725747717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1590942636883654;  // std dev = 2.477, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0.18493578455208629;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2523144631640306;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2900677756507172;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.10472592069043948;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.08298973060400999;  // std dev = 1.166, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18411431309565315;  // std dev = 0.807, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.592526105359842;  // std dev = 0.964, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.3221697552680678;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14522534603320128;  // std dev = 1.742, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | | else return -0.02334900488518917;  // std dev = 1.042, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22040376057549263;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.09106352339511356;  // std dev = 0.610, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13683675217276575;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3602561465337106;  // std dev = 0.973, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.18959509943246608;  // std dev = 0.112, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.18578316065046166;  // std dev = 1.186, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.035954414897549705;  // std dev = 1.277, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.054189985459303334;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.14728561685161942;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17788800045595046;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18838410479430245;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17009691685069292;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2984841078551432;  // std dev = 0.956, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.10311064970569339;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1642849492824813;  // std dev = 0.098, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2149105116402199;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.005973333124756914;  // std dev = 1.113, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08858453572010912;  // std dev = 1.707, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.14970552545368798;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16117462322205944;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.25324775003187;  // std dev = 0.138, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12996535532795467;  // std dev = 0.114, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.09150885609218479;  // std dev = 0.631, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.0029222833158432477;  // std dev = 1.227, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.14940003426752302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.056395985924645;  // std dev = 1.967, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0.043116134341236595;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13163055780419974;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1377556172728285;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14266506322330572;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), enzyme(G, H) )
%   | | then return -0.08618088971950107;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.024863438535910415;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), location(J, L) )
%   | | | then return 0.078545435227101;  // std dev = 1.033, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.01528573609188104;  // std dev = 0.754, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.07619475309595398;  // std dev = 1.456, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.007569640977799484;  // std dev = 1.750, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */


Results
   AUC ROC   = 0.946526
   AUC PR    = 0.926283
   CLL	      = -0.329651
   Precision = 0.883721 at threshold = 0.5
   Recall    = 0.960289
   F1        = 0.920415


Total learning time: 3.444 seconds
Total inference time: 1.599 seconds
AUC ROC: 0.946526


Results scoring model
   AUC ROC   = 0.99438
   AUC PR    = 0.993847
   CLL	      = -0.26895
   Precision = 0.963636 at threshold = 0.5
   Recall    = 0.963636
   F1        = 0.963636


Total scoring time: 0.801 seconds
Refined model CLL: -0.26895


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.945985
   AUC PR    = 0.922965
   CLL	      = -0.338268
   Precision = 0.886121 at threshold = 0.5
   Recall    = 0.898917
   F1        = 0.892473


Total learning time: 6.7010000000000005 seconds
Total inference time: 1.538 seconds
AUC ROC: 0.945985
Total revision time: 6.7010000000000005
Best scored revision CLL: -0.264959


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:42:17
{'AUC ROC': 0.945985, 'AUC PR': 0.922965, 'CLL': -0.338268, 'Precision': [0.886121, 0.5], 'Recall': 0.898917, 'F1': 0.892473, 'Learning time': 6.7010000000000005, 'Inference time': 1.538, 'parameter_0.6': {'AUC ROC': 0.945985, 'AUC PR': 0.922965, 'CLL': -0.338268, 'Precision': [0.886121, 0.5], 'Recall': 0.898917, 'F1': 0.892473, 'Learning time': 1.63, 'Inference time': 1.538}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.834339411289988;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230586405495557;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.19139963049886322;  // std dev = 1.636, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2617630223444004;  // std dev = 3.875, 83.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=38 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.18701313901080718;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2838374893261067;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.560354758516939;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.648192551517373;  // std dev = 0.990, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.15539982151752463;  // std dev = 0.026, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20913784306707814;  // std dev = 2.667, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2662802721829679;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4316635912274182;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4202960229881148;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11617363764249661;  // std dev = 1.268, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.15649648048501144;  // std dev = 3.012, 83.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=38 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1597339743429423;  // std dev = 2.643, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.21527536375606118;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.317637038514636;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32062529463328754;  // std dev = 0.000561, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09675035468386922;  // std dev = 1.239, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.39912720065912305;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1282389713212346;  // std dev = 2.921, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31763703851463587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13728673150549747;  // std dev = 2.655, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16948787397354834;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25307301090127765;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.29065289798785193;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.0507657330091289;  // std dev = 0.573, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3775597827109024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06070472282802635;  // std dev = 1.655, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.606369792764116;  // std dev = 0.982, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.3140009209804289;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15997735261987947;  // std dev = 1.491, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.12784195113688887;  // std dev = 2.036, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21538361234910414;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2250752598215712;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06856232127560045;  // std dev = 1.186, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3733425216597266;  // std dev = 1.031, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.1910344538286556;  // std dev = 0.041, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4175734743664239;  // std dev = 0.743, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.23049160165491792;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0917802940444439;  // std dev = 1.685, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18124801363683993;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19402825804411272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1871191576787914;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30716967984144833;  // std dev = 1.071, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | else return -0.16455582496991106;  // std dev = 0.059, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2066129962940545;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04940456579475828;  // std dev = 1.992, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.07034806745128891;  // std dev = 0.551, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15033269648053627;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16195166803028466;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.03911877863677859;  // std dev = 2.219, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.16331651528198365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04380703934834065;  // std dev = 1.990, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0539042791936602;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13179019415184076;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13841503548598277;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14582564436743217;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.033037258580419115;  // std dev = 2.207, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29513648000668663;  // std dev = 0.720, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.20704711382858168;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04796363117929267;  // std dev = 1.577, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.04122677418946205;  // std dev = 0.548, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.939821
   AUC PR    = 0.911949
   CLL	      = -0.327382
   Precision = 0.868339 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.92953


Total learning time: 1.795 seconds
Total inference time: 1.468 seconds
AUC ROC: 0.939821


Results scoring model
   AUC ROC   = 0.9924
   AUC PR    = 0.989683
   CLL	      = -0.266547
   Precision = 0.973333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.986486


Total scoring time: 0.739 seconds
Parameter learned model CLL: -0.266547


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.0, 0, 6], 'false,true,true,false': [0.988, 1, 41], 'false,true,false': [5.58e-08, 54, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [2.058, 9, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'phenotype(A, J)'}, {'true': [5.96e-08, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.004, 0, 4], 'false,false,true,true': [1.636, 10, 6], 'false,false,true,false': [3.875, 45, 38], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [2.058, 9, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.99, 1, 44], 'false,true,false': [0.026, 54, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.667, 17, 13], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.078, 0, 6], 'true,false': [0.003, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.11e-08, 0, 6], 'false,false,true,true': [1.268, 10, 6], 'false,false,true,false': [3.012, 45, 38], 'false,false,false,true': [2.643, 17, 12], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.000561, 0, 7], 'false,true,true': [1.239, 10, 6], 'false,true,false,true': [0.107, 0, 2], 'false,true,false,false': [2.921, 45, 39], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.655, 17, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.095, 0, 5], 'false,true,true': [0.573, 5, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.655, 19, 12], 'false,false,true,true': [0.982, 1, 13], 'false,false,true,false': [0.106, 17, 0], 'false,false,false,true': [1.491, 11, 14], 'false,false,false,false': [2.036, 20, 22]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.032, 0, 5], 'true,false': [0.024, 0, 6], 'false,true,true': [1.186, 10, 6], 'false,true,false,true': [1.031, 1, 41], 'false,true,false,false': [0.041, 44, 0], 'false,false,true,true': [0.743, 1, 6], 'false,false,true,false': [7.45e-09, 8, 0], 'false,false,false,true': [1.685, 9, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.028, 0, 5], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.02, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.071, 1, 47], 'false,true,false': [0.059, 54, 0], 'false,false,true': [0.018, 0, 2], 'false,false,false,true': [1.992, 17, 12], 'false,false,false,false': [0.551, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.027, 0, 8], 'false,true': [2.219, 55, 47], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.99, 17, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.549, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.001, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 3], 'true,false': [0.012, 0, 4], 'false,true': [2.207, 55, 47], 'false,false,true,true': [0.72, 1, 6], 'false,false,true,false': [7.45e-09, 8, 0], 'false,false,false,true': [1.577, 8, 8], 'false,false,false,false': [0.548, 1, 1]}]]
[{'': [-1.6148698540002277e-16, 0.2483401920438958], 'false': [0.24846212995001948, 0.24793388429752017], 'false,true': [0.020399305555556396, 5.756711979537848e-17], 'false,false': [0.0, 0.24349635796045738], 'false,false,false': [0.2295918367346937, 0.24913494809688583], 'false,true,true': [-1.4802973661668753e-16, 0.023242630385488926], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, -2.220446049250313e-16]}, {'': [3.2297397080004555e-16, 0.1952971227262971], 'false': [5.484314555737057e-06, 0.19447288529820747], 'false,false': [0.17936792512086752, 0.24263081585394708], 'false,false,false': [0.22959183673469385, 0.2491349480968855], 'false,false,true': [0.16731715135902567, 0.18089080311278774], 'false,true': [0.0, 4.284620746641821e-06], 'false,true,false': [nan, 4.284620746641821e-06], 'false,true,true': [nan, 0.0]}, {'': [-2.0185873175002846e-16, 0.18459789439381016], 'false': [0.16852836450717384, 0.23426093043367988], 'false,false': [0.23311741040582953, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.0, 0.2370210798145911], 'false,true': [0.020890586550006123, 1.2477609825203131e-05], 'false,true,true': [0.0, 0.021801074952557384], 'true': [-7.401486830834377e-17, -4.4408920985006264e-17]}, {'': [0.0006327135481217772, 0.13674360193602603], 'false': [7.401486830834377e-17, 0.1399717835854457], 'false,false': [0.10811567657843635, 0.24157033080349163], 'false,false,false': [0.24078995198860398, 0.24999999999999997], 'false,false,true': [0.10054970293477335, 0.10931140068867755], 'true': [0.0010011135002790568, 2.5806552805263117e-06], 'false,true': [nan, 7.401486830834377e-17]}, {'': [2.094974286755273e-06, 0.1320739417361884], 'false': [0.10040766978798682, 0.22975584779244917], 'false,false': [0.22840758658974564, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [0.0, 0.2349719394791364], 'false,true': [0.09589011758313076, 0.10102415107025563], 'false,true,false': [0.005729921235775065, 0.10158653961153045], 'true': [-1.3877787807814457e-17, 4.494803940158221e-08]}, {'': [0.001250741293817781, 0.12713978260797426], 'false': [0.08522762320290485, 0.14176426522775876], 'false,false': [0.24127199281277875, 0.09526220518167056], 'false,false,true': [0.06891209131435648, 0.0006621665875003751], 'false,false,false': [0.08891744959798827, 0.09865351554868228], 'false,true': [0.05473250896043278, 0.08861947735206224], 'false,true,false': [0.0, 0.08834075988945254], 'true': [-1.1102230246251566e-17, 0.0017953586309158332]}, {'': [0.00016948764654395825, 0.10578414038557536], 'false': [0.09136490527915189, 0.1503523314690358], 'false,false': [0.14128736085402463, 0.15772752538034668], 'false,false,false': [0.15772752538034668, nan], 'false,false,true': [0.07876484759692264, 6.938893903907228e-18], 'false,true': [0.08795693533115327, 0.09195864268261998], 'false,true,false': [0.025291466725460062, 3.854409503235466e-05], 'true': [0.00020220110262696988, 9.953187371841699e-05]}, {'': [0.0001250990362840033, 0.08240938949058434], 'false': [0.06672405356745868, 0.13088554375243008], 'false,false': [0.000170791549933616, 0.13784654276730002], 'false,false,false': [0.13687298477366996, 0.1515528021398556], 'false,true': [0.02390914872851102, 6.412233903103143e-05], 'false,true,true': [nan, 0.02390914872851102], 'true': [0.00015722503049230284, 7.591020886031179e-05], 'true,false': [0.0, 8.31363059893564e-05]}, {'': [9.491738469420318e-05, 0.06818842840455147], 'false': [0.04829397592280948, 0.12962023249923743], 'false,false': [0.12825163348244298, 0.1507969149435558], 'false,false,false': [nan, 0.1507969149435558], 'false,false,true': [0.0, 0.1320659616467631], 'true': [0.0, 9.369308580711028e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [7.054818931297547e-05, 0.06757826043039238], 'false': [0.0477517544722877, 0.1288403203651786], 'false,false': [0.09732626787717298, 0.1549218477777402], 'false,false,false': [0.15548812370721238, 0.15035129790453944], 'false,false,true': [0.07405582861899808, 6.938893903907228e-18], 'true': [4.514571539746786e-05, 3.5230759073408974e-05], 'true,true': [3.299810111476176e-07, 7.982087208252321e-05], 'true,true,false': [nan, 7.982087208252321e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(A, I), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,true;interaction(F, A), interaction(F, E).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(A, H).;true;true
6;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true
9;false;interaction(G, A).;true;true
9;false,false;phenotype(A, H).;true;true
9;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.834339411289988;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7230586405495557;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), interaction(I, J) )
%   | | | then return 0.10607398995767295;  // std dev = 1.773, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.27044388663379276;  // std dev = 1.639, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.3315336714453393;  // std dev = 2.157, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.2570122782758585;  // std dev = 3.761, 67.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.560354758516939;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.645850421057307;  // std dev = 0.992, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.15097763875302514;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.15526642734549917;  // std dev = 0.053, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20618475386303586;  // std dev = 2.668, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.27050317422691394;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4317866327772551;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4202960229881148;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return 0.15425761150571024;  // std dev = 1.840, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.008241890762171078;  // std dev = 1.184, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.11056455156820406;  // std dev = 1.372, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.18418567912947817;  // std dev = 3.328, 79.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31761037062609776;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32062529463328754;  // std dev = 0.000212, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3234309574513188;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.07142734774191627;  // std dev = 1.424, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.13585366306068195;  // std dev = 2.805, 77.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.31761037062609776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1370790444316765;  // std dev = 2.644, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.18058591260485926;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2530547941047465;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2780308454879675;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.039023339099436;  // std dev = 0.581, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4809155017840788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08428069450125181;  // std dev = 1.669, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6068595012343578;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.31370335533801835;  // std dev = 0.102, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.14848339184917236;  // std dev = 1.557, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.10857467438070267;  // std dev = 1.953, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2211204920917351;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13987687171646904;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10946773340248607;  // std dev = 1.060, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3743294067940581;  // std dev = 1.054, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.18588263951163214;  // std dev = 0.153, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4008036802498082;  // std dev = 0.725, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.23737582740329147;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.06417614316341883;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12081777667846481;  // std dev = 1.365, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17962594367972357;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19024130226632885;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.34068888422672766;  // std dev = 0.207, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.27466249510387164;  // std dev = 1.021, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.15532704880088485;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.16850728963867093;  // std dev = 0.156, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21158414749488763;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.06788586836885208;  // std dev = 1.757, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.008859762085264265;  // std dev = 1.046, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.14979790207583132;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.16904348991525384;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1585607162815726;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.04227317616108854;  // std dev = 0.353, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.04269038906905684;  // std dev = 2.108, 90.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=43 */
%   | | else return 0.09645285638831443;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.1664219550093935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04357296700575023;  // std dev = 1.971, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.05684086314733805;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1342466665394811;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1469808155975063;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24065602665013092;  // std dev = 0.407, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.15097310293458002;  // std dev = 0.129, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.02417017994851092;  // std dev = 0.217, 73.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2821089931201044;  // std dev = 0.695, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.2119116548346987;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.027769598366120543;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07807704411440443;  // std dev = 1.462, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */


Results
   AUC ROC   = 0.941248
   AUC PR    = 0.916063
   CLL	      = -0.323648
   Precision = 0.867508 at threshold = 0.5
   Recall    = 0.99278
   F1        = 0.925926


Total learning time: 3.621 seconds
Total inference time: 1.893 seconds
AUC ROC: 0.941248


Results scoring model
   AUC ROC   = 0.994558
   AUC PR    = 0.993203
   CLL	      = -0.255723
   Precision = 0.986111 at threshold = 0.5
   Recall    = 0.972603
   F1        = 0.97931


Total scoring time: 0.878 seconds
Refined model CLL: -0.255723


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941248
   AUC PR    = 0.916063
   CLL	      = -0.323648
   Precision = 0.867508 at threshold = 0.5
   Recall    = 0.99278
   F1        = 0.925926


Total learning time: 7.0329999999999995 seconds
Total inference time: 1.893 seconds
AUC ROC: 0.941248
Total revision time: 7.0329999999999995
Best scored revision CLL: -0.255723


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:42:28
{'AUC ROC': 0.941248, 'AUC PR': 0.916063, 'CLL': -0.323648, 'Precision': [0.867508, 0.5], 'Recall': 0.99278, 'F1': 0.925926, 'Learning time': 7.0329999999999995, 'Inference time': 1.893, 'parameter_0.8': {'AUC ROC': 0.939821, 'AUC PR': 0.911949, 'CLL': -0.327382, 'Precision': [0.868339, 0.5], 'Recall': 1.0, 'F1': 0.92953, 'Learning time': 1.795, 'Inference time': 1.468}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.837740771834206;  // std dev = 0.990, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.35814893509951234;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7215236621806287;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7225487871654658;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.1817982890131886;  // std dev = 1.906, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.2466137092770206;  // std dev = 4.230, 100.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=44 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.23796730798362134;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3087411357856347;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.559705445570538;  // std dev = 0.000219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.654246321241159;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return -0.15340332912620006;  // std dev = 0.028, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5548601018776309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24594477458701097;  // std dev = 3.168, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.28367578036486973;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4253999833520167;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41988611999676717;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10959603052298693;  // std dev = 1.478, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.14708732419614276;  // std dev = 3.282, 100.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=44 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19100246671004895;  // std dev = 3.152, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.23175427243424096;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3189961844167539;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.320273183152138;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09150341996029582;  // std dev = 1.445, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.42673742387833197;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11943651638671439;  // std dev = 3.174, 101.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=45 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31866088174511775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15646843877451216;  // std dev = 3.160, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.18390733898256253;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.258649070527588;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2879268838274979;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.0629935739085238;  // std dev = 0.582, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3746250922469452;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06106463853840131;  // std dev = 1.804, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5930027628213258;  // std dev = 0.951, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.3593781895596265;  // std dev = 0.068, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.12729861658049157;  // std dev = 1.792, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.12446139567668539;  // std dev = 2.152, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.214106125643272;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22250900868539386;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06488140685024364;  // std dev = 1.384, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38063661668980797;  // std dev = 1.054, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.18530216040566277;  // std dev = 0.035, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4424542252061809;  // std dev = 0.330, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.29247617999626885;  // std dev = 0.198, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09871743896217741;  // std dev = 2.125, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17865112159964974;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.1945701761730435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18989184676661874;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3148137658222888;  // std dev = 1.103, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.16052315035253456;  // std dev = 0.061, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1760164464860433;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06268867792766337;  // std dev = 2.356, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.08272733144651516;  // std dev = 0.434, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15074225492040716;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14950723084926998;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16201489072896344;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.03639942607858327;  // std dev = 2.432, 126.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=56 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12393171542328951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05178395292232272;  // std dev = 2.353, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.06561712036054682;  // std dev = 0.431, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13192650939017841;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13579609660564693;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14815646979019403;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.030817037314026456;  // std dev = 2.418, 126.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=56 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3129536590249939;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.25885374619548485;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0494086014201294;  // std dev = 2.105, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.944597
   AUC PR    = 0.919222
   CLL	      = -0.32388
   Precision = 0.868339 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.92953


Total learning time: 1.774 seconds
Total inference time: 1.65 seconds
AUC ROC: 0.944597


Results scoring model
   AUC ROC   = 0.99427
   AUC PR    = 0.991887
   CLL	      = -0.267881
   Precision = 0.989247 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.994595


Total scoring time: 0.86 seconds
Parameter learned model CLL: -0.267881


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true,true': [0.0, 0, 8], 'false,true,true,false': [0.99, 1, 48], 'false,true,false': [6.83e-08, 69, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.708, 7, 5], 'false,false,false,false': [2.739, 15, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'complex(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'complex(A, J)'}, {'true': [4.21e-08, 0, 14], 'false,true,true,true': [0.003, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.004, 0, 4], 'false,false,true,true': [1.906, 14, 8], 'false,false,true,false': [4.23, 56, 44], 'false,false,false,true': [1.708, 7, 5], 'false,false,false,false': [2.739, 15, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.000219, 0, 4], 'false,true,true,false': [0.992, 1, 52], 'false,true,false': [0.028, 69, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.168, 21, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.072, 0, 10], 'true,false': [0.003, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.11e-08, 0, 6], 'false,false,true,true': [1.478, 14, 8], 'false,false,true,false': [3.282, 56, 44], 'false,false,false,true': [3.152, 21, 19], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.002, 0, 9], 'false,true,true': [1.445, 14, 8], 'false,true,false,true': [0.127, 0, 3], 'false,true,false,false': [3.174, 56, 45], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.16, 21, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.04, 0, 9], 'true,false': [0.089, 0, 5], 'false,true,true': [0.582, 6, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.804, 23, 14], 'false,false,true,true': [0.951, 1, 20], 'false,false,true,false': [0.068, 21, 0], 'false,false,false,true': [1.792, 18, 18], 'false,false,false,false': [2.152, 23, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.033, 0, 6], 'true,false': [0.035, 0, 8], 'false,true,true': [1.384, 14, 8], 'false,true,false,true': [1.054, 1, 48], 'false,true,false,false': [0.035, 55, 0], 'false,false,true,true': [0.33, 0, 7], 'false,false,true,false': [0.198, 7, 0], 'false,false,false,true': [2.125, 15, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.03, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.022, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.103, 1, 56], 'false,true,false': [0.061, 69, 0], 'false,false,true': [0.045, 0, 2], 'false,false,false,true': [2.356, 21, 19], 'false,false,false,false': [0.434, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.03, 0, 9], 'false,true': [2.432, 70, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.353, 21, 20], 'false,false,false,true': [0.431, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.001, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 5], 'true,false': [0.009, 0, 4], 'false,true': [2.418, 70, 56], 'false,false,true,true': [0.291, 0, 7], 'false,false,true,false': [0.187, 7, 0], 'false,false,false,true': [2.105, 15, 15], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.24830449826989645], 'false': [0.24691358024691357, 0.2500000000000011], 'false,false': [0.0, 0.24943310657596351], 'false,false,false': [0.24305555555555536, 0.24999999999999953], 'false,true': [0.017236072637734554, 6.75787928032704e-17], 'false,true,true': [-2.220446049250313e-16, 0.019991670137443407], 'false,false,true': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [1.2688263138573217e-16, 0.19678929733763653], 'false': [3.736466611596138e-06, 0.19607387627829895], 'false,false': [0.1771046862799181, 0.24903810458765874], 'false,false,false': [0.24305555555555558, 0.2500000000000001], 'false,false,true': [0.1651968789175615, 0.17896683954318138], 'false,true': [4.203524938128922e-06, 3.1526437036522026e-06], 'false,true,true': [4.203524938128922e-06, nan], 'false,true,false': [nan, 3.1526437036522026e-06]}, {'': [-2.5376526277146434e-16, 0.1867471621630635], 'false': [0.16703648435955254, 0.2416420856716144], 'false,false': [0.24120214911388643, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.0, 0.24481301694544585], 'false,true': [0.017858776192712474, 1.1153950445450661e-05], 'false,true,true': [1.1965586410589424e-08, 0.018579380986887037], 'true': [-1.4802973661668753e-16, -4.4408920985006264e-17]}, {'': [0.00037384418999929025, 0.14066153345268428], 'false': [7.401486830834377e-17, 0.14335319147830988], 'false,false': [0.1064289935255118, 0.24854970957195538], 'false,false,false': [0.24839811363770634, 0.24999999999999997], 'false,false,true': [0.09928458696012568, 0.10774729464015637], 'true': [0.000513944859891513, 1.8763087682172053e-06], 'false,true': [nan, 7.401486830834377e-17]}, {'': [6.90264904583999e-07, 0.1355456700065378], 'false': [0.09901849881676729, 0.23898827065487172], 'false,false': [0.238438635172696, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.0, 0.24362786905563769], 'false,true': [0.0949121942804946, 0.09965071709669991], 'false,true,false': [0.005377600458815486, 0.09972685537966192], 'true': [0.0, 4.91343346453732e-07]}, {'': [0.0008823920345429734, 0.13132301485850043], 'false': [0.0847124984412566, 0.14740387043534917], 'false,false': [0.24840584286611186, 0.09564435548986677], 'false,false,true': [0.043077056654475185, 0.00021988984872392403], 'false,false,false': [0.08919197983910235, 0.10069050671337404], 'false,true': [0.048454010342839325, 0.08823193055548297], 'false,true,false': [0.0, 0.08795916470774524], 'true': [0.00017952159308179085, 0.0015965078888430574]}, {'': [0.00017987581565905218, 0.10526764179460465], 'false': [0.08992931596382835, 0.14907149443384157], 'false,false': [0.14560109492397072, 0.15051186583239864], 'false,false,false': [0.15051186583239864, nan], 'false,false,true': [0.015547582465438112, 0.005593257136984791], 'false,true': [0.08704276062957975, 0.09049262410271802], 'false,true,false': [0.022658635952694052, 2.2230514390709676e-05], 'true': [0.00017660259973011536, 0.00015206996614026969]}, {'': [0.00013467759053937108, 0.08262810330473525], 'false': [0.06565179346959547, 0.13109177541853945], 'false,false': [0.001003361165322885, 0.13671247026350994], 'false,false,false': [0.13881008524063937, 0.09437774440201774], 'false,true': [0.021327942346233288, 5.3851276530066244e-05], 'false,true,true': [nan, 0.021327942346233288], 'true': [0.00011141089355368866, 8.313348764300381e-05], 'true,false': [0.0, 9.611239083243684e-05]}, {'': [9.79720094283844e-05, 0.06853028164528464], 'false': [0.046939071752797865, 0.13012868302363742], 'false,false': [0.13189382696946217, 0.09292055003755983], 'false,false,true': [0.0, 0.1349868138729045], 'false,false,false': [0.09292055003755983, nan], 'true': [3.660682695111328e-07, 0.00010274969485146107], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [7.200818246430199e-05, 0.06795398472490205], 'false': [0.0464055877675238, 0.12956312127980998], 'false,false': [0.09029047758145954, 0.14773129304910074], 'false,false,false': [0.14773129304910074, nan], 'false,false,true': [0.012097828498337864, 0.0050012723320928066], 'true': [3.3743514098941164e-05, 2.170428650688852e-05], 'true,true': [3.99312292698184e-07, 5.960086329612202e-05], 'true,true,false': [nan, 5.960086329612202e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(A, I), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,true;interaction(F, A), interaction(F, E).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), complex(C, D).;true;true
8;true,true;interaction(A, E), interaction(C, E).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(D, A), interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.837740771834206;  // std dev = 0.990, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7215236621806287;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7225487871654658;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7227538121624338;  // std dev = 0.010, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( location(A, J) )
%   | | | then return 0.28227323083257233;  // std dev = 3.755, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | | else return 0.30874113578563495;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.559705445570538;  // std dev = 0.000219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5655084685020194;  // std dev = 0.965, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.11616791584038055;  // std dev = 0.079, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.12567639940585418;  // std dev = 0.121, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5548601018776309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24786454966148166;  // std dev = 3.170, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.2612559966298008;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.41741972763894025;  // std dev = 0.000325, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41865132830008683;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4426290285790097;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41988611999676717;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(J, K), phenotype(J, L) )
%   | | | then return 0.12981617091569947;  // std dev = 2.047, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   | | | else return 0.08233167854939626;  // std dev = 1.447, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.1532765705871177;  // std dev = 1.491, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.19344134396445192;  // std dev = 3.369, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32062499026211855;  // std dev = 0.000294, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.31944405669874715;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), interaction(G, H) )
%   | | | then return 0.09517711460426742;  // std dev = 1.639, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.15144715728161856;  // std dev = 0.826, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.056631537342513756;  // std dev = 0.868, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.12563628802869897;  // std dev = 2.221, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.3203960257104056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1577167436890161;  // std dev = 3.162, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.16926895077931126;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2737557718648659;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, A), location(F, G) )
%   | | | then return -0.12234702793233293;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.039897069674269876;  // std dev = 0.393, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.36761223496617784;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06236199532628081;  // std dev = 1.524, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5935305304851413;  // std dev = 0.958, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.3588504218958112;  // std dev = 0.048, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2554132728060131;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10296965959313696;  // std dev = 2.379, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20990885169126855;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), location(F, G) )
%   | | | then return 0.046512186339269686;  // std dev = 0.982, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.03398310847168939;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.337021890991128;  // std dev = 0.986, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14624146419410522;  // std dev = 0.201, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4104041593854157;  // std dev = 0.982, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.27949779462338226;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.1033389472105715;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1033389472105715;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17759833835978722;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17672407323788886;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.303776674398711;  // std dev = 0.196, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.2541064007757476;  // std dev = 0.957, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.11969627413850029;  // std dev = 0.068, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.17458769138089067;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.17960104663342175;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.052113441070551846;  // std dev = 1.799, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.07968743385325357;  // std dev = 1.338, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.14904549113347643;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then return 0.1588984074754586;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15181895041460378;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.23116788993650997;  // std dev = 0.182, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.11011997672948963;  // std dev = 0.092, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0.04033706542200178;  // std dev = 0.207, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.12607589921145568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.049493842746802824;  // std dev = 2.195, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.06354058965245382;  // std dev = 0.437, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13408873209674516;  // std dev = 0.007, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.20146459926540247;  // std dev = 0.310, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.3748699847647525;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.09980548299151466;  // std dev = 0.085, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.29477763304949894;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return -0.027009579504027485;  // std dev = 0.432, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0461648682299069;  // std dev = 0.378, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.07220756878709486;  // std dev = 0.562, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04485802668054886;  // std dev = 2.333, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */


Results
   AUC ROC   = 0.956366
   AUC PR    = 0.940179
   CLL	      = -0.280803
   Precision = 0.868339 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.92953


Total learning time: 3.859 seconds
Total inference time: 1.595 seconds
AUC ROC: 0.956366


Results scoring model
   AUC ROC   = 0.997283
   AUC PR    = 0.996911
   CLL	      = -0.218061
   Precision = 0.978723 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.989247


Total scoring time: 0.898 seconds
Refined model CLL: -0.218061


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956366
   AUC PR    = 0.940179
   CLL	      = -0.280803
   Precision = 0.868339 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.92953


Total learning time: 7.391 seconds
Total inference time: 1.595 seconds
AUC ROC: 0.956366
Total revision time: 7.391
Best scored revision CLL: -0.218061


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:42:40
{'AUC ROC': 0.956366, 'AUC PR': 0.940179, 'CLL': -0.280803, 'Precision': [0.868339, 0.5], 'Recall': 1.0, 'F1': 0.92953, 'Learning time': 7.391, 'Inference time': 1.595, 'parameter_1.0': {'AUC ROC': 0.944597, 'AUC PR': 0.919222, 'CLL': -0.32388, 'Precision': [0.868339, 0.5], 'Recall': 1.0, 'F1': 0.92953, 'Learning time': 1.774, 'Inference time': 1.65}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 86

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 283

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.19581366185416513;  // std dev = 1.255, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2500744951335403;  // std dev = 1.781, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6043342685695517;  // std dev = 0.918, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.15354387474247816;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30876090948223145;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.19123909051776852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10826837706873238;  // std dev = 1.098, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.15614114346848407;  // std dev = 1.388, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.25643228010195473;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.16339000458164005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08873813255565866;  // std dev = 1.086, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4828320409606518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11898322937490037;  // std dev = 1.313, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20615570025208352;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.1422644723946687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29536134971551586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.30280415226383633;  // std dev = 0.210, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.457015142750701;  // std dev = 0.129, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14051414312557647;  // std dev = 0.884, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6616442162291505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.23206378153230278;  // std dev = 0.150, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07055834139692488;  // std dev = 1.113, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.14954372177658554;  // std dev = 0.429, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.24199506610360177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06228229343863637;  // std dev = 0.981, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38531629012872354;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18674703607601661;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5022464351186046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.19544409426164883;  // std dev = 0.132, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.200404584587617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2894199084677088;  // std dev = 0.787, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.16099493097903333;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0645183936009888;  // std dev = 0.445, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0857725512682614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15856437440726412;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.03728010149688386;  // std dev = 1.238, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05083925735342443;  // std dev = 0.443, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.07928125413652519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13355767788576856;  // std dev = 0.000550, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1489656712614772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then return 0.031342386211548216;  // std dev = 1.233, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3523744501504896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17301208530862217;  // std dev = 0.140, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.944449
   AUC PR    = 0.918224
   CLL	      = -0.342999
   Precision = 0.893382 at threshold = 0.5
   Recall    = 0.858657
   F1        = 0.875676


Total learning time: 1.411 seconds
Total inference time: 1.521 seconds
AUC ROC: 0.944449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.235637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.684 seconds
Parameter learned model CLL: -0.235637


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [0.0, 0, 9], 'false,true,false': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.255, 5, 3], 'false,false,true,false': [1.781, 10, 8], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.918, 1, 11], 'false,true,false': [0.012, 14, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.098, 5, 3], 'false,false,true,false': [1.388, 10, 8], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [1.086, 5, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.313, 10, 8], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [0.21, 2, 0], 'false,true,false,true': [0.129, 0, 2], 'false,true,false,false': [0.884, 4, 4], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.15, 2, 0], 'false,false,false,true': [1.113, 8, 5], 'false,false,false,false': [0.429, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [0.981, 5, 3], 'false,true,false,true': [0.215, 0, 9], 'false,true,false,false': [0.017, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.132, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.787, 1, 12], 'false,true,false': [0.048, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.445, 1, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.014, 0, 3], 'false,true': [1.238, 15, 12], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.443, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [0.00055, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [1.233, 15, 12], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.14, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24555555555555517], 'false': [0.2469135802469131, 0.22222222222222224], 'false,true': [0.07100591715976314, -1.1895246692412391e-17], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true,true': [0.18750000000000006, -2.9605947323337506e-16], 'true': [0.0, 1.4802973661668753e-16]}, {'': [0.0, 0.18928098622298545], 'false': [0.0, 0.18770598620339496], 'false,false': [0.18326117914947265, 0.2222222222222222], 'false,false,false': [0.2222222222222222, nan], 'false,false,true': [0.19695689556468893, 0.1762682746827594], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.1785664778184014], 'false': [0.1732608548975795, 0.22222222222222218], 'false,false': [0.24999999999999994, 0.0], 'false,false,true': [nan, 0.24999999999999994], 'false,true': [0.06496553817774722, 9.984726100785237e-06], 'false,true,true': [0.0, 0.07019488313716445], 'true': [3.700743415417188e-17, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.12791901018489982], 'false': [0.0, 0.1297412515721469], 'false,false': [0.12089713705020667, 0.20583350015932297], 'false,false,false': [0.25, 0.0], 'false,false,true': [0.15059612292159646, 0.10699241800087497], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0, 0.12084401203427439], 'false': [0.1126430544839837, 0.1936436926015984], 'false,false': [0.25, 0.0], 'false,false,true': [nan, 0.25], 'false,true': [0.14741170674434761, 0.09728069768348331], 'false,true,false': [0.0, 0.09571749890431266], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0003028433124740021, 0.11441763485978905], 'false': [0.11927211957643735, 0.11051447587573521], 'false,true': [0.022104216256397274, 0.09592865027466788], 'false,false': [0.185023989884983, 0.09557380838171597], 'false,false,true': [0.0, 0.011297989739879215], 'false,true,false': [0.008373318275294833, 0.09778290672177053], 'false,false,false': [0.09525836970535535, 0.09221729483950297], 'true': [0.0, 0.0]}, {'': [0.00019485876851144113, 0.09695451916759841], 'false': [0.09490188162309897, 0.11394416358884459], 'false,false': [0.11394416358884459, nan], 'false,false,true': [0.0, 0.00865888712096749], 'false,true': [0.12037280130350825, 0.08403455311815244], 'false,true,false': [0.005135690154625487, 2.731701185942348e-05], 'true': [0.0, 0.0]}, {'': [0.00010186254604687556, 0.07356849519579746], 'false': [0.07368156097987681, 0.07100460632137197], 'false,true': [0.047662557083112844, 0.00016221797904686364], 'false,false': [nan, 0.07100460632137197], 'false,false,false': [0.09897778677882728, 0.0], 'false,true,true': [nan, 0.047662557083112844], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [5.7169817139608725e-05, 0.05811906868598996], 'false': [0.05680252314029968, 0.06916797278662908], 'false,false': [0.09810817667647492, 0.0], 'false,false,true': [nan, 0.09810817667647492], 'true': [0.0, 6.775682031360623e-05], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [4.458939272351456e-05, 0.05751884866781285], 'false': [0.0562780132787407, 0.06791764365656605], 'false,false': [0.06791764365656605, nan], 'false,false,true': [0.0, 0.009866128270939564], 'true': [1.0095866488183762e-07, 0.0], 'true,true': [1.0095866488183762e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(A, J), interaction(J, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), phenotype(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(F, A).;true;true
9;false,false;phenotype(H, G), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.04231034170114254;  // std dev = 1.150, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.555249657065662;  // std dev = 1.077, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.4757447549713705;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13922792860841146;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5595814705936776;  // std dev = 0.861, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.16025292719778927;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13013464140587633;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.3040092585793762;  // std dev = 0.640, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.14833176182549068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.17432341221189718;  // std dev = 1.494, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.014033875740677437;  // std dev = 0.541, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2525630244693873;  // std dev = 0.627, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.13055307727478946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.3142953468560995;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.039475268880409024;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.414036473746333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1067202691631546;  // std dev = 1.166, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.20357178716685925;  // std dev = 0.617, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.11643512174748225;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2979199427267837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.40177648365161456;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14999101549762403;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07323899137852151;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5920940618336465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.18818353177412317;  // std dev = 0.118, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.13458293396137402;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13847262088858747;  // std dev = 0.999, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22975646635863256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.19796411562638938;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03968975661061753;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32332378956023905;  // std dev = 0.185, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14296506585957883;  // std dev = 0.130, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(J, K), recursion_proteinclass(J, B) )
%   | | then return 0.17839254977672217;  // std dev = 0.378, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.23581088869134847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1916315711427109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.019726557730213423;  // std dev = 0.468, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3188166095779365;  // std dev = 0.333, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.14775771184825526;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.1117029434956169;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.10292235610485752;  // std dev = 0.423, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.10406458592050244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1563902945609137;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.05179005931461244;  // std dev = 0.501, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.05988566884527745;  // std dev = 0.385, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09679155018664382;  // std dev = 0.782, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.08232424731107216;  // std dev = 0.417, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.09475412708494485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1337252957558556;  // std dev = 0.000345, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1433837825074551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.07551859495838618;  // std dev = 0.795, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.11111369468277044;  // std dev = 0.477, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.0995595962643609;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.1356429520173112;  // std dev = 0.315, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.2268210034971085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.954401
   AUC PR    = 0.938605
   CLL	      = -0.349756
   Precision = 0.908088 at threshold = 0.5
   Recall    = 0.872792
   F1        = 0.89009


Total learning time: 2.432 seconds
Total inference time: 2.624 seconds
AUC ROC: 0.954401


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.79 seconds
Refined model CLL: -0.195563


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954401
   AUC PR    = 0.938605
   CLL	      = -0.349756
   Precision = 0.908088 at threshold = 0.5
   Recall    = 0.872792
   F1        = 0.89009


Total learning time: 5.317 seconds
Total inference time: 2.624 seconds
AUC ROC: 0.954401
Total revision time: 5.317
Best scored revision CLL: -0.195563


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:42:50
{'AUC ROC': 0.954401, 'AUC PR': 0.938605, 'CLL': -0.349756, 'Precision': [0.908088, 0.5], 'Recall': 0.872792, 'F1': 0.89009, 'Learning time': 5.317, 'Inference time': 2.624, 'parameter_0.2': {'AUC ROC': 0.944449, 'AUC PR': 0.918224, 'CLL': -0.342999, 'Precision': [0.893382, 0.5], 'Recall': 0.858657, 'F1': 0.875676, 'Learning time': 1.411, 'Inference time': 1.521}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.17911134977900608;  // std dev = 1.601, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.27354444098741093;  // std dev = 2.531, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6322102170384976;  // std dev = 0.942, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.15503451343195096;  // std dev = 0.029, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10126156606239997;  // std dev = 1.347, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.16699326680657692;  // std dev = 1.941, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.11914890490746428;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08386731613658552;  // std dev = 1.330, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4673224297896056;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12795710491905068;  // std dev = 1.838, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09841340278401867;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.23491993054931468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2650800694506853;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2628372171764723;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2934971156044037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.23069025888997904;  // std dev = 0.279, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4124966436407795;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08199555072786026;  // std dev = 1.380, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7360075094841662;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2489090962047388;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.06307512066751877;  // std dev = 0.731, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1728395937100748;  // std dev = 1.315, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.20849000040766918;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23566827752582956;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05445851090710667;  // std dev = 1.209, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3749594053992093;  // std dev = 0.279, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1938902695664365;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5857236545891246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1840529607349331;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.044301540908524804;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.18085028934199007;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.18546940013817348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20262669468312278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29847771727739797;  // std dev = 0.852, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.16328640914692213;  // std dev = 0.073, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.031015161607826386;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05059579067281394;  // std dev = 0.597, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15143480406393495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15957902630051513;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.04036487171010939;  // std dev = 1.608, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025053944248492516;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.14209202150341327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13285435445804364;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.13228207488088836;  // std dev = 0.000811, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1466165684788284;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.03406255856663647;  // std dev = 1.600, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42666331521335943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1571113533151562;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.029228605078649036;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10321595559206723;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */


Results
   AUC ROC   = 0.943569
   AUC PR    = 0.914103
   CLL	      = -0.332249
   Precision = 0.880795 at threshold = 0.5
   Recall    = 0.939929
   F1        = 0.909402


Total learning time: 1.582 seconds
Total inference time: 1.543 seconds
AUC ROC: 0.943569


Results scoring model
   AUC ROC   = 0.999135
   AUC PR    = 0.999147
   CLL	      = -0.243009
   Precision = 0.970588 at threshold = 0.5
   Recall    = 0.970588
   F1        = 0.970588


Total scoring time: 0.711 seconds
Parameter learned model CLL: -0.243009


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [2.98e-08, 0, 6], 'false,true,true,true': [0.913, 1, 5], 'false,true,true,false': [0.0, 0, 19], 'false,true,false': [2.36e-08, 27, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'complex(A, F)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'complex(A, J)'}, {'true': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.601, 9, 5], 'false,false,true,false': [2.531, 19, 17], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.942, 1, 22], 'false,true,false': [0.029, 27, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [1.347, 9, 5], 'false,false,true,false': [1.941, 19, 17], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 3], 'false,true,true': [1.33, 9, 5], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.838, 19, 17], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), interaction(A, F)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.034, 0, 5], 'true,false': [0.0, 0, 1], 'false,true,true': [0.279, 4, 0], 'false,true,false,true': [0.141, 0, 3], 'false,true,false,false': [1.38, 12, 9], 'false,false,true,true': [0.027, 0, 3], 'false,false,true,false': [0.066, 6, 0], 'false,false,false,true': [0.731, 4, 3], 'false,false,false,false': [1.315, 8, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.015, 0, 3], 'false,true,true': [1.209, 9, 5], 'false,true,false,true': [0.279, 0, 19], 'false,true,false,false': [0.029, 19, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.035, 2, 0], 'false,false,false,true': [0.903, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, E)', 'true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(A, H), interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.021, 0, 5], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.852, 1, 24], 'false,true,false': [0.073, 27, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.832, 4, 2], 'false,false,false,false': [0.597, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 6], 'false,true': [1.608, 28, 24], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.829, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.549, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.000811, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.01, 0, 3], 'false,true': [1.6, 28, 24], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.045, 2, 0], 'false,false,false,true': [0.682, 3, 1], 'false,false,false,false': [0.544, 1, 1]}]]
[{'': [-2.5376526277146434e-16, 0.2467078742273593], 'false': [0.24852071005917287, 0.2222222222222221], 'false,true': [0.0384000000000006, 2.05596856412066e-17], 'false,false': [nan, 0.2222222222222221], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,true,true': [0.1388888888888887, -2.8047739569477637e-16], 'true': [0.0, 1.4802973661668753e-16]}, {'': [-6.344131569286608e-17, 0.18956848533415635], 'false': [0.0, 0.1882930590159584], 'false,false': [0.1811957158811952, 0.22222222222222238], 'false,false,false': [0.2222222222222222, 0.2222222222222222], 'false,false,true': [0.18319627620900378, 0.1779207897579098], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.1781378078381245], 'false': [0.1696009722830692, 0.22222222222222215], 'false,false': [0.22222222222222224, 0.22222222222222218], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.22222222222222218, nan], 'false,true': [0.03594711201066346, 3.10467714763906e-05], 'false,true,true': [0.0, 0.038600550512110504], 'true': [4.4408920985006264e-17, 0.0]}, {'': [7.401486830834377e-17, 0.12656645901544022], 'false': [-3.700743415417188e-17, 0.129384801907016], 'false,false': [0.11254186032045486, 0.22222222222222218], 'false,false,false': [0.22222222222222218, 0.22222222222222224], 'false,false,true': [0.12967221428454317, 0.10467027218592503], 'true': [4.4408920985006264e-17, 0.0], 'false,true': [nan, -3.700743415417188e-17]}, {'': [-3.172065784643304e-17, 0.12151495050933438], 'false': [0.10394555527960635, 0.22222222222222213], 'false,false': [0.22222222222222218, 0.2222222222222222], 'false,false,false': [0.0, 0.25], 'false,false,true': [nan, 0.22222222222222218], 'false,true': [0.12625809448918165, 0.0946918541612259], 'false,true,false': [0.0, 0.093890995687607], 'true': [0.0, 0.0]}, {'': [0.0003263990873649536, 0.11379949878514525], 'false': [0.09704425575923177, 0.12634038326971792], 'false,false': [0.2161266956920861, 0.09297637304689726], 'false,false,true': [0.00023874213051218915, 0.0007170990856217493], 'false,true': [0.019412135671977124, 0.0920808138783497], 'false,false,false': [0.07638705971202622, 0.09605426560527809], 'false,true,false': [0.006669073028380009, 0.0906286195905518], 'true': [0.00023500734290275992, 0.0]}, {'': [0.00021228928999153122, 0.09585143289728101], 'false': [0.08899573352017444, 0.13483573134101107], 'false,false': [0.132092551769367, 0.13594153182784888], 'false,false,false': [0.13594153182784888, nan], 'false,false,true': [0.0, 0.000620148487463057], 'false,true': [0.10439498338832666, 0.08297192670380704], 'false,true,false': [0.004104034816449258, 4.484223690442114e-05], 'true': [0.0, 7.325096401177474e-05]}, {'': [0.000119263329035347, 0.07462223718237249], 'false': [0.06730448956719783, 0.1165203834541247], 'false,false': [nan, 0.1165203834541247], 'false,false,false': [0.1152777986601471, 0.11874995235235947], 'false,true': [0.029067899719247503, 0.00019618728582667706], 'false,true,true': [nan, 0.029067899719247503], 'true': [8.776543702819773e-05, 7.359318902553508e-05], 'true,false': [0.0, 0.0]}, {'': [8.104558213772475e-05, 0.059461529969137755], 'false': [0.049748072497270014, 0.11549972191511802], 'false,false': [0.11449880547665142, 0.1173276382779165], 'false,false,false': [0.0, 0.1507929541987618], 'false,false,true': [nan, 0.11449880547665142], 'true': [0.0, 8.507769975513169e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [6.33087794567452e-05, 0.0585979109386424], 'false': [0.049211503909722065, 0.11271532723806328], 'false,false': [0.07639224060529005, 0.13070721001373795], 'false,false,false': [0.1161933118620234, 0.14804063188299443], 'false,false,true': [0.0, 0.0009907397027423305], 'true': [1.6434544211282875e-07, 3.008552573754523e-05], 'true,true': [1.6434544211282875e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(E, G), interaction(G, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(F, E), interaction(F, A).;true;true
4;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
4;false,false,false;complex(A, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A), interaction(A, F).;true;true
5;false,false;interaction(A, H).;true;true
5;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(C, D).;true;true
6;false;interaction(E, A).;true;true
6;false,true;interaction(F, E), interaction(F, A).;true;true
6;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;false,false;complex(A, H).;true;true
6;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(D, E).;true;true
7;true,false;interaction(C, F), interaction(F, A).;true;true
7;false;interaction(G, A).;true;true
7;false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, C), complex(C, D).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
8;false,false,false;complex(A, I).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(F, A).;true;true
9;false,false;complex(A, G).;true;true
9;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(G, H), phenotype(A, H) )
%   | | | then return 0.3805386644808979;  // std dev = 1.486, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.044036639018243715;  // std dev = 1.587, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.10870027497034987;  // std dev = 1.023, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3660778455384084;  // std dev = 1.976, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462845;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6225220284885363;  // std dev = 0.908, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14472349441621632;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.16021773767187406;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.15633592978386937;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11192190118532641;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.20335999776378436;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.11775391087976265;  // std dev = 1.256, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.18575367337745108;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.130710132031456;  // std dev = 0.833, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.008502250633412497;  // std dev = 0.818, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.48047040625690146;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13148176635496542;  // std dev = 1.813, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.10496882417951488;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.24315208522663576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20642785131168895;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26770375713520916;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4158355424036024;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17352758628593912;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.09991990296828276;  // std dev = 0.500, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.09225891796641672;  // std dev = 1.018, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7021152208556806;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24462443003475257;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.10629705890420528;  // std dev = 1.373, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.23793374030598716;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.20768805389942702;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.210831461094002;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1692239159522617;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12235231259521032;  // std dev = 0.953, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3685210002748326;  // std dev = 0.253, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.17640685815871324;  // std dev = 0.133, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5404461196025507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17773522287138416;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.036353363047594615;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.17141004180506567;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.19967246151038331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17946455041178966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.15717539903211183;  // std dev = 0.505, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3272110343559228;  // std dev = 0.230, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.1417090474221899;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1602752896367234;  // std dev = 0.175, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, M), interaction(M, N) )
%   | | then return 0.03788116676944469;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.016128502952369478;  // std dev = 0.582, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.15212688312807;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1523676047462361;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(A, H), enzyme(G, I) )
%   | | | then return 0.09914395281458804;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.017507255613418954;  // std dev = 0.762, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.0033480324800386116;  // std dev = 0.492, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08283516927282146;  // std dev = 0.969, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.030906355869363276;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.14370425001305387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09136829932554219;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1335042966471744;  // std dev = 2.41e-05, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13395740856505167;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.19586508965560648;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03405955874151836;  // std dev = 0.843, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.1646519444674092;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.035909932293375274;  // std dev = 1.058, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3900517035730644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15068589175562414;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.012650279872861972;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.948726
   AUC PR    = 0.927286
   CLL	      = -0.327112
   Precision = 0.886288 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.910653


Total learning time: 3.101 seconds
Total inference time: 1.967 seconds
AUC ROC: 0.948726


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.220144
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.970588
   F1        = 0.985075


Total scoring time: 0.809 seconds
Refined model CLL: -0.220144


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948726
   AUC PR    = 0.927286
   CLL	      = -0.327112
   Precision = 0.886288 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.910653


Total learning time: 6.203 seconds
Total inference time: 1.967 seconds
AUC ROC: 0.948726
Total revision time: 6.203
Best scored revision CLL: -0.220144


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:43:00
{'AUC ROC': 0.948726, 'AUC PR': 0.927286, 'CLL': -0.327112, 'Precision': [0.886288, 0.5], 'Recall': 0.936396, 'F1': 0.910653, 'Learning time': 6.203, 'Inference time': 1.967, 'parameter_0.4': {'AUC ROC': 0.943569, 'AUC PR': 0.914103, 'CLL': -0.332249, 'Precision': [0.880795, 0.5], 'Recall': 0.939929, 'F1': 0.909402, 'Learning time': 1.582, 'Inference time': 1.543}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.14492913770819946;  // std dev = 1.971, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.2813677562720345;  // std dev = 2.194, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.39279418357704865;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6707772222381498;  // std dev = 0.067, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1501162805397375;  // std dev = 0.048, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2193258488041709;  // std dev = 2.598, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.3146428229590223;  // std dev = 1.620, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.4279197549359206;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.08516207969534965;  // std dev = 1.531, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.16661576363533487;  // std dev = 1.656, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1650919998432903;  // std dev = 2.575, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.2543595045737183;  // std dev = 1.616, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.31844904507141875;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07182867503168155;  // std dev = 1.504, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4558875697406558;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11793385969497615;  // std dev = 1.547, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1402894283212855;  // std dev = 2.588, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11178009908658407;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5938862605777295;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2536276071640102;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.30364831526960245;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.14306690570167846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3603036060737444;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.109329634801035;  // std dev = 1.647, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5307906295118515;  // std dev = 1.332, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.3468142399971049;  // std dev = 0.125, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08078268213381205;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15824344806107082;  // std dev = 0.604, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.20866600828831308;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2209237164883424;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.047868275978027966;  // std dev = 1.405, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3705392295757201;  // std dev = 0.222, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19422369514239177;  // std dev = 0.007, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3918002063416353;  // std dev = 1.196, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.27760956033803214;  // std dev = 0.223, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1272738156157634;  // std dev = 1.158, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.17933650528007247;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.160779241720595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19758333404841344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34631796060829717;  // std dev = 0.402, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.15734038947235482;  // std dev = 0.078, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18341372433399528;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04879031443024394;  // std dev = 1.904, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.08337223157010265;  // std dev = 1.085, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15174398478379558;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15571286874100101;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then return 0.03352168660822554;  // std dev = 1.522, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12454502109820131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04372011432490975;  // std dev = 1.904, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.01846343769676101;  // std dev = 1.028, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2778265427580403;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.1314980407689358;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14860162135885008;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.028494576472131907;  // std dev = 1.512, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2746875035145009;  // std dev = 1.180, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.2433090375347277;  // std dev = 0.213, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.026807482578359174;  // std dev = 1.110, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.225640200345273;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.945823
   AUC PR    = 0.925295
   CLL	      = -0.366641
   Precision = 0.884375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.93864


Total learning time: 1.64 seconds
Total inference time: 1.615 seconds
AUC ROC: 0.945823


Results scoring model
   AUC ROC   = 0.996924
   AUC PR    = 0.996685
   CLL	      = -0.2693
   Precision = 0.980769 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.990291


Total scoring time: 0.749 seconds
Parameter learned model CLL: -0.2693


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.98e-08, 0, 6], 'false,true,true,true': [0.0, 0, 8], 'false,true,true,false': [0.0, 0, 14], 'false,true,false': [2.79e-08, 31, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.619, 16, 12], 'false,false,false,false': [1.549, 4, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 9], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.971, 17, 8], 'false,false,true,false': [2.194, 14, 13], 'false,false,false,true': [2.619, 16, 12], 'false,false,false,false': [1.549, 4, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.067, 0, 21], 'false,true,false': [0.048, 31, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.598, 15, 13], 'false,false,false,true': [1.62, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.078, 0, 8], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [1.531, 17, 8], 'false,false,true,false': [1.656, 14, 13], 'false,false,false,true': [2.575, 15, 12], 'false,false,false,false': [1.616, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 3], 'false,true,true': [1.504, 17, 8], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.547, 14, 12], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.588, 15, 13], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.077, 0, 3], 'false,true,true': [0.0, 7, 0], 'false,true,false,true': [0.17, 0, 4], 'false,true,false,false': [1.647, 16, 14], 'false,false,true,true': [1.332, 2, 18], 'false,false,true,false': [0.125, 18, 0], 'false,false,false,true': [0.938, 6, 4], 'false,false,false,false': [0.604, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.034, 0, 3], 'false,true,true': [1.405, 17, 8], 'false,true,false,true': [0.222, 0, 14], 'false,true,false,false': [0.007, 14, 0], 'false,false,true,true': [1.196, 2, 14], 'false,false,true,false': [0.223, 14, 0], 'false,false,false,true': [1.158, 4, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.02, 0, 7], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.402, 0, 22], 'false,true,false': [0.078, 31, 0], 'false,false,true': [0.053, 0, 2], 'false,false,false,true': [1.904, 15, 12], 'false,false,false,false': [1.085, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [3.73e-09, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.026, 0, 6], 'false,true': [1.522, 31, 22], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.904, 15, 13], 'false,false,false,true': [1.028, 5, 4], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.01, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.002, 0, 2], 'false,true': [1.512, 31, 22], 'false,false,true,true': [1.18, 2, 14], 'false,false,true,false': [0.213, 14, 0], 'false,false,false,true': [1.11, 4, 4], 'false,false,false,false': [0.0, 0, 2]}]]
[{'': [-2.9605947323337506e-16, 0.2476586888657653], 'false': [0.24279102883588566, 0.24999999999999983], 'false,false': [0.0, 0.24930747922437624], 'false,false,false': [0.24489795918367302, 0.23999999999999994], 'false,true': [1.6148698540002277e-16, 2.5069552168955147e-17], 'false,true,true': [-2.220446049250313e-16, -2.5376526277146434e-16], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [0.0, 0.20548123041273975], 'false': [0.0, 0.2050839436739494], 'false,false': [0.17187134601140086, 0.2476676941537961], 'false,false,false': [0.244897959183673, 0.24000000000000005], 'false,false,true': [0.15534170511242226, 0.17822681106812338], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [-1.4802973661668753e-16, 0.19590988557865285], 'false': [0.16189214828615883, 0.23853955382257058], 'false,false': [0.2365502302648242, 0.23870144402812568], 'false,false,false': [0.23870144402812568, nan], 'false,false,true': [0.0, 0.24110454667964504], 'false,true': [0.0007797970628241915, 7.559395583083129e-05], 'false,true,true': [0.0, 0.00021149164684413924], 'true': [-1.4802973661668753e-16, nan]}, {'': [0.0006844895778943045, 0.15881439283439616], 'false': [-3.700743415417188e-17, 0.16187258947440694], 'false,false': [0.09949061345260732, 0.24490932302700394], 'false,false,false': [0.2456532790806636, 0.23742128697654596], 'false,false,true': [0.09374708797791184, 0.10161893171728892], 'true': [0.0007580187317696441, 0.0], 'false,true': [nan, -3.700743415417188e-17]}, {'': [1.1378385094499659e-06, 0.1542946113258535], 'false': [0.09304872195729315, 0.233896940846312], 'false,false': [0.23210286450871473, 0.23659602282234318], 'false,false,false': [0.24691358024691365, 0.0], 'false,false,true': [0.0, 0.2392697611744808], 'false,true': [0.09045091401635215, 0.09304068255543355], 'false,true,false': [0.0, 0.09203960741278926], 'true': [-1.850371707708594e-17, 0.0]}, {'': [0.0012116900089064557, 0.14824231781931738], 'false': [0.08351770175921067, 0.19907920932892637], 'false,false': [0.23914433541774047, 0.09022279910268528], 'false,false,true': [0.08876312630996837, 0.0008712482934812736], 'false,false,false': [0.08806809273496216, 0.09132372912339479], 'false,true': [0.0, 0.08714267852439024], 'false,true,false': [0.007208336513092051, 0.09039024558592863], 'true': [0.0, 0.0019670225337961402]}, {'': [0.0001646297160338027, 0.11261060777203465], 'false': [0.08069913658667588, 0.15461188686955324], 'false,false': [0.16084776234514891, 0.1341859787121504], 'false,false,true': [0.08937031789442365, 0.0035445712349006903], 'false,false,false': [0.1341859787121504, nan], 'false,true': [0.07894940159943642, 0.08149571925857925], 'false,true,false': [0.003509530979592263, 3.3269694884120937e-06], 'true': [-9.25185853854297e-18, 0.00039372154122342223]}, {'': [0.0001184162188834153, 0.08902142869438237], 'false': [0.0647504348191396, 0.1210795937248543], 'false,false': [0.0014029431743005777, 0.12660194662561994], 'false,false,false': [0.13425722737955187, 0.10696198723692284], 'false,true': [0.007338391164644217, 0.00019676505765067832], 'false,true,true': [nan, 0.007338391164644217], 'true': [5.549112668352753e-05, 0.0003386353030186487], 'true,false': [0.0, 0.0]}, {'': [7.730459096556379e-05, 0.07660527409900772], 'false': [0.04368065537746111, 0.1200407583752359], 'false,false': [0.12523237053011466, 0.10608892831883873], 'false,false,true': [0.0, 0.12947969086242478], 'false,false,false': [0.11743347840174725, 0.0], 'true': [4.625929269271485e-18, 0.00011070620649308398], 'true,true': [4.625929269271485e-18, nan], 'true,true,true': [4.625929269271485e-18, nan]}, {'': [6.137948469294348e-05, 0.07563481548756114], 'false': [0.04313047692554712, 0.11860873092395578], 'false,false': [0.11470325941896517, 0.12947750580396922], 'false,false,false': [0.1539399923240461, 0.0], 'false,false,true': [0.08701937145460686, 0.0032377663669741247], 'true': [1.3528598592618679e-05, 1.332332380761525e-06], 'true,true': [1.3528598592618679e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(I, A), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(F, D), interaction(D, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
4;false,false,false;phenotype(A, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,true;interaction(A, F), interaction(E, F).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;true,false;interaction(F, C), interaction(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
8;false,false,false;phenotype(A, I).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, F).;true;true
9;false,false;phenotype(A, G).;true;true
9;false,false,false;interaction(I, A), interaction(J, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.40814893509951233;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.3573656761798062;  // std dev = 1.106, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.015375036594832914;  // std dev = 1.091, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.22047669641181677;  // std dev = 3.029, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.3499299641869774;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6573200501960069;  // std dev = 0.105, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.13706884428469376;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.16040400208839267;  // std dev = 0.037, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22947462217909118;  // std dev = 2.589, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.5073501404904218;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1964709773613414;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4444176444637094;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(I, J), phenotype(A, J) )
%   | | | then return 0.20678633068992386;  // std dev = 1.330, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.048909590703721174;  // std dev = 1.493, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.16088067866577813;  // std dev = 2.676, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.29156580447253205;  // std dev = 1.605, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3194156875912137;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.10434793739709833;  // std dev = 1.349, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.12575426324957348;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.46437745285594356;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12011031848751805;  // std dev = 1.530, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14241440225489746;  // std dev = 2.576, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1215267546725126;  // std dev = 1.467, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5977452007406358;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26981991383868925;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.16255819962717413;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10523270478580277;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.15138634561226377;  // std dev = 1.543, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return -0.029828165573703908;  // std dev = 0.479, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.528346183330471;  // std dev = 1.360, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.33644259914821545;  // std dev = 0.136, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.00427325850941605;  // std dev = 0.553, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16060817240889974;  // std dev = 0.909, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21329548812319332;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.07223859326173385;  // std dev = 1.259, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.10609277670912465;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3698587951154372;  // std dev = 0.171, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19177463103010187;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, J) )
%   | | | then return -0.007296408096463466;  // std dev = 1.531, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1567824368648914;  // std dev = 1.507, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.13004999087276728;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16193675859278925;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.17608370565002174;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19238297979556007;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.3057397024173105;  // std dev = 0.192, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.34695799803491106;  // std dev = 0.228, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.16567719170782416;  // std dev = 0.112, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.11170551094046284;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2233363894899107;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return -0.005006822651490606;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08683068918860684;  // std dev = 2.107, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15470697619338858;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), phenotype(A, H) )
%   | | | then return 0.13269323060929833;  // std dev = 0.464, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.02932318445651814;  // std dev = 0.644, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.028879089069791652;  // std dev = 0.765, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.043360632677725906;  // std dev = 0.874, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.15172271530066106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05468265468311249;  // std dev = 2.061, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.005851373874787662;  // std dev = 1.254, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.2757111872571301;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13554497635667617;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.25400099241118884;  // std dev = 0.282, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.14574011609538168;  // std dev = 0.107, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.09768235007685112;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.007062479714190398;  // std dev = 0.412, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0516302095599155;  // std dev = 1.754, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.004510434083165402;  // std dev = 1.254, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.029615379422253937;  // std dev = 1.075, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2243819465216932;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.945149
   AUC PR    = 0.926729
   CLL	      = -0.386341
   Precision = 0.873646 at threshold = 0.5
   Recall    = 0.855124
   F1        = 0.864286


Total learning time: 3.3 seconds
Total inference time: 1.728 seconds
AUC ROC: 0.945149


Results scoring model
   AUC ROC   = 0.994617
   AUC PR    = 0.993987
   CLL	      = -0.289389
   Precision = 0.978723 at threshold = 0.5
   Recall    = 0.901961
   F1        = 0.938776


Total scoring time: 0.886 seconds
Refined model CLL: -0.289389


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.945823
   AUC PR    = 0.925295
   CLL	      = -0.366641
   Precision = 0.884375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.93864


Total learning time: 6.575 seconds
Total inference time: 1.615 seconds
AUC ROC: 0.945823
Total revision time: 6.575
Best scored revision CLL: -0.2693


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:43:11
{'AUC ROC': 0.945823, 'AUC PR': 0.925295, 'CLL': -0.366641, 'Precision': [0.884375, 0.5], 'Recall': 1.0, 'F1': 0.93864, 'Learning time': 6.575, 'Inference time': 1.615, 'parameter_0.6': {'AUC ROC': 0.945823, 'AUC PR': 0.925295, 'CLL': -0.366641, 'Precision': [0.884375, 0.5], 'Recall': 1.0, 'F1': 0.93864, 'Learning time': 1.64, 'Inference time': 1.615}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109544;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.18179828901318867;  // std dev = 2.335, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.27216385593718323;  // std dev = 2.459, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.23796730798362098;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.3335621649521725;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462844;  // std dev = 1.05e-08, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6699754345377097;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.1521754945858116;  // std dev = 0.036, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2049392652353653;  // std dev = 2.851, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.27432719347352486;  // std dev = 2.229, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.42619817438132;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10808194661724858;  // std dev = 1.800, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.16156052519691244;  // std dev = 1.860, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15612708716651172;  // std dev = 2.828, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.22292572317081322;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.3188228123554862;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09695651986867397;  // std dev = 1.774, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4596259071946508;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11753332249383766;  // std dev = 1.750, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13255512718817714;  // std dev = 2.841, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15449030457620144;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.24144105331916435;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25388283379711357;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3037643965325256;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.15352856646401458;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.35633896198795634;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09024224771280874;  // std dev = 1.854, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5452676098720027;  // std dev = 1.603, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.33950524230164725;  // std dev = 0.150, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13966822391886066;  // std dev = 1.056, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.20795927687064772;  // std dev = 0.819, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.20884647854339233;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22113351688531707;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.06366967464747343;  // std dev = 1.645, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.37804700690947934;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.19194004930636802;  // std dev = 0.021, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3767048341782098;  // std dev = 1.474, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.2683656089421528;  // std dev = 0.224, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.11941782124651269;  // std dev = 1.623, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.17944854704939697;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.1753486678344739;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20059335971408154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3422004020740055;  // std dev = 0.405, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.16449044185999354;  // std dev = 0.087, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18772880934991448;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04278330625430563;  // std dev = 2.169, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.0777755216480777;  // std dev = 1.574, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1518469972830686;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15615344103165057;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 0.03705588786887361;  // std dev = 1.744, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12571244061912756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.038366781922861026;  // std dev = 2.169, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.051708071053259676;  // std dev = 1.310, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08779386996285063;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.13155712271302278;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1380228967602437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14650809608597304;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.03136259227998421;  // std dev = 1.733, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.26129893341280547;  // std dev = 1.455, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.2378164450980281;  // std dev = 0.224, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06673537466187669;  // std dev = 1.362, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0668915731241782;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.966113
   AUC PR    = 0.94901
   CLL	      = -0.359757
   Precision = 0.915858 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.956081


Total learning time: 1.849 seconds
Total inference time: 1.438 seconds
AUC ROC: 0.966113


Results scoring model
   AUC ROC   = 0.995675
   AUC PR    = 0.995424
   CLL	      = -0.286328
   Precision = 0.971429 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.985507


Total scoring time: 0.942 seconds
Parameter learned model CLL: -0.286328


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 9], 'false,true,true,true': [0.0, 0, 13], 'false,true,true,false': [0.0, 0, 17], 'false,true,false': [4.08e-08, 39, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.958, 21, 15], 'false,false,false,false': [2.058, 8, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I)'}, {'true': [4.21e-08, 0, 12], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [2.335, 21, 12], 'false,false,true,false': [2.459, 18, 16], 'false,false,false,true': [2.958, 21, 15], 'false,false,false,false': [2.058, 8, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 2], 'false,true,true,true': [1.05e-08, 0, 2], 'false,true,true,false': [0.052, 0, 28], 'false,true,false': [0.036, 39, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.851, 19, 15], 'false,false,false,true': [2.229, 10, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.082, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.05e-08, 0, 5], 'false,false,true,true': [1.8, 21, 12], 'false,false,true,false': [1.86, 18, 16], 'false,false,false,true': [2.828, 19, 14], 'false,false,false,false': [2.228, 10, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 5], 'false,true,true': [1.774, 21, 13], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.75, 18, 15], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.841, 19, 15], 'false,false,false,true': [1.932, 8, 7], 'false,false,false,false': [1.095, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [0.081, 0, 4], 'false,true,true': [0.0, 8, 0], 'false,true,false,true': [0.153, 0, 4], 'false,true,false,false': [1.854, 22, 17], 'false,false,true,true': [1.603, 3, 24], 'false,false,true,false': [0.15, 26, 0], 'false,false,false,true': [1.056, 6, 6], 'false,false,false,false': [0.819, 3, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.037, 0, 5], 'false,true,true': [1.645, 21, 13], 'false,true,false,true': [0.229, 0, 17], 'false,true,false,false': [0.021, 18, 0], 'false,false,true,true': [1.474, 3, 17], 'false,false,true,false': [0.224, 18, 0], 'false,false,false,true': [1.623, 8, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.023, 0, 8], 'true,false,true': [0.017, 0, 3], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.405, 0, 30], 'false,true,false': [0.087, 39, 0], 'false,false,true': [0.056, 0, 2], 'false,false,false,true': [2.169, 19, 14], 'false,false,false,false': [1.574, 10, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [1.744, 39, 30], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.169, 19, 15], 'false,false,false,true': [1.31, 8, 7], 'false,false,false,false': [0.857, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.011, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.011, 0, 3], 'false,true': [1.733, 39, 30], 'false,false,true,true': [1.455, 3, 17], 'false,false,true,false': [0.224, 18, 0], 'false,false,false,true': [1.362, 6, 6], 'false,false,false,false': [0.857, 2, 3]}]]
[{'': [-1.4802973661668753e-16, 0.24765868886576625], 'false': [0.24574669187145706, 0.2492561983471088], 'false,false': [0.0, 0.24777500889996565], 'false,false,false': [0.24305555555555505, 0.24913494809688577], 'false,true': [1.3026616822268502e-15, 4.2700885562506023e-17], 'false,true,true': [-2.7328566760003855e-16, -2.0898315757650005e-16], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, 0.0]}, {'': [1.4802973661668753e-16, 0.20681026147364703], 'false': [-1.1102230246251565e-16, 0.20646485473202308], 'false,false': [0.1736609649391782, 0.24699653782938444], 'false,false,false': [0.24305555555555614, 0.24913494809688555], 'false,false,true': [0.16519687891756143, 0.17785407923007787], 'false,true': [nan, -1.1102230246251565e-16], 'false,true,false': [0.0, 0.0]}, {'': [-2.590520390792032e-16, 0.19819685301227424], 'false': [0.16344901044561602, 0.24112408567173665], 'false,false': [0.23568873124889358, 0.24839247085232596], 'false,false,false': [0.24839247085232596, nan], 'false,false,true': [0.0, 0.2391122041124099], 'false,true': [0.0009081113264122939, 3.3916311428429986e-05], 'false,true,true': [5.551115123125783e-17, 9.729492950518091e-05], 'true': [-1.7763568394002506e-16, 0.0]}, {'': [0.0006233232011704125, 0.16125752742435417], 'false': [4.4408920985006264e-17, 0.16523237496196547], 'false,false': [0.10069769603797518, 0.24562666463781424], 'false,false,false': [0.24237784123162232, 0.24820896087166977], 'false,false,true': [0.09814042206597832, 0.1017711198590557], 'true': [0.0006787989660745674, 0.0], 'false,true': [nan, 2.2204460492503132e-17]}, {'': [8.673322031878724e-07, 0.157891578442939], 'false': [0.09360622067689081, 0.23787634239487804], 'false,false': [0.23150992376905874, 0.248084247799222], 'false,false,false': [0.24888888888888874, 0.23999999999999994], 'false,false,true': [0.0, 0.23730752628058505], 'false,true': [0.0925828951955577, 0.09380696921914547], 'false,true,false': [0.0, 0.09280496370906713], 'true': [-3.172065784643304e-17, -2.2204460492503132e-17]}, {'': [0.0011759514470717316, 0.15293193801776486], 'false': [0.08242696946250991, 0.20030106147593604], 'false,false': [0.24455965819661818, 0.08621566391825845], 'false,false,true': [0.0951968865489668, 0.0008705292179935593], 'false,false,false': [0.09296748252702398, 0.07454828601327732], 'false,true': [0.0, 0.08645160988350897], 'false,true,false': [0.005885943503305319, 0.08812801456275908], 'true': [2.3790493384824782e-17, 0.0016504853788573831]}, {'': [0.00015209940049950207, 0.11642250186117595], 'false': [0.08126908431880946, 0.16044890639400206], 'false,false': [0.16222335199139296, 0.15487250717334297], 'false,false,true': [0.10861313632821479, 0.0027819021851282428], 'false,false,false': [0.15487250717334297, nan], 'false,true': [0.07960879008478355, 0.08265961819353555], 'false,true,false': [0.0030722819371525943, 2.4031417256012125e-05], 'true': [0.0, 0.00027697196298950844]}, {'': [0.00010821675930911452, 0.09485367188756984], 'false': [0.06557515780365736, 0.1315711617072245], 'false,false': [0.0015915166578004333, 0.13584493895419986], 'false,false,false': [0.14259791520332124, 0.1239401315476889], 'false,true': [0.005458781229554255, 0.0001943455614915345], 'false,true,true': [nan, 0.005458781229554255], 'true': [6.387187180351139e-05, 0.0001936466542730858], 'true,false': [9.887192200670285e-05, 0.0]}, {'': [7.61448773154566e-05, 0.08242254025297285], 'false': [0.04408347409967672, 0.1304529319505451], 'false,false': [0.13467766901435965, 0.12280846707459177], 'false,false,true': [0.0, 0.13842079795245857], 'false,false,false': [0.11444354977176154, 0.1469265803208747], 'true': [0.0, 9.689013864733198e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [6.0440592079368895e-05, 0.08178715171437508], 'false': [0.04351388764298266, 0.12977943740223732], 'false,false': [0.11913728583172385, 0.15235449338450274], 'false,false,false': [0.15461072412241075, 0.14693952239143454], 'false,false,true': [0.10585753203006373, 0.0027787988514565865], 'true': [1.753918659421082e-05, 3.7220612778920047e-05], 'true,true': [1.5086447804072561e-05, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(I, A), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(F, D), interaction(D, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(E, F), interaction(A, F).;true;true
4;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,true;interaction(A, F), interaction(E, F).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;true,false;interaction(F, C), interaction(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, D), interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3465210281227682;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6014226048195016;  // std dev = 1.195, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.15020353457657903;  // std dev = 0.125, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2945829766898515;  // std dev = 4.299, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462844;  // std dev = 1.05e-08, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6460945728630355;  // std dev = 0.134, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.13687248298708465;  // std dev = 0.144, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.15779229980753517;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20423647429328443;  // std dev = 2.776, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23940002504196484;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.3633853864265583;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4175135841583099;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4465207795128105;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4175135841583099;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.09827977239269142;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.24265898325775836;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.1014482988496534;  // std dev = 1.748, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.1854835938402481;  // std dev = 3.783, 83.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014955;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.017450322122902404;  // std dev = 0.833, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.13237105841276217;  // std dev = 1.326, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.43992031305361157;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10979900830259048;  // std dev = 1.727, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13066427409552553;  // std dev = 2.749, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1591815279798135;  // std dev = 1.890, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.2593846100287079;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948934;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.29920216313108094;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.09386983708038357;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0770684028183727;  // std dev = 1.048, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.11701903582778102;  // std dev = 1.502, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5275410863926222;  // std dev = 1.605, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.31733436309889107;  // std dev = 0.261, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.19228338619854557;  // std dev = 0.945, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.08886270688727557;  // std dev = 0.907, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21868580578668803;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.010786780925927714;  // std dev = 1.223, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.15837449117252614;  // std dev = 0.757, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3745704884440717;  // std dev = 0.192, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.19442139306900785;  // std dev = 0.103, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4735307529358624;  // std dev = 0.313, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.28785648338755;  // std dev = 0.257, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.06755078259913304;  // std dev = 1.255, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.12766110151810656;  // std dev = 2.229, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.17841429259129887;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1941039698675524;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2974816827982796;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.3484855998208661;  // std dev = 0.143, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.11557571213689882;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.17181338983822014;  // std dev = 0.189, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.21018168331400527;  // std dev = 0.104, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.0365801890708059;  // std dev = 2.250, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.10828769643050543;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1576800712805968;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( interaction(G, E), interaction(G, A) )
%   | | | then return -0.045985333868680096;  // std dev = 0.422, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.04571252950687179;  // std dev = 1.207, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.03914044949622532;  // std dev = 0.855, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.12367705128089623;  // std dev = 0.463, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.11363585185698633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03921705384034205;  // std dev = 2.190, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.02291641095678366;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.09250734224739424;  // std dev = 1.379, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13785929705785502;  // std dev = 0.008, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.06646827527042679;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3076515280283783;  // std dev = 0.213, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(E, H), interaction(I, E) )
%   | | | then return -0.11415369566868477;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.197608150679482;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.2126779353012213;  // std dev = 0.689, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.2220357382697961;  // std dev = 0.262, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.029359981698643213;  // std dev = 1.291, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.06904660987196311;  // std dev = 2.204, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */


Results
   AUC ROC   = 0.967592
   AUC PR    = 0.952333
   CLL	      = -0.340166
   Precision = 0.912903 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954469


Total learning time: 3.632 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.967592


Results scoring model
   AUC ROC   = 0.996756
   AUC PR    = 0.996394
   CLL	      = -0.285235
   Precision = 0.985507 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.992701


Total scoring time: 0.897 seconds
Refined model CLL: -0.285235


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.967592
   AUC PR    = 0.952333
   CLL	      = -0.340166
   Precision = 0.912903 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954469


Total learning time: 7.32 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.967592
Total revision time: 7.32
Best scored revision CLL: -0.285235


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:43:22
{'AUC ROC': 0.967592, 'AUC PR': 0.952333, 'CLL': -0.340166, 'Precision': [0.912903, 0.5], 'Recall': 1.0, 'F1': 0.954469, 'Learning time': 7.32, 'Inference time': 1.812, 'parameter_0.8': {'AUC ROC': 0.966113, 'AUC PR': 0.94901, 'CLL': -0.359757, 'Precision': [0.915858, 0.5], 'Recall': 1.0, 'F1': 0.956081, 'Learning time': 1.849, 'Inference time': 1.438}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
0;false,true,true;follows(E, G), follows(G, A).;false;false
0;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
0;false,false,true;follows(A, I), follows(I, H).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(A, D), recursion_accounttype(D, B).;true;true
1;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
1;false,true,true;tweets(A, F).;false;false
1;false,true,false;follows(D, G), follows(G, D).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D).;false;false
3;false;follows(E, A), recursion_accounttype(E, B).;true;true
3;false,true;follows(A, F), follows(F, E).;false;false
3;false,false;follows(G, A).;true;true
3;false,false,true;follows(G, H), follows(H, A).;false;false
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(F, E), follows(F, A).;false;true
4;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
4;false,false;follows(A, H), follows(H, I).;true;true
4;false,false,true;recursion_accounttype(I, B).;false;false
4;false,false,false;tweets(A, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;false;false
5;false;follows(E, A), follows(A, F).;true;true
5;false,true;follows(F, A), follows(F, E).;false;true
5;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, D), follows(C, D).;false;false
6;false;follows(E, A).;true;true
6;false,true;follows(F, E), follows(F, A).;false;true
6;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
6;false,false;tweets(A, H).;true;true
6;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(D, E).;false;true
7;true,false;follows(C, F), follows(F, A).;false;false
7;false;follows(G, A).;true;true
7;false,true;follows(G, H), recursion_accounttype(H, B).;true;false
7;false,true,true;follows(A, H), follows(H, G).;false;false
7;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
7;false,false,false;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, C), tweets(C, D).;true;false
8;true,true;follows(A, E), follows(C, E).;true;false
8;true,true,true;recursion_accounttype(E, B).;false;false
8;false;follows(F, A).;false;true
8;false,false;follows(A, G), follows(G, H).;true;true
8;false,false,true;recursion_accounttype(H, B).;false;false
8;false,false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(D, C), recursion_accounttype(D, B).;true;false
9;true,true;follows(D, A), follows(A, E).;false;true
9;true,true,false;follows(A, F), follows(F, C).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;true;true
9;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;follows(A, J), follows(J, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3215635692458537;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.1496449593867444;  // std dev = 2.596, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.25678019394893187;  // std dev = 2.725, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2777509307875728;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.3087411357856347;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6748117729053273;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14882788975711145;  // std dev = 0.049, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24316273785011427;  // std dev = 3.300, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.26531006979548394;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.42345899428275513;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4561587499672042;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415831;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.08767242056727251;  // std dev = 2.012, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.1519027945946998;  // std dev = 2.066, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1819875723740661;  // std dev = 3.268, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.21437996595651282;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.31941798831860035;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32071184716014944;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07942170317414173;  // std dev = 1.990, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4356021266643116;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09441075219705151;  // std dev = 1.886, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31235173969469177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15446073733565702;  // std dev = 3.285, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1728261873977004;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1577807134831807;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2519117715242632;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3012064457103379;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return -0.10503052198421217;  // std dev = 0.380, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3635026923655135;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0742136470447338;  // std dev = 2.004, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.524562079870901;  // std dev = 1.883, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.3600359841271626;  // std dev = 0.050, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13898955052279127;  // std dev = 1.203, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.12792014482766367;  // std dev = 1.080, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.20863304661943197;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2347972143387586;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.052216790885737274;  // std dev = 1.880, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3719415126083105;  // std dev = 0.339, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.18284272031287427;  // std dev = 0.019, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37427255183827207;  // std dev = 1.515, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.2897397726197813;  // std dev = 0.212, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09846673269714573;  // std dev = 1.996, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.18352036565294308;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.18115421553016395;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19587248319112222;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.349521961054418;  // std dev = 0.548, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.15697160842027985;  // std dev = 0.071, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1920757845988461;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05633361256835139;  // std dev = 2.480, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.0679482198329331;  // std dev = 1.721, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.15188005788781633;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15997637276631688;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F) )
%   | then return 0.032228128500166056;  // std dev = 1.970, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12249052683606909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05016639080640079;  // std dev = 2.480, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06416876802868796;  // std dev = 1.343, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.022814263988323036;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.13112048348431257;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14491392847922047;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14843175059622557;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.027405693918961426;  // std dev = 1.958, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25626884788543386;  // std dev = 1.501, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.2560448479713947;  // std dev = 0.208, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0630952468230023;  // std dev = 1.667, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.017353788244377666;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.965651
   AUC PR    = 0.948644
   CLL	      = -0.359151
   Precision = 0.912903 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954469


Total learning time: 1.903 seconds
Total inference time: 1.38 seconds
AUC ROC: 0.965651


Results scoring model
   AUC ROC   = 0.992361
   AUC PR    = 0.991037
   CLL	      = -0.287058
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.909 seconds
Parameter learned model CLL: -0.287058


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 13], 'false,true,true,true': [0.0, 0, 15], 'false,true,true,false': [0.0, 0, 21], 'false,true,false': [5.37e-08, 52, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [3.193, 22, 19], 'false,false,false,false': [2.449, 12, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'phenotype(A, F)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'phenotype(A, J)'}, {'true': [5.96e-08, 0, 16], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [2.596, 29, 14], 'false,false,true,false': [2.725, 23, 19], 'false,false,false,true': [3.193, 22, 19], 'false,false,false,false': [2.449, 12, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 13], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.067, 0, 33], 'false,true,false': [0.049, 52, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.3, 23, 22], 'false,false,false,true': [2.345, 11, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.074, 0, 13], 'true,false': [0.055, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 7], 'false,false,true,true': [2.012, 29, 14], 'false,false,true,false': [2.066, 23, 19], 'false,false,false,true': [3.268, 23, 20], 'false,false,false,false': [2.345, 11, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 7], 'false,true,true': [1.99, 29, 15], 'false,true,false,true': [0.13, 0, 5], 'false,true,false,false': [1.886, 23, 16], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.285, 23, 22], 'false,false,false,true': [2.0, 8, 8], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), interaction(F, A)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.02, 0, 9], 'true,false': [0.099, 0, 6], 'false,true,true': [0.38, 9, 1], 'false,true,false,true': [0.165, 0, 6], 'false,true,false,false': [2.004, 28, 18], 'false,false,true,true': [1.883, 4, 31], 'false,false,true,false': [0.05, 30, 0], 'false,false,false,true': [1.203, 8, 8], 'false,false,false,false': [1.08, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.008, 0, 9], 'true,false': [0.06, 0, 7], 'false,true,true': [1.88, 29, 15], 'false,true,false,true': [0.339, 0, 21], 'false,true,false,false': [0.019, 23, 0], 'false,false,true,true': [1.515, 3, 22], 'false,false,true,false': [0.212, 19, 0], 'false,false,false,true': [1.996, 12, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(E, D)', 'true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,true,true': 'interaction(H, A), interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.056, 0, 11], 'true,false,true': [0.028, 0, 3], 'true,false,false': [0.007, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.548, 0, 36], 'false,true,false': [0.071, 52, 0], 'false,false,true': [0.058, 0, 3], 'false,false,false,true': [2.48, 23, 20], 'false,false,false,false': [1.721, 11, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true,true': [3.73e-09, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.056, 0, 13], 'false,true': [1.97, 52, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.48, 23, 22], 'false,false,false,true': [1.343, 8, 8], 'false,false,false,false': [1.064, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.014, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.036, 0, 6], 'false,true': [1.958, 52, 36], 'false,false,true,true': [1.501, 3, 22], 'false,false,true,false': [0.208, 19, 0], 'false,false,false,true': [1.667, 9, 9], 'false,false,false,false': [1.064, 3, 3]}]]
[{'': [-2.220446049250313e-16, 0.24737015121630668], 'false': [0.2417355371900842, 0.25000000000000167], 'false,false': [1.4802973661668753e-16, 0.2494674556213033], 'false,false,false': [0.24866151100535352, 0.24999999999999956], 'false,true': [1.7763568394002505e-15, 5.551115123125783e-17], 'false,true,true': [-2.3684757858670006e-16, 0.0], 'false,false,true': [0.0, 0.0], 'true': [1.4802973661668753e-16, -2.7328566760003855e-16]}, {'': [2.220446049250313e-16, 0.20656256685949861], 'false': [0.0, 0.20598716206367665], 'false,false': [0.16955422219934227, 0.24937939724265132], 'false,false,false': [0.2486615110053536, 0.2500000000000002], 'false,false,true': [0.15675387996801596, 0.17685283783859462], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan], 'false,true,false': [0.0, -1.1102230246251565e-16]}, {'': [-2.220446049250313e-16, 0.1975031001915736], 'false': [0.16057261153396507, 0.24246180640557], 'false,false': [0.23876605148226976, 0.2500296884064032], 'false,false,false': [0.2500296884064032, nan], 'false,false,true': [0.0, 0.24195302570255198], 'false,true': [0.0012128267244366775, 4.5776861376997016e-05], 'false,true,true': [0.0, 0.00013415133854008135], 'true': [-2.7328566760003855e-16, 3.700743415417188e-17]}, {'': [0.0006903052417835731, 0.16098503474827142], 'false': [9.516197353929913e-17, 0.16533734620457805], 'false,false': [0.09885758447007818, 0.24920769716041388], 'false,false,false': [0.24842765457028382, 0.25003819527521187], 'false,false,true': [0.09416115216564552, 0.10157879822950357], 'true': [0.0004241748185743829, 0.001493448840396927], 'false,true': [nan, -3.172065784643304e-17]}, {'': [4.1197833682005136e-07, 0.1574009463251571], 'false': [0.09223310511996917, 0.24002350285366383], 'false,false': [0.23519271668358255, 0.25004489909791305], 'false,false,false': [0.24999999999999983, 0.25], 'false,false,true': [0.0, 0.23987727435473108], 'false,true': [0.09003536461241922, 0.09298573402771301], 'false,true,false': [0.003374688500783862, 0.0912457439250365], 'true': [-1.2335811384723961e-17, -1.586032892321652e-17]}, {'': [0.0012672620572456623, 0.1522724729785738], 'false': [0.08079430938271648, 0.19799149693587487], 'false,false': [0.2490454765740062, 0.08716409593063683], 'false,false,true': [0.10128113697310108, 8.365658502211086e-05], 'false,false,false': [0.09046519753140221, 0.08332605812426848], 'false,true': [0.01441622573245883, 0.08626757920235537], 'false,true,false': [0.004532007230324449, 0.08727241556285446], 'true': [4.521652730777376e-05, 0.0016423514102858472]}, {'': [0.0003970918872083229, 0.11639348508526236], 'false': [0.0800820681859288, 0.16305114706350535], 'false,false': [0.16139791436155373, 0.16600481846882073], 'false,false,false': [0.16600481846882073, nan], 'false,false,true': [0.0918660939931038, 0.0023687613292642123], 'false,true': [0.0803168054423124, 0.07940557662553326], 'false,true,false': [0.005467587388674054, 1.652896994962661e-05], 'true': [6.396426682603935e-06, 0.0005143475564196269]}, {'': [0.00026437219936012446, 0.09577344806815666], 'false': [0.06547709334067414, 0.1348387872857534], 'false,false': [0.001128441137343945, 0.14024352700407827], 'false,false,false': [0.14303620252904722, 0.13469587480638887], 'false,true': [0.008327583461353032, 9.570122024335706e-05], 'false,true,true': [nan, 0.008327583461353032], 'true': [0.00028225315374300823, 0.00021651009920019005], 'true,false': [0.00025685668345344637, 2.601378105655111e-05]}, {'': [0.00020500303760495261, 0.08331844433516407], 'false': [0.04411873920013588, 0.13382446337142515], 'false,false': [0.13383028790384655, 0.13381138766098422], 'false,false,true': [0.0, 0.13669058167883072], 'false,false,false': [0.11275095695022795, 0.18872875803796488], 'true': [4.625929269271485e-18, 0.00024002074690869618], 'true,true': [4.625929269271485e-18, nan], 'true,true,true': [4.625929269271485e-18, nan]}, {'': [0.0001627129069466625, 0.08267433389005838], 'false': [0.04357267695346174, 0.1331736437970566], 'false,false': [0.11659731561800633, 0.16338490121010668], 'false,false,false': [0.15445729649044795, 0.18859850459440783], 'false,false,true': [0.09014835044833505, 0.0022705611675983253], 'true': [3.6388767664177754e-05, 0.00021461179025403695], 'true,true': [2.1406051588552923e-05, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
0;false,true,true;interaction(G, E), interaction(A, G).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
0;false,false,true;interaction(I, A), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(C, D).;true;true
4;false;interaction(A, E).;true;true
4;false,false;interaction(H, A), interaction(I, H).;true;true
4;false,false,true;recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;false;interaction(A, E), interaction(F, A).;true;true
5;false,false;interaction(H, A).;true;true
5;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(D, C).;true;true
6;false;interaction(A, E).;true;true
6;false,true;interaction(E, F), interaction(A, F).;true;true
6;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;false,false;phenotype(A, H).;true;true
6;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(E, D).;true;true
7;true,false;interaction(F, C), interaction(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
7;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, A), phenotype(C, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, A), interaction(H, G).;true;true
8;false,false,true;recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, D), interaction(E, A).;true;true
9;false;interaction(A, G).;true;true
9;false,false;phenotype(A, H).;true;true
9;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.31760839455897183;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( complex(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.1950415186486015;  // std dev = 2.208, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.2838730260608893;  // std dev = 4.793, 103.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.652826930586411;  // std dev = 0.214, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.15454666394662972;  // std dev = 0.036, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.243472564590417;  // std dev = 3.300, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2682611421786708;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.2672188532742385;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4368168050140893;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.45612002586986866;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, I), interaction(J, A) )
%   | | | then return 0.05775316483284471;  // std dev = 1.482, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.138932129161425;  // std dev = 2.117, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.18007507172994291;  // std dev = 3.254, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.2100905735437189;  // std dev = 2.574, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3204499293846475;  // std dev = 0.001, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.1387077545824701;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.02180210290803967;  // std dev = 0.668, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10699033345384353;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12956579885474478;  // std dev = 2.420, 65.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=30 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31236005723159843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1524547386154286;  // std dev = 3.285, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.17159803342868374;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17790930000654948;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27641410631460844;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.11478818556283907;  // std dev = 0.796, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.017211315864367503;  // std dev = 0.742, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.06996498806704139;  // std dev = 1.021, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.11484270990595179;  // std dev = 1.480, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.525827690247869;  // std dev = 1.881, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.3590672812885463;  // std dev = 0.031, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.25522202568872643;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10219537146511225;  // std dev = 1.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2152181322817952;  // std dev = 0.015, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.06143551479255567;  // std dev = 1.409, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.012875327764146165;  // std dev = 1.101, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.38449370464152777;  // std dev = 0.255, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.17662381159604754;  // std dev = 0.116, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37235080470721144;  // std dev = 1.519, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.29052209158312936;  // std dev = 0.204, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11394919359188888;  // std dev = 1.685, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.07379012155158367;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.1774588947581172;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.18921794179867435;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.31778102428914934;  // std dev = 0.339, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.37002074682636016;  // std dev = 0.210, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.1110327691489035;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.17043161475753385;  // std dev = 0.090, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.195652660772897;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04977819185226732;  // std dev = 2.270, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.07999443801650309;  // std dev = 1.987, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.14930741807663783;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15731226908129253;  // std dev = 0.013, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09399625893973819;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.05969943955846174;  // std dev = 1.130, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.03546694368508427;  // std dev = 1.499, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12500259331550545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04591724293459314;  // std dev = 2.476, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07256468027869806;  // std dev = 1.347, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.03734946349270137;  // std dev = 1.065, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13640990548423293;  // std dev = 0.011, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.0013767168718377182;  // std dev = 0.545, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.08497401166189851;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.03014342509366011;  // std dev = 1.314, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.04684402985432476;  // std dev = 1.215, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.25680579386091656;  // std dev = 1.506, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.25462194076739797;  // std dev = 0.199, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.05850168016477481;  // std dev = 1.666, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.028431799341463355;  // std dev = 1.065, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.967049
   AUC PR    = 0.94958
   CLL	      = -0.347712
   Precision = 0.912903 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954469


Total learning time: 4.74 seconds
Total inference time: 2.096 seconds
AUC ROC: 0.967049


Results scoring model
   AUC ROC   = 0.995335
   AUC PR    = 0.994953
   CLL	      = -0.282791
   Precision = 0.966292 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.982857


Total scoring time: 0.936 seconds
Refined model CLL: -0.282791


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.967049
   AUC PR    = 0.94958
   CLL	      = -0.347712
   Precision = 0.912903 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.954469


Total learning time: 8.488000000000001 seconds
Total inference time: 2.096 seconds
AUC ROC: 0.967049
Total revision time: 8.488000000000001
Best scored revision CLL: -0.282791


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 03:43:35
{'AUC ROC': 0.967049, 'AUC PR': 0.94958, 'CLL': -0.347712, 'Precision': [0.912903, 0.5], 'Recall': 1.0, 'F1': 0.954469, 'Learning time': 8.488000000000001, 'Inference time': 2.096, 'parameter_1.0': {'AUC ROC': 0.965651, 'AUC PR': 0.948644, 'CLL': -0.359151, 'Precision': [0.912903, 0.5], 'Recall': 1.0, 'F1': 0.954469, 'Learning time': 1.903, 'Inference time': 1.38}}


