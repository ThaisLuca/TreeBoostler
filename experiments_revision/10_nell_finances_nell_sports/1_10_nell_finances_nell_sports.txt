Starting experiment #1 for 10_nell_finances_nell_sports

Start learning from source dataset

Source train facts examples: 5307
Source train pos examples: 778
Source train neg examples: 549655

WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( companyalsoknownas(A, D) )
%   | then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( countryhascompanyoffice(F, D), countryhascompanyoffice(G, A) )
%   | | | then return -0.1073683062797981;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | | else return 0.11502966904446653;  // std dev = 6.451, 218.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=56 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11769091983233743;  // std dev = 7.096, 262.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=68 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.21176110239989052;  // std dev = 7.753, 263.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=93 */
%   | | | else return 0.19019277778164792;  // std dev = 18.547, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,036 #pos=515 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, A) )
%   then if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1401414533372698;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( cityhascompanyoffice(D, A), companyalsoknownas(A, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0709776234844071;  // std dev = 4.479, 116.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=26 */
%   | else if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.7194734122109543;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( bankboughtbank(H, A), bankchiefexecutiveceo(H, I) )
%   | | | then return 0.08633224883484229;  // std dev = 1.934, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.16700375023549588;  // std dev = 21.787, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,432 #pos=715 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.7857289654986633;  // std dev = 0.050, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( cityhascompanyoffice(D, A), cityhascompanyoffice(D, C) )
%   | | then return -0.09384136180472978;  // std dev = 0.268, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( companyceo(A, E), companyalsoknownas(A, F) )
%   | | | then return 0.2097630303901842;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04726367399105158;  // std dev = 6.778, 261.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=62 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.6946534335572638;  // std dev = 0.119, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( acquired(A, H) )
%   | | then if ( cityhascompanyoffice(I, H), cityhascompanyoffice(I, A) )
%   | | | then return -0.1186217432203103;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.10387246982046883;  // std dev = 7.141, 256.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=74 */
%   | | else if ( cityhascompanyoffice(J, A), countryhascompanyoffice(K, A) )
%   | | | then return 0.2559797627673226;  // std dev = 2.798, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.1408733215142078;  // std dev = 19.116, 1,661.000 (wgt'ed) examples reached here.  /* #neg=1,108 #pos=553 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.3840777384359596;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5274951418387217;  // std dev = 0.068, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.7579188892136344;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, G), cityhascompanyoffice(H, E) )
%   | | | then return 0.04140928142482685;  // std dev = 3.684, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
%   | | | else return -0.10678007463786128;  // std dev = 1.919, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | | | then return 0.4293977365489791;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6531361165794575;  // std dev = 0.352, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( acquired(L, A) )
%   | | | then return 0.07521267199172939;  // std dev = 7.692, 331.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=95 */
%   | | | else return 0.11292869823122095;  // std dev = 20.199, 1,862.000 (wgt'ed) examples reached here.  /* #neg=1,257 #pos=605 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.4015841605131504;  // std dev = 0.208, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | | then return 0.6345079892227238;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.029736091663476124;  // std dev = 0.417, 372.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=91 */
%   else if ( acquired(E, A) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.6125334174548177;  // std dev = 0.061, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.014610474971613855;  // std dev = 0.412, 225.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=51 */
%   | else if ( cityhascompanyoffice(F, A), companyceo(A, G) )
%   | | then if ( cityhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.7647379364098051;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2351065418582901;  // std dev = 0.048, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( countryhascompanyoffice(I, A) )
%   | | | then return 0.0717540226753474;  // std dev = 4.507, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | | else return 0.09934911840722987;  // std dev = 18.579, 1,571.000 (wgt'ed) examples reached here.  /* #neg=1,046 #pos=525 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(C, D) )
%   then if ( countryhascompanyoffice(E, A), acquired(A, F) )
%   | then return 0.033839781141680424;  // std dev = 0.334, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.3775267283537926;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.649900035269622;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10266337988786602;  // std dev = 3.460, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   else if ( companyalsoknownas(A, G) )
%   | then return 0.020451808961989875;  // std dev = 0.392, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | else if ( acquired(A, H) )
%   | | then if ( bankboughtbank(I, A), companyceo(H, J) )
%   | | | then return 0.2805317889138048;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03579021572155093;  // std dev = 6.920, 276.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=79 */
%   | | else if ( countryhascompanyoffice(K, A), cityhascompanyoffice(L, A) )
%   | | | then return 0.01127099122666481;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.07724413698269521;  // std dev = 19.603, 1,789.000 (wgt'ed) examples reached here.  /* #neg=1,201 #pos=588 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then return 0.3196675749742926;  // std dev = 0.334, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.4403378089839239;  // std dev = 0.065, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( acquired(F, A) )
%   | then if ( companyalsoknownas(F, G), economicsectorcompany(B, G) )
%   | | then return 0.6410282386775809;  // std dev = 0.377, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(F, H) )
%   | | | then return -0.035307179057201356;  // std dev = 4.652, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return 0.04550135662536419;  // std dev = 4.944, 130.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=35 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.6432407348736431;  // std dev = 2.600, 137.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=133 */
%   | | | else return -0.23877139299165923;  // std dev = 0.580, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | | else if ( companyalsoknownas(A, K), companyceo(K, L) )
%   | | | then return -0.03031334568365614;  // std dev = 2.544, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.06895030442737168;  // std dev = 18.424, 1,555.000 (wgt'ed) examples reached here.  /* #neg=1,035 #pos=520 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A) )
%   then if ( companyceo(A, D), bankboughtbank(E, C) )
%   | then return -0.07576113992754718;  // std dev = 0.336, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( bankchiefexecutiveceo(A, F) )
%   | | then if ( acquired(C, G), economicsectorcompany(B, G) )
%   | | | then return 0.5911133085835277;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23959129683045718;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( acquired(C, H), economicsectorcompany(B, H) )
%   | | | then return 0.734794142312646;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07898391421682467;  // std dev = 2.572, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   else if ( companyalsoknownas(A, I), acquired(A, J) )
%   | then return 0.006534803928494359;  // std dev = 0.321, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | else if ( cityhascompanyoffice(K, A), acquired(A, L) )
%   | | then return 0.020230276749917366;  // std dev = 0.362, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | else if ( companyceo(A, M) )
%   | | | then return 0.026955416715528032;  // std dev = 5.521, 182.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=57 */
%   | | | else return 0.04279054542276476;  // std dev = 19.578, 1,910.000 (wgt'ed) examples reached here.  /* #neg=1,290 #pos=620 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), companyceo(A, D) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.24243796880452054;  // std dev = 0.231, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankchiefexecutiveceo(F, D), economicsectorcompany(B, F) )
%   | | then return 0.4916314744638897;  // std dev = 0.222, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( bankboughtbank(G, A) )
%   | | | then return -0.19291795168688636;  // std dev = 1.144, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.0025227501216567635;  // std dev = 3.017, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   else if ( acquired(H, A), economicsectorcompany(B, H) )
%   | then return 0.31770709518195195;  // std dev = 0.160, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then if ( companyalsoknownas(I, K), economicsectorcompany(B, K) )
%   | | | then return 0.5269246391457851;  // std dev = 0.260, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05070154029115447;  // std dev = 4.670, 162.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=28 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.058618614262107765;  // std dev = 6.661, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
%   | | | else return 0.03943766512399199;  // std dev = 19.108, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=580 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(D, E) )
%   | then return 0.13873094508383138;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3035467258939654;  // std dev = 0.057, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then if ( companyceo(A, G) )
%   | | then if ( companyalsoknownas(A, H) )
%   | | | then return 0.3668351611279368;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17200254823265304;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.28684423222231364;  // std dev = 0.073, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( acquired(A, I), economicsectorcompany(B, I) )
%   | | then if ( companyalsoknownas(A, J), companyceo(A, K) )
%   | | | then return 0.16247233138464148;  // std dev = 0.144, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.36204019491949924;  // std dev = 0.359, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( companyalsoknownas(A, L), cityhascompanyoffice(M, L) )
%   | | | then return -0.04148839256561018;  // std dev = 3.729, 142.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=24 */
%   | | | else return 0.02604743636677601;  // std dev = 20.657, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,466 #pos=663 */


Starting fold 1

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 133

Target test facts examples: 9691
Target test pos	 examples: 264
Target test neg examples: 264

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, D), athleteledsportsteam(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( athleteplaysforteam(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.7311911912464264;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.3978578579130931;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22095817304672502;  // std dev = 0.473, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5669660767782165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(D, A), athleteplaysforteam(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | | | then return 0.1593966037951228;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.23788362197983193;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | then return -0.20812288766801215;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteplaysforteam(I, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15679541879558392;  // std dev = 1.310, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( athleteplaysforteam(J, A), athleteledsportsteam(K, A) )
%   | | | then return 0.431109585783852;  // std dev = 0.859, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.250544171703148;  // std dev = 2.193, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.43731294321432634;  // std dev = 0.895, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G), athleteplaysforteam(H, E) )
%   | | | then return -0.15073933618348548;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I), recursion_teamplayssport(I, B) )
%   | | then if ( teamplaysagainstteam(J, A), teamplaysinleague(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.17589649710592115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.19763963162041653;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.22633105371088097;  // std dev = 2.165, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return -0.15183292604349666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(D, A), recursion_teamplayssport(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1217237816273311;  // std dev = 1.373, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.3241432457642046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.13919349945751788;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(F, A), teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(F, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.36305034842824063;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1447208914699762;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteledsportsteam(I, A) )
%   | | | then return 0.47875270862428043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13903579309364988;  // std dev = 2.001, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, A), teamalsoknownas(A, F) )
%   | then return 0.045974065867855636;  // std dev = 0.421, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.300845491055008;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( recursion_teamplayssport(D, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.13683015119073005;  // std dev = 0.597, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.03591398911334517;  // std dev = 0.750, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( teamplaysinleague(H, I) )
%   | | | then return 0.15930066061988526;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19388133192114043;  // std dev = 1.707, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C), teamalsoknownas(D, E) )
%   | then return 0.20427535268593067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(G, F), recursion_teamplayssport(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(F, H) )
%   | | | then return 0.0011794302624288458;  // std dev = 0.594, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.25076685792022363;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12787941017489438;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysagainstteam(K, A), teamplaysinleague(K, L) )
%   | | | then return -0.09781677038626596;  // std dev = 0.825, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17920971058488872;  // std dev = 2.010, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.03129598771887379;  // std dev = 2.088, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   else if ( teamalsoknownas(D, E), recursion_teamplayssport(E, B) )
%   | then return 0.3301114803610771;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( teamalsoknownas(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2000049908751264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.21607118815317153;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.10714571681194392;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.1686317219557567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | | then if ( teamplaysagainstteam(J, H), recursion_teamplayssport(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.014935416221232003;  // std dev = 0.403, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.035625539707659803;  // std dev = 1.158, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03348299737573886;  // std dev = 1.885, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.3196507383665008;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1502110551695936;  // std dev = 0.750, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( teamalsoknownas(F, A), recursion_teamplayssport(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamplaysinleague(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.18744503286068354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, J) )
%   | | | then return -0.13753410256561682;  // std dev = 0.204, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.08304403595585831;  // std dev = 1.980, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */


Results
   AUC ROC   = 0.846706
   AUC PR    = 0.859342
   CLL	      = -0.49405
   Precision = 0.816901 at threshold = 0.5
   Recall    = 0.659091
   F1        = 0.72956


Total learning time: 1.633 seconds
Total inference time: 1.495 seconds
AUC ROC: 0.846706


Results scoring model
   AUC ROC   = 0.955621
   AUC PR    = 0.958291
   CLL	      = -0.343306
   Precision = 0.913043 at threshold = 0.5
   Recall    = 0.807692
   F1        = 0.857143


Total scoring time: 0.991 seconds
Parameter learned model CLL: -0.343306


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,true,false': 'athleteledsportsteam(F, D), athleteledsportsteam(G, A)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,true': 'teamalsoknownas(I, A), recursion_teamplayssport(I, B)', 'false,false,false': 'athleteplaysforteam(J, A)'}, {'true': [0.97, 1, 16], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.754, 8, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'athleteplaysforteam(C, A), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 14], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.473, 15, 10]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'athleteplaysforteam(D, A), athleteplaysforteam(D, C)', 'true,false,false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'athleteplaysforteam(I, H), athleteplaysforteam(I, A)', 'false,false,false': 'athleteplaysforteam(J, A), athleteledsportsteam(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.744, 3, 2], 'true,false,false,false': [0.042, 2, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.31, 6, 3], 'false,false,false,true': [0.859, 2, 8], 'false,false,false,false': [2.193, 12, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A), teamalsoknownas(E, F)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,true,false': 'teamplaysinleague(A, G), athleteplaysforteam(H, E)', 'false,false': 'teamalsoknownas(A, I), recursion_teamplayssport(I, B)', 'false,false,true': 'teamplaysagainstteam(J, A), teamplaysinleague(A, K)', 'false,false,false': 'teamalsoknownas(L, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.895, 1, 16], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.077, 11, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.037, 2, 0], 'false,false,false,false': [2.165, 11, 10]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'teamalsoknownas(D, A), recursion_teamplayssport(D, B)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A), teamplaysinleague(A, G)', 'false,false,true': 'athleteplaysforteam(F, H), recursion_teamplayssport(H, B)', 'false,false,false': 'athleteledsportsteam(I, A)'}, {'true,true': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.373, 8, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.064, 3, 0], 'false,false,true,true': [0.054, 0, 10], 'false,false,true,false': [0.033, 4, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.001, 10, 9]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'athleteledsportsteam(E, A), teamalsoknownas(A, F)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'teamplaysinleague(H, I)', 'false,false,false': 'athleteledsportsteam(J, A), athleteplaysforteam(K, A)'}, {'true,true': [0.421, 2, 1], 'true,false,true': [0.147, 0, 11], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.597, 10, 1], 'false,true': [0.75, 4, 3], 'false,false,true,true': [1.187, 4, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.707, 6, 7]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C), teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamplaysagainstteam(G, F), recursion_teamplayssport(G, B)', 'false,true,false': 'teamplaysinleague(F, H)', 'false,false': 'athleteplaysforteam(I, A)', 'false,false,true': 'athleteplaysforteam(I, J), recursion_teamplayssport(J, B)', 'false,false,false': 'teamplaysagainstteam(K, A), teamplaysinleague(K, L)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.594, 5, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [0.133, 0, 11], 'false,false,true,false': [0.071, 7, 0], 'false,false,false,true': [0.825, 6, 2], 'false,false,false,false': [2.01, 8, 10]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, E), recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(D, F), recursion_teamplayssport(F, B)', 'false,false,false': 'teamplaysagainstteam(G, A), teamalsoknownas(A, H)'}, {'true': [2.088, 24, 20], 'false,true': [0.924, 1, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamplaysinleague(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'teamalsoknownas(G, A), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(H, A), teamplaysinleague(H, I)', 'false,false,true': 'teamplaysagainstteam(J, H), recursion_teamplayssport(J, B)', 'false,false,false': 'teamalsoknownas(A, K)'}, {'true,true': [0.213, 0, 10], 'true,false,true': [0.039, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.403, 2, 1], 'false,false,false,true': [1.158, 6, 3], 'false,false,false,false': [1.885, 12, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), teamplaysinleague(D, E)', 'false': 'teamalsoknownas(F, A), recursion_teamplayssport(F, B)', 'false,false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamplaysinleague(A, I)', 'false,false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, J)'}, {'true,true': [0.004, 0, 2], 'true,false': [0.75, 1, 14], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.204, 15, 0], 'false,false,false,false': [1.98, 9, 10]}]]
[{'': [0.055363321799307655, 0.20408163265306123], 'false': [-1.4802973661668754e-17, 0.25], 'false,false': [0.2366863905325442, 0.20408163265306106], 'false,false,true': [nan, 0.2366863905325442], 'false,false,false': [nan, 0.20408163265306106], 'false,true': [nan, -3.7007434154171884e-18], 'false,true,false': [-6.938893903907228e-18, -9.25185853854297e-18]}, {'': [nan, 0.2090237410630022], 'false': [0.17836022965201148, 0.22697627969809275], 'false,false': [0.22222222222222224, 0.22419389175528792], 'false,true': [-6.344131569286608e-17, 2.7755575615628915e-18], 'false,true,false': [nan, 0.0]}, {'': [0.12731709570967698, 0.1789072714281991], 'false': [0.0, 0.17780888809027964], 'false,false': [0.1907472667675513, 0.1698700518820537], 'false,false,true': [nan, 0.1907472667675513], 'false,false,false': [0.07382794458120741, 0.20029822342540582], 'true': [0.0, 0.11156495279033236], 'true,false': [nan, 0.11156495279033234], 'true,false,false': [0.1107419168718112, 0.00088570130677873]}, {'': [0.04715811636478516, 0.1699287404701514], 'false': [0.000533845306932174, 0.21437572072626518], 'false,false': [0.0, 0.21813439088956], 'false,false,false': [0.0006768131554952123, 0.22321410229932154], 'true': [nan, 0.04715811636478516], 'false,true': [nan, 0.000533845306932174], 'false,true,false': [0.000533845306932174, nan], 'false,false,true': [nan, 0.0]}, {'': [0.13968279834357222, 0.13683033746627912], 'true': [0.0, 0.14508239524883526], 'true,false': [nan, 0.1450823952488352], 'false': [0.04126754043535311, 0.1436540695009772], 'false,false': [0.052901616872999754, 0.20560045286625434], 'false,false,false': [0.0, 0.21065115019801706], 'false,false,true': [0.0002865508122515292, 0.00027383054789006586], 'false,true': [0.0, 0.001353152378972632]}, {'': [0.0644725692199104, 0.18513702613599317], 'false': [0.08026103253115797, 0.21632753627853935], 'false,false': [0.20124978980038707, 0.22402778485402225], 'false,false,false': [nan, 0.22402778485402225], 'false,false,true': [0.20124978980038707, nan], 'true': [0.059042999209683276, 0.06505715465577251], 'true,false': [0.0019765547394866175, 0.03235777066444878], 'true,false,false': [nan, 0.03235777066444878]}, {'': [0.0, 0.12139525896510513], 'false': [0.0504119916800718, 0.13140470141452096], 'false,false': [0.03533990594125555, 0.19787382927042696], 'false,false,false': [0.08513950938393298, 0.22436453416242927], 'false,true': [nan, 0.05041199168007179], 'false,true,false': [0.0504119916800718, nan], 'false,false,true': [0.001609210340216983, 0.0007284536447787066], 'true': [0.0, nan]}, {'': [0.09913039484525901, 0.13753633249266478], 'false': [0.12205644585712629, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.027411778816494536, 0.1411414553972139], 'false': [0.0, 0.14463931870223098], 'false,false': [0.05410258953052748, 0.1529211605937914], 'false,false,false': [0.14901349008413983, 0.15444895797943992], 'false,false,true': [nan, 0.05410258953052748], 'true': [0.0045327598001033585, 0.0002502473926286793], 'true,false': [0.0002502473926286793, nan]}, {'': [0.036070858457257236, 0.12573023087298413], 'false': [nan, 0.12573023087298413], 'false,false': [0.0, 0.12857133185658096], 'false,false,false': [0.0027683714987327543, 0.2064241429282944], 'true': [6.733754757889954e-06, 0.037501784153841276], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
0;false;teamplaysagainstteam(D, A).;true;true
0;false,true;athleteledsportsteam(F, D), athleteledsportsteam(G, A).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysagainstteam(D, A).;true;true
1;true;recursion_teamplayssport(D, B).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;true;recursion_teamplayssport(C, B).;true;true
2;true,false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true
2;false;teamalsoknownas(A, G), recursion_teamplayssport(G, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
3;false;teamplaysagainstteam(E, A), teamalsoknownas(E, F).;true;true
3;false,false;teamalsoknownas(A, I), recursion_teamplayssport(I, B).;true;true
3;false,false,false;teamalsoknownas(L, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;true;recursion_teamplayssport(C, B).;true;true
4;false;teamalsoknownas(E, A).;true;true
4;false,true;recursion_teamplayssport(E, B).;true;true
4;false,false;athleteplaysforteam(F, A), teamplaysinleague(A, G).;true;true
4;false,false,true;athleteplaysforteam(F, H), recursion_teamplayssport(H, B).;true;true
4;false,false,false;athleteledsportsteam(I, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
5;true;athleteledsportsteam(E, A), teamalsoknownas(A, F).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A), recursion_teamplayssport(C, B).;true;true
6;false;teamalsoknownas(F, A).;true;true
6;false,false;athleteplaysforteam(I, A).;true;true
6;false,false,true;athleteplaysforteam(I, J), recursion_teamplayssport(J, B).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
7;false;teamalsoknownas(D, E), recursion_teamplayssport(E, B).;true;true
8;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamplaysinleague(A, D).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
8;false;teamalsoknownas(G, A), recursion_teamplayssport(G, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
9;true;teamalsoknownas(A, D), teamplaysinleague(D, E).;true;true
9;false;teamalsoknownas(A, G), recursion_teamplayssport(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteledsportsteam(F, E), athleteledsportsteam(G, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then if ( teamplaysinleague(A, J), teamalsoknownas(A, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then if ( athleteplayssport(E, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | then if ( teamplaysinleague(A, I), athleteplaysinleague(G, I) )
%   | | then return 0.7658892029396682;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | | then return -8.086750450562064E-4;  // std dev = 0.853, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5113345059311679;  // std dev = 1.444, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, D), teamplaysagainstteam(E, A) )
%   | | then return 0.15475674778234996;  // std dev = 0.731, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.18765017444305257;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, F), recursion_teamplayssport(F, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | | then if ( teamplaysinleague(A, I), teamalsoknownas(A, J) )
%   | | | then return 0.09970714198448491;  // std dev = 1.075, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.44529723017681194;  // std dev = 1.660, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( athleteplaysforteam(K, A) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return 0.4837703863548597;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4444997473118354;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2638225197211958;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | then if ( athleteplayssport(H, B), athleteledsportsteam(I, A) )
%   | | then return -0.12718394547607018;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return -0.10861359799588884;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.1615914644811391;  // std dev = 0.094, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.17435413722005078;  // std dev = 1.829, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | | then return -0.13506282152277233;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(F, A) )
%   | | | then return 0.11968355876121047;  // std dev = 0.559, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.38611679960412215;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(G, A) )
%   | then return -0.0014145435777444398;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteplaysforteam(H, A), teamplaysinleague(A, I) )
%   | | then if ( athleteplaysforteam(H, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.3390749377706852;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11696243329721034;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0.4502094287102426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11939603765663653;  // std dev = 1.592, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, A), teamalsoknownas(A, F) )
%   | then return 0.04806573265505706;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.29140094550364704;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( athleteplaysforteam(G, A), athleteledsportsteam(G, A) )
%   | | | then return 0.023134414474839618;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1322030540163925;  // std dev = 0.277, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | then if ( teamplaysinleague(I, J) )
%   | | | then return 0.2970545548885139;  // std dev = 0.583, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.23886322663132348;  // std dev = 0.201, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplaysforteam(H, I), teamalsoknownas(I, L) )
%   | | | then return 0.5322173273388873;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09719617263261209;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.11564446344987728;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then return 0.24847811218774507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then if ( athleteplaysforteam(E, A), teamalsoknownas(A, F) )
%   | | then return 0.17631756752645056;  // std dev = 0.381, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.13279418480267058;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.22234297985747717;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.10621877782131497;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | | then return 0.15549032744417657;  // std dev = 1.542, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.10100898741979975;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysagainstteam(D, A), recursion_teamplayssport(D, B) )
%   | then if ( teamalsoknownas(E, D), teamalsoknownas(F, E) )
%   | | then return 0.025915613086716287;  // std dev = 0.518, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteledsportsteam(G, D), teamplaysagainstteam(A, D) )
%   | | | then return 0.19072561682875414;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3061719943315108;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then if ( athleteplayssport(I, B), athleteplaysforteam(I, J) )
%   | | | then return -0.15177654506395896;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08262691140897244;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | | then return 0.07703343651507472;  // std dev = 1.084, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.09907665765817344;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(M, N), recursion_teamplayssport(N, B) )
%   | then return 0.20224361204262875;  // std dev = 0.329, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.0649859456886088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteplaysforteam(F, A), athleteplayssport(F, B) )
%   | | then return 0.15303874764634826;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22115640921958044;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08842259809270699;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamalsoknownas(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.2008260858894202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | then if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | | then return -0.015182927113855257;  // std dev = 0.931, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.12487201876656136;  // std dev = 1.238, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( teamplaysagainstteam(L, A), teamalsoknownas(L, M) )
%   | | | then return -0.06925652892328343;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09221252385780224;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.22798304210080272;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(F, G), athleteplayssport(F, B) )
%   | | | then return 0.13423720363748703;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15759967481540577;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0347343424203288;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, H), recursion_teamplayssport(H, B) )
%   | then return -0.0714412793352359;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then if ( athleteplayssport(J, B), athleteplaysforteam(J, K) )
%   | | | then return -0.1291963562009149;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07148833212402442;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | | then return 0.08110252870800733;  // std dev = 1.403, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.08274370132404385;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.899514
   AUC PR    = 0.895251
   CLL	      = -0.411892
   Precision = 0.82996 at threshold = 0.5
   Recall    = 0.776515
   F1        = 0.802348


Total learning time: 34.252 seconds
Total inference time: 2.187 seconds
AUC ROC: 0.899514


Results scoring model
   AUC ROC   = 0.994083
   AUC PR    = 0.993813
   CLL	      = -0.222497
   Precision = 0.928571 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.962963


Total scoring time: 1.103 seconds
Refined model CLL: -0.222497


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899514
   AUC PR    = 0.895251
   CLL	      = -0.411892
   Precision = 0.82996 at threshold = 0.5
   Recall    = 0.776515
   F1        = 0.802348


Total learning time: 37.979000000000006 seconds
Total inference time: 2.187 seconds
AUC ROC: 0.899514
Total revision time: 37.979000000000006
Best scored revision CLL: -0.222497


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:31:07
{'AUC ROC': 0.899514, 'AUC PR': 0.895251, 'CLL': -0.411892, 'Precision': [0.82996, 0.5], 'Recall': 0.776515, 'F1': 0.802348, 'Learning time': 37.979000000000006, 'Inference time': 2.187, 'parameter_0.2': {'AUC ROC': 0.846706, 'AUC PR': 0.859342, 'CLL': -0.49405, 'Precision': [0.816901, 0.5], 'Recall': 0.659091, 'F1': 0.72956, 'Learning time': 1.633, 'Inference time': 1.495}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.797542874493451;  // std dev = 1.371, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.08124500429442717;  // std dev = 1.371, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6648747377969743;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.09891260188923955;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7315414044636407;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30117435151140737;  // std dev = 0.498, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.2393244666238219;  // std dev = 4.400, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.46242525905309484;  // std dev = 1.369, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.09389019282226561;  // std dev = 1.339, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21117245070864624;  // std dev = 3.159, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.145389563930522;  // std dev = 4.090, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.14158661663036917;  // std dev = 1.318, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2675876052042021;  // std dev = 1.334, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.07315213701037672;  // std dev = 1.319, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.132886869854805;  // std dev = 3.159, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.14990234845009284;  // std dev = 3.674, 86.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | else return -0.17079232495901792;  // std dev = 0.887, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.05522465153905762;  // std dev = 1.616, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.07175475965247892;  // std dev = 3.565, 87.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.2981191296927481;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.17125801853587935;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.05929973524581081;  // std dev = 3.865, 100.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20415237752875995;  // std dev = 1.383, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.14660629651507773;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.012236491532127957;  // std dev = 1.447, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.02535404616507882;  // std dev = 3.130, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.870394
   AUC PR    = 0.851244
   CLL	      = -0.485354
   Precision = 0.914474 at threshold = 0.5
   Recall    = 0.526515
   F1        = 0.668269


Total learning time: 1.921 seconds
Total inference time: 1.405 seconds
AUC ROC: 0.870394


Results scoring model
   AUC ROC   = 0.891064
   AUC PR    = 0.875883
   CLL	      = -0.446488
   Precision = 0.939394 at threshold = 0.5
   Recall    = 0.584906
   F1        = 0.72093


Total scoring time: 1.108 seconds
Parameter learned model CLL: -0.446488


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.371, 2, 31], 'false,true,true': [1.371, 31, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.491, 5, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.236, 10, 10], 'false,false,false,false': [1.651, 5, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.366, 2, 28], 'false,true,false,true': [0.983, 29, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false': [0.498, 22, 21]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.4, 53, 53], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(I, A)'}, {'true,true': [1.369, 2, 31], 'true,false': [0.0, 0, 0], 'false,true,true': [1.339, 31, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.159, 20, 20], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.09, 53, 53], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteledsportsteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [1.318, 11, 14], 'true,false,true': [1.334, 2, 17], 'true,false,false,true': [1.319, 20, 2], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.159, 20, 20], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [3.674, 34, 52], 'true,false': [0.887, 19, 1], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [1.616, 10, 9], 'false,true': [3.565, 43, 44], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamalsoknownas(D, A)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.041, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.865, 49, 51], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [1.383, 2, 31], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.038, 5, 0], 'false,true,true,false': [1.447, 5, 4], 'false,true,false': [3.13, 41, 18], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05693296602387652, 0.210546068680803], 'false': [0.05693296602387513, 0.24999999999999983], 'false,false': [0.2469135802469134, 0.24973985431841783], 'false,false,false': [0.25, 0.2479338842975207], 'false,false,true': [0.2469135802469134, nan], 'false,true': [0.05693296602387513, nan]}, {'': [nan, 0.21550593776186278], 'false': [0.19306499728845825, 0.24356537928585237], 'false,false': [-7.401486830834377e-17, 0.24847902140265302], 'false,true': [0.062222222222221645, 0.03222222222222223], 'false,true,false': [0.03222222222222223, nan]}, {'': [0.18266861971301251, nan]}, {'': [0.05677242591440541, 0.1843427952440802], 'false': [0.054327742817237165, 0.24953554029381136], 'false,false': [0.24953554029381136, nan], 'false,false,true': [nan, 0.24953554029381136], 'true': [0.05677242591440541, nan], 'false,true': [0.054327742817237165, nan]}, {'': [0.15781344978112527, nan]}, {'': [0.09836644145028453, 0.24948214349549064], 'false': [nan, 0.24948214349549064], 'false,false': [0.24948214349549064, nan], 'true': [0.06951729533084018, 0.11473381833850807], 'true,false': [0.0936996688332992, 0.07909558042291445], 'true,false,false': [0.07909558042291445, nan]}, {'': [0.15053785218883056, nan], 'true': [0.15699785773694527, 0.039319485638013005]}, {'': [0.1374119206267553, 0.14609400515889276], 'false': [0.14609400515889276, nan]}, {'': [0.04924401916133744, 0.14938175632287978], 'false': [0.14938175632287978, nan], 'true': [0.0, 0.00042772631559317986], 'true,false': [0.00042772631559317986, nan]}, {'': [0.058000611957737515, 0.16411147034019735], 'false': [0.16411147034019738, nan], 'false,true': [0.15545823196856895, 0.16609453135554983], 'false,true,true': [0.0002854437332783788, 0.23265425393136985], 'true': [0.058000611957737515, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
8;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamalsoknownas(D, A).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
9;false;teamalsoknownas(G, A).;true;true
9;false,true;teamplaysagainstteam(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( teamplaysagainstteam(A, D), teamalsoknownas(D, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysinleague(A, I) )
%   | | then if ( teamplaysagainstteam(D, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, J) )
%   | | | then return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.731050376110864;  // std dev = 0.117, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( athleteplaysforteam(G, A), teamplaysinleague(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3488017207573922;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09624629221906407;  // std dev = 0.173, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.7595551847189356;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( athleteplaysinleague(J, L), teamplaysinleague(A, L) )
%   | | | then return 0.7636183198639678;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4328730945374107;  // std dev = 2.422, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( athleteplayssport(M, B), athleteplaysforteam(M, N) )
%   | | | then return 0.05365338242958213;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.137056849107295;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.5673824873101123;  // std dev = 0.153, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, G) )
%   | | | then return 0.27918737447624004;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5908456622711616;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(D, H) )
%   | | then return -0.14110221035082407;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysagainstteam(I, A), teamplaysagainstteam(D, I) )
%   | | | then return 0.6323861851522582;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3585751391155986;  // std dev = 2.600, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.11552055524019934;  // std dev = 0.025, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | | then return 0.16569852128610138;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.07055041214079863;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(D, F) )
%   | | then return 0.2872172796788182;  // std dev = 0.675, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.44102725962803013;  // std dev = 0.194, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, G), teamplaysagainstteam(D, G) )
%   | | then return -0.1252609497912245;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( athleteplaysforteam(C, H), teamalsoknownas(D, H) )
%   | | | then return 0.07180732554794979;  // std dev = 0.892, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31641880080292084;  // std dev = 2.424, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.10423325127366795;  // std dev = 0.023, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( athleteplayssport(J, B), athleteplaysforteam(J, K) )
%   | | then return 0.14128961050374517;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.060230512259502364;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.298555571954982;  // std dev = 0.099, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.41419372469278126;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, I), recursion_teamplayssport(A, I) )
%   | | | then return -0.2227014733241338;  // std dev = 0.364, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16547429378309667;  // std dev = 1.388, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return 0.3253657269611901;  // std dev = 1.290, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.20332476573201166;  // std dev = 1.601, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.09489641438513888;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( teamplaysagainstteam(A, L) )
%   | | then return 0.1212450077152678;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.04894730402308937;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(G, E) )
%   | | | then return 0.2693697773028248;  // std dev = 0.115, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.00563159579249882;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3077534441368716;  // std dev = 0.138, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( athleteplaysforteam(H, A), teamplaysinleague(A, I) )
%   | | then return -0.11565856427554917;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysinleague(C, J) )
%   | | | then return 0.3362198600383324;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14159460296194273;  // std dev = 2.469, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.08705431136964698;  // std dev = 0.019, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( athleteplayssport(L, B), athleteplaysforteam(L, M) )
%   | | then return 0.11003505805037435;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.034235830610619605;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysagainstteam(D, C), recursion_teamplayssport(D, B) )
%   | | then return 0.2313391235601505;  // std dev = 0.140, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.07151015469034262;  // std dev = 0.218, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3413985233515053;  // std dev = 0.352, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysinleague(A, H), athleteplaysforteam(I, A) )
%   | | then return -0.10473345862418489;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0.23488686274015907;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10080166196909489;  // std dev = 2.286, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | | then if ( teamalsoknownas(A, M) )
%   | | | then return -0.12382473319774653;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05234797916667525;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09038663630853151;  // std dev = 0.161, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then return 0.159569017646666;  // std dev = 0.126, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0.2767010944058378;  // std dev = 0.331, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( teamalsoknownas(A, J) )
%   | | | then return -0.2854158055236488;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.057797344616492025;  // std dev = 1.262, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( teamplaysinleague(A, K), teamplaysinleague(G, K) )
%   | | | then return -0.01772830057297099;  // std dev = 1.134, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15721264665278417;  // std dev = 1.677, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( athleteplayssport(L, B), athleteplaysforteam(L, M) )
%   | | then if ( teamalsoknownas(N, A) )
%   | | | then return -0.11947081992161321;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05233366199786767;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.08330358069377485;  // std dev = 0.151, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.18499001078656485;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.06720087611501797;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.18248587519906595;  // std dev = 0.077, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( athleteplaysforteam(H, A), teamplaysinleague(F, I) )
%   | | | then return 0.1725121309006239;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.011461928731751461;  // std dev = 0.576, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysforteam(M, A) )
%   | | | then return -0.08711829694329747;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07348773849799288;  // std dev = 2.449, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else if ( teamplaysagainstteam(N, A) )
%   | | | then return -0.0789321386727277;  // std dev = 0.120, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.03669057225158967;  // std dev = 0.835, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B), athleteplaysinleague(E, D) )
%   | | then return 0.14185113746286174;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.07094981704110911;  // std dev = 0.197, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.24070585836268768;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(G, A) )
%   | | then return -0.062369497231769266;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | | then return 0.1334440602819473;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.10562367793741129;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(J, B), athleteplaysforteam(J, K) )
%   | | then if ( teamalsoknownas(K, L), teamalsoknownas(L, M) )
%   | | | then return -0.0661377346075248;  // std dev = 1.805, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.09957127329748576;  // std dev = 1.536, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else return -0.07464402485991556;  // std dev = 0.132, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.929357
   AUC PR    = 0.908255
   CLL	      = -0.356942
   Precision = 0.830986 at threshold = 0.5
   Recall    = 0.893939
   F1        = 0.861314


Total learning time: 144.466 seconds
Total inference time: 3.846 seconds
AUC ROC: 0.929357


Results scoring model
   AUC ROC   = 0.97775
   AUC PR    = 0.977776
   CLL	      = -0.264384
   Precision = 0.87931 at threshold = 0.5
   Recall    = 0.962264
   F1        = 0.918919


Total scoring time: 1.823 seconds
Refined model CLL: -0.264384


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.929357
   AUC PR    = 0.908255
   CLL	      = -0.356942
   Precision = 0.830986 at threshold = 0.5
   Recall    = 0.893939
   F1        = 0.861314


Total learning time: 149.318 seconds
Total inference time: 3.846 seconds
AUC ROC: 0.929357
Total revision time: 149.318
Best scored revision CLL: -0.264384


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:33:42
{'AUC ROC': 0.929357, 'AUC PR': 0.908255, 'CLL': -0.356942, 'Precision': [0.830986, 0.5], 'Recall': 0.893939, 'F1': 0.861314, 'Learning time': 149.318, 'Inference time': 3.846, 'parameter_0.4': {'AUC ROC': 0.870394, 'AUC PR': 0.851244, 'CLL': -0.485354, 'Precision': [0.914474, 0.5], 'Recall': 0.526515, 'F1': 0.668269, 'Learning time': 1.921, 'Inference time': 1.405}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7601097194132377;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.07802127766644519;  // std dev = 1.676, 47.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6346621684279856;  // std dev = 2.116, 48.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.0838358312297217;  // std dev = 1.379, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7388288350946528;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28364836802291327;  // std dev = 0.495, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24118512415620527;  // std dev = 5.484, 158.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4413530807568447;  // std dev = 2.120, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.09479293464353634;  // std dev = 1.661, 47.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21431144119636172;  // std dev = 3.865, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14652327115056027;  // std dev = 5.141, 158.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.10963554665600972;  // std dev = 1.951, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2896050293482805;  // std dev = 1.636, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.07250491573575582;  // std dev = 1.636, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.13548007030788198;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.1672117572890631;  // std dev = 4.538, 125.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=78 */
%   | else return -0.2061954859638429;  // std dev = 1.007, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.04762559084524019;  // std dev = 2.559, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.07538784981959402;  // std dev = 4.157, 115.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamalsoknownas(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.32119047052390015;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.16580274682575946;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.05643274420694356;  // std dev = 4.839, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.18196296050769634;  // std dev = 2.125, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.08990007680164129;  // std dev = 0.880, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.0036720446477366275;  // std dev = 2.221, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return -0.01740224542179229;  // std dev = 3.441, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.871155
   AUC PR    = 0.844889
   CLL	      = -0.488836
   Precision = 0.914474 at threshold = 0.5
   Recall    = 0.526515
   F1        = 0.668269


Total learning time: 2.078 seconds
Total inference time: 1.499 seconds
AUC ROC: 0.871155


Results scoring model
   AUC ROC   = 0.888159
   AUC PR    = 0.86485
   CLL	      = -0.464802
   Precision = 0.901961 at threshold = 0.5
   Recall    = 0.582278
   F1        = 0.707692


Total scoring time: 1.131 seconds
Parameter learned model CLL: -0.464802


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.124, 5, 46], 'false,true,true': [1.676, 44, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.268, 12, 9], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.335, 10, 12], 'false,false,false,false': [2.058, 8, 9]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [2.116, 5, 43], 'false,true,false,true': [1.379, 39, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false': [0.495, 35, 31]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.484, 79, 79], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(A, I)'}, {'true,true': [2.12, 5, 46], 'true,false': [0.0, 0, 0], 'false,true,true': [1.661, 44, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.865, 30, 30], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.141, 79, 79], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteledsportsteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [1.951, 18, 20], 'true,false,true': [1.636, 3, 26], 'true,false,false,true': [1.636, 28, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.864, 30, 30], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [4.538, 47, 78], 'true,false': [1.007, 32, 1], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [2.559, 24, 19], 'false,true': [4.157, 55, 60], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamalsoknownas(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.047, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.839, 75, 77], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(A, G)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [2.125, 5, 46], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.88, 12, 1], 'false,true,true,false': [2.221, 12, 9], 'false,true,false': [3.441, 50, 23], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08842752787389532, 0.21329373744431881], 'false': [0.05975554549569926, 0.2500000000000015], 'false,false': [0.2448979591836735, 0.24852071005917173], 'false,false,false': [0.24793388429752028, 0.24913494809688577], 'false,false,true': [0.2448979591836735, nan], 'false,true': [0.05975554549569926, nan]}, {'': [nan, 0.21891512638193797], 'false': [0.19996490310717446, 0.2433581382289554], 'false,false': [-7.401486830834377e-17, 0.2454116431933541], 'false,true': [0.09331597222222254, 0.04640095181439622], 'false,true,false': [0.04640095181439622, nan]}, {'': [0.19030941430072126, nan]}, {'': [0.0881654634602713, 0.1889215612173918], 'false': [0.05866865246794351, 0.24898441563176305], 'false,false': [0.24898441563176305, nan], 'false,false,true': [nan, 0.24898441563176305], 'true': [0.0881654634602713, nan], 'false,true': [0.05866865246794351, nan]}, {'': [0.1673017560644343, nan]}, {'': [0.11353106714335183, 0.24886228982605016], 'false': [nan, 0.24886228982605016], 'false,false': [0.24886228982605016, nan], 'true': [0.10016086322934108, 0.12197920232315905], 'true,false': [0.09227606525188616, 0.08638959534490953], 'true,false,false': [0.08638959534490953, nan]}, {'': [0.15979185954238612, nan], 'true': [0.16474249351820439, 0.030728564674421813]}, {'': [0.1523015114913072, 0.15029877351611803], 'false': [0.15029877351611803, nan]}, {'': [0.05307582493720925, 0.15406322374219777], 'false': [0.15406322374219777, nan], 'true': [0.0, 0.0005596061576229362], 'true,false': [0.0005596061576229362, nan]}, {'': [0.08857496159098145, 0.16465849144509018], 'false': [0.16465849144509012, nan], 'false,true': [0.16961456464975672, 0.16223256490853957], 'false,true,true': [0.05950536239026075, 0.23493450544141425], 'true': [0.08857496159098145, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
8;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamalsoknownas(A, D).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | then if ( athleteledsportsteam(I, H), athleteplayssport(I, J) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(A, K), athleteplaysinleague(C, K) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5399671169176941;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | then if ( athleteplaysforteam(N, A), athleteplaysinleague(N, M) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.12224322176323284;  // std dev = 0.139, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), recursion_teamplayssport(F, B) )
%   | | then return 0.7225570860038263;  // std dev = 0.052, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( teamalsoknownas(G, E), teamalsoknownas(H, G) )
%   | | | then return 0.26503341040092215;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6024269305221465;  // std dev = 1.459, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return -0.09291242546312062;  // std dev = 0.192, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.7690821054546543;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( athleteplaysforteam(J, K), teamalsoknownas(K, L) )
%   | | | then return 0.4720944485344854;  // std dev = 2.199, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.5920508819868286;  // std dev = 1.554, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( athleteplayssport(M, B), athleteplaysforteam(M, N) )
%   | | | then return -0.036702535804164785;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.13595345916774595;  // std dev = 0.084, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.5377930156548014;  // std dev = 0.156, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.22193400851210784;  // std dev = 0.235, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2893492181797732;  // std dev = 1.813, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.508855328850335;  // std dev = 1.587, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.4276761123042178;  // std dev = 1.715, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.1010230125953132;  // std dev = 0.122, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | else if ( teamalsoknownas(A, K) )
%   | | then return -0.1184039773970698;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(A, L), teamalsoknownas(L, M) )
%   | | | then return 0.14587441148811192;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.02075515926243544;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(D, G) )
%   | | then return 0.4386139783673108;  // std dev = 0.218, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.1925649149333884;  // std dev = 0.714, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( athleteplayssport(I, J), recursion_teamplayssport(A, J) )
%   | | | then return -0.18723653130273263;  // std dev = 0.206, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.23042603816927593;  // std dev = 1.794, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.5017310211355711;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3252874989207562;  // std dev = 2.303, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | then if ( teamplaysagainstteam(N, A), teamalsoknownas(N, P) )
%   | | then return 0.28415366855696406;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1470128897619855;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09026266167037539;  // std dev = 0.137, 51.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.3125696976375442;  // std dev = 0.130, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.16122306082725127;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.179480096184512;  // std dev = 1.782, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.37939712626648825;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24448329619374906;  // std dev = 2.303, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08507603365615025;  // std dev = 0.114, 44.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=1 */
%   | else if ( teamplaysagainstteam(K, A), teamplaysinleague(K, L) )
%   | | then return -0.10600242376125402;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(M, B), athleteplaysforteam(M, N) )
%   | | | then return 0.05267741711790811;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06027982414259916;  // std dev = 0.578, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then return 0.24685886282609976;  // std dev = 0.128, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(C, H), teamplaysagainstteam(H, A) )
%   | | | then return 0.12526558141004368;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14586263758581502;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0.3174151426617604;  // std dev = 0.990, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.13192024817804351;  // std dev = 2.821, 44.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=28 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.09147341583772667;  // std dev = 0.013, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | | then if ( athleteledsportsteam(M, L) )
%   | | | then return 0.1317591897047416;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11066608127992499;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10553114770346742;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysinleague(A, D), teamalsoknownas(E, F) )
%   | | then return 0.22899826589871858;  // std dev = 0.199, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( teamplaysinleague(A, G), teamplaysinleague(E, G) )
%   | | | then return -0.15757870842264607;  // std dev = 0.612, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1312318146495508;  // std dev = 2.922, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | | then return 0.21228424703999865;  // std dev = 0.654, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.12581921327248347;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, J) )
%   | then return -0.08415053579733603;  // std dev = 0.012, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( athleteplayssport(K, B), athleteplaysforteam(K, L) )
%   | | then if ( athleteledsportsteam(M, L) )
%   | | | then return 0.11732211735883193;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10024837756379568;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09599697225569968;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( athleteledsportsteam(D, C), athleteplaysinleague(D, E) )
%   | then if ( athleteplayssport(D, B), teamplaysinleague(A, E) )
%   | | then return 0.18229301156592165;  // std dev = 0.070, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.03702563944611823;  // std dev = 0.668, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | then return 0.0902028338657987;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31511530612089;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( teamplaysagainstteam(H, A), athleteledsportsteam(I, H) )
%   | then return -0.0943306519212352;  // std dev = 0.120, 42.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamalsoknownas(A, L), teamalsoknownas(L, A) )
%   | | | then return 0.03342380530206004;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13434912372252425;  // std dev = 2.415, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | else if ( athleteplayssport(M, B), athleteplaysforteam(M, N) )
%   | | | then return -0.003998638193429382;  // std dev = 0.908, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.08603329015969591;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamalsoknownas(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.15351221975094248;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.12616736228912173;  // std dev = 0.189, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | then if ( athleteledsportsteam(G, F), athleteplaysinleague(G, H) )
%   | | then if ( athleteplayssport(G, B), teamplaysinleague(A, H) )
%   | | | then return 0.15635815551498075;  // std dev = 0.061, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.030662146111456613;  // std dev = 0.669, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( athleteledsportsteam(I, F) )
%   | | | then return 0.4091213992170493;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16760834827456353;  // std dev = 0.432, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return -0.0064290041665655715;  // std dev = 1.608, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.10140048314946373;  // std dev = 2.304, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else return -0.06441866841352072;  // std dev = 0.128, 53.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, C), teamalsoknownas(E, D) )
%   | then return 0.06033380446938415;  // std dev = 0.170, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.14819387995265515;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   else if ( teamplaysagainstteam(F, A), teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(F, G), athleteledsportsteam(H, F) )
%   | | then return -0.10719321869296804;  // std dev = 0.088, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( athleteplaysinleague(I, G), athleteplayssport(J, B) )
%   | | | then return 0.10255288515547996;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06654463389799511;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | then if ( athleteplaysinleague(K, M), teamplaysinleague(A, M) )
%   | | | then return 0.21468641284418744;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07156888465274848;  // std dev = 2.587, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | else if ( athleteplayssport(N, B), athleteplaysforteam(N, P) )
%   | | | then return -0.01066999670727842;  // std dev = 0.915, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.07497127628699722;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.935879
   AUC PR    = 0.926075
   CLL	      = -0.336177
   Precision = 0.813115 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.871705


Total learning time: 107.394 seconds
Total inference time: 3.474 seconds
AUC ROC: 0.935879


Results scoring model
   AUC ROC   = 0.974764
   AUC PR    = 0.97343
   CLL	      = -0.251579
   Precision = 0.895349 at threshold = 0.5
   Recall    = 0.974684
   F1        = 0.933333


Total scoring time: 2.035 seconds
Refined model CLL: -0.251579


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935879
   AUC PR    = 0.926075
   CLL	      = -0.336177
   Precision = 0.813115 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.871705


Total learning time: 112.638 seconds
Total inference time: 3.474 seconds
AUC ROC: 0.935879
Total revision time: 112.638
Best scored revision CLL: -0.251579


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:35:40
{'AUC ROC': 0.935879, 'AUC PR': 0.926075, 'CLL': -0.336177, 'Precision': [0.813115, 0.5], 'Recall': 0.939394, 'F1': 0.871705, 'Learning time': 112.638, 'Inference time': 3.474, 'parameter_0.6': {'AUC ROC': 0.871155, 'AUC PR': 0.844889, 'CLL': -0.488836, 'Precision': [0.914474, 0.5], 'Recall': 0.526515, 'F1': 0.668269, 'Learning time': 2.078, 'Inference time': 1.499}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7711924133603822;  // std dev = 2.341, 69.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(F, D), athleteledsportsteam(G, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.03928696233638523;  // std dev = 1.895, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37814893509951203;  // std dev = 3.533, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else if ( athleteplaysforteam(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30642479716847787;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6639573836063716;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | | else if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07326893581890091;  // std dev = 1.672, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.5938275134765021;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.2564944020464006;  // std dev = 0.491, 91.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=40 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5902140223112351;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplaysforteam(D, A), athleteplaysforteam(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | | | then return 0.057010088106359186;  // std dev = 1.067, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2990382297728405;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | then return 0.42463215493807116;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteplaysforteam(I, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20028115257529572;  // std dev = 2.445, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( athleteplaysforteam(J, A), athleteledsportsteam(K, A) )
%   | | | then return 0.24158827178483858;  // std dev = 2.293, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.2337838020804439;  // std dev = 4.666, 107.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=52 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.4850589615508484;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.43659105379831553;  // std dev = 2.325, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G), athleteplaysforteam(H, E) )
%   | | | then return -0.10155134276825313;  // std dev = 1.375, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return -0.17342328010407912;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, I), recursion_teamplayssport(I, B) )
%   | | then if ( teamplaysagainstteam(J, A), teamplaysinleague(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3094333353292204;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return 0.2796147871683807;  // std dev = 1.850, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.15150077872259146;  // std dev = 4.316, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.12361219946162973;  // std dev = 0.753, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( teamalsoknownas(D, A), recursion_teamplayssport(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16375429834653135;  // std dev = 2.973, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.34030061324354605;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.03689807081565941;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( athleteplaysforteam(F, A), teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(F, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.4485269297460696;  // std dev = 0.594, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.20012077436105685;  // std dev = 0.811, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( athleteledsportsteam(I, A) )
%   | | | then return 0.18709525058757243;  // std dev = 0.697, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.14615720788414055;  // std dev = 3.963, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, A), teamalsoknownas(A, F) )
%   | then return 0.08360917841451755;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2712050926744606;  // std dev = 1.461, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | else if ( recursion_teamplayssport(D, B) )
%   | | | then return -0.09424736959335334;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.07881369507878873;  // std dev = 1.665, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.0977485182223511;  // std dev = 1.845, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( teamplaysinleague(H, I) )
%   | | | then return 0.16097700249587613;  // std dev = 2.558, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14116147162114745;  // std dev = 3.599, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C), teamalsoknownas(D, E) )
%   | then return 0.2186654335922337;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21866543359223367;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(G, F), recursion_teamplayssport(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(F, H) )
%   | | | then return 0.06492591350508926;  // std dev = 1.961, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.13712555157205683;  // std dev = 0.605, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.32038723666488633;  // std dev = 0.884, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.1780911369099822;  // std dev = 0.866, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( teamplaysagainstteam(K, A), teamplaysinleague(K, L) )
%   | | | then return 0.05909835592792656;  // std dev = 1.843, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.11244592740894069;  // std dev = 3.987, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.0655028434157071;  // std dev = 4.535, 171.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=87 */
%   else if ( teamalsoknownas(D, E), recursion_teamplayssport(E, B) )
%   | then return 0.14565580648068016;  // std dev = 2.549, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( teamalsoknownas(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(A, H) )
%   | | | then return -0.19593522237159935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.24502846487950952;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.14971405074115235;  // std dev = 1.332, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.12474945103327079;  // std dev = 0.229, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.17398715407947096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | | then if ( teamplaysagainstteam(J, H), recursion_teamplayssport(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06543944678567437;  // std dev = 1.859, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.07812305609493667;  // std dev = 2.203, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.052128873126007565;  // std dev = 4.138, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.27327241907702055;  // std dev = 0.190, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1257450814545087;  // std dev = 1.906, 57.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=51 */
%   else if ( teamalsoknownas(F, A), recursion_teamplayssport(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamplaysinleague(A, I) )
%   | | | then return -0.13340637291866664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.36363845702308284;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, J) )
%   | | | then return -0.09593208857667776;  // std dev = 1.730, 63.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=4 */
%   | | | else return 0.07046970218979953;  // std dev = 4.330, 77.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */


Results
   AUC ROC   = 0.868859
   AUC PR    = 0.88076
   CLL	      = -0.461313
   Precision = 0.858696 at threshold = 0.5
   Recall    = 0.598485
   F1        = 0.705357


Total learning time: 2.355 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.868859


Results scoring model
   AUC ROC   = 0.907707
   AUC PR    = 0.915876
   CLL	      = -0.412637
   Precision = 0.864198 at threshold = 0.5
   Recall    = 0.660377
   F1        = 0.748663


Total scoring time: 1.021 seconds
Parameter learned model CLL: -0.412637


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,true,false': 'athleteledsportsteam(F, D), athleteledsportsteam(G, A)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,true': 'teamalsoknownas(I, A), recursion_teamplayssport(I, B)', 'false,false,false': 'athleteplaysforteam(J, A)'}, {'true': [2.341, 6, 63], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [1.49e-08, 24, 0], 'false,true,false,false': [1.895, 35, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.533, 24, 26], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.678, 16, 13]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'athleteplaysforteam(C, A), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.926, 4, 51], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.672, 48, 3], 'false,false,true': [1.309, 2, 12], 'false,false,false': [0.491, 51, 40]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'athleteplaysforteam(D, A), athleteplaysforteam(D, C)', 'true,false,false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'athleteplaysforteam(I, H), athleteplaysforteam(I, A)', 'false,false,false': 'athleteplaysforteam(J, A), athleteledsportsteam(K, A)'}, {'true,true': [0.0, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.067, 9, 3], 'true,false,false,false': [1.931, 7, 8], 'false,true': [0.741, 1, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.445, 18, 13], 'false,false,false,true': [2.293, 16, 19], 'false,false,false,false': [4.666, 55, 52]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A), teamalsoknownas(E, F)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,true,false': 'teamplaysinleague(A, G), athleteplaysforteam(H, E)', 'false,false': 'teamalsoknownas(A, I), recursion_teamplayssport(I, B)', 'false,false,true': 'teamplaysagainstteam(J, A), teamplaysinleague(A, K)', 'false,false,false': 'teamalsoknownas(L, A)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.325, 6, 59], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.375, 39, 2], 'false,true,false,false': [0.057, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.019, 2, 0], 'false,false,false,true': [1.85, 6, 8], 'false,false,false,false': [4.316, 49, 33]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'teamalsoknownas(D, A), recursion_teamplayssport(D, B)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A), teamplaysinleague(A, G)', 'false,false,true': 'athleteplaysforteam(F, H), recursion_teamplayssport(H, B)', 'false,false,false': 'athleteledsportsteam(I, A)'}, {'true,true': [0.753, 3, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.973, 26, 23], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.779, 6, 1], 'false,false,true,true': [0.594, 0, 34], 'false,false,true,false': [0.811, 32, 0], 'false,false,false,true': [0.697, 2, 3], 'false,false,false,false': [3.963, 37, 34]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'athleteledsportsteam(E, A), teamalsoknownas(A, F)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'teamplaysinleague(H, I)', 'false,false,false': 'athleteledsportsteam(J, A), athleteplaysforteam(K, A)'}, {'true,true': [0.697, 4, 3], 'true,false,true': [1.461, 3, 42], 'true,false,false,true': [0.707, 1, 1], 'true,false,false,false': [1.665, 41, 5], 'false,true': [1.845, 17, 16], 'false,false,true,true': [2.558, 13, 14], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.599, 27, 25]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C), teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamplaysagainstteam(G, F), recursion_teamplayssport(G, B)', 'false,true,false': 'teamplaysinleague(F, H)', 'false,false': 'athleteplaysforteam(I, A)', 'false,false,true': 'athleteplaysforteam(I, J), recursion_teamplayssport(J, B)', 'false,false,false': 'teamplaysagainstteam(K, A), teamplaysinleague(K, L)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.961, 15, 10], 'false,true,false,false': [0.605, 1, 1], 'false,false,true,true': [0.884, 0, 44], 'false,false,true,false': [0.866, 44, 0], 'false,false,false,true': [1.843, 13, 13], 'false,false,false,false': [3.987, 33, 31]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, E), recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(D, F), recursion_teamplayssport(F, B)', 'false,false,false': 'teamplaysagainstteam(G, A), teamalsoknownas(A, H)'}, {'true': [4.535, 84, 87], 'false,true': [2.549, 15, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.925, 6, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamplaysinleague(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'teamalsoknownas(G, A), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(H, A), teamplaysinleague(H, I)', 'false,false,true': 'teamplaysagainstteam(J, H), recursion_teamplayssport(J, B)', 'false,false,false': 'teamalsoknownas(A, K)'}, {'true,true': [1.332, 3, 31], 'true,false,true': [0.229, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.859, 10, 9], 'false,false,false,true': [2.203, 16, 15], 'false,false,false,false': [4.138, 53, 49]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), teamplaysinleague(D, E)', 'false': 'teamalsoknownas(F, A), recursion_teamplayssport(F, B)', 'false,false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamplaysinleague(A, I)', 'false,false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, J)'}, {'true,true': [0.19, 0, 12], 'true,false': [1.906, 6, 51], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.017, 2, 0], 'false,false,false,true': [1.73, 59, 4], 'false,false,false,false': [4.33, 38, 39]}]]
[{'': [0.07939508506616176, 0.2102792312582528], 'false': [0.0585937499999999, 0.24995994231693772], 'false,false': [0.24960000000000135, 0.24732461355529084], 'false,false,true': [nan, 0.24959999999999982], 'false,false,false': [nan, 0.24732461355529084], 'false,true': [0.0, 0.05946082136558316], 'false,true,false': [9.25185853854297e-18, 0.0920447074293227]}, {'': [nan, 0.21753145375846064], 'false': [0.19694933364691922, 0.23849863203547794], 'false,false': [0.12244897959183662, 0.2411799409768331], 'false,true': [0.06743801652892603, 0.053800963953708716], 'false,true,false': [0.0, 0.05480353281644562]}, {'': [0.18065579176091304, 0.1897314768601694], 'false': [0.10966941921113618, 0.19097430078699548], 'false,false': [0.1928189173628907, 0.1903467145083598], 'false,false,true': [nan, 0.1928189173628908], 'false,false,false': [0.15027324421017246, 0.2034398460325201], 'true': [-6.344131569286608e-17, 0.19475787156962007], 'true,false': [nan, 0.19475787156962016], 'true,false,false': [0.09479458542760706, 0.24869400210166148]}, {'': [0.0785028750850475, 0.1876302477305626], 'false': [0.04251835392879742, 0.2316046064486426], 'false,false': [0.00017989244209497268, 0.23173140655405944], 'false,false,false': [0.24434118775887487, 0.2271849255358928], 'true': [0.0, 0.08319763932633557], 'false,true': [nan, 0.04251835392879742], 'false,true,false': [0.0461293148799305, 0.0007995910589589962], 'false,false,true': [nan, 0.00017989244209497268]}, {'': [0.16809330228025202, 0.1619265373912618], 'true': [0.08091769433307332, 0.18034553704555972], 'true,false': [nan, 0.18034553704555986], 'false': [0.07895847677554992, 0.1700979755889126], 'false,false': [0.12039471535972106, 0.2131592583858475], 'false,false,false': [0.09717895793957718, 0.22121662706333917], 'false,false,true': [0.010364566371237243, 0.020554919910331045], 'false,true': [-3.172065784643304e-17, 0.08677752992310166]}, {'': [0.08748557539712776, 0.20503011066194674], 'false': [0.10319606412492138, 0.24682630479466763], 'false,false': [0.2423127148309148, 0.24903570094905994], 'false,false,false': [nan, 0.24903570094905994], 'false,false,true': [0.2423127148309148, nan], 'true': [0.06932904665529305, 0.0888491381804467], 'true,false': [0.04741414241588249, 0.06819586365037139], 'true,false,false': [0.25, 0.06028141105345366]}, {'': [-2.3790493384824782e-17, 0.1492671033368365], 'false': [0.15639761008515563, 0.14815983263955954], 'false,true': [nan, 0.15639761008515563], 'false,true,false': [0.1538688729561062, 0.18318016888623495], 'false,false': [0.07953117117594727, 0.2149321256272681], 'false,false,false': [0.1306887699393659, 0.24833382167596763], 'false,false,true': [0.017770197386202943, 0.017051800504768667], 'true': [-1.1102230246251566e-17, 0.0]}, {'': [0.12025187363296067, 0.20263639753523752], 'false': [0.1969263606292598, 0.10716745398611194], 'false,false': [nan, 0.10716745398611194], 'false,false,false': [0.0, 0.12217582196234965]}, {'': [0.04977426078604351, 0.16544034289527365], 'false': [0.0, 0.16744575568538023], 'false,false': [0.18189089042785564, 0.16537559147030936], 'false,false,true': [nan, 0.18189089042785564], 'false,false,false': [0.15653460751222875, 0.16790506376956402], 'true': [0.0522012166292003, 0.0021769824896148635], 'true,false': [0.0021769824896148635, nan]}, {'': [0.0563145986273883, 0.16065592836730896], 'false': [nan, 0.16065592836730905], 'false,false': [0.011870131498992862, 0.16217013609149336], 'false,false,false': [0.04749136225537758, 0.24353792358895723], 'true': [0.003006370275459589, 0.06375228522254266], 'false,false,true': [0.0, 0.00013625973146830228]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
0;false;teamplaysagainstteam(D, A).;true;true
0;false,true;teamalsoknownas(A, E), recursion_teamplayssport(E, B).;true;true
0;false,true,false;athleteledsportsteam(F, D), athleteledsportsteam(G, A).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysagainstteam(D, A).;true;true
1;true;recursion_teamplayssport(D, B).;true;true
1;true,false;teamalsoknownas(A, E), recursion_teamplayssport(E, B).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;true;recursion_teamplayssport(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
3;true;teamalsoknownas(A, D), recursion_teamplayssport(D, B).;true;true
3;false;teamplaysagainstteam(E, A), teamalsoknownas(E, F).;true;true
3;false,true;teamplaysinleague(A, G), athleteplaysforteam(H, E).;true;true
3;false,false;teamalsoknownas(A, I), recursion_teamplayssport(I, B).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamalsoknownas(E, A).;true;true
4;false,true;recursion_teamplayssport(E, B).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A), recursion_teamplayssport(C, B).;true;true
6;true;teamplaysagainstteam(D, C), teamalsoknownas(D, E).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
7;false;teamalsoknownas(D, E), recursion_teamplayssport(E, B).;true;true
7;false,false;teamplaysagainstteam(G, A), teamalsoknownas(A, H).;true;true
8;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamplaysinleague(A, D).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true
8;false;teamalsoknownas(G, A), recursion_teamplayssport(G, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
9;false;teamalsoknownas(A, G), recursion_teamplayssport(G, B).;true;true
9;false,true;teamplaysagainstteam(H, A), teamplaysinleague(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplayssport(D, B) )
%   | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | | then if ( athleteplayssport(E, G), recursion_teamplayssport(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.07935106490048771;  // std dev = 0.242, 64.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=4 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.668959745910323;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | else return -0.10736830627979814;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteplayssport(E, B) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5842865240926589;  // std dev = 0.310, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( teamalsoknownas(A, F), recursion_teamplayssport(F, B) )
%   | | then return -0.1324634293473104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | | then return 0.06753657065268956;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.13246342934731045;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | then if ( teamplaysinleague(A, K), athleteplaysinleague(I, K) )
%   | | then return 0.7616744701216434;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return 0.28919776933508984;  // std dev = 2.005, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.5803823064767559;  // std dev = 2.401, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | else return -0.08315693756662793;  // std dev = 0.205, 40.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5600927672798914;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | | then if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | | | then return 0.46990775378385086;  // std dev = 1.149, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.19061142714280765;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.11889857064386712;  // std dev = 0.004, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( teamplaysinleague(A, J), athleteplaysinleague(H, J) )
%   | | then return 0.5473275756996353;  // std dev = 0.156, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | else if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | | then return 0.14915666007494974;  // std dev = 2.539, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.4892321981971038;  // std dev = 2.084, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | else if ( athleteplayssport(M, B), athleteplaysinleague(M, N) )
%   | | then return 0.03985322596773348;  // std dev = 0.320, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.10184203755457208;  // std dev = 0.132, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.4194698896234149;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( athleteplayssport(F, B), teamplaysagainstteam(E, A) )
%   | | | then return 0.42169498980522896;  // std dev = 0.814, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return 0.20696497493956936;  // std dev = 1.381, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.503768394806598;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | then if ( teamplaysinleague(A, I), athleteplaysforteam(J, G) )
%   | | then return -0.07701654725741516;  // std dev = 0.203, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | else return -0.10978616634511933;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | | then return -0.11633217239776228;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | | then return 0.28371752642581943;  // std dev = 3.179, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | | else return -0.0851756929958922;  // std dev = 0.989, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.39335465986168305;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( athleteplaysforteam(G, A), teamplaysinleague(A, H) )
%   | | | then return -0.20111296156831313;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.28682692007567856;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return -0.10175819387616551;  // std dev = 0.019, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamalsoknownas(I, A) )
%   | then if ( recursion_teamplayssport(I, B) )
%   | | then return 0.32043768329786676;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.018870785519892276;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysinleague(J, L) )
%   | | | then return 0.33884891072108764;  // std dev = 0.737, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.1470793058744306;  // std dev = 2.975, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | else return -0.057445945586099945;  // std dev = 0.190, 52.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.24075164387218403;  // std dev = 0.120, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return 0.42017529388369845;  // std dev = 0.315, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | | then if ( athleteplaysforteam(C, G) )
%   | | | then return 0.26496487723220685;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17834575376054368;  // std dev = 0.564, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(C, H) )
%   | | | then return -0.00612851158037876;  // std dev = 0.763, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20905352803156;  // std dev = 3.246, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | then return 0.17707270033817193;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1052676069342281;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08011725425614741;  // std dev = 0.122, 66.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then return 0.2127830730292842;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(D, F) )
%   | | then if ( teamplaysagainstteam(G, A), teamplaysinleague(G, F) )
%   | | | then return 0.1969190480997411;  // std dev = 0.644, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return 0.40240526314659086;  // std dev = 0.330, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return 0.008557134282501667;  // std dev = 2.362, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.18830980084902618;  // std dev = 2.471, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | | then if ( teamplaysagainstteam(L, A), teamalsoknownas(L, M) )
%   | | | then return 0.15592904684854575;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.099649503871309;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.08862070903422753;  // std dev = 0.018, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.02596964173675692;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return 0.17795541451190688;  // std dev = 0.117, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return 0.08714575418528898;  // std dev = 0.356, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | else return -0.07205946682175755;  // std dev = 0.097, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   else if ( teamalsoknownas(G, H), recursion_teamplayssport(H, B) )
%   | then if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | | then if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | | then return 0.3800278597136897;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07705484204068476;  // std dev = 1.788, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return -0.08607401977831702;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysagainstteam(M, A), teamalsoknownas(A, N) )
%   | | then return -0.08455707289550674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(P, B), athleteplaysforteam(P, Q) )
%   | | | then return 0.16265866329928866;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08661640120074704;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteplaysforteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteledsportsteam(F, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.14947935599756512;  // std dev = 0.474, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.06359318334297695;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21815166308909228;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09350088240811051;  // std dev = 0.186, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( teamalsoknownas(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.16507453568846897;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysinleague(J, L) )
%   | | | then return 0.16759546140423312;  // std dev = 0.688, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.07710858289477603;  // std dev = 3.364, 73.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | else if ( athleteplayssport(M, B), athleteplaysinleague(M, N) )
%   | | | then return 0.0207979561675335;  // std dev = 0.783, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.05808077957182473;  // std dev = 0.968, 47.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(F, E), athleteplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(E, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.14457172770157706;  // std dev = 0.102, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.009498261025433188;  // std dev = 1.227, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( athleteledsportsteam(I, E) )
%   | | | then return 0.3420012192323969;  // std dev = 0.378, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15751915142610345;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23471205411189205;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamalsoknownas(A, J), recursion_teamplayssport(J, B) )
%   | then return -0.07336258216596979;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | then if ( teamplaysinleague(A, M), athleteplaysforteam(N, A) )
%   | | | then return -0.10321442070344171;  // std dev = 1.191, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.0871678368818675;  // std dev = 2.965, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else return -0.06354204891300803;  // std dev = 0.115, 73.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=1 */


Results
   AUC ROC   = 0.923848
   AUC PR    = 0.918406
   CLL	      = -0.360508
   Precision = 0.801325 at threshold = 0.5
   Recall    = 0.916667
   F1        = 0.855124


Total learning time: 136.945 seconds
Total inference time: 3.294 seconds
AUC ROC: 0.923848


Results scoring model
   AUC ROC   = 0.975703
   AUC PR    = 0.975269
   CLL	      = -0.261193
   Precision = 0.885965 at threshold = 0.5
   Recall    = 0.95283
   F1        = 0.918182


Total scoring time: 2.163 seconds
Refined model CLL: -0.261193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.923848
   AUC PR    = 0.918406
   CLL	      = -0.360508
   Precision = 0.801325 at threshold = 0.5
   Recall    = 0.916667
   F1        = 0.855124


Total learning time: 142.484 seconds
Total inference time: 3.294 seconds
AUC ROC: 0.923848
Total revision time: 142.484
Best scored revision CLL: -0.261193


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:38:08
{'AUC ROC': 0.923848, 'AUC PR': 0.918406, 'CLL': -0.360508, 'Precision': [0.801325, 0.5], 'Recall': 0.916667, 'F1': 0.855124, 'Learning time': 142.484, 'Inference time': 3.294, 'parameter_0.8': {'AUC ROC': 0.868859, 'AUC PR': 0.88076, 'CLL': -0.461313, 'Precision': [0.858696, 0.5], 'Recall': 0.598485, 'F1': 0.705357, 'Learning time': 2.355, 'Inference time': 1.414}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7875606998053944;  // std dev = 2.361, 85.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=79 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(F, D), athleteledsportsteam(G, A) )
%   | | | then return -0.08921948595311933;  // std dev = 1.376, 38.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | | else return -0.05489454316135735;  // std dev = 1.911, 46.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995115;  // std dev = 3.873, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else if ( athleteplaysforteam(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6746737233774326;  // std dev = 1.940, 68.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06082386145927092;  // std dev = 2.153, 69.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=5 */
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.6158501939656675;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.2578518705203476;  // std dev = 0.491, 111.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=49 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5836476529325229;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplaysforteam(D, A), athleteplaysforteam(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | | | then return 0.12718087192177638;  // std dev = 1.765, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.26566610750027103;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | then return 0.4473173953604808;  // std dev = 0.747, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteplaysforteam(I, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21117925336063745;  // std dev = 2.521, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( athleteplaysforteam(J, A), athleteledsportsteam(K, A) )
%   | | | then return 0.20965380276310877;  // std dev = 2.525, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.24381402639410965;  // std dev = 5.198, 134.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.46700572322790146;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4484223437402576;  // std dev = 2.347, 79.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return 0.8609092470197264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysforteam(H, E) )
%   | | | then return -0.10454720455173026;  // std dev = 1.700, 59.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=3 */
%   | | | else return -0.17539011999821125;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, I), recursion_teamplayssport(I, B) )
%   | | then if ( teamplaysagainstteam(J, A), teamplaysinleague(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3045139148696113;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return 0.24411410365605768;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.1622782926346075;  // std dev = 4.746, 98.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=41 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.16940427363354654;  // std dev = 0.794, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( teamalsoknownas(D, A), recursion_teamplayssport(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15657628781846647;  // std dev = 3.075, 55.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.3330762186646355;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08288214503200339;  // std dev = 1.622, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( athleteplaysforteam(F, A), teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(F, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.4383608619322459;  // std dev = 0.605, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.19050875488076835;  // std dev = 0.829, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( athleteledsportsteam(I, A) )
%   | | | then return 0.11427383323970745;  // std dev = 0.766, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15961695755152305;  // std dev = 4.443, 90.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=45 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, A), teamalsoknownas(A, F) )
%   | then return 0.09619340006386197;  // std dev = 0.790, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2818994834460726;  // std dev = 1.482, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else if ( recursion_teamplayssport(D, B) )
%   | | | then return 0.16094981771011005;  // std dev = 0.973, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07709305199089354;  // std dev = 2.001, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.09787391811135417;  // std dev = 1.913, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( teamplaysinleague(H, I) )
%   | | | then return 0.14803757671986584;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14946729972776432;  // std dev = 4.123, 68.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=34 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C), teamalsoknownas(D, E) )
%   | then return 0.2227048426251156;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21260733069893756;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(G, F), recursion_teamplayssport(G, B) )
%   | | then return 0.18511259054998147;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(F, H) )
%   | | | then return 0.06375554565199469;  // std dev = 2.355, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.15171127643932372;  // std dev = 0.622, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.3087479362906422;  // std dev = 0.901, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.17163900239454108;  // std dev = 0.894, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( teamplaysagainstteam(K, A), teamplaysinleague(K, L) )
%   | | | then return 0.04987471264932994;  // std dev = 1.950, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.11731056364330146;  // std dev = 4.411, 78.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.061407005127069564;  // std dev = 5.060, 218.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( teamalsoknownas(D, E), recursion_teamplayssport(E, B) )
%   | then return 0.17481196702890567;  // std dev = 2.785, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | else if ( teamalsoknownas(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(A, H) )
%   | | | then return -0.19280350104481803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.28416592008960373;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.15921951164480683;  // std dev = 1.354, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.08833565212721335;  // std dev = 1.239, 38.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.16890720560189776;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | | then if ( teamplaysagainstteam(J, H), recursion_teamplayssport(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05710171221970755;  // std dev = 2.062, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.07993525443021497;  // std dev = 2.221, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.05402141387790898;  // std dev = 4.602, 128.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=64 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.2570083948350241;  // std dev = 0.232, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.13517680552204211;  // std dev = 1.967, 68.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=62 */
%   else if ( teamalsoknownas(F, A), recursion_teamplayssport(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamplaysinleague(A, I) )
%   | | | then return -0.14553156575372694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.3686496823009765;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, J) )
%   | | | then return -0.09035265752765198;  // std dev = 2.135, 84.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=6 */
%   | | | else return 0.06670486266651193;  // std dev = 4.783, 94.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=48 */


Results
   AUC ROC   = 0.865803
   AUC PR    = 0.877978
   CLL	      = -0.463634
   Precision = 0.904459 at threshold = 0.5
   Recall    = 0.537879
   F1        = 0.674584


Total learning time: 2.575 seconds
Total inference time: 1.355 seconds
AUC ROC: 0.865803


Results scoring model
   AUC ROC   = 0.911329
   AUC PR    = 0.919063
   CLL	      = -0.409027
   Precision = 0.929412 at threshold = 0.5
   Recall    = 0.593985
   F1        = 0.724771


Total scoring time: 1.198 seconds
Parameter learned model CLL: -0.409027


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,true,false': 'athleteledsportsteam(F, D), athleteledsportsteam(G, A)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,true': 'teamalsoknownas(I, A), recursion_teamplayssport(I, B)', 'false,false,false': 'athleteplaysforteam(J, A)'}, {'true': [2.361, 6, 79], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [1.376, 36, 2], 'false,true,false,false': [1.911, 42, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.873, 30, 30], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.0, 18, 18]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'athleteplaysforteam(C, A), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.94, 4, 64], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [2.153, 64, 5], 'false,false,true': [1.328, 2, 15], 'false,false,false': [0.491, 62, 49]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'athleteplaysforteam(D, A), athleteplaysforteam(D, C)', 'true,false,false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'athleteplaysforteam(I, H), athleteplaysforteam(I, A)', 'false,false,false': 'athleteplaysforteam(J, A), athleteledsportsteam(K, A)'}, {'true,true': [2.11e-08, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.765, 15, 7], 'true,false,false,false': [2.121, 9, 9], 'false,true': [0.747, 1, 5], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.521, 19, 15], 'false,false,false,true': [2.525, 22, 22], 'false,false,false,false': [5.198, 67, 67]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A), teamalsoknownas(E, F)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,true,false': 'teamplaysinleague(A, G), athleteplaysforteam(H, E)', 'false,false': 'teamalsoknownas(A, I), recursion_teamplayssport(I, B)', 'false,false,true': 'teamplaysagainstteam(J, A), teamplaysinleague(A, K)', 'false,false,false': 'teamalsoknownas(L, A)'}, {'true,true': [0.031, 0, 6], 'true,false': [2.347, 6, 73], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [1.7, 56, 3], 'false,true,false,false': [0.05, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.027, 2, 0], 'false,false,false,true': [2.058, 8, 9], 'false,false,false,false': [4.746, 57, 41]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'teamalsoknownas(D, A), recursion_teamplayssport(D, B)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A), teamplaysinleague(A, G)', 'false,false,true': 'athleteplaysforteam(F, H), recursion_teamplayssport(H, B)', 'false,false,false': 'athleteledsportsteam(I, A)'}, {'true,true': [0.794, 3, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.075, 29, 26], 'false,true,true': [2.11e-08, 0, 7], 'false,true,false': [1.622, 12, 5], 'false,false,true,true': [0.605, 0, 41], 'false,false,true,false': [0.829, 41, 0], 'false,false,false,true': [0.766, 3, 3], 'false,false,false,false': [4.443, 45, 45]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'athleteledsportsteam(E, A), teamalsoknownas(A, F)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'teamplaysinleague(H, I)', 'false,false,false': 'athleteledsportsteam(J, A), athleteplaysforteam(K, A)'}, {'true,true': [0.79, 5, 5], 'true,false,true': [1.482, 3, 52], 'true,false,false,true': [0.973, 1, 2], 'true,false,false,false': [2.001, 57, 7], 'false,true': [1.913, 19, 19], 'false,false,true,true': [2.619, 14, 14], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [4.123, 34, 34]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C), teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamplaysagainstteam(G, F), recursion_teamplayssport(G, B)', 'false,true,false': 'teamplaysinleague(F, H)', 'false,false': 'athleteplaysforteam(I, A)', 'false,false,true': 'athleteplaysforteam(I, J), recursion_teamplayssport(J, B)', 'false,false,false': 'teamplaysagainstteam(K, A), teamplaysinleague(K, L)'}, {'true,true': [0.055, 0, 6], 'true,false': [0.0, 0, 2], 'false,true,true': [0.694, 2, 2], 'false,true,false,true': [2.355, 21, 13], 'false,true,false,false': [0.622, 1, 1], 'false,false,true,true': [0.901, 0, 54], 'false,false,true,false': [0.894, 54, 0], 'false,false,false,true': [1.95, 16, 16], 'false,false,false,false': [4.411, 39, 39]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, E), recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(D, F), recursion_teamplayssport(F, B)', 'false,false,false': 'teamplaysagainstteam(G, A), teamalsoknownas(A, H)'}, {'true': [5.06, 109, 109], 'false,true': [2.785, 16, 23], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.931, 7, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamplaysinleague(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'teamalsoknownas(G, A), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(H, A), teamplaysinleague(H, I)', 'false,false,true': 'teamplaysagainstteam(J, H), recursion_teamplayssport(J, B)', 'false,false,false': 'teamalsoknownas(A, K)'}, {'true,true': [1.354, 3, 37], 'true,false,true': [1.239, 36, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.062, 13, 11], 'false,false,false,true': [2.221, 17, 17], 'false,false,false,false': [4.602, 64, 64]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), teamplaysinleague(D, E)', 'false': 'teamalsoknownas(F, A), recursion_teamplayssport(F, B)', 'false,false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamplaysinleague(A, I)', 'false,false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, J)'}, {'true,true': [0.232, 0, 17], 'true,false': [1.967, 6, 62], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.024, 2, 0], 'false,false,false,true': [2.135, 78, 6], 'false,false,false,false': [4.783, 46, 48]}]]
[{'': [0.06560553633217969, 0.20933426940569616], 'false': [0.06560553633218019, 0.25000000000000017], 'false,false': [0.2500000000000015, 0.2499999999999995], 'false,false,true': [nan, 0.250000000000001], 'false,false,false': [nan, 0.2499999999999995], 'false,true': [0.0, 0.06632653061224503], 'false,true,false': [0.049861495844875335, 0.07939508506616245]}, {'': [nan, 0.2162981727110372], 'false': [0.19643823494921103, 0.2377002020636549], 'false,false': [0.10380622837370226, 0.2411848645019761], 'false,true': [0.055363321799307294, 0.06625450652784015], 'false,true,false': [0.0, 0.0671550618412451]}, {'': [0.18415368728320816, 0.18638461719889812], 'false': [0.0929296956482966, 0.18774751259533656], 'false,false': [0.18698688933579322, 0.18779894917417134], 'false,false,false': [0.1448853630577407, 0.20160152509921522], 'false,false,true': [nan, 0.18698688933579327], 'true': [5.551115123125783e-17, 0.19509226125146417], 'true,false': [nan, 0.1950922612514642], 'true,false,false': [0.14153757551698096, 0.25000000000000006]}, {'': [0.0648144223976406, 0.18753654725070226], 'false': [0.05996018109913279, 0.23340457530259642], 'false,false': [0.00036926441086648776, 0.23353710142010956], 'false,false,false': [0.24913494809688577, 0.22984134642492896], 'true': [0.0001586918029984341, 0.06970060713308351], 'false,true': [0.0, 0.04621174928477265], 'false,true,false': [0.048982923166653015, 0.0006368646624583148], 'false,false,true': [nan, 0.00036926441086648776]}, {'': [0.1575984955380465, 0.16086155776927147], 'false': [0.12259929081474408, 0.1659965283295826], 'false,false': [0.11171858110134532, 0.21186160710066304], 'false,false,false': [0.09777061943382186, 0.2193391730124718], 'true': [0.06998703103027643, 0.17191177614388167], 'true,false': [nan, 0.1719117761438817], 'false,true': [6.344131569286608e-17, 0.15482387168153572], 'false,false,true': [0.008929110906402948, 0.016769553821013777]}, {'': [0.08786589660640685, 0.20587482745243676], 'false': [0.09627827326049412, 0.24851408915255305], 'false,false': [0.24489890249701826, 0.2500020992243477], 'false,false,false': [nan, 0.2500020992243477], 'false,false,true': [0.24489890249701826, nan], 'true': [0.062415536272654504, 0.0899496227058181], 'true,false': [0.03993471131661138, 0.07630575587859367], 'true,false,false': [0.3155499280601177, 0.062553973017339]}, {'': [0.00040146650420352925, 0.14622771237657745], 'false': [0.16191096106321706, 0.1433486860601167], 'false,true': [0.12027939995034048, 0.16518014965036512], 'false,true,false': [0.16309659671478663, 0.1932941284534398], 'false,false': [0.07261629153868021, 0.2123744087318213], 'false,false,false': [0.11886126360119677, 0.24941583952874355], 'false,false,true': [0.015032179938211614, 0.014814597709487778], 'true': [0.0005097987354965398, 0.0]}, {'': [0.11742811451945681, 0.2105089135609416], 'false': [0.19888499285065228, 0.09720498434903946], 'false,false': [nan, 0.09720498434903946], 'false,false,false': [0.0, 0.1084281527689233]}, {'': [0.058480189523938755, 0.16173841819273008], 'false': [0.0, 0.16334939874808715], 'false,false': [0.17715367552909092, 0.1613036030170759], 'false,false,true': [nan, 0.17715367552909092], 'false,false,false': [0.14504450777565375, 0.16548148739740706], 'true': [0.04581778303642851, 0.04038157224780531], 'true,false': [0.04038157224780531, nan]}, {'': [0.04853868319094787, 0.15914984775371926], 'false': [nan, 0.15914984775371932], 'false,false': [0.011258148636601684, 0.16027845832980464], 'false,false,false': [0.054265288690490576, 0.24337299394863413], 'true': [0.0031753097991631266, 0.056910939307988684], 'false,false,true': [0.0, 0.0002933249777051228]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
0;false;teamplaysagainstteam(D, A).;true;true
0;false,true;teamalsoknownas(A, E), recursion_teamplayssport(E, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysagainstteam(D, A).;true;true
1;true;recursion_teamplayssport(D, B).;true;true
1;true,false;teamalsoknownas(A, E), recursion_teamplayssport(E, B).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;true;recursion_teamplayssport(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
3;true;teamalsoknownas(A, D), recursion_teamplayssport(D, B).;true;true
3;false;teamplaysagainstteam(E, A), teamalsoknownas(E, F).;true;true
3;false,true;recursion_teamplayssport(F, B).;true;true
3;false,true,false;teamplaysinleague(A, G), athleteplaysforteam(H, E).;true;true
3;false,false;teamalsoknownas(A, I), recursion_teamplayssport(I, B).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamalsoknownas(E, A).;true;true
4;false,true;recursion_teamplayssport(E, B).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A), recursion_teamplayssport(C, B).;true;true
6;true;teamplaysagainstteam(D, C), teamalsoknownas(D, E).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
7;false;teamalsoknownas(D, E), recursion_teamplayssport(E, B).;true;true
7;false,false;teamplaysagainstteam(G, A), teamalsoknownas(A, H).;true;true
8;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamplaysinleague(A, D).;true;true
8;false;teamalsoknownas(G, A), recursion_teamplayssport(G, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), recursion_teamplayssport(C, B).;true;true
9;false;teamalsoknownas(A, G), recursion_teamplayssport(G, B).;true;true
9;false,true;teamplaysagainstteam(H, A), teamplaysinleague(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteplayssport(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | | then return 0.5504566274072047;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.8055173561521438;  // std dev = 0.223, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then if ( teamalsoknownas(A, H), recursion_teamplayssport(H, B) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return -0.1246096855901429;  // std dev = 0.991, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
%   | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | then if ( teamplaysinleague(A, M), athleteplaysinleague(K, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6174081943587711;  // std dev = 3.142, 54.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=41 */
%   | | else return -0.11407328712271002;  // std dev = 0.164, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | | then return 0.6870495638601113;  // std dev = 0.201, 65.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=62 */
%   | | else return 0.4123885480278939;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(A, F), recursion_teamplayssport(F, B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | | then return 0.018561865317404596;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.10512618549344441;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=1 */
%   else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | then if ( teamplaysinleague(A, K), athleteplaysinleague(I, K) )
%   | | then return 0.7257728160767094;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return 0.2966605024615616;  // std dev = 2.062, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.5891890790959462;  // std dev = 2.564, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | else return -0.09104836774725994;  // std dev = 0.183, 50.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5665831146524748;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | | then if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | | then return 0.6196550347752935;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3031771061053331;  // std dev = 1.669, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return -0.11660842428670981;  // std dev = 0.006, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.04927553831938856;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | then return 0.5516723935822879;  // std dev = 0.177, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | | then return 0.014078890146495123;  // std dev = 1.694, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.4071789628184582;  // std dev = 3.388, 75.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=57 */
%   | else return -0.0761721813587617;  // std dev = 0.180, 79.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.427864274257435;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then if ( teamplaysinleague(A, G), athleteplaysinleague(E, G) )
%   | | | then return 0.44418166050553226;  // std dev = 0.190, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return 0.26652369354195105;  // std dev = 1.916, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else return 0.6503755873757305;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | then if ( recursion_teamplayssport(I, B) )
%   | | then return 0.7523763242017372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07614254557999053;  // std dev = 0.211, 63.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=3 */
%   | else if ( teamalsoknownas(A, J), recursion_teamplayssport(J, B) )
%   | | then return -0.10896547192011355;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | | then return 0.29539596392313644;  // std dev = 3.458, 69.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=49 */
%   | | | else return -0.08927211341411223;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.3909626047876511;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return -0.021344911548440756;  // std dev = 1.003, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.25793082238837334;  // std dev = 1.727, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else return -0.08274458757715687;  // std dev = 0.089, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   else if ( teamalsoknownas(I, A) )
%   | then if ( recursion_teamplayssport(I, B) )
%   | | then return 0.32117341518913395;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.08180308207957357;  // std dev = 0.324, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), athleteplaysinleague(J, L) )
%   | | | then return 0.3184684075912995;  // std dev = 1.136, 55.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | | | else return 0.1343311962549747;  // std dev = 3.379, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | | else return -0.058751346026211675;  // std dev = 0.175, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( recursion_teamplayssport(E, B), athleteplaysforteam(F, A) )
%   | | then return 0.28611412655284274;  // std dev = 0.070, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( teamalsoknownas(G, E), athleteledsportsteam(H, A) )
%   | | | then return 0.3612162238845091;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10275056257809101;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( athleteplaysforteam(I, A), teamplaysinleague(A, J) )
%   | | then if ( athleteplaysinleague(C, J), teamalsoknownas(D, K) )
%   | | | then return 0.3420014308415859;  // std dev = 0.498, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.10617729818782654;  // std dev = 1.650, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, L) )
%   | | | then return 0.18989074566130779;  // std dev = 2.703, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | | else return 0.2923521027226853;  // std dev = 1.840, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   else if ( teamplaysagainstteam(A, M), recursion_teamplayssport(M, B) )
%   | then return 0.4721282003762294;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07672822371556019;  // std dev = 0.142, 95.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then return 0.20995599252076208;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(D, F) )
%   | | then if ( teamalsoknownas(E, G), teamplaysagainstteam(E, G) )
%   | | | then return 0.23891473066749777;  // std dev = 0.603, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1784022673352975;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return -0.021305804112411147;  // std dev = 2.666, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.20471054246913328;  // std dev = 2.670, 54.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | | then if ( teamplaysagainstteam(A, L), recursion_teamplayssport(L, B) )
%   | | | then return 0.3989750121521711;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0897484977862153;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( teamplaysagainstteam(M, A), teamalsoknownas(N, M) )
%   | | | then return -0.09110499041119306;  // std dev = 0.039, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.044134349719594436;  // std dev = 1.365, 42.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysagainstteam(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.16424947481078842;  // std dev = 0.185, 77.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=72 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return -0.07340099032034639;  // std dev = 0.213, 75.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=4 */
%   | | else return 0.06219667243465217;  // std dev = 0.319, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   else if ( teamalsoknownas(G, H), recursion_teamplayssport(H, B) )
%   | then if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.34742551601329963;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11159326990568577;  // std dev = 1.964, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else return -0.056025112783242355;  // std dev = 0.093, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(A, M) )
%   | | then return -0.0853656993124523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(N, B), athleteplaysforteam(N, P) )
%   | | | then return 0.16134736405385317;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09247765015340499;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, E), athleteplayssport(F, B) )
%   | | then return 0.1605800761367453;  // std dev = 0.235, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( teamalsoknownas(E, G), athleteledsportsteam(H, E) )
%   | | | then return -0.19699302325407056;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24398184260105354;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, I) )
%   | | then return -0.09861793139730878;  // std dev = 0.256, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.2428765081769471;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(K, A), recursion_teamplayssport(K, B) )
%   | then return 0.14942942046639607;  // std dev = 0.000293, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | then if ( teamplaysinleague(A, N), athleteplaysinleague(L, N) )
%   | | | then return 0.16373031871141144;  // std dev = 0.764, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return 0.08677612595584878;  // std dev = 3.637, 84.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=57 */
%   | | else return -0.057779916800373914;  // std dev = 0.138, 67.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(F, E), athleteplayssport(F, G) )
%   | | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | | then return 0.11696053348998697;  // std dev = 1.072, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.15164116981666656;  // std dev = 1.006, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.20558924437420573;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2530473084753711;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamalsoknownas(A, H), recursion_teamplayssport(H, B) )
%   | then return -0.07487574174671484;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then if ( athleteplaysforteam(I, K), teamalsoknownas(J, K) )
%   | | | then return -0.1271585629427921;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.08333884151703502;  // std dev = 3.052, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | | else if ( teamalsoknownas(L, A), teamalsoknownas(M, L) )
%   | | | then return -0.014629455257282624;  // std dev = 0.925, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.06482518767547107;  // std dev = 0.977, 79.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=1 */


Results
   AUC ROC   = 0.931294
   AUC PR    = 0.929331
   CLL	      = -0.353362
   Precision = 0.805921 at threshold = 0.5
   Recall    = 0.92803
   F1        = 0.862676


Total learning time: 104.28999999999999 seconds
Total inference time: 3.337 seconds
AUC ROC: 0.931294


Results scoring model
   AUC ROC   = 0.97767
   AUC PR    = 0.977856
   CLL	      = -0.260004
   Precision = 0.895105 at threshold = 0.5
   Recall    = 0.962406
   F1        = 0.927536


Total scoring time: 2.312 seconds
Refined model CLL: -0.260004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.931294
   AUC PR    = 0.929331
   CLL	      = -0.353362
   Precision = 0.805921 at threshold = 0.5
   Recall    = 0.92803
   F1        = 0.862676


Total learning time: 110.37499999999999 seconds
Total inference time: 3.337 seconds
AUC ROC: 0.931294
Total revision time: 110.37499999999999
Best scored revision CLL: -0.260004


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:40:04
{'AUC ROC': 0.931294, 'AUC PR': 0.929331, 'CLL': -0.353362, 'Precision': [0.805921, 0.5], 'Recall': 0.92803, 'F1': 0.862676, 'Learning time': 110.37499999999999, 'Inference time': 3.337, 'parameter_1.0': {'AUC ROC': 0.865803, 'AUC PR': 0.877978, 'CLL': -0.463634, 'Precision': [0.904459, 0.5], 'Recall': 0.537879, 'F1': 0.674584, 'Learning time': 2.575, 'Inference time': 1.355}}


Starting fold 2

Target train facts examples: 9691
Target train pos examples: 133
Target train neg examples: 133

Target test facts examples: 9691
Target test pos	 examples: 264
Target test neg examples: 264

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6604846179512417;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.04913009601397705;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7319131893798131;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23319323380708212;  // std dev = 0.473, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24057741893026663;  // std dev = 3.069, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4610699636801827;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.10377180739885591;  // std dev = 0.981, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22241492831952642;  // std dev = 2.155, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14682033101083605;  // std dev = 2.839, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.1909857391784812;  // std dev = 1.255, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.3653844140233245;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.09248003366949518;  // std dev = 0.974, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.14360355155941223;  // std dev = 2.143, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.16608927237559096;  // std dev = 2.535, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | else return -0.19366446683722813;  // std dev = 0.195, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.03967597722246299;  // std dev = 1.519, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.10012305579874843;  // std dev = 2.169, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamalsoknownas(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return -0.02799411677346871;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return 0.15974580347010822;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.0550021139338946;  // std dev = 2.423, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20403276219868963;  // std dev = 0.927, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.18969250216145184;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16839223614331136;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.020890734346524758;  // std dev = 1.990, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.891931
   AUC PR    = 0.884924
   CLL	      = -0.461445
   Precision = 0.862559 at threshold = 0.5
   Recall    = 0.689394
   F1        = 0.766316


Total learning time: 1.547 seconds
Total inference time: 1.459 seconds
AUC ROC: 0.891931


Results scoring model
   AUC ROC   = 0.925296
   AUC PR    = 0.930005
   CLL	      = -0.42958
   Precision = 0.869565 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.816327


Total scoring time: 0.963 seconds
Parameter learned model CLL: -0.42958


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [0.968, 1, 15], 'false,true,true': [0.968, 15, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.913, 5, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.309, 3, 4], 'false,false,false,false': [1.195, 2, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.964, 1, 13], 'false,true,false,true': [0.957, 11, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.473, 14, 10]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [3.069, 26, 26], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(A, I)'}, {'true,true': [0.966, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true': [0.981, 15, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.155, 10, 10], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [2.839, 26, 26], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteledsportsteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [1.255, 5, 12], 'true,false,true': [0.014, 0, 3], 'true,false,false,true': [0.974, 11, 1], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.143, 10, 10], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [2.535, 15, 26], 'true,false': [0.195, 11, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [1.519, 8, 4], 'false,true': [2.169, 18, 22], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamalsoknownas(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.816, 1, 2], 'true,false,true': [0.707, 1, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [2.423, 24, 23], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(A, G)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [0.927, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.779, 2, 1], 'false,true,true,false': [0.872, 5, 1], 'false,true,false': [1.99, 18, 9], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, 0.21219135802469138], 'false': [0.05859375000000004, 0.25], 'false,false': [0.13888888888888892, 0.22959183673469377], 'false,false,false': [0.24489795918367332, 0.20408163265306106], 'false,false,true': [0.13888888888888892, nan], 'false,true': [0.05859375000000004, nan]}, {'': [nan, 0.2109345512267964], 'false': [0.1961140555895688, 0.22386921777404944], 'false,false': [0.0, 0.22339255560754326], 'false,true': [0.06632653061224492, 0.07638888888888888], 'false,true,false': [0.07638888888888888, nan]}, {'': [0.18107483357569015, nan]}, {'': [0.058349870278670085, 0.18201763208541608], 'false': [0.06018461196638334, 0.2321961430434806], 'false,false': [0.2321961430434806, nan], 'false,false,true': [nan, 0.2321961430434806], 'false,true': [0.06018461196638334, nan], 'true': [0.058349870278670085, nan]}, {'': [0.15502464126860926, nan]}, {'': [0.10375783692374996, 0.22972903708021447], 'false': [nan, 0.22972903708021447], 'false,false': [0.22972903708021447, nan], 'true': [0.09259453622540548, 0.0968474234245321], 'true,false': [6.133391359079236e-05, 0.07911597531005728], 'true,false,false': [0.07911597531005728, nan]}, {'': [0.14592186241420424, nan], 'true': [0.15676704635258337, 0.0034540412526233907]}, {'': [0.1922637648455644, 0.11761736554209053], 'false': [0.11761736554209053, nan]}, {'': [0.24179243997006883, 0.12486800210041425], 'true': [0.22222222222222224, 0.25000000000000006], 'true,false': [0.25000000000000006, nan], 'false': [0.12486800210041427, nan]}, {'': [0.05370783428487987, 0.15524469935923862], 'false': [0.1552446993592387, nan], 'false,true': [0.1804525108859997, 0.14664413170935203], 'false,true,true': [0.20229544521519216, 0.12678948378580654], 'true': [0.05370783428487987, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteledsportsteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, A) )
%   | | then if ( teamplaysagainstteam(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return -0.13061337230839892;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.08578487415644506;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysagainstteam(H, A), recursion_teamplayssport(H, B) )
%   | then return 0.8284695728578271;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then if ( athleteplaysforteam(I, J), teamalsoknownas(J, K) )
%   | | | then return -0.006442399933413297;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.7321103098799092;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.13003906855506475;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.5658335813063468;  // std dev = 0.089, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(F, A) )
%   | | then return -0.1366269017472753;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.13398588097219863;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5825865766273834;  // std dev = 0.192, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then return 0.12892360616909057;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11650453226516619;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then if ( athleteledsportsteam(C, E), athleteplayssport(F, B) )
%   | | | then return 0.42888634351387;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.22252100200032676;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5710541311847211;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(G, A), teamplaysagainstteam(H, A) )
%   | | then return -0.12224361882140107;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.15340135570856966;  // std dev = 0.679, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3046632702803446;  // std dev = 1.066, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.10504673193324018;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.33058817289243525;  // std dev = 0.103, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( athleteplaysforteam(E, A), teamplaysagainstteam(F, A) )
%   | | then return -0.1187475350895704;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.05028994533374096;  // std dev = 1.015, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3756387883359335;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( teamalsoknownas(H, A), athleteplaysforteam(I, A) )
%   | then return 0.06126298117477126;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.1070041300576862;  // std dev = 0.104, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | | then if ( teamalsoknownas(A, F) )
%   | | | then return 0.14466288281510492;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25730435220041875;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08577499929696018;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.40592198469421037;  // std dev = 0.224, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.07948924673932864;  // std dev = 0.437, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09633753845411105;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( athleteplaysforteam(H, I), teamalsoknownas(I, J) )
%   | | then return -0.04935734847404182;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2781750340257433;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10043925941310287;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(C, F), teamplaysagainstteam(F, A) )
%   | | then if ( teamalsoknownas(F, E), athleteledsportsteam(G, A) )
%   | | | then return 0.22207353177993008;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12202057086851274;  // std dev = 0.363, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3446874445688339;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(H, A), athleteplaysforteam(I, A) )
%   | | then return -0.09114433871396829;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | | then return 0.06708776469390446;  // std dev = 0.715, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.18047253389664128;  // std dev = 0.795, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08402783942437266;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteledsportsteam(G, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.19278639545423504;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0398912504620011;  // std dev = 0.352, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2991685286401014;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | then if ( teamalsoknownas(I, D) )
%   | | | then return 0.07481387400384303;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.21083128145230512;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20316298936871455;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( athleteplaysforteam(J, A), teamalsoknownas(K, A) )
%   | then return 0.016053687807554312;  // std dev = 0.357, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08625964184161071;  // std dev = 0.115, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(D, A) )
%   | | then if ( teamalsoknownas(D, E) )
%   | | | then return 0.1612759810431692;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.03858443224507533;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.2461384351073367;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | then if ( teamplaysinleague(A, H) )
%   | | | then return -0.1548641886849268;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10623348369159824;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1725754591837943;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( athleteplaysforteam(I, A), teamalsoknownas(J, A) )
%   | then return 0.014215228940881803;  // std dev = 0.355, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.07977211608168457;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(C, F), athleteplaysforteam(G, A) )
%   | | then if ( athleteledsportsteam(C, E), athleteledsportsteam(H, A) )
%   | | | then return 0.14784398708508348;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.004969795617128671;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22183036458003916;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(I, A), teamplaysagainstteam(J, A) )
%   | | then return -0.07796224790687044;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | | then return 0.03727839570241471;  // std dev = 0.525, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11148191014471938;  // std dev = 0.766, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06964256936121314;  // std dev = 0.049, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.942156
   AUC PR    = 0.917895
   CLL	      = -0.356753
   Precision = 0.931034 at threshold = 0.5
   Recall    = 0.715909
   F1        = 0.809422


Total learning time: 214.07 seconds
Total inference time: 5.464 seconds
AUC ROC: 0.942156


Results scoring model
   AUC ROC   = 0.99926
   AUC PR    = 0.999288
   CLL	      = -0.15278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.980392


Total scoring time: 1.503 seconds
Refined model CLL: -0.15278


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.942156
   AUC PR    = 0.917895
   CLL	      = -0.356753
   Precision = 0.931034 at threshold = 0.5
   Recall    = 0.715909
   F1        = 0.809422


Total learning time: 218.08299999999997 seconds
Total inference time: 5.464 seconds
AUC ROC: 0.942156
Total revision time: 218.08299999999997
Best scored revision CLL: -0.15278


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:50
{'AUC ROC': 0.942156, 'AUC PR': 0.917895, 'CLL': -0.356753, 'Precision': [0.931034, 0.5], 'Recall': 0.715909, 'F1': 0.809422, 'Learning time': 218.08299999999997, 'Inference time': 5.464, 'parameter_0.2': {'AUC ROC': 0.891931, 'AUC PR': 0.884924, 'CLL': -0.461445, 'Precision': [0.862559, 0.5], 'Recall': 0.689394, 'F1': 0.766316, 'Learning time': 1.547, 'Inference time': 1.459}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then return 0.7867203636709403;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.02756535061477346;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4443558316512365;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, C), teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.4836614886487066;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return 0.0836936575002082;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | then return 0.6919948219820401;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( athleteledsportsteam(G, H) )
%   | | | then return 0.18724656585005828;  // std dev = 3.875, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24569164339020994;  // std dev = 4.591, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.454834912356939;  // std dev = 1.339, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.08027703860821346;  // std dev = 1.891, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26036349183305313;  // std dev = 3.249, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.15137906866231982;  // std dev = 4.329, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.1151059470914134;  // std dev = 2.418, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.12037210558459921;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.0972681787047484;  // std dev = 0.941, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.17153292426077857;  // std dev = 3.246, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.1877349548684697;  // std dev = 3.807, 84.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=53 */
%   | else return -0.2675140453491825;  // std dev = 0.412, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.06899651815964285;  // std dev = 2.167, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.058435568675655636;  // std dev = 0.346, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return 0.07149724038784579;  // std dev = 3.476, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysforteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.25119477531739953;  // std dev = 0.942, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( athleteledsportsteam(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0.6032214112163665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.21252907187677714;  // std dev = 0.237, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.05473833539448355;  // std dev = 3.538, 65.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, E) )
%   | then return 0.18205911599241129;  // std dev = 1.330, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.1489396914092598;  // std dev = 0.950, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.1468761429778465;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.04839560439090102;  // std dev = 3.383, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.886134
   AUC PR    = 0.869375
   CLL	      = -0.468145
   Precision = 0.785185 at threshold = 0.5
   Recall    = 0.80303
   F1        = 0.794007


Total learning time: 2.305 seconds
Total inference time: 1.867 seconds
AUC ROC: 0.886134


Results scoring model
   AUC ROC   = 0.899252
   AUC PR    = 0.901173
   CLL	      = -0.466141
   Precision = 0.814815 at threshold = 0.5
   Recall    = 0.830189
   F1        = 0.82243


Total scoring time: 1.155 seconds
Parameter learned model CLL: -0.466141


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamalsoknownas(A, H)'}, {'true': [1.363, 2, 26], 'false,true,true': [1.882, 31, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.581, 5, 5], 'false,false,false,false': [2.652, 12, 17]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamalsoknownas(A, C), teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(A, F), recursion_teamplayssport(F, B)', 'false,false,false': 'athleteledsportsteam(G, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.866, 1, 3], 'false,true,false,true': [1.247, 7, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.979, 1, 23], 'false,false,false,true': [3.875, 44, 25], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.591, 53, 53], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(A, E)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(A, H), athleteplaysforteam(I, A)'}, {'true,true': [1.339, 2, 26], 'true,false': [0.0, 0, 0], 'false,true,true': [1.891, 31, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.249, 20, 23], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.329, 53, 53], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysinleague(A, D)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [2.418, 24, 26], 'true,false,true': [0.866, 1, 3], 'true,false,false,true': [0.941, 8, 1], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.246, 20, 23], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(C, D)'}, {'true,true': [3.807, 31, 53], 'true,false': [0.412, 22, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'recursion_teamplayssport(F, B)'}, {'true': [2.167, 21, 26], 'false,true,true': [0.346, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.476, 31, 26], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysforteam(D, A)', 'true': 'teamplaysagainstteam(A, E), recursion_teamplayssport(E, B)', 'true,false': 'athleteledsportsteam(D, F), recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.942, 1, 21], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.237, 17, 1], 'false,true': [3.538, 35, 30], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'athleteplaysforteam(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'teamplaysagainstteam(A, H)'}, {'true,true': [1.33, 2, 26], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.95, 17, 1], 'false,true,true,false': [0.694, 3, 1], 'false,true,false': [3.383, 31, 25], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0663265306122458, 0.22633136094674602], 'false': [0.10122448979591821, 0.24878312601406283], 'false,false': [0.18750000000000003, 0.2458908612754778], 'false,false,false': [0.24999999999999983, 0.2425683709869199], 'false,false,true': [0.18750000000000003, nan], 'false,true': [0.10122448979591821, nan]}, {'': [nan, 0.2207329948505946], 'false': [0.21142778577842028, 0.22052963252728985], 'false,false': [0.03993055555555528, 0.21759939901877287], 'false,false,false': [0.2175993990187727, nan], 'false,true': [0.18750000000000003, 0.17283950617283955], 'false,true,false': [0.17283950617283955, nan]}, {'': [0.19888307598869706, nan]}, {'': [0.06401916469584513, 0.2098817773320711], 'false': [0.10215988861053468, 0.24549496155566583], 'false,false': [0.24549496155566583, nan], 'false,false,true': [nan, 0.24549496155566583], 'false,true': [0.10215988861053468, nan], 'true': [0.06401916469584513, nan]}, {'': [0.17678277356016409, nan]}, {'': [0.12431954999408606, 0.24496730208170236], 'false': [nan, 0.24496730208170236], 'false,false': [0.24496730208170236, nan], 'true': [0.11694768075672904, 0.13589237506556986], 'true,false': [0.1875, 0.09838110107385972], 'true,false,false': [0.09838110107385972, nan]}, {'': [0.17240115616150384, nan], 'true': [0.17252186353434534, 0.007703115118686538]}, {'': [0.0999182973518356, 0.20686558374094485], 'false': [0.05976951136756733, 0.21202106614103883], 'false,false': [0.21202106614103883, nan], 'false,true': [0.05976951136756733, nan]}, {'': [0.10569500886495617, 0.1925495538973754], 'false': [0.1925495538973755, nan], 'true': [0.04036878500491661, 0.08632600373708178], 'true,false': [0.0, 0.05609826911428649]}, {'': [0.06318247063845894, 0.17233686963182493], 'false': [0.17233686963182493, nan], 'false,true': [0.06290622837893373, 0.20438578348157588], 'true': [0.06318247063845894, nan], 'false,true,true': [0.05013546138332323, 0.1203711958510756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysforteam(D, A).;true;true
8;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
8;true,false;athleteledsportsteam(D, F), recursion_teamplayssport(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteledsportsteam(C, F), teamplaysagainstteam(G, A) )
%   | | then if ( recursion_teamplayssport(G, B), teamplaysagainstteam(A, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysforteam(J, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5934430527465712;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else return -0.14185106490048777;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | then if ( teamplaysinleague(A, D), teamalsoknownas(F, E) )
%   | | then return 0.7284001845684223;  // std dev = 0.120, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2641072739982948;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(C, H) )
%   | | then if ( recursion_teamplayssport(G, B), teamplaysagainstteam(A, I) )
%   | | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.027039036105351237;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, J), teamplaysinleague(J, K) )
%   | | | then return 0.2892151547159205;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5072804655367609;  // std dev = 2.566, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | then if ( teamplaysinleague(A, D), teamalsoknownas(F, E) )
%   | | then return 0.5649612524545502;  // std dev = 0.158, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.21388841895692945;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteledsportsteam(C, G), teamplaysagainstteam(H, A) )
%   | | then if ( recursion_teamplayssport(H, B), teamplaysagainstteam(A, I) )
%   | | | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.023851027745157634;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( athleteledsportsteam(C, J), teamplaysinleague(A, K) )
%   | | | then return 0.4519596554847028;  // std dev = 1.718, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.33707373461946166;  // std dev = 2.145, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.83e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysinleague(F, E), recursion_teamplayssport(F, B) )
%   | | then if ( teamplaysagainstteam(A, F), athleteplaysinleague(G, E) )
%   | | | then return 0.41301620775684716;  // std dev = 4.71e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5755347442072529;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(H, A), teamplaysagainstteam(F, H) )
%   | | | then return -8.640298602743957E-4;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.36657391670222567;  // std dev = 1.778, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(C, J) )
%   | | then if ( teamplaysinleague(I, D) )
%   | | | then return 0.24809523110160203;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13220175852170518;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteledsportsteam(C, K), teamalsoknownas(L, A) )
%   | | | then return 0.3395735522379326;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2398976620918037;  // std dev = 1.953, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, B) )
%   | | then if ( athleteplaysforteam(F, A), athleteplaysinleague(F, D) )
%   | | | then return 0.31766430450790567;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1480647067353274;  // std dev = 0.709, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( athleteledsportsteam(G, A), recursion_teamplayssport(E, B) )
%   | | | then return 0.3176643045079056;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4361960181783216;  // std dev = 0.279, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | then return 0.38976534053589273;  // std dev = 0.992, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysagainstteam(J, A), teamplaysinleague(J, K) )
%   | | | then return -0.024743463222848292;  // std dev = 1.078, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20706923907415273;  // std dev = 2.556, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   else return -0.09269127618926096;  // std dev = 1.05e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(D, E), teamalsoknownas(E, F) )
%   | then if ( teamplaysagainstteam(G, A), recursion_teamplayssport(G, B) )
%   | | then if ( teamalsoknownas(G, H), teamalsoknownas(E, D) )
%   | | | then return 0.09410770780144614;  // std dev = 0.874, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.35099795253170574;  // std dev = 0.286, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamalsoknownas(D, F) )
%   | | | then return 0.05094361942517772;  // std dev = 1.139, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.26032029411069785;  // std dev = 1.262, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( athleteledsportsteam(C, D) )
%   | | then return 0.4093162685990271;  // std dev = 0.107, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.1052083293659484;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( teamplaysagainstteam(A, J), teamalsoknownas(J, K) )
%   | | then return 0.29081950983052673;  // std dev = 0.461, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.06689721086600105;  // std dev = 0.269, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), teamalsoknownas(F, G) )
%   | | then if ( teamalsoknownas(E, G) )
%   | | | then return 0.2523223675592841;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11385935842684901;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | | | then return 0.1979116238517318;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3684151067148255;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplaysforteam(H, A), teamplaysagainstteam(I, A) )
%   | | then return -0.20343167813659516;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(J, A), athleteledsportsteam(C, K) )
%   | | | then return 0.2076368582450322;  // std dev = 0.755, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10602664253350376;  // std dev = 2.350, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   else return -0.07932670972221932;  // std dev = 0.032, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysinleague(F, E), recursion_teamplayssport(F, B) )
%   | | then if ( teamplaysagainstteam(A, F), athleteplaysinleague(G, E) )
%   | | | then return 0.17960315819266415;  // std dev = 0.083, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.3056463614254584;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysforteam(C, F), teamalsoknownas(F, H) )
%   | | | then return -0.12910962651469024;  // std dev = 1.179, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.33961356087197125;  // std dev = 0.339, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( athleteledsportsteam(C, I), teamplaysagainstteam(J, A) )
%   | | then if ( teamplaysinleague(J, D) )
%   | | | then return 0.06030138645044075;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11364395741622918;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.004939182145631715;  // std dev = 0.989, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10645823657873532;  // std dev = 1.615, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.0737255410731297;  // std dev = 0.030, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysforteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, F) )
%   | | then return 0.02454830766608564;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17429184856056432;  // std dev = 0.049, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( athleteledsportsteam(D, G), recursion_teamplayssport(G, B) )
%   | | then return 0.22612979781351172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | | then return -0.1381457680292906;  // std dev = 0.581, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.0673078176945703;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | then if ( teamalsoknownas(A, L), teamplaysinleague(A, M) )
%   | | then return 0.20886974162287708;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteplaysforteam(N, A) )
%   | | | then return 0.19297187727792883;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.046922109605981616;  // std dev = 2.201, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else return -0.06982135324257743;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamalsoknownas(A, E), teamplaysinleague(E, D) )
%   | | then return 0.020565168254673732;  // std dev = 0.369, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(F, A), athleteledsportsteam(C, A) )
%   | | | then return 0.10423318207152439;  // std dev = 0.299, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.1549182105390252;  // std dev = 0.356, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | then return 0.16651078494796898;  // std dev = 0.831, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return -0.07650144038561105;  // std dev = 0.847, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.05421428811610907;  // std dev = 2.116, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   else return -0.0645639998636754;  // std dev = 0.027, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */


Results
   AUC ROC   = 0.941166
   AUC PR    = 0.942026
   CLL	      = -0.343124
   Precision = 0.809524 at threshold = 0.5
   Recall    = 0.901515
   F1        = 0.853047


Total learning time: 161.06799999999998 seconds
Total inference time: 6.101 seconds
AUC ROC: 0.941166


Results scoring model
   AUC ROC   = 0.992346
   AUC PR    = 0.992973
   CLL	      = -0.248997
   Precision = 0.84127 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.913793


Total scoring time: 2.105 seconds
Refined model CLL: -0.248997


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941166
   AUC PR    = 0.942026
   CLL	      = -0.343124
   Precision = 0.809524 at threshold = 0.5
   Recall    = 0.901515
   F1        = 0.853047


Total learning time: 166.63299999999998 seconds
Total inference time: 6.101 seconds
AUC ROC: 0.941166
Total revision time: 166.63299999999998
Best scored revision CLL: -0.248997


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 00:46:45
{'AUC ROC': 0.941166, 'AUC PR': 0.942026, 'CLL': -0.343124, 'Precision': [0.809524, 0.5], 'Recall': 0.901515, 'F1': 0.853047, 'Learning time': 166.63299999999998, 'Inference time': 6.101, 'parameter_0.4': {'AUC ROC': 0.886134, 'AUC PR': 0.869375, 'CLL': -0.468145, 'Precision': [0.785185, 0.5], 'Recall': 0.80303, 'F1': 0.794007, 'Learning time': 2.305, 'Inference time': 1.867}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then return 0.7831489350995114;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.05296217601159886;  // std dev = 1.909, 45.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.41912454485560896;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(C, A), teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.567692104743004;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.13552547860242883;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | then return 0.675535241997906;  // std dev = 1.372, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return 0.20398941145782917;  // std dev = 0.474, 111.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24607530500802768;  // std dev = 5.647, 158.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4528128959034833;  // std dev = 1.658, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.1009467386163268;  // std dev = 1.897, 45.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(A, H), teamplaysinleague(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24576135256976256;  // std dev = 4.258, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.151466333225899;  // std dev = 5.345, 158.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.09981470384347266;  // std dev = 2.505, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.23256175822333258;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.026072785676858758;  // std dev = 1.567, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.16012515046248577;  // std dev = 4.257, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.18789892239279335;  // std dev = 4.643, 121.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=77 */
%   | else return -0.21718844491259917;  // std dev = 1.321, 37.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.08863569978678748;  // std dev = 4.058, 113.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=60 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.022997234801398786;  // std dev = 3.094, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.22919361851758405;  // std dev = 1.356, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.13242815354666257;  // std dev = 1.780, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.06553299868427125;  // std dev = 4.354, 95.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( teamplaysinleague(D, E) )
%   | then return 0.17987157100545598;  // std dev = 1.659, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.12496229912611174;  // std dev = 1.589, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.10028789117275327;  // std dev = 3.051, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | else return -5.689195396464072E-4;  // std dev = 2.957, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.883774
   AUC PR    = 0.860516
   CLL	      = -0.4708
   Precision = 0.792969 at threshold = 0.5
   Recall    = 0.768939
   F1        = 0.780769


Total learning time: 2.632 seconds
Total inference time: 1.537 seconds
AUC ROC: 0.883774


Results scoring model
   AUC ROC   = 0.887678
   AUC PR    = 0.879009
   CLL	      = -0.486951
   Precision = 0.859375 at threshold = 0.5
   Recall    = 0.696203
   F1        = 0.769231


Total scoring time: 1.181 seconds
Parameter learned model CLL: -0.486951


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true': [1.666, 3, 37], 'false,true,true': [1.909, 41, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.178, 18, 23], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.309, 3, 4], 'false,false,false,false': [2.482, 14, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamalsoknownas(C, A), teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(A, F), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [7.45e-09, 7, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.372, 2, 32], 'false,false,false': [0.474, 69, 42]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.647, 79, 79], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(A, E)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(A, H), teamplaysinleague(A, I)'}, {'true,true': [1.658, 3, 37], 'true,false': [0.0, 0, 0], 'false,true,true': [1.897, 41, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.258, 35, 38], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.345, 79, 79], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [2.505, 29, 32], 'true,false,true': [0.926, 1, 6], 'true,false,false,true': [1.567, 14, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.257, 35, 38], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(C, D)'}, {'true,true': [4.643, 44, 77], 'true,false': [1.321, 35, 2], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [4.058, 53, 60], 'false,true': [3.094, 26, 19], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true': 'teamplaysagainstteam(A, E), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [1.356, 2, 28], 'true,false,true': [1.78, 28, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [4.354, 49, 46], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'teamplaysinleague(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamplaysinleague(A, G)', 'false,true,true': 'teamplaysagainstteam(A, H)'}, {'true,true': [1.659, 3, 37], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.589, 33, 3], 'false,true,true,false': [3.051, 18, 23], 'false,true,false': [2.957, 25, 16], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06937500000000182, 0.2292444699798915], 'false': [0.08098765432098749, 0.24957778194783417], 'false,false': [0.24628197501487328, 0.24902343749999953], 'false,false,false': [0.24489795918367332, 0.24639999999999954], 'false,false,true': [0.24628197501487328, nan], 'false,true': [0.08098765432098749, nan]}, {'': [nan, 0.22270141898966173], 'false': [0.18699977546410268, 0.22460588886086094], 'false,false': [0.05536332179930802, 0.22430743037699932], 'false,true': [0.13888888888888895, 7.93016446160826e-18], 'false,true,false': [7.93016446160826e-18, nan]}, {'': [0.20182860257353433, nan]}, {'': [0.06872947253365416, 0.2125056219775484], 'false': [0.07995764725188412, 0.24837181557759608], 'false,false': [0.24837181557759608, nan], 'false,false,true': [nan, 0.24837181557759608], 'false,true': [0.07995764725188412, nan], 'true': [0.06872947253365416, nan]}, {'': [0.18083404248461335, nan]}, {'': [0.11718461305128092, 0.24820272074240662], 'false': [nan, 0.24820272074240662], 'false,false': [0.24820272074240662, nan], 'true': [0.10283163758030849, 0.1518383604661093], 'true,false': [0.12244897959183675, 0.1444297539424844], 'true,false,false': [0.1444297539424844, nan]}, {'': [0.17689914823921413, nan], 'true': [0.17814569734336755, 0.047154312262203554]}, {'': [0.14570893141583616, 0.2127811856797543], 'false': [0.2127811856797543, nan]}, {'': [0.11208357905960281, 0.19952295065506137], 'false': [0.19952295065506137, nan], 'true': [0.06128159325162604, 0.095995628220978], 'true,false': [0.09599562822097811, nan]}, {'': [0.06882486681373554, 0.18266609854768426], 'false': [0.18266609854768417, nan], 'false,true': [0.1663318789657234, 0.213329608883383], 'false,true,true': [0.0701030498522081, 0.22710398714300048], 'true': [0.06882486681373554, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(A, D).;true;true
1;true;recursion_teamplayssport(D, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.829577506528083;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(A, H) )
%   | | then if ( teamalsoknownas(I, G), teamalsoknownas(J, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( teamplaysinleague(A, K), athleteledsportsteam(C, L) )
%   | | | then return 0.6248156017661783;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.39386322081379804;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else if ( teamplaysagainstteam(M, A) )
%   | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( athleteplayssport(N, B), teamalsoknownas(A, P) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07042249347191636;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(A, D) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.5810671956527321;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysagainstteam(A, G), recursion_teamplayssport(G, B) )
%   | | | then return 0.7300315932538938;  // std dev = 0.092, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.41889298361678645;  // std dev = 1.263, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | | | then return 0.10771363456017585;  // std dev = 1.561, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4336946600591383;  // std dev = 3.445, 54.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   | else if ( teamalsoknownas(J, A), athleteplayssport(K, B) )
%   | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.12745668991808445;  // std dev = 0.018, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.039657132974882776;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | | then return 0.5422885867627573;  // std dev = 0.160, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return -0.21872247900802186;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6805480187905708;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteledsportsteam(C, G), teamplaysagainstteam(H, A) )
%   | | then if ( teamalsoknownas(I, H), teamalsoknownas(J, I) )
%   | | | then return 0.33969837368227807;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.06209855832683764;  // std dev = 0.745, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | | | then return 0.6749865962344413;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3483030252363189;  // std dev = 3.286, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   else if ( teamalsoknownas(L, A), athleteplaysforteam(M, L) )
%   | then return 0.04119650308569991;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.09732469438402189;  // std dev = 0.150, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, F) )
%   | then if ( teamplaysagainstteam(A, G), recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysinleague(E, F), recursion_teamplayssport(E, B) )
%   | | | then return 0.4389279915265561;  // std dev = 0.189, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.27668549728967573;  // std dev = 1.102, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.012711538284061135;  // std dev = 1.296, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.392769639438128;  // std dev = 1.949, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | else if ( athleteledsportsteam(C, I), teamplaysagainstteam(J, A) )
%   | | then if ( teamplaysinleague(J, D) )
%   | | | then return 0.2909445956975323;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19123685793627054;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.041286983381964903;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2781012663552339;  // std dev = 2.362, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.07221462114504053;  // std dev = 0.189, 49.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamalsoknownas(A, G), teamplaysinleague(G, E) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.42082910279935587;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.016973702322028855;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( teamplaysagainstteam(A, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.34879233235328266;  // std dev = 0.360, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.2196279202634381;  // std dev = 2.179, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(C, J) )
%   | | then if ( teamplaysinleague(I, D) )
%   | | | then return 0.2217900425116733;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.16377121606801334;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | | | then return 0.4746633013269115;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15164217719330325;  // std dev = 2.450, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else return -0.0651990626456737;  // std dev = 0.190, 49.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E), athleteledsportsteam(C, F) )
%   | then if ( teamplaysinleague(F, E), recursion_teamplayssport(F, B) )
%   | | then return 0.2773445881714278;  // std dev = 0.260, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( athleteplaysinleague(G, E), athleteledsportsteam(G, F) )
%   | | | then return -0.17425557227189523;  // std dev = 0.839, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.23424608508963865;  // std dev = 2.217, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | else if ( teamplaysagainstteam(H, A), athleteplaysforteam(I, H) )
%   | | then if ( teamplaysagainstteam(A, J), recursion_teamplayssport(H, B) )
%   | | | then return 0.19096644868027873;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1986338548395945;  // std dev = 0.208, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(K, A), athleteledsportsteam(C, L) )
%   | | | then return 0.2984464439988703;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12084290901937328;  // std dev = 2.259, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   else if ( teamplaysagainstteam(M, A) )
%   | then return -0.0936576923917684;  // std dev = 0.027, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.005671171630699193;  // std dev = 0.312, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, D), teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(A, F), teamplaysinleague(E, F) )
%   | | then return 0.1869529539121538;  // std dev = 0.177, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( teamalsoknownas(E, D), teamplaysinleague(A, G) )
%   | | | then return 0.09481504526512563;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.18642512002386896;  // std dev = 2.059, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( teamplaysinleague(A, H), teamplaysinleague(D, H) )
%   | | then if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.14572872027888104;  // std dev = 0.602, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.3036082722185769;  // std dev = 0.915, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4277115659359392;  // std dev = 0.221, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, J) )
%   | then return -0.08398855439552265;  // std dev = 0.069, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | else if ( athleteplayssport(L, B) )
%   | | then return 0.060263771857614064;  // std dev = 0.384, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return -0.10268540211965523;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.1509739142180938;  // std dev = 0.160, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(G, F), athleteplaysforteam(G, H) )
%   | | | then return -0.31499574484065396;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12575097266504545;  // std dev = 0.811, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( teamplaysinleague(A, I), teamplaysagainstteam(J, A) )
%   | | | then return 0.30182428657590893;  // std dev = 0.534, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08200503632312525;  // std dev = 2.972, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   else if ( teamplaysagainstteam(K, A) )
%   | then return -0.07997204191503474;  // std dev = 0.024, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( athleteplayssport(L, B) )
%   | | then if ( teamplaysinleague(A, M) )
%   | | | then return -0.0041839990034552785;  // std dev = 0.877, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.22216705166883086;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0936036950152022;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.12751415023209084;  // std dev = 0.161, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( teamalsoknownas(A, G) )
%   | | | then return 0.10775927623914017;  // std dev = 1.057, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.14289762390835872;  // std dev = 1.015, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.16383038270995068;  // std dev = 1.454, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.05515602082491702;  // std dev = 2.338, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.07428348537941123;  // std dev = 0.023, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( athleteplayssport(J, B), teamalsoknownas(A, K) )
%   | | then return 0.16074485086208376;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.09640323767848169;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03454565655269775;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, E) )
%   | then return -0.07148858379111046;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then if ( teamalsoknownas(F, G), teamalsoknownas(G, H) )
%   | | | then return 0.002724274463262753;  // std dev = 0.807, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.17373841927039932;  // std dev = 0.715, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( athleteledsportsteam(C, I) )
%   | | | then return 0.062023134638702244;  // std dev = 2.875, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | | else return -0.1716679845393808;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | then return 0.06792736350590926;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.0799251140990275;  // std dev = 0.169, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( athleteplayssport(M, B) )
%   | | | then return 0.06173184038227627;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.08488316364343101;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.952616
   AUC PR    = 0.956174
   CLL	      = -0.324971
   Precision = 0.884 at threshold = 0.5
   Recall    = 0.837121
   F1        = 0.859922


Total learning time: 200.736 seconds
Total inference time: 6.154 seconds
AUC ROC: 0.952616


Results scoring model
   AUC ROC   = 0.976767
   AUC PR    = 0.978586
   CLL	      = -0.296616
   Precision = 0.890244 at threshold = 0.5
   Recall    = 0.924051
   F1        = 0.906832


Total scoring time: 2.538 seconds
Refined model CLL: -0.296616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.952616
   AUC PR    = 0.956174
   CLL	      = -0.324971
   Precision = 0.884 at threshold = 0.5
   Recall    = 0.837121
   F1        = 0.859922


Total learning time: 207.087 seconds
Total inference time: 6.154 seconds
AUC ROC: 0.952616
Total revision time: 207.087
Best scored revision CLL: -0.296616


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 00:50:21
{'AUC ROC': 0.952616, 'AUC PR': 0.956174, 'CLL': -0.324971, 'Precision': [0.884, 0.5], 'Recall': 0.837121, 'F1': 0.859922, 'Learning time': 207.087, 'Inference time': 6.154, 'parameter_0.6': {'AUC ROC': 0.883774, 'AUC PR': 0.860516, 'CLL': -0.4708, 'Precision': [0.792969, 0.5], 'Recall': 0.768939, 'F1': 0.780769, 'Learning time': 2.632, 'Inference time': 1.537}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then return 0.7826772369863048;  // std dev = 1.923, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.034708207757630574;  // std dev = 2.315, 56.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.3516554286060048;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(C, A), teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.5122285559799239;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.03767834639517641;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | then return 0.6889962327476;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else if ( athleteledsportsteam(G, H) )
%   | | | then return 0.20162608682742153;  // std dev = 5.808, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24676839391339578;  // std dev = 6.594, 212.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4523521658980981;  // std dev = 1.896, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.08650308226459205;  // std dev = 2.316, 56.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22585301264919092;  // std dev = 5.073, 103.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.15273248559957725;  // std dev = 6.284, 212.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.1124631532424676;  // std dev = 3.328, 93.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=49 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.212384758174292;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.10709727549300987;  // std dev = 0.945, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.145287615727633;  // std dev = 5.072, 103.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.1948317449637322;  // std dev = 5.457, 163.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=104 */
%   | else return -0.24112281601083477;  // std dev = 1.369, 49.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.06545613396422566;  // std dev = 3.132, 88.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=47 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.1317178926981984;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return 0.07216793634340755;  // std dev = 5.070, 119.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysforteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.22235303463904402;  // std dev = 1.637, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else if ( athleteledsportsteam(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0.538359483280964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1411901919421139;  // std dev = 0.301, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.05732689011121053;  // std dev = 5.154, 130.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( athleteplaysforteam(D, E) )
%   | then return 0.1815397432479311;  // std dev = 1.907, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.14476477443130054;  // std dev = 1.352, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.09138281996910338;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.033597008696355984;  // std dev = 5.012, 114.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.887691
   AUC PR    = 0.863903
   CLL	      = -0.472295
   Precision = 0.927152 at threshold = 0.5
   Recall    = 0.530303
   F1        = 0.674699


Total learning time: 2.947 seconds
Total inference time: 1.573 seconds
AUC ROC: 0.887691


Results scoring model
   AUC ROC   = 0.868147
   AUC PR    = 0.865303
   CLL	      = -0.49848
   Precision = 0.927273 at threshold = 0.5
   Recall    = 0.481132
   F1        = 0.63354


Total scoring time: 1.378 seconds
Parameter learned model CLL: -0.49848


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true': [1.923, 4, 49], 'false,true,true': [2.315, 50, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.491, 4, 5], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.058, 9, 8], 'false,false,false,false': [4.387, 39, 38]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamalsoknownas(C, A), teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(A, F), recursion_teamplayssport(F, B)', 'false,false,false': 'athleteledsportsteam(G, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.247, 2, 7], 'false,true,false,true': [0.949, 9, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.382, 2, 42], 'false,false,false,true': [5.808, 93, 56], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [6.594, 106, 106], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(A, E)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(A, H), athleteplaysforteam(I, A)'}, {'true,true': [1.896, 4, 49], 'true,false': [0.0, 0, 0], 'false,true,true': [2.316, 50, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.073, 52, 51], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [6.284, 106, 106], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysinleague(A, D)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [3.328, 44, 49], 'true,false,true': [0.921, 1, 5], 'true,false,false,true': [0.945, 9, 1], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.072, 52, 51], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(C, D)'}, {'true,true': [5.457, 59, 104], 'true,false': [1.369, 47, 2], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'recursion_teamplayssport(F, B)'}, {'true': [3.132, 41, 47], 'false,true,true': [0.752, 2, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [5.07, 63, 56], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysforteam(D, A)', 'true': 'teamplaysagainstteam(A, E), recursion_teamplayssport(E, B)', 'true,false': 'athleteledsportsteam(D, F), recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [1.637, 3, 37], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.301, 35, 5], 'false,true': [5.154, 68, 62], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'athleteplaysforteam(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'teamplaysagainstteam(A, H)'}, {'true,true': [1.907, 4, 49], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.352, 34, 2], 'false,true,true,false': [1.403, 4, 5], 'false,true,false': [5.012, 64, 50], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06977572089711674, 0.22997508009967987], 'false': [0.09566326530612268, 0.2499764351022717], 'false,false': [0.2469135802469134, 0.24988682661837963], 'false,false,false': [0.24913494809688583, 0.2499578343734203], 'false,false,true': [0.2469135802469134, nan], 'false,true': [0.09566326530612268, nan]}, {'': [nan, 0.22516993547875683], 'false': [0.20462974978043105, 0.22646717127001031], 'false,false': [0.04338842975206678, 0.2263788528670542], 'false,false,false': [0.22637885286705392, nan], 'false,true': [0.17283950617283952, 0.08999999999999996], 'false,true,false': [0.08999999999999996, nan]}, {'': [0.2050798340106984, nan]}, {'': [0.06786144920914135, 0.21782341545355957], 'false': [0.09575807698480751, 0.24982605220717444], 'false,false': [0.24982605220717444, nan], 'false,false,true': [nan, 0.24982605220717444], 'false,true': [0.09575807698480751, nan], 'true': [0.06786144920914135, nan]}, {'': [0.1862651530655779, nan]}, {'': [0.12235174279799846, 0.24980607437755606], 'false': [nan, 0.24980607437755606], 'false,false': [0.24980607437755606, nan], 'true': [0.11908660724177014, 0.1328400460882902], 'true,false': [0.14147667825692198, 0.08938227809853805], 'true,false,false': [0.08938227809853805, nan]}, {'': [0.18309046650257646, nan], 'true': [0.18270191200751304, 0.03825475107951523]}, {'': [0.11144235814022528, 0.2120090324231992], 'false': [0.11318742187826525, 0.21601820910680275], 'false,false': [0.21601820910680275, nan], 'false,true': [0.11318742187826525, nan]}, {'': [0.11506300378106271, 0.20434865392560322], 'false': [0.2043486539256027, nan], 'true': [0.06696428364061693, 0.10736757442042373], 'true,false': [0.0, 0.09074605975593104]}, {'': [0.06861546181440847, 0.18787158048369346], 'false': [0.1878715804836937, nan], 'false,true': [0.09328355020101632, 0.220342261596162], 'false,true,true': [0.05080625054534887, 0.21858019975080828], 'true': [0.06861546181440847, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
8;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysforteam(D, A).;true;true
8;true;teamplaysagainstteam(A, E), recursion_teamplayssport(E, B).;true;true
8;true,false;athleteledsportsteam(D, F), recursion_teamplayssport(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(C, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8359267128772896;  // std dev = 0.147, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(I, A) )
%   | | then if ( teamplaysagainstteam(H, I), teamplaysagainstteam(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.30259337954395665;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( teamplaysinleague(A, D), athleteledsportsteam(C, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.45814893509951266;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   else if ( teamplaysagainstteam(K, A) )
%   | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.06492798797741088;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(C, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7017143811982325;  // std dev = 0.147, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(I, A) )
%   | | then if ( teamalsoknownas(J, H), teamalsoknownas(K, J) )
%   | | | then return 0.4401345631271042;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06582718247794088;  // std dev = 0.931, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( teamplaysinleague(A, L), athleteledsportsteam(C, M) )
%   | | | then return 0.4913683039985998;  // std dev = 2.869, 42.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | | | else return 0.3603617511446166;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else if ( teamalsoknownas(N, A), athleteplaysforteam(P, N) )
%   | then return -0.0015302697321519891;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return -0.11146474997039359;  // std dev = 0.132, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.5787420317813041;  // std dev = 0.281, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.09072731684776496;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteledsportsteam(C, F), teamplaysagainstteam(G, A) )
%   | | then if ( teamplaysinleague(G, D), recursion_teamplayssport(F, B) )
%   | | | then return 0.48178613442013285;  // std dev = 0.670, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09277475406779914;  // std dev = 1.985, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( teamplaysagainstteam(H, A), recursion_teamplayssport(H, B) )
%   | | | then return 0.605762963037321;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3337201878243393;  // std dev = 3.846, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.1158470705350771;  // std dev = 0.028, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return -0.011273242136609594;  // std dev = 0.312, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.12170389968727437;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.4362454583360189;  // std dev = 0.322, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.07551310721042462;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteledsportsteam(C, F), teamplaysagainstteam(G, A) )
%   | | then if ( recursion_teamplayssport(G, B), teamplaysagainstteam(A, H) )
%   | | | then return 0.2998850182397643;  // std dev = 1.162, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.03895351714547129;  // std dev = 1.703, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.1615028203865922;  // std dev = 1.908, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.30522520843603823;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | then if ( athleteledsportsteam(L, K), athleteplaysforteam(M, A) )
%   | | then return -0.11312321826456728;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.21370130265589835;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09110713304817579;  // std dev = 0.131, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.33439210571132255;  // std dev = 0.325, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.062433867848635805;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, G) )
%   | | then return -0.18402361009904747;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamalsoknownas(H, A), teamplaysinleague(A, I) )
%   | | | then return 0.34086994206177806;  // std dev = 1.092, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.17347737006833944;  // std dev = 4.205, 84.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   else if ( teamplaysagainstteam(J, A) )
%   | then return -0.09769968097810143;  // std dev = 0.059, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( athleteplayssport(K, B), teamalsoknownas(A, L) )
%   | | then return 0.07921393677710745;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.10856390747084703;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.005741161730516666;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), teamplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(E, D) )
%   | | | then return 0.23558822450213884;  // std dev = 0.434, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.30703913448980624;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.32026110437240846;  // std dev = 0.089, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( athleteplaysforteam(H, A), teamplaysagainstteam(A, I) )
%   | | then if ( athleteledsportsteam(J, I), teamplaysagainstteam(I, A) )
%   | | | then return -0.16097235228182202;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05803136651470349;  // std dev = 0.999, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( athleteledsportsteam(C, K) )
%   | | | then return 0.16785859818962817;  // std dev = 3.967, 80.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=51 */
%   | | | else return -0.050070130328475196;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(L, A), athleteplaysforteam(M, L) )
%   | then return 0.013891083636304353;  // std dev = 0.309, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return -0.07663638068380348;  // std dev = 0.131, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.22156619594985738;  // std dev = 0.326, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.03289512627823663;  // std dev = 0.694, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( teamalsoknownas(F, A), athleteplaysforteam(G, A) )
%   | | then return 0.2699966746393864;  // std dev = 0.585, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysagainstteam(H, A), athleteledsportsteam(C, I) )
%   | | | then return 0.013524328240581316;  // std dev = 1.822, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.1182175852247018;  // std dev = 3.816, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   else if ( teamplaysagainstteam(J, A) )
%   | then return -0.08488064831386104;  // std dev = 0.068, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( athleteplayssport(K, B), teamalsoknownas(A, L) )
%   | | then return 0.076437406221662;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.09189957197965432;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.012237957897715836;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), teamplaysinleague(F, G) )
%   | | then return 0.11573231780752337;  // std dev = 0.160, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0.233701608322313;  // std dev = 0.092, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, A) )
%   | | then if ( teamplaysinleague(H, D) )
%   | | | then return 0.07895464080065673;  // std dev = 0.596, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1220367224184941;  // std dev = 0.746, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(C, J) )
%   | | | then return 0.3421723326992108;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0788036751366851;  // std dev = 4.057, 81.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=49 */
%   else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | then if ( athleteledsportsteam(L, K), athleteplaysforteam(M, A) )
%   | | then return -0.08778053135340534;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19377139676704633;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06607853331685139;  // std dev = 0.130, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysforteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.14567553056796795;  // std dev = 0.115, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else if ( athleteledsportsteam(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0.2538280551147074;  // std dev = 0.127, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.06427158142220674;  // std dev = 0.190, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysinleague(A, I), athleteledsportsteam(G, J) )
%   | | then if ( teamplaysagainstteam(A, K), teamalsoknownas(L, K) )
%   | | | then return 0.2622839742118541;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1000490050047795;  // std dev = 2.647, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | | else if ( teamalsoknownas(A, M), recursion_teamplayssport(M, B) )
%   | | | then return 0.16695252459097937;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.033620944518871355;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | else if ( teamalsoknownas(A, N), teamalsoknownas(N, A) )
%   | | then return 0.032787887483371476;  // std dev = 0.825, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.04904254485977793;  // std dev = 0.171, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), teamplaysinleague(D, E) )
%   | then if ( athleteplaysinleague(F, E), athleteledsportsteam(F, G) )
%   | | then return 0.10158102353208824;  // std dev = 0.144, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, E) )
%   | | | then return 1.3431191032209355E-4;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3344727338051531;  // std dev = 0.583, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | then if ( teamplaysagainstteam(J, A), athleteledsportsteam(K, J) )
%   | | | then return 0.05133907906676531;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.2519832522698218;  // std dev = 2.382, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return 0.14692977257218684;  // std dev = 0.995, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.34950488468270985;  // std dev = 1.352, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( teamplaysagainstteam(M, A), recursion_teamplayssport(M, B) )
%   | then return 0.2317911756566192;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06030845588851063;  // std dev = 0.191, 68.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=3 */


Results
   AUC ROC   = 0.946625
   AUC PR    = 0.946478
   CLL	      = -0.338804
   Precision = 0.862745 at threshold = 0.5
   Recall    = 0.833333
   F1        = 0.847784


Total learning time: 398.707 seconds
Total inference time: 7.89 seconds
AUC ROC: 0.946625


Results scoring model
   AUC ROC   = 0.971787
   AUC PR    = 0.974874
   CLL	      = -0.306645
   Precision = 0.880734 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.893023


Total scoring time: 3.686 seconds
Refined model CLL: -0.306645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.946625
   AUC PR    = 0.946478
   CLL	      = -0.338804
   Precision = 0.862745 at threshold = 0.5
   Recall    = 0.833333
   F1        = 0.847784


Total learning time: 406.71799999999996 seconds
Total inference time: 7.89 seconds
AUC ROC: 0.946625
Total revision time: 406.71799999999996
Best scored revision CLL: -0.306645


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 00:57:18
{'AUC ROC': 0.946625, 'AUC PR': 0.946478, 'CLL': -0.338804, 'Precision': [0.862745, 0.5], 'Recall': 0.833333, 'F1': 0.847784, 'Learning time': 406.71799999999996, 'Inference time': 7.89, 'parameter_0.8': {'AUC ROC': 0.887691, 'AUC PR': 0.863903, 'CLL': -0.472295, 'Precision': [0.927152, 0.5], 'Recall': 0.530303, 'F1': 0.674699, 'Learning time': 2.947, 'Inference time': 1.573}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then return 0.783522069427871;  // std dev = 2.151, 67.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(D, F), teamplaysinleague(A, G) )
%   | | | then return -0.046612969662392464;  // std dev = 2.330, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
%   | | | else return 0.14386322081379802;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then if ( teamalsoknownas(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( athleteplaysforteam(J, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3581489350995133;  // std dev = 5.244, 110.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(C, A), teamplaysagainstteam(A, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.658814277391852;  // std dev = 1.923, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | else if ( teamalsoknownas(A, E), recursion_teamplayssport(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07885989951606528;  // std dev = 1.683, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | else if ( teamplaysagainstteam(A, F), recursion_teamplayssport(F, B) )
%   | | then return 0.6628574040764877;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.27607607185991784;  // std dev = 0.495, 148.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=68 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.5231579495621718;  // std dev = 0.819, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( athleteplaysforteam(D, A), athleteplaysforteam(D, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | | | then return -0.055343423877139024;  // std dev = 0.750, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21730813084448666;  // std dev = 2.864, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   else if ( teamalsoknownas(A, G), recursion_teamplayssport(G, B) )
%   | then return 0.4230600013623727;  // std dev = 0.945, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteplaysforteam(I, H), athleteplaysforteam(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19429426117628965;  // std dev = 2.259, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( athleteplaysforteam(J, A), teamplaysinleague(A, K) )
%   | | | then return 0.23702853755663794;  // std dev = 3.240, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.25141473394863584;  // std dev = 5.110, 114.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=57 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.35846850879096265;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.45976394409753263;  // std dev = 1.890, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(G, A), athleteplaysforteam(H, E) )
%   | | | then return -0.14883377086205196;  // std dev = 0.062, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.03679212632129214;  // std dev = 1.839, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( teamalsoknownas(A, I), recursion_teamplayssport(I, B) )
%   | | then if ( teamplaysagainstteam(A, J), athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32942629290124;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return 0.2304830043349629;  // std dev = 2.555, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.16331743465147988;  // std dev = 5.338, 121.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=52 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( recursion_teamplayssport(C, B) )
%   | then return 0.2664411007525647;  // std dev = 1.244, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( teamalsoknownas(D, A), recursion_teamplayssport(D, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11433787764761927;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return 0.34858649335559094;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09675422165603323;  // std dev = 1.438, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( athleteplaysforteam(F, A), athleteledsportsteam(G, A) )
%   | | then if ( athleteplaysforteam(F, H), recursion_teamplayssport(H, B) )
%   | | | then return 0.42813520874149397;  // std dev = 0.260, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.15683265402821409;  // std dev = 0.185, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.15608541668769957;  // std dev = 3.973, 88.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=44 */
%   | | | else return 0.1652638698295393;  // std dev = 3.611, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysinleague(A, E), teamalsoknownas(A, F) )
%   | then return 0.05612053906487999;  // std dev = 2.027, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.30909701149369123;  // std dev = 0.972, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( recursion_teamplayssport(D, B) )
%   | | | then return 0.3928967614036745;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07856029101813264;  // std dev = 1.541, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.11014570549728792;  // std dev = 2.423, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( athleteledsportsteam(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14161961869683015;  // std dev = 2.815, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysforteam(K, A) )
%   | | | then return 0.14836665676087538;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1439775108852071;  // std dev = 4.583, 84.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(C, D), teamalsoknownas(D, E) )
%   | then return 0.27629476548995774;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05655015018841499;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(F, G), recursion_teamplayssport(G, B) )
%   | | then return -0.0658704906920384;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( athleteledsportsteam(H, F) )
%   | | | then return -0.14873213039415314;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12398029408125508;  // std dev = 2.737, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.34123227025919334;  // std dev = 0.818, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.19247109473450166;  // std dev = 0.810, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( teamplaysagainstteam(A, K), athleteledsportsteam(L, K) )
%   | | | then return 0.0637750707657937;  // std dev = 1.803, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.11005418576051157;  // std dev = 5.003, 106.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=53 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then return 0.037487186133925876;  // std dev = 2.138, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   else if ( teamalsoknownas(D, E), recursion_teamplayssport(E, B) )
%   | then return 0.14515182423679251;  // std dev = 5.712, 166.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=97 */
%   | else if ( teamalsoknownas(D, F), recursion_teamplayssport(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | | | then return -0.19708544098527675;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.30442042044353906;  // std dev = 1.036, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.15592968465043375;  // std dev = 1.381, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.0925469062286069;  // std dev = 1.253, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.10498814780533665;  // std dev = 0.774, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamalsoknownas(H, A), athleteledsportsteam(I, H) )
%   | | then if ( teamplaysagainstteam(H, J), recursion_teamplayssport(J, B) )
%   | | | then return 0.29145235943223735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1504474229981809;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.08867239538103429;  // std dev = 3.040, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.05523314174303768;  // std dev = 5.145, 145.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=72 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), athleteledsportsteam(E, D) )
%   | then return -0.034891121891234875;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.18212029985964945;  // std dev = 1.349, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   else if ( teamalsoknownas(F, A), recursion_teamplayssport(F, B) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09906243098784229;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(A, H), recursion_teamplayssport(H, B) )
%   | | then if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4161373419148392;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(A, K), athleteplaysforteam(L, K) )
%   | | | then return -0.0705406307143218;  // std dev = 2.498, 74.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return 0.04823159011871383;  // std dev = 5.334, 122.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=60 */


Results
   AUC ROC   = 0.898768
   AUC PR    = 0.904558
   CLL	      = -0.438329
   Precision = 0.907975 at threshold = 0.5
   Recall    = 0.560606
   F1        = 0.693208


Total learning time: 2.754 seconds
Total inference time: 1.5 seconds
AUC ROC: 0.898768


Results scoring model
   AUC ROC   = 0.876929
   AUC PR    = 0.884467
   CLL	      = -0.466727
   Precision = 0.918919 at threshold = 0.5
   Recall    = 0.511278
   F1        = 0.657005


Total scoring time: 1.326 seconds
Parameter learned model CLL: -0.466727


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,true,false': 'teamplaysinleague(D, F), teamplaysinleague(A, G)', 'false,false': 'athleteledsportsteam(H, A)', 'false,false,true': 'teamalsoknownas(I, A), recursion_teamplayssport(I, B)', 'false,false,false': 'athleteplaysforteam(J, A)'}, {'true': [2.151, 5, 62], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.33, 57, 6], 'false,true,false,false': [1.69, 10, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [5.244, 55, 55]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'athleteplaysforteam(C, A), teamplaysagainstteam(A, D)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'teamalsoknownas(A, E), recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(A, F), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.923, 4, 49], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.683, 48, 3], 'false,false,true': [0.964, 1, 13], 'false,false,false': [0.495, 80, 68]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'athleteplaysforteam(D, A), athleteplaysforteam(D, C)', 'true,false,false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false': 'teamalsoknownas(A, G), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'athleteplaysforteam(I, H), athleteplaysforteam(I, A)', 'false,false,false': 'athleteplaysforteam(J, A), teamplaysinleague(A, K)'}, {'true,true': [0.819, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.75, 5, 1], 'true,false,false,false': [2.864, 19, 15], 'false,true': [0.945, 1, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.259, 13, 10], 'false,false,false,true': [3.24, 37, 37], 'false,false,false,false': [5.11, 57, 57]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(A, E), teamalsoknownas(E, F)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,true,false': 'athleteledsportsteam(G, A), athleteplaysforteam(H, E)', 'false,false': 'teamalsoknownas(A, I), recursion_teamplayssport(I, B)', 'false,false,true': 'teamplaysagainstteam(A, J), athleteledsportsteam(K, A)', 'false,false,false': 'teamalsoknownas(L, A)'}, {'true,true': [0.929, 1, 8], 'true,false': [1.89, 4, 54], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.062, 21, 0], 'false,true,false,false': [1.839, 24, 4], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.826, 1, 2], 'false,false,false,true': [2.555, 13, 13], 'false,false,false,false': [5.338, 69, 52]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'recursion_teamplayssport(C, B)', 'true,false': 'teamalsoknownas(D, A), recursion_teamplayssport(D, B)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'athleteplaysforteam(F, A), athleteledsportsteam(G, A)', 'false,false,true': 'athleteplaysforteam(F, H), recursion_teamplayssport(H, B)', 'false,false,false': 'teamplaysinleague(A, I)'}, {'true,true': [1.244, 2, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.432, 29, 21], 'false,true,true': [7.45e-09, 0, 3], 'false,true,false': [1.438, 8, 5], 'false,false,true,true': [0.26, 0, 22], 'false,false,true,false': [0.185, 22, 0], 'false,false,false,true': [3.973, 44, 44], 'false,false,false,false': [3.611, 28, 28]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysinleague(A, E), teamalsoknownas(A, F)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(A, G)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'athleteledsportsteam(I, H)', 'false,false,false': 'teamplaysinleague(A, J), athleteplaysforteam(K, A)'}, {'true,true': [2.027, 12, 12], 'true,false,true': [0.972, 1, 30], 'true,false,false,true': [0.104, 0, 3], 'true,false,false,false': [1.541, 37, 5], 'false,true': [2.423, 22, 22], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.815, 16, 16], 'false,false,false,true': [1.173, 3, 3], 'false,false,false,false': [4.583, 42, 42]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(C, D), teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamplaysagainstteam(F, G), recursion_teamplayssport(G, B)', 'false,true,false': 'athleteledsportsteam(H, F)', 'false,false': 'athleteplaysforteam(I, A)', 'false,false,true': 'athleteplaysforteam(I, J), recursion_teamplayssport(J, B)', 'false,false,false': 'teamplaysagainstteam(A, K), athleteledsportsteam(L, K)'}, {'true,true': [0.099, 0, 7], 'true,false': [0.734, 1, 2], 'false,true,true': [0.819, 2, 2], 'false,true,false,true': [0.104, 7, 0], 'false,true,false,false': [2.737, 15, 14], 'false,false,true,true': [0.818, 0, 45], 'false,false,true,false': [0.81, 45, 0], 'false,false,false,true': [1.803, 10, 10], 'false,false,false,false': [5.003, 53, 53]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'false': 'teamalsoknownas(D, E), recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(D, F), recursion_teamplayssport(F, B)', 'false,false,false': 'teamplaysagainstteam(A, G), teamalsoknownas(A, H)'}, {'true': [2.138, 35, 35], 'false,true': [5.712, 69, 97], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.097, 5, 0], 'false,false,false,false': [1.036, 24, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, A)', 'true': 'teamplaysagainstteam(A, E), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'teamalsoknownas(G, A), recursion_teamplayssport(G, B)', 'false,false': 'teamalsoknownas(H, A), athleteledsportsteam(I, H)', 'false,false,true': 'teamplaysagainstteam(H, J), recursion_teamplayssport(J, B)', 'false,false,false': 'teamalsoknownas(A, K)'}, {'true,true': [1.381, 3, 32], 'true,false,true': [1.253, 32, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.774, 1, 5], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.032, 4, 0], 'false,false,false,true': [3.04, 20, 20], 'false,false,false,false': [5.145, 73, 72]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(A, D), athleteledsportsteam(E, D)', 'false': 'teamalsoknownas(F, A), recursion_teamplayssport(F, B)', 'false,true': 'athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(A, H), recursion_teamplayssport(H, B)', 'false,false,true': 'teamplaysagainstteam(A, I), athleteledsportsteam(J, A)', 'false,false,false': 'teamplaysagainstteam(A, K), athleteplaysforteam(L, K)'}, {'true,true': [1.227, 3, 7], 'true,false': [1.349, 2, 55], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.498, 65, 9], 'false,false,false,false': [5.334, 62, 60]}]]
[{'': [0.06905769659166784, 0.22948915431428496], 'false': [0.11300387923764528, 0.24999999999999975], 'false,false': [0.24999999999999992, 0.2499999999999998], 'false,false,true': [nan, 0.25000000000000006], 'false,false,false': [0.24999999999999992, 0.24999999999999992], 'false,true': [nan, 0.11300387923764564], 'false,true,false': [0.08616780045351498, 0.2040816326530611]}, {'': [nan, 0.22494994539902663], 'false': [0.19879572289555075, 0.2416798888341986], 'false,false': [0.06632653061224485, 0.2453389909788625], 'false,true': [0.06977572089711548, 0.055561398799445334], 'false,true,false': [nan, 0.05556139879944514]}, {'': [0.21551306606301604, 0.198316783076851], 'true': [0.0670013064965218, 0.22859423300131443], 'true,false': [nan, 0.22859423300131465], 'true,false,false': [0.09367516732700298, 0.24125264934119853], 'false': [0.17868679200291923, 0.19800744288865055], 'false,false': [0.22190661798286063, 0.19479497318814235], 'false,false,true': [nan, 0.22190661798286057], 'false,false,false': [0.14183506400782295, 0.2290909940741857]}, {'': [0.06740335580455108, 0.21085841521238574], 'false': [0.07219060478269988, 0.23911313561213754], 'false,false': [0.2272753941130421, 0.23887898904291327], 'false,false,false': [0.2511235594424086, 0.2354500225771109], 'false,false,true': [nan, 0.2272753941130421], 'false,true': [nan, 0.07219060478269988], 'false,true,false': [0.0001818451552452934, 0.12081717588412033], 'true': [0.0957902563860624, 0.061620180176055986]}, {'': [0.21855333333384652, 0.17125901340047786], 'true': [0.12894971365701058, 0.23558038454423944], 'true,false': [nan, 0.23558038454423932], 'false': [0.13896794868110757, 0.17399924496550392], 'false,false': [0.08786853378081423, 0.2001821140148539], 'false,false,false': [0.1793933927801672, 0.23279862208078966], 'false,true': [1.850371707708594e-17, 0.15914632034931972], 'false,false,true': [0.0030817788735222544, 0.001561588451426409]}, {'': [0.10424573180102051, 0.2181003927725985], 'false': [0.13338921651472282, 0.24835575666690254], 'false,false': [0.24756328667742045, 0.24863568110925308], 'false,false,false': [0.22945704536036052, 0.25000429935597696], 'false,false,true': [nan, 0.24756328667742045], 'true': [0.17121035830539222, 0.08267458474270513], 'true,false': [0.03049214565341423, 0.0668616419806793], 'true,false,false': [0.0036173106565845306, 0.056560977399564054]}, {'': [0.06498728620544013, 0.1749593606456561], 'false': [0.21646192060268246, 0.16709693851657179], 'false,true': [0.16753656086421084, 0.22002600825693613], 'false,true,false': [0.0015388149642244578, 0.258303061147475], 'false,false': [0.08591915527019744, 0.22474671150328324], 'false,false,false': [0.16254082502681416, 0.2361437098690477], 'false,false,true': [0.0148530287047244, 0.014565640932873809], 'true': [0.001404064437156381, 0.17954674983028604]}, {'': [0.06532228917016417, 0.19636301719156488], 'false': [0.1965186768662739, 0.03767441999491332], 'false,false': [nan, 0.03767441999491332], 'false,false,false': [0.0018870543488294588, 0.04291176015491247]}, {'': [0.06509831938259127, 0.18672150348692587], 'false': [0.09977604241304415, 0.18940293048868945], 'false,false': [0.031447021522387195, 0.19326390649061476], 'false,false,false': [0.23108790061708687, 0.1825879317691863], 'true': [0.054475087562499476, 0.04485124309524802], 'true,false': [0.04485124309524806, nan], 'false,false,true': [0.0, 0.0002536933605737958]}, {'': [0.05563283734301455, 0.18105292477503296], 'false': [0.25, 0.18024310527072843], 'false,true': [nan, 0.25], 'false,false': [0.0, 0.18029793538842886], 'false,false,false': [0.08431650998221213, 0.23319012502479985], 'true': [0.15065647602530025, 0.03193307470771074], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), recursion_teamplayssport(C, B).;true;true
3;false;teamplaysagainstteam(A, E), teamalsoknownas(E, F).;true;true
3;false,true;athleteledsportsteam(G, A), athleteplaysforteam(H, E).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamalsoknownas(E, A).;true;true
4;false,true;recursion_teamplayssport(E, B).;true;true
4;false,false;athleteplaysforteam(F, A), athleteledsportsteam(G, A).;true;true
4;false,false,true;athleteplaysforteam(F, H), recursion_teamplayssport(H, B).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A), recursion_teamplayssport(C, B).;true;true
6;true;teamplaysagainstteam(C, D), teamalsoknownas(D, E).;true;true
6;false;teamalsoknownas(F, A).;true;true
6;false,true;teamplaysagainstteam(F, G), recursion_teamplayssport(G, B).;true;true
6;false,true,false;athleteledsportsteam(H, F).;true;true
7;;teamplayssport(A, B) :- athleteledsportsteam(C, A).;true;true
7;false;teamalsoknownas(D, E), recursion_teamplayssport(E, B).;true;true
7;false,false;teamplaysagainstteam(A, G), teamalsoknownas(A, H).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, A).;true;true
8;false;teamalsoknownas(G, A), recursion_teamplayssport(G, B).;true;true
8;false,false;teamalsoknownas(H, A), athleteledsportsteam(I, H).;true;true
8;false,false,true;teamplaysagainstteam(H, J), recursion_teamplayssport(J, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), recursion_teamplayssport(C, B).;true;true
9;false;teamalsoknownas(F, A), recursion_teamplayssport(F, B).;true;true
9;false,false;teamalsoknownas(A, H), recursion_teamplayssport(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 8.43e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.5119950889456661;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( teamplaysagainstteam(A, I), recursion_teamplayssport(I, B) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.5060362590431745;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | then return -0.030739953789376676;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return -0.12796217601159882;  // std dev = 0.117, 72.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(E, F), teamplaysagainstteam(E, H) )
%   | | | then return 0.7276964987759279;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23778840857319514;  // std dev = 1.449, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.7280297738124072;  // std dev = 0.123, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( athleteplaysforteam(I, A), teamplaysagainstteam(A, J) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return 0.48072465931877395;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0899114895295031;  // std dev = 0.919, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( athleteledsportsteam(C, L), teamplaysinleague(A, D) )
%   | | | then return 0.6490635746493422;  // std dev = 0.809, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.40766643527296487;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=55 */
%   else if ( teamplaysagainstteam(M, A) )
%   | then return -0.1288386145534096;  // std dev = 0.029, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06670884860248563;  // std dev = 0.237, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.5594839230758042;  // std dev = 0.125, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, E) )
%   | | | then return 0.21601130913332164;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.18159054337510594;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, I), recursion_teamplayssport(A, I) )
%   | | | then return -0.1480454509934686;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.35790540842047924;  // std dev = 2.335, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( teamalsoknownas(J, A), teamplaysinleague(A, K) )
%   | | | then return 0.5901400276261219;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.3538918485888613;  // std dev = 3.950, 74.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   else if ( teamplaysagainstteam(L, A) )
%   | then return -0.11505794458627532;  // std dev = 0.026, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.05947974618181212;  // std dev = 0.237, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return 0.31872891739463954;  // std dev = 0.327, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.4108570915194476;  // std dev = 0.170, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | then if ( athleteledsportsteam(H, A), athleteplaysforteam(I, F) )
%   | | then return -0.11928394033193468;  // std dev = 0.183, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | | then return 0.14011150943155135;  // std dev = 1.348, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1042876440730166;  // std dev = 0.017, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | then if ( teamplaysinleague(A, N), teamplaysinleague(M, N) )
%   | | | then return 0.4181424844689233;  // std dev = 1.605, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.1990354533124618;  // std dev = 3.927, 66.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=37 */
%   | | else if ( athleteplayssport(P, B) )
%   | | | then return -0.027709580054003233;  // std dev = 1.720, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return -0.10922852532893872;  // std dev = 0.023, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | then if ( athleteplaysforteam(H, G), athleteplaysforteam(D, I) )
%   | | | then return 0.09516968702388638;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3870020929142086;  // std dev = 0.861, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( athleteledsportsteam(D, J) )
%   | | | then return 0.09254188561580436;  // std dev = 2.297, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.3223743544715925;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.03659932463110265;  // std dev = 0.245, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   else if ( teamalsoknownas(K, A) )
%   | then return 0.1918639354783476;  // std dev = 0.303, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( athleteplaysforteam(L, A), athleteledsportsteam(M, A) )
%   | | then return 0.11836689310285742;  // std dev = 0.237, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( athleteplayssport(N, B), athleteledsportsteam(N, P) )
%   | | | then return 0.23420065906667675;  // std dev = 3.801, 98.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=70 */
%   | | | else return -0.07653105445868358;  // std dev = 1.123, 46.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E), teamplaysinleague(A, D) )
%   | then if ( recursion_teamplayssport(E, B), teamplaysinleague(E, D) )
%   | | then return 0.2903834543610545;  // std dev = 0.140, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, E) )
%   | | | then return 0.10118741131565172;  // std dev = 0.989, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.23252206385725338;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteplayssport(H, I), recursion_teamplayssport(A, I) )
%   | | | then return -0.1643181434854018;  // std dev = 0.187, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1807949349564146;  // std dev = 2.239, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( teamalsoknownas(A, J), athleteledsportsteam(C, K) )
%   | | | then return 0.09337515973941374;  // std dev = 1.918, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.20337137725726243;  // std dev = 3.483, 68.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=49 */
%   else if ( teamplaysagainstteam(L, A) )
%   | then return -0.0979303297575874;  // std dev = 0.068, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.043938692416300766;  // std dev = 0.237, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(C, D), teamalsoknownas(D, E) )
%   | then return 0.2621930820584636;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1038176969976058;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(F, G), recursion_teamplayssport(G, B) )
%   | | then return 0.04931165411571031;  // std dev = 0.942, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( athleteledsportsteam(H, F) )
%   | | | then return -0.10116404822077603;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11597979211339794;  // std dev = 1.979, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | | then if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | | | then return 0.21132748889480515;  // std dev = 1.597, 61.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | | else return 0.07268019419498804;  // std dev = 4.031, 93.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=52 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.09131222110409735;  // std dev = 0.052, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.027511708405384205;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( teamplaysagainstteam(A, D), recursion_teamplayssport(D, B) )
%   | then return 0.19029011308969143;  // std dev = 0.176, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else return -0.07796952059154667;  // std dev = 0.115, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   else if ( teamalsoknownas(E, F), recursion_teamplayssport(F, B) )
%   | then if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | | then if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | | | then return 0.1668849559749091;  // std dev = 1.509, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.08127761147793183;  // std dev = 4.366, 104.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=63 */
%   | | else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | | | then return 0.22445251599536944;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09123306348277577;  // std dev = 0.078, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( teamplaysagainstteam(A, L), teamalsoknownas(A, M) )
%   | | then return -0.08274052389856393;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamplaysinleague(A, N) )
%   | | | then return -0.0937312750432432;  // std dev = 0.073, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.010845825446679783;  // std dev = 0.941, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, A) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, F) )
%   | | then if ( athleteledsportsteam(G, F), athleteplayssport(G, B) )
%   | | | then return 0.17925919277516528;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2017984987030036;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2090764292336172;  // std dev = 0.098, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.07019349391041389;  // std dev = 0.116, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   else if ( teamalsoknownas(H, A), recursion_teamplayssport(H, B) )
%   | then return 0.11736543132358958;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamalsoknownas(I, A), athleteledsportsteam(J, I) )
%   | | then if ( teamplaysagainstteam(I, K), recursion_teamplayssport(K, B) )
%   | | | then return 0.32195330448884096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09966326794101053;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | | | then return 0.07895172194670226;  // std dev = 4.567, 134.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=90 */
%   | | | else return -0.04748414070532199;  // std dev = 1.336, 51.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then if ( athleteplaysforteam(F, D), athleteplayssport(F, B) )
%   | | then return 0.1656166218590463;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2700257026685051;  // std dev = 0.582, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.1873194472332836;  // std dev = 0.079, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | | then return 0.01567540365045983;  // std dev = 0.795, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18681933149778404;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamalsoknownas(J, A), recursion_teamplayssport(J, B) )
%   | then return -0.066624295024162;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | | then return 0.398866369656354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(L, A) )
%   | | | then return -0.06957405039630714;  // std dev = 2.218, 87.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | | else return 0.05339382182261502;  // std dev = 4.037, 109.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=54 */


Results
   AUC ROC   = 0.960557
   AUC PR    = 0.961494
   CLL	      = -0.307291
   Precision = 0.856655 at threshold = 0.5
   Recall    = 0.950758
   F1        = 0.901257


Total learning time: 213.175 seconds
Total inference time: 7.059 seconds
AUC ROC: 0.960557


Results scoring model
   AUC ROC   = 0.960399
   AUC PR    = 0.96205
   CLL	      = -0.323611
   Precision = 0.8125 at threshold = 0.5
   Recall    = 0.977444
   F1        = 0.887372


Total scoring time: 3.652 seconds
Refined model CLL: -0.323611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960557
   AUC PR    = 0.961494
   CLL	      = -0.307291
   Precision = 0.856655 at threshold = 0.5
   Recall    = 0.950758
   F1        = 0.901257


Total learning time: 220.907 seconds
Total inference time: 7.059 seconds
AUC ROC: 0.960557
Total revision time: 220.907
Best scored revision CLL: -0.323611


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:01:08
{'AUC ROC': 0.960557, 'AUC PR': 0.961494, 'CLL': -0.307291, 'Precision': [0.856655, 0.5], 'Recall': 0.950758, 'F1': 0.901257, 'Learning time': 220.907, 'Inference time': 7.059, 'parameter_1.0': {'AUC ROC': 0.898768, 'AUC PR': 0.904558, 'CLL': -0.438329, 'Precision': [0.907975, 0.5], 'Recall': 0.560606, 'F1': 0.693208, 'Learning time': 2.754, 'Inference time': 1.5}}


Starting fold 3

Target train facts examples: 9691
Target train pos examples: 131
Target train neg examples: 131

Target test facts examples: 9691
Target test pos	 examples: 266
Target test neg examples: 266

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6514004150513907;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.004816813883129016;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7347337483847239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30303332841044733;  // std dev = 0.477, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24288593123300167;  // std dev = 3.142, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4525591533169866;  // std dev = 0.959, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.06585106483667666;  // std dev = 1.347, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26413943856925826;  // std dev = 2.164, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14871015810638746;  // std dev = 2.946, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.05556831273340215;  // std dev = 1.463, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.3732666485490287;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return 0.08325055639642723;  // std dev = 1.232, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.17138114169339916;  // std dev = 2.151, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.18119725537864712;  // std dev = 2.562, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | else return -0.28203998014308584;  // std dev = 0.345, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.09030120033153881;  // std dev = 1.056, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.1083826495012308;  // std dev = 2.507, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.3490435862873793;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then return 0.04971158116269629;  // std dev = 2.734, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.2085827378852261;  // std dev = 0.953, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.2315619448531201;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14343326265075984;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.031703742959249666;  // std dev = 2.259, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.866902
   AUC PR    = 0.839009
   CLL	      = -0.486873
   Precision = 0.766102 at threshold = 0.5
   Recall    = 0.849624
   F1        = 0.805704


Total learning time: 1.536 seconds
Total inference time: 1.364 seconds
AUC ROC: 0.866902


Results scoring model
   AUC ROC   = 0.926775
   AUC PR    = 0.912245
   CLL	      = -0.45546
   Precision = 0.851852 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.867925


Total scoring time: 0.918 seconds
Parameter learned model CLL: -0.45546


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [0.961, 1, 12], 'false,true,true': [1.333, 16, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.894, 4, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.265, 2, 8], 'false,false,false,false': [1.225, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.957, 1, 11], 'false,true,false,true': [1.317, 13, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.477, 12, 12]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [3.142, 26, 26], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(I, A)'}, {'true,true': [0.959, 1, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [1.347, 16, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.164, 9, 12], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [2.946, 26, 26], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [1.463, 12, 10], 'true,false,true': [0.014, 0, 2], 'true,false,false,true': [1.232, 5, 2], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.151, 9, 12], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [2.562, 16, 26], 'true,false': [0.345, 10, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [1.056, 7, 3], 'false,true': [2.507, 19, 23], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'false': 'recursion_teamplayssport(F, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [2.734, 26, 25], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [0.953, 1, 12], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.102, 3, 0], 'false,true,true,false': [0.855, 4, 1], 'false,true,false': [2.259, 18, 13], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07100591715976314, 0.23011176857330687], 'false': [0.09876543209876548, 0.24489795918367308], 'false,false': [0.16000000000000003, 0.21484374999999967], 'false,false,false': [0.15999999999999986, 0.24999999999999992], 'false,false,true': [0.16000000000000003, nan], 'false,true': [0.09876543209876548, nan]}, {'': [nan, 0.2147376736319716], 'false': [0.20447433371617282, 0.22524055422484537], 'false,false': [0.0, 0.22717096721330865], 'false,true': [0.07638888888888877, 0.11555555555555562], 'false,true,false': [0.11555555555555562, nan]}, {'': [0.18989118512304376, nan]}, {'': [0.07079053077760794, 0.19367761564690564], 'false': [0.10084923230587671, 0.22298615567327879], 'false,false': [0.22298615567327879, nan], 'false,false,true': [nan, 0.22298615567327879], 'false,true': [0.10084923230587671, nan], 'true': [0.07079053077760794, nan]}, {'': [0.1669490841368072, nan]}, {'': [0.12400250705748678, 0.22031891891297095], 'false': [nan, 0.22031891891297095], 'false,false': [0.22031891891297095, nan], 'true': [0.09727112368707345, 0.1833221569342297], 'true,false': [9.497988294371318e-05, 0.21698181590277923], 'true,false,false': [0.21698181590277923, nan]}, {'': [0.1618088803180825, nan], 'true': [0.1562300099769984, 0.011918464064090828]}, {'': [0.11157874444695426, 0.14966476847499366], 'false': [0.14966476847499366, nan]}, {'': [0.0, 0.1465612471291814], 'false': [0.14656124712918145, nan], 'true': [0.0, nan]}, {'': [0.06991848304606643, 0.15724149030866805], 'false': [0.15724149030866802, nan], 'false,true': [0.09446393871536123, 0.16455166610146132], 'false,true,true': [0.0034788352756767726, 0.14614250154415015], 'true': [0.06991848304606643, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteplaysforteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(D, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14185106490048782;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.7319728147734345;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.28197042502335495;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(G, A), recursion_teamplayssport(G, B) )
%   | then return 0.7733921696315487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then if ( teamplaysinleague(A, J) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.44005883629821535;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.5622818415835684;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysagainstteam(D, F) )
%   | | then return 0.14919395281213554;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.5784480231017324;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.35396234692463135;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, D) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.41279967801950646;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.543145110811201;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then return 0.05411589461701536;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | | | then return 0.20845015975956396;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.415718923657286;  // std dev = 0.895, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(C, D) )
%   | | then return 0.4185433733628169;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3103136284827603;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, G), teamplaysagainstteam(D, G) )
%   | | then return 0.043604637791179714;  // std dev = 0.671, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.4654567184459187;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26489653126364315;  // std dev = 1.169, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | | then return 0.2474744082151159;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.11299274881739879;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.30708180339918095;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( athleteplayssport(F, B), athleteplaysforteam(F, G) )
%   | | | then return 0.20569333319359887;  // std dev = 0.361, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | then return -0.19137589289951704;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( athleteplaysforteam(J, K), teamalsoknownas(K, L) )
%   | | | then return 0.37877116380109127;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1862258970139382;  // std dev = 0.816, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, D), recursion_teamplayssport(D, B) )
%   | | then return 0.209597187173032;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2939348944997944;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return -0.05588019536039013;  // std dev = 0.511, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.24590914619038967;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10153774415565849;  // std dev = 1.072, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07800555747072455;  // std dev = 0.027, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, D), recursion_teamplayssport(D, B) )
%   | | then return 0.1770605200258435;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.23775024609861825;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return -0.054484778453260295;  // std dev = 0.491, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.2082506347739545;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.07822704860353044;  // std dev = 1.074, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07257934587478578;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then return 0.16967005381674116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(G, A), athleteplaysforteam(E, G) )
%   | | then if ( teamalsoknownas(H, G), recursion_teamplayssport(F, B) )
%   | | | then return 0.1527712754836377;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2197399915025379;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, I), teamplaysagainstteam(F, I) )
%   | | | then return -0.09879324576084855;  // std dev = 0.428, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1201811844191182;  // std dev = 1.096, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return -0.06784501936837198;  // std dev = 0.024, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return -0.05762063774531941;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(A, G), teamalsoknownas(G, H) )
%   | | then return 0.262461636748224;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, I), teamalsoknownas(D, I) )
%   | | | then return 0.1666827360101994;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.046890900569632216;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06367986883274626;  // std dev = 0.023, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.878788
   AUC PR    = 0.827271
   CLL	      = -0.41873
   Precision = 0.767516 at threshold = 0.5
   Recall    = 0.906015
   F1        = 0.831034


Total learning time: 40.325 seconds
Total inference time: 3.604 seconds
AUC ROC: 0.878788


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.168537
   Precision = 0.928571 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.962963


Total scoring time: 1.294 seconds
Refined model CLL: -0.168537


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.878788
   AUC PR    = 0.827271
   CLL	      = -0.41873
   Precision = 0.767516 at threshold = 0.5
   Recall    = 0.906015
   F1        = 0.831034


Total learning time: 44.073 seconds
Total inference time: 3.604 seconds
AUC ROC: 0.878788
Total revision time: 44.073
Best scored revision CLL: -0.168537


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:01:57
{'AUC ROC': 0.878788, 'AUC PR': 0.827271, 'CLL': -0.41873, 'Precision': [0.767516, 0.5], 'Recall': 0.906015, 'F1': 0.831034, 'Learning time': 44.073, 'Inference time': 3.604, 'parameter_0.2': {'AUC ROC': 0.866902, 'AUC PR': 0.839009, 'CLL': -0.486873, 'Precision': [0.766102, 0.5], 'Recall': 0.849624, 'F1': 0.805704, 'Learning time': 1.536, 'Inference time': 1.364}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.02756535061477346;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.686624861664361;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.03138570757915688;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.726624861664361;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.27294717621239856;  // std dev = 0.492, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.2420901138791542;  // std dev = 4.437, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4754247100268265;  // std dev = 0.981, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.06063770037244232;  // std dev = 1.881, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2259236281922257;  // std dev = 3.189, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14896533933197678;  // std dev = 4.164, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.07806206606726772;  // std dev = 1.989, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.35652343489168353;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return 0.026181770209743827;  // std dev = 1.541, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.14379090885005089;  // std dev = 3.188, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.1774762827603607;  // std dev = 3.651, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | else return -0.2841252242612599;  // std dev = 0.438, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.011863634834205944;  // std dev = 1.813, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.09196027247136354;  // std dev = 3.474, 84.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.30593044889710463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.2167243188569854;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.06585172696333366;  // std dev = 3.879, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.21970779798201973;  // std dev = 0.974, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.08821640978073865;  // std dev = 0.877, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.009692847598944898;  // std dev = 1.499, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.011456074510824645;  // std dev = 3.177, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.87271
   AUC PR    = 0.842634
   CLL	      = -0.475182
   Precision = 0.91195 at threshold = 0.5
   Recall    = 0.545113
   F1        = 0.682353


Total learning time: 1.858 seconds
Total inference time: 1.456 seconds
AUC ROC: 0.87271


Results scoring model
   AUC ROC   = 0.901812
   AUC PR    = 0.908179
   CLL	      = -0.460275
   Precision = 0.964286 at threshold = 0.5
   Recall    = 0.519231
   F1        = 0.675


Total scoring time: 1.026 seconds
Parameter learned model CLL: -0.460275


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [0.982, 1, 27], 'false,true,true': [1.882, 31, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.549, 6, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.268, 9, 12], 'false,false,false,false': [1.581, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.98, 1, 24], 'false,true,false,true': [1.637, 25, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false': [0.492, 26, 22]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.437, 52, 52], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(I, A)'}, {'true,true': [0.981, 1, 27], 'true,false': [0.0, 0, 0], 'false,true,true': [1.881, 31, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.189, 20, 21], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [4.164, 52, 52], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [1.989, 22, 20], 'true,false,true': [0.013, 0, 8], 'true,false,false,true': [1.541, 10, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.188, 20, 21], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [3.651, 33, 52], 'true,false': [0.438, 19, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [1.813, 13, 7], 'false,true': [3.474, 39, 45], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.879, 48, 51], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [0.974, 1, 27], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.877, 7, 1], 'false,true,true,false': [1.499, 6, 4], 'false,true,false': [3.177, 38, 20], 'false,false': [0.0, 0, 0]}]]
[{'': [0.03443877551020513, 0.22074099722991672], 'false': [0.10122448979591821, 0.24985127900059492], 'false,false': [0.23999999999999985, 0.2476586888657644], 'false,false,false': [0.24489795918367308, 0.24999999999999983], 'false,false,true': [0.23999999999999985, nan], 'false,true': [0.10122448979591821, nan]}, {'': [nan, 0.2179387619254636], 'false': [0.1971241402620389, 0.23953970672157798], 'false,false': [1.4802973661668753e-16, 0.24240367708126184], 'false,true': [0.03840000000000011, 0.09566326530612232], 'false,true,false': [0.09566326530612232, nan]}, {'': [0.189293429340033, nan]}, {'': [0.03437182507870088, 0.2007596759497943], 'false': [0.10103876627052324, 0.24807006037874427], 'false,false': [0.24807006037874427, nan], 'false,false,true': [nan, 0.24807006037874427], 'false,true': [0.10103876627052324, nan], 'true': [0.03437182507870088, nan]}, {'': [0.16671182152344716, nan]}, {'': [0.11032933220381261, 0.24784739869737493], 'false': [nan, 0.24784739869737493], 'false,false': [0.24784739869737493, nan], 'true': [0.09423399965499432, 0.13887286719188827], 'true,false': [1.9678248419252586e-05, 0.18274932044580752], 'true,false,false': [0.18274932044580752, nan]}, {'': [0.16183115978103088, nan], 'true': [0.1568247729232069, 0.010079539587955577]}, {'': [0.16439003665734572, 0.14368112908342928], 'false': [0.14368112908342928, nan]}, {'': [0.04370688100097309, 0.15198992895829394], 'false': [0.15198992895829386, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.03386624171640177, 0.17307671371077485], 'false': [0.17307671371077485, nan], 'false,true': [0.16906556527722916, 0.17406149944763066], 'false,true,true': [0.09622165169099849, 0.2246002740050058], 'true': [0.03386624171640177, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteplaysforteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysagainstteam(D, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | then if ( athleteledsportsteam(J, H) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.7270644954100877;  // std dev = 0.104, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.5904930930586323;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.3928692259617942;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.7410595824184533;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( athleteplaysforteam(J, K), teamalsoknownas(K, L) )
%   | | | then return 0.4670719622367218;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.6652465227131465;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( teamplaysagainstteam(A, M), teamplaysagainstteam(M, A) )
%   | | | then return 0.17400755681327343;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12798572387776652;  // std dev = 0.050, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.5596988467972461;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( teamalsoknownas(E, G), teamplaysagainstteam(G, A) )
%   | | | then return 0.13401766281663594;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14960178918921682;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.6329129453603528;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.45984720894420733;  // std dev = 1.777, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | then if ( athleteledsportsteam(K, I) )
%   | | then return -0.1122952865006085;  // std dev = 0.000242, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.17761410864990262;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.11614369167807333;  // std dev = 0.069, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.4208333861065328;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( teamalsoknownas(E, G), teamalsoknownas(G, H) )
%   | | | then return 0.12340255327770905;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13666190153788232;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.4791866910999319;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3482498801659598;  // std dev = 1.774, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else if ( teamplaysagainstteam(J, A), teamalsoknownas(J, K) )
%   | then if ( athleteledsportsteam(L, J) )
%   | | then return -0.10157894584352417;  // std dev = 0.000222, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.1458963746460448;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.10476226514399306;  // std dev = 0.063, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.34342148873590506;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( athleteplaysforteam(C, E) )
%   | | | then return 0.3212765183595815;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.20160202550884518;  // std dev = 0.572, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( teamplaysagainstteam(A, I), athleteledsportsteam(H, D) )
%   | | | then return -0.09954415236943515;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.19139342854848967;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, J), teamplaysinleague(D, J) )
%   | | | then return 0.38417661040902007;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2150179344771453;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( teamalsoknownas(K, A), teamplaysagainstteam(A, L) )
%   | then return 0.07349534422743383;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0839413628802878;  // std dev = 0.124, 37.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.07648878716647768;  // std dev = 0.197, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.3131813127799731;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | | then return 0.16440861770681536;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0713563396779926;  // std dev = 0.509, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | then if ( teamalsoknownas(A, I), teamplaysinleague(I, J) )
%   | | then if ( teamplaysinleague(H, J) )
%   | | | then return 0.3144650276120077;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23877350664181016;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, K), teamplaysinleague(H, K) )
%   | | | then return 0.3153912697885751;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1735429298472565;  // std dev = 1.278, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return -0.08512364265910312;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2336517772419565;  // std dev = 0.076, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( teamalsoknownas(E, G), teamalsoknownas(G, H) )
%   | | | then return 0.071623153366153;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12789121075673313;  // std dev = 0.264, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( athleteplaysforteam(I, A) )
%   | | | then return 0.3458926687472628;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1668939535867356;  // std dev = 1.669, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   else if ( teamalsoknownas(J, A), teamplaysagainstteam(A, K) )
%   | then return 0.042622782924957095;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteplayssport(L, B), athleteplaysinleague(L, M) )
%   | | then if ( teamplaysagainstteam(N, A) )
%   | | | then return 0.1309403584296564;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07872427922964136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09689939266505969;  // std dev = 0.214, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.19846062705478157;  // std dev = 0.090, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( teamplaysinleague(D, F) )
%   | | | then return -0.14286256515641665;  // std dev = 0.593, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0722349502981434;  // std dev = 0.421, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( teamplaysinleague(A, H), teamplaysinleague(D, H) )
%   | | | then return 0.20916123702199804;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.11548968838453214;  // std dev = 1.501, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( teamalsoknownas(A, I), athleteplayssport(J, B) )
%   | then return -0.12594038029623733;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(A, K), teamplaysagainstteam(A, L) )
%   | | then return 0.1625609084195503;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplayssport(M, B), teamplaysagainstteam(N, A) )
%   | | | then return -0.023101435406085523;  // std dev = 0.586, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.0862838836801996;  // std dev = 0.182, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.16551287287531413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.11067060160326928;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysinleague(A, H), athleteplaysinleague(F, H) )
%   | | then return 0.1834072288757842;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return -0.03426934244858532;  // std dev = 0.784, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.12849238883092914;  // std dev = 1.518, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else if ( teamplaysagainstteam(A, K), athleteplayssport(L, B) )
%   | | then if ( athleteplaysinleague(L, M) )
%   | | | then return -0.15740824694444303;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08220710315620987;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( teamplaysagainstteam(N, A), teamalsoknownas(N, P) )
%   | | | then return 0.044000003169452545;  // std dev = 0.895, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.06948346440050951;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, D) )
%   | | then return 0.22088219446817375;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1242116640142803;  // std dev = 0.097, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.27632709150752927;  // std dev = 0.308, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( athleteledsportsteam(I, G), teamplaysagainstteam(A, J) )
%   | | | then return -0.08648244131077636;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.061778762054565534;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | | then return -0.02572103750069718;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12487972843656522;  // std dev = 1.330, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( teamalsoknownas(M, A), teamplaysagainstteam(A, N) )
%   | | then return 0.04289443491951524;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07871612196583974;  // std dev = 0.034, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 0.915767
   AUC PR    = 0.913888
   CLL	      = -0.371069
   Precision = 0.798658 at threshold = 0.5
   Recall    = 0.894737
   F1        = 0.843972


Total learning time: 126.705 seconds
Total inference time: 3.666 seconds
AUC ROC: 0.915767


Results scoring model
   AUC ROC   = 0.990385
   AUC PR    = 0.989446
   CLL	      = -0.192217
   Precision = 0.927273 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.953271


Total scoring time: 1.685 seconds
Refined model CLL: -0.192217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.915767
   AUC PR    = 0.913888
   CLL	      = -0.371069
   Precision = 0.798658 at threshold = 0.5
   Recall    = 0.894737
   F1        = 0.843972


Total learning time: 131.274 seconds
Total inference time: 3.666 seconds
AUC ROC: 0.915767
Total revision time: 131.274
Best scored revision CLL: -0.192217


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:04:15
{'AUC ROC': 0.915767, 'AUC PR': 0.913888, 'CLL': -0.371069, 'Precision': [0.798658, 0.5], 'Recall': 0.894737, 'F1': 0.843972, 'Learning time': 131.274, 'Inference time': 3.666, 'parameter_0.4': {'AUC ROC': 0.87271, 'AUC PR': 0.842634, 'CLL': -0.475182, 'Precision': [0.91195, 0.5], 'Recall': 0.545113, 'F1': 0.682353, 'Learning time': 1.858, 'Inference time': 1.456}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7914822684328453;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.06637936678728018;  // std dev = 1.923, 53.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.4233663264038601;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6558068898215059;  // std dev = 1.664, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.06577939790756056;  // std dev = 1.672, 44.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7327299667445831;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.30169955431745255;  // std dev = 0.492, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.2407999157112127;  // std dev = 5.397, 156.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4587215686919025;  // std dev = 1.669, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.08939319428622879;  // std dev = 1.920, 53.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2515494693483471;  // std dev = 3.771, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14617846564543002;  // std dev = 5.026, 156.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.060124683695698636;  // std dev = 2.561, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.3727851721246966;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.02167155434305865;  // std dev = 1.597, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.16218411905985414;  // std dev = 3.769, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.17231656839043877;  // std dev = 4.380, 127.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=78 */
%   | else return -0.2680497607487856;  // std dev = 0.651, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.0014999320830527472;  // std dev = 2.192, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.0829734025347587;  // std dev = 4.170, 130.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.32586871473795687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.19771577932751888;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.060438307425505516;  // std dev = 4.674, 151.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=77 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.2075868663707634;  // std dev = 1.647, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.0727947793632869;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0074676621174968524;  // std dev = 1.942, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return -0.020585471595017054;  // std dev = 3.611, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.874336
   AUC PR    = 0.843035
   CLL	      = -0.475412
   Precision = 0.766102 at threshold = 0.5
   Recall    = 0.849624
   F1        = 0.805704


Total learning time: 2.08 seconds
Total inference time: 1.292 seconds
AUC ROC: 0.874336


Results scoring model
   AUC ROC   = 0.917982
   AUC PR    = 0.915815
   CLL	      = -0.447327
   Precision = 0.848101 at threshold = 0.5
   Recall    = 0.858974
   F1        = 0.853503


Total scoring time: 1.148 seconds
Parameter learned model CLL: -0.447327


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.673, 3, 42], 'false,true,true': [1.923, 49, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.984, 9, 7], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.377, 10, 13], 'false,false,false,false': [2.103, 7, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.664, 3, 36], 'false,true,false,true': [1.672, 41, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.65e-08, 0, 6], 'false,false,false': [0.492, 34, 33]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.397, 78, 78], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(I, A)'}, {'true,true': [1.669, 3, 42], 'true,false': [0.0, 0, 0], 'false,true,true': [1.92, 49, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.771, 26, 32], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.026, 78, 78], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [2.561, 37, 29], 'true,false,true': [0.032, 0, 14], 'true,false,false,true': [1.597, 15, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.769, 26, 32], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [4.38, 49, 78], 'true,false': [0.651, 29, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [2.192, 16, 10], 'false,true': [4.17, 62, 68], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.674, 74, 77], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [1.647, 3, 42], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.879, 7, 1], 'false,true,true,false': [1.942, 9, 7], 'false,true,false': [3.611, 59, 28], 'false,false': [0.0, 0, 0]}]]
[{'': [0.062222222222223345, 0.2191380569758953], 'false': [0.06977572089711626, 0.24732461355529295], 'false,false': [0.24609375000000003, 0.24092970521542076], 'false,false,true': [0.24609375000000003, nan], 'false,false,false': [0.24574669187145518, 0.2326869806094179], 'false,true': [0.06977572089711626, nan]}, {'': [nan, 0.2163009745934727], 'false': [0.19674370438884395, 0.23636841464870223], 'false,false': [2.220446049250313e-16, 0.2422655531905983], 'false,true': [0.07100591715976388, 0.0635330578512395], 'false,true,false': [0.0635330578512395, nan]}, {'': [0.1866994955574357, nan]}, {'': [0.06192345395998657, 0.1903132072947853], 'false': [0.0695350375059638, 0.24517657676004417], 'false,false': [0.24517657676004417, nan], 'false,false,true': [nan, 0.24517657676004417], 'false,true': [0.0695350375059638, nan], 'true': [0.06192345395998657, nan]}, {'': [0.16191106183067644, nan]}, {'': [0.10728251988215019, 0.24492234421635664], 'false': [nan, 0.24492234421635664], 'false,false': [0.24492234421635664, nan], 'true': [0.09936097284537024, 0.11807081741873293], 'true,false': [7.38315143985321e-05, 0.14177295318803151], 'true,false,false': [0.14177295318803151, nan]}, {'': [0.15502298976517614, nan], 'true': [0.15103181903745477, 0.0146287574080872]}, {'': [0.18475525155401964, 0.13378208611820827], 'false': [0.13378208611820827, nan]}, {'': [0.04386251558812804, 0.14469305199379187], 'false': [0.14469305199379193, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.06028138871246408, 0.1586522119234944], 'false': [0.15865221192349424, nan], 'false,true': [0.19030271391335007, 0.14990483157313425], 'false,true,true': [0.09654876529892713, 0.23575714413801316], 'true': [0.06028138871246408, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteplaysforteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( teamplaysagainstteam(A, D), teamalsoknownas(D, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7581489350995122;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysagainstteam(D, H) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.5248156017661789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.8164822684328453;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(L, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.14185106490048774;  // std dev = 2.98e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.19560609968353335;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7363879266257172;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then return -0.1272145163893239;  // std dev = 0.041, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.13200246408248495;  // std dev = 0.415, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | then return 0.7260512789278066;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | then if ( athleteplaysforteam(L, M), teamalsoknownas(M, N) )
%   | | | then return 0.448295606241962;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.6843273923997468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.09303690912396746;  // std dev = 0.177, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.5552503732803944;  // std dev = 0.002, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( teamalsoknownas(G, E), teamplaysagainstteam(A, G) )
%   | | | then return 0.10274280067097326;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5115269080838946;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( teamplaysagainstteam(J, A), athleteledsportsteam(K, J) )
%   | | | then return -0.12293975602087542;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.48391959647620997;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysinleague(A, L), teamplaysinleague(D, L) )
%   | | | then return 0.5839861405105569;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.42822040384482174;  // std dev = 1.936, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else if ( teamplaysagainstteam(M, A), recursion_teamplayssport(M, B) )
%   | then return 0.553508844091529;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1014871842887244;  // std dev = 0.127, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | then return 0.2070087196072199;  // std dev = 0.514, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(D, E) )
%   | | | then return 0.4361518472877932;  // std dev = 0.253, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.36428882859063133;  // std dev = 1.064, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysagainstteam(D, H) )
%   | | then return -0.10047071323991394;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.28032312935868153;  // std dev = 1.971, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.41040197506480114;  // std dev = 0.974, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then return 0.41613849686556625;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, K), teamalsoknownas(L, A) )
%   | | then return 0.12027086862048914;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10695259935094566;  // std dev = 0.058, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.32645199416974274;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( athleteplaysforteam(G, A), athleteledsportsteam(C, E) )
%   | | | then return 0.04015733546462928;  // std dev = 0.610, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3172536245091532;  // std dev = 0.925, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then if ( athleteplaysforteam(J, A) )
%   | | | then return -0.0917480111873607;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09361546681645116;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(K, A), teamplaysinleague(K, L) )
%   | | | then return 0.16106080181032473;  // std dev = 1.046, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2901560336781455;  // std dev = 1.920, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   else if ( teamplaysagainstteam(M, A), recursion_teamplayssport(M, B) )
%   | then return 0.31978051661893586;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0831473889801718;  // std dev = 0.125, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | | then return 0.22093105149919412;  // std dev = 0.212, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | else return -0.07300916029579145;  // std dev = 0.103, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.26840145530984155;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamalsoknownas(A, F), teamplaysagainstteam(A, G) )
%   | | | then return 0.19426382168404205;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06396589287906777;  // std dev = 0.666, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( athleteplaysforteam(H, I), teamalsoknownas(I, J) )
%   | | then if ( teamalsoknownas(J, K) )
%   | | | then return -0.03595353508505613;  // std dev = 1.572, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.45439544015356736;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2488916741746214;  // std dev = 0.202, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.08895390770377978;  // std dev = 9.13e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then if ( teamplaysagainstteam(D, A), recursion_teamplayssport(D, B) )
%   | | then return 0.222676804083708;  // std dev = 0.111, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(F, A) )
%   | | | then return -0.055320073938980384;  // std dev = 0.413, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21760382269011488;  // std dev = 0.553, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( teamalsoknownas(A, I), teamplaysagainstteam(A, J) )
%   | | | then return 0.16960482927852036;  // std dev = 0.603, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10832525423243142;  // std dev = 1.009, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( teamplaysagainstteam(K, A), teamplaysinleague(A, L) )
%   | | | then return 0.385762508586695;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17157017925988222;  // std dev = 1.835, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   else if ( teamalsoknownas(M, A), teamplaysagainstteam(A, N) )
%   | then return 0.10785551401212146;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0646368674271053;  // std dev = 0.075, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then if ( teamplaysagainstteam(A, D), athleteplaysforteam(C, D) )
%   | | then return 0.18660012119461786;  // std dev = 0.098, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(F, A) )
%   | | | then return -0.046451583876863656;  // std dev = 0.413, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17950194012993984;  // std dev = 0.518, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( teamplaysagainstteam(A, I), teamalsoknownas(J, I) )
%   | | | then return 0.0440126023645475;  // std dev = 0.832, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.16000387790196763;  // std dev = 0.819, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.24827874661072297;  // std dev = 0.251, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13014636392947534;  // std dev = 1.837, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   else if ( teamplaysagainstteam(L, A), recursion_teamplayssport(L, B) )
%   | then return 0.21988615314401747;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06800466508532822;  // std dev = 0.120, 58.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.16059312887344035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10774998242803105;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysinleague(A, H), athleteplaysinleague(F, H) )
%   | | then if ( athleteledsportsteam(I, A), athleteplayssport(I, B) )
%   | | | then return 0.11014789479517346;  // std dev = 0.524, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.18251796823896577;  // std dev = 0.378, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( teamplaysinleague(A, J), athleteplaysinleague(K, J) )
%   | | | then return -0.0304403275495135;  // std dev = 1.203, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.12312166239331425;  // std dev = 1.874, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | else if ( teamalsoknownas(A, L), teamplaysagainstteam(A, M) )
%   | | then if ( teamplaysinleague(A, N) )
%   | | | then return -0.08707527740529229;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19139025915865096;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.054308564470805926;  // std dev = 0.068, 53.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(D, G), teamplaysagainstteam(A, F) )
%   | | | then return -0.06097529309271545;  // std dev = 0.508, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18476506777013132;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysagainstteam(A, D) )
%   | | | then return 0.15811847676288104;  // std dev = 0.381, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.0395143230528628;  // std dev = 0.682, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then return -0.05538327776561141;  // std dev = 0.090, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, J) )
%   | | | then return 0.038954077489696995;  // std dev = 1.776, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.13621232206433276;  // std dev = 0.985, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( teamalsoknownas(K, A), teamplaysagainstteam(A, L) )
%   | then return 0.09462694815815623;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.053462539964010125;  // std dev = 0.068, 58.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=4 */


Results
   AUC ROC   = 0.935525
   AUC PR    = 0.930314
   CLL	      = -0.328651
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.921053
   F1        = 0.875


Total learning time: 242.397 seconds
Total inference time: 5.215 seconds
AUC ROC: 0.935525


Results scoring model
   AUC ROC   = 0.990549
   AUC PR    = 0.989626
   CLL	      = -0.198986
   Precision = 0.927711 at threshold = 0.5
   Recall    = 0.987179
   F1        = 0.956522


Total scoring time: 2.239 seconds
Refined model CLL: -0.198986


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935525
   AUC PR    = 0.930314
   CLL	      = -0.328651
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.921053
   F1        = 0.875


Total learning time: 247.864 seconds
Total inference time: 5.215 seconds
AUC ROC: 0.935525
Total revision time: 247.864
Best scored revision CLL: -0.198986


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:08:30
{'AUC ROC': 0.935525, 'AUC PR': 0.930314, 'CLL': -0.328651, 'Precision': [0.833333, 0.5], 'Recall': 0.921053, 'F1': 0.875, 'Learning time': 247.864, 'Inference time': 5.215, 'parameter_0.6': {'AUC ROC': 0.874336, 'AUC PR': 0.843035, 'CLL': -0.475412, 'Precision': [0.766102, 0.5], 'Recall': 0.849624, 'F1': 0.805704, 'Learning time': 2.08, 'Inference time': 1.292}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7925751646077093;  // std dev = 1.933, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.05229882609451755;  // std dev = 2.337, 67.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.37539031440985715;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.39386322081379804;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6597886103377821;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.06287594163081599;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7325158830650542;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2816819024571785;  // std dev = 0.495, 92.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=43 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.2415356425929381;  // std dev = 6.279, 208.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.45914051265878186;  // std dev = 1.930, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.0775882690538418;  // std dev = 2.322, 67.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22468503850762428;  // std dev = 4.469, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14756972788129624;  // std dev = 5.885, 208.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.07425631567137977;  // std dev = 2.913, 84.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=40 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.372694572858344;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return 0.00419902552503101;  // std dev = 2.012, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.14287098944287735;  // std dev = 4.469, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.17491525427545374;  // std dev = 5.191, 168.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=104 */
%   | else return -0.25723947623690946;  // std dev = 0.655, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.08143630363785281;  // std dev = 3.097, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.066847027904305;  // std dev = 4.634, 162.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=83 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(A, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.05338769107132357;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.052068958225390004;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.0590713437248326;  // std dev = 5.414, 198.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=100 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20988894838244923;  // std dev = 1.908, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.08525202888839657;  // std dev = 1.799, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.019364630460495743;  // std dev = 2.338, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return -0.05142719212734046;  // std dev = 3.979, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875806
   AUC PR    = 0.838331
   CLL	      = -0.478368
   Precision = 0.91195 at threshold = 0.5
   Recall    = 0.545113
   F1        = 0.682353


Total learning time: 2.259 seconds
Total inference time: 1.581 seconds
AUC ROC: 0.875806


Results scoring model
   AUC ROC   = 0.895895
   AUC PR    = 0.890224
   CLL	      = -0.461842
   Precision = 0.934426 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.690909


Total scoring time: 1.149 seconds
Parameter learned model CLL: -0.461842


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.933, 4, 57], 'false,true,true': [2.337, 61, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.396, 12, 11], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.691, 14, 15], 'false,false,false,false': [2.639, 13, 15]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.926, 4, 51], 'false,true,false,true': [1.926, 51, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 6], 'false,false,false': [0.495, 49, 43]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [6.279, 104, 104], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(A, I)'}, {'true,true': [1.93, 4, 57], 'true,false': [0.0, 0, 0], 'false,true,true': [2.322, 61, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.469, 39, 41], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [5.885, 104, 104], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [2.913, 44, 40], 'true,false,true': [0.032, 0, 18], 'true,false,false,true': [2.012, 21, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.469, 39, 41], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [5.191, 64, 104], 'true,false': [0.655, 40, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [3.097, 25, 21], 'false,true': [4.634, 79, 83], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(A, D)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.866, 1, 3], 'true,false,true': [0.913, 5, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [5.414, 98, 100], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(A, G)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [1.908, 4, 57], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.799, 12, 5], 'false,true,true,false': [2.338, 12, 11], 'false,true,false': [3.979, 76, 31], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06127385111529118, 0.21750196677310438], 'false': [0.08153263533080889, 0.24984375000000095], 'false,false': [0.24952741020793906, 0.24930747922437826], 'false,false,true': [0.24952741020793906, nan], 'false,false,false': [0.24970273483947636, 0.24872448979591794], 'false,true': [0.08153263533080889, nan]}, {'': [nan, 0.2184592455055508], 'false': [0.19799903019692044, 0.24136279244979697], 'false,false': [-7.401486830834377e-17, 0.24465988833105604], 'false,true': [0.06743801652892507, 0.06743801652892573], 'false,true,false': [0.06743801652892573, nan]}, {'': [0.18953824599906385, nan]}, {'': [0.061068860723715326, 0.19521762286467023], 'false': [0.08050159917339368, 0.24964784906599213], 'false,false': [0.24964784906599213, nan], 'false,false,true': [nan, 0.24964784906599213], 'false,true': [0.08050159917339368, nan], 'true': [0.061068860723715326, nan]}, {'': [0.1665028682744425, nan]}, {'': [0.11068379865754371, 0.24962432043365818], 'false': [nan, 0.24962432043365818], 'false,false': [0.24962432043365818, nan], 'true': [0.10102690721496639, 0.12484682580266754], 'true,false': [5.7503301651366336e-05, 0.15568940115888202], 'true,false,false': [0.15568940115888202, nan]}, {'': [0.16061772488920537, nan], 'true': [0.16039269961255437, 0.010720064390045681]}, {'': [0.2085135463012053, 0.13257187020142858], 'false': [0.13257187020142858, nan]}, {'': [0.16100239850474696, 0.14803808527344356], 'true': [0.18749999999999997, 0.13888888888888884], 'false': [0.14803808527344364, nan], 'true,false': [0.13888888888888884, nan]}, {'': [0.059689922461516026, 0.1691155780972585], 'false': [0.1691155780972584, nan], 'false,true': [0.2186159816285501, 0.14795490457860902], 'false,true,true': [0.19030915884024743, 0.2376934274229537], 'true': [0.059689922461516026, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteplaysforteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(E, A) )
%   | | then return 0.8337586911970727;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else return 0.6763307532813305;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(D, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.6781489350995119;  // std dev = 2.717, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(A, L), recursion_teamplayssport(L, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1257220326424232;  // std dev = 0.126, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), teamplaysagainstteam(A, E) )
%   | | then return 0.7262633655904231;  // std dev = 0.041, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.1917099249184929;  // std dev = 1.272, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.7357792102059832;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.06465422279949304;  // std dev = 0.233, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.7427685399322511;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( teamplaysinleague(A, L), teamplaysinleague(K, L) )
%   | | | then return 0.6252036910450105;  // std dev = 1.554, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.4653379335673575;  // std dev = 2.532, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | else if ( teamalsoknownas(A, M), teamplaysagainstteam(A, N) )
%   | | | then return 0.34825440577170785;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10323715630879624;  // std dev = 0.943, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(G, F) )
%   | | then if ( athleteledsportsteam(H, A), teamalsoknownas(D, G) )
%   | | | then return 0.13034733865465387;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5855067560004957;  // std dev = 0.147, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5494554246610874;  // std dev = 0.139, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | then if ( teamplaysinleague(A, J), teamplaysinleague(I, J) )
%   | | | then return 0.5117831620018947;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09152400171650343;  // std dev = 2.581, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( teamplaysinleague(A, K), athleteplaysinleague(L, K) )
%   | | | then return 0.20590264664308905;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6123589393079726;  // std dev = 0.992, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( teamplaysagainstteam(M, A), recursion_teamplayssport(M, B) )
%   | then return 0.5504716597095655;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08560535392820523;  // std dev = 0.180, 78.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.3999315584344652;  // std dev = 0.180, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteledsportsteam(G, D) )
%   | | | then return -0.15208738216911563;  // std dev = 0.860, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.3365102654638141;  // std dev = 1.062, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, H) )
%   | | | then return 0.23964043677924612;  // std dev = 2.185, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.46458920041071244;  // std dev = 0.999, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | | then return 0.4138933547007596;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(A, L), recursion_teamplayssport(L, B) )
%   | | | then return 0.22262623308096083;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10783863302308229;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09523013885678835;  // std dev = 0.120, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(A, E), recursion_teamplayssport(E, B) )
%   | then return 0.31043132420918984;  // std dev = 0.174, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(A, G) )
%   | | then if ( athleteledsportsteam(H, F) )
%   | | | then return -0.14392257543578396;  // std dev = 0.148, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.3153755739622615;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.14898582385501172;  // std dev = 2.403, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return 0.359000488249401;  // std dev = 1.027, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | then if ( teamplaysagainstteam(L, A), recursion_teamplayssport(L, B) )
%   | | then return 0.3182587176344734;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(A, M), recursion_teamplayssport(M, B) )
%   | | | then return 0.1880790177626252;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09789406768515113;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08615612622129751;  // std dev = 0.120, 62.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | | then return 0.2275661685793112;  // std dev = 0.199, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | else return -0.08169723467212443;  // std dev = 0.120, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2866152550588197;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return -0.12400259449904644;  // std dev = 0.203, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.1465669447355195;  // std dev = 1.395, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | then if ( athleteplaysforteam(H, J), teamalsoknownas(I, J) )
%   | | then return -0.45602321103699656;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplaysforteam(H, I), teamalsoknownas(I, K) )
%   | | | then return 0.13422757970662064;  // std dev = 2.085, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.2745737939594322;  // std dev = 1.010, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.06794256548224734;  // std dev = 0.168, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.20667944410795416;  // std dev = 0.152, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteledsportsteam(G, D) )
%   | | | then return -0.15240659510084298;  // std dev = 0.878, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.1676498718033344;  // std dev = 0.997, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.34787084908243227;  // std dev = 0.388, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15165217491985447;  // std dev = 2.231, 44.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.20558706318819334;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(A, J), teamplaysinleague(J, K) )
%   | | then if ( athleteplaysinleague(L, K), athleteplayssport(M, B) )
%   | | | then return 0.21025644284829248;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01651826276015062;  // std dev = 1.206, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.0877003651163709;  // std dev = 0.040, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then if ( recursion_teamplayssport(F, B), teamplaysinleague(D, E) )
%   | | | then return 0.19652740327360524;  // std dev = 0.180, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.2952064056918446;  // std dev = 0.340, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.32808370193039693;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteledsportsteam(H, D) )
%   | | | then return -0.1310880677569558;  // std dev = 0.867, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.13331664193477702;  // std dev = 1.001, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( teamplaysinleague(A, I), teamplaysagainstteam(J, A) )
%   | | | then return 0.3483695834329086;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12821428225464315;  // std dev = 2.248, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | then return 0.14472402259244185;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.05814589743643391;  // std dev = 0.119, 77.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(E, F) )
%   | | | then return 0.17015627839892858;  // std dev = 0.108, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18195814642178113;  // std dev = 0.593, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16688956452619108;  // std dev = 0.112, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(I, H) )
%   | | then return -0.09289492678103044;  // std dev = 0.139, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( teamplaysinleague(A, D) )
%   | | | then return 0.26748686159684276;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07640818185085255;  // std dev = 2.791, 63.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   else if ( teamplaysagainstteam(A, J), teamalsoknownas(A, K) )
%   | then if ( teamalsoknownas(K, J) )
%   | | then return -0.09712163799190202;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.23462682906391005;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07826110481296222;  // std dev = 0.044, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(F, E), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(E, F) )
%   | | | then return 0.1475874466809646;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1465489421741037;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14370032210356676;  // std dev = 0.112, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(I, H) )
%   | | then return -0.0854471099592044;  // std dev = 0.130, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( teamplaysagainstteam(J, A), teamalsoknownas(A, K) )
%   | | | then return 0.2660147853238032;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.055893768965959524;  // std dev = 2.654, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   else if ( teamalsoknownas(L, A), teamalsoknownas(A, L) )
%   | then if ( teamplaysagainstteam(A, M) )
%   | | then return 0.22528261307930894;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.07834463609869266;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07422380026928377;  // std dev = 0.075, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.955813
   AUC PR    = 0.955916
   CLL	      = -0.296129
   Precision = 0.864583 at threshold = 0.5
   Recall    = 0.93609
   F1        = 0.898917


Total learning time: 234.328 seconds
Total inference time: 6.25 seconds
AUC ROC: 0.955813


Results scoring model
   AUC ROC   = 0.988397
   AUC PR    = 0.988449
   CLL	      = -0.214987
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.943396


Total scoring time: 3.147 seconds
Refined model CLL: -0.214987


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955813
   AUC PR    = 0.955916
   CLL	      = -0.296129
   Precision = 0.864583 at threshold = 0.5
   Recall    = 0.93609
   F1        = 0.898917


Total learning time: 240.88299999999998 seconds
Total inference time: 6.25 seconds
AUC ROC: 0.955813
Total revision time: 240.88299999999998
Best scored revision CLL: -0.214987


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:12:39
{'AUC ROC': 0.955813, 'AUC PR': 0.955916, 'CLL': -0.296129, 'Precision': [0.864583, 0.5], 'Recall': 0.93609, 'F1': 0.898917, 'Learning time': 240.88299999999998, 'Inference time': 6.25, 'parameter_0.8': {'AUC ROC': 0.875806, 'AUC PR': 0.838331, 'CLL': -0.478368, 'Precision': [0.91195, 0.5], 'Recall': 0.545113, 'F1': 0.682353, 'Learning time': 2.259, 'Inference time': 1.581}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false;companyalsoknownas(A, D).;true;true
0;false,true;acquired(A, E), economicsectorcompany(B, E).;false;true
0;false,true,false;countryhascompanyoffice(F, D), countryhascompanyoffice(G, A).;false;false
0;false,false;companyceo(A, H).;true;true
0;false,false,true;acquired(I, A), economicsectorcompany(B, I).;false;false
0;false,false,false;cityhascompanyoffice(J, A).;false;false
1;;companyeconomicsector(A, B) :- companyalsoknownas(A, A).;true;true
1;true;companyalsoknownas(A, C), economicsectorcompany(B, C).;false;false
1;false;cityhascompanyoffice(D, A), companyalsoknownas(A, E).;true;true
1;false,true;economicsectorcompany(B, E).;false;true
1;false,true,false;acquired(A, F), economicsectorcompany(B, F).;false;false
1;false,false;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
1;false,false,false;bankboughtbank(H, A), bankchiefexecutiveceo(H, I).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
2;true;economicsectorcompany(B, C).;false;true
2;true,false;cityhascompanyoffice(D, A), cityhascompanyoffice(D, C).;false;true
2;true,false,false;companyceo(A, E), companyalsoknownas(A, F).;false;false
2;false;acquired(A, G), economicsectorcompany(B, G).;false;true
2;false,false;acquired(A, H).;true;true
2;false,false,true;cityhascompanyoffice(I, H), cityhascompanyoffice(I, A).;false;false
2;false,false,false;cityhascompanyoffice(J, A), countryhascompanyoffice(K, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D), economicsectorcompany(B, D).;false;false
3;false;companyalsoknownas(A, E), acquired(E, F).;true;true
3;false,true;economicsectorcompany(B, F).;false;true
3;false,true,false;companyceo(A, G), cityhascompanyoffice(H, E).;false;false
3;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
3;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
3;false,false,false;acquired(L, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;true,false;acquired(D, A), economicsectorcompany(B, D).;false;false
4;false;acquired(E, A).;true;true
4;false,true;economicsectorcompany(B, E).;false;false
4;false,false;cityhascompanyoffice(F, A), companyceo(A, G).;true;true
4;false,false,true;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
4;false,false,false;countryhascompanyoffice(I, A).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(C, D).;true;true
5;true;countryhascompanyoffice(E, A), acquired(A, F).;false;true
5;true,false;economicsectorcompany(B, C).;false;true
5;true,false,false;economicsectorcompany(B, D).;false;false
5;false;companyalsoknownas(A, G).;false;true
5;false,false;acquired(A, H).;true;true
5;false,false,true;bankboughtbank(I, A), companyceo(H, J).;false;false
5;false,false,false;countryhascompanyoffice(K, A), cityhascompanyoffice(L, A).;false;false
6;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
6;true;companyalsoknownas(C, D), acquired(D, E).;false;false
6;false;acquired(F, A).;true;true
6;false,true;companyalsoknownas(F, G), economicsectorcompany(B, G).;false;true
6;false,true,false;companyceo(F, H).;false;false
6;false,false;cityhascompanyoffice(I, A).;true;true
6;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
6;false,false,false;companyalsoknownas(A, K), companyceo(K, L).;false;false
7;;companyeconomicsector(A, B) :- bankboughtbank(C, A).;true;true
7;true;companyceo(A, D), bankboughtbank(E, C).;false;true
7;true,false;bankchiefexecutiveceo(A, F).;true;true
7;true,false,true;acquired(C, G), economicsectorcompany(B, G).;false;false
7;true,false,false;acquired(C, H), economicsectorcompany(B, H).;false;false
7;false;companyalsoknownas(A, I), acquired(A, J).;false;true
7;false,false;cityhascompanyoffice(K, A), acquired(A, L).;false;true
7;false,false,false;companyceo(A, M).;false;false
8;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), companyceo(A, D).;true;true
8;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
8;true,false;bankchiefexecutiveceo(F, D), economicsectorcompany(B, F).;false;true
8;true,false,false;bankboughtbank(G, A).;false;false
8;false;acquired(H, A), economicsectorcompany(B, H).;false;true
8;false,false;acquired(I, A), companyceo(I, J).;true;true
8;false,false,true;companyalsoknownas(I, K), economicsectorcompany(B, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
9;true;acquired(A, D), companyceo(D, E).;false;false
9;false;acquired(F, A), economicsectorcompany(B, F).;true;true
9;false,true;companyceo(A, G).;true;false
9;false,true,true;companyalsoknownas(A, H).;false;false
9;false,false;acquired(A, I), economicsectorcompany(B, I).;true;true
9;false,false,true;companyalsoknownas(A, J), companyceo(A, K).;false;false
9;false,false,false;companyalsoknownas(A, L), cityhascompanyoffice(M, L).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then return 0.7940463709969487;  // std dev = 2.163, 78.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(E, B) )
%   | | then return -0.06685106490048769;  // std dev = 2.356, 80.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then if ( recursion_teamplayssport(G, B) )
%   | | | then return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.35814893509951146;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   | then if ( recursion_teamplayssport(D, B) )
%   | | then return 0.6607989502153703;  // std dev = 2.155, 70.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=65 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.07508297178197795;  // std dev = 1.940, 68.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), recursion_teamplayssport(F, B) )
%   | | then return 0.7322275216439406;  // std dev = 4.21e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.28019138023604595;  // std dev = 0.496, 116.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=54 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.24109576546871914;  // std dev = 7.024, 262.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( recursion_teamplayssport(D, B) )
%   | then return 0.4600595440814918;  // std dev = 2.160, 78.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( recursion_teamplayssport(F, B) )
%   | | then return -0.08719192614956246;  // std dev = 2.337, 80.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_teamplayssport(G, B) )
%   | | then if ( teamplaysagainstteam(H, A), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21515699418893106;  // std dev = 5.099, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then return 0.14714335742520168;  // std dev = 6.576, 262.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=131 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.08814078962907355;  // std dev = 3.214, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.37226945848132365;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( recursion_teamplayssport(E, B) )
%   | | | then return -0.02304815821714662;  // std dev = 2.047, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, H) )
%   | | then return 0.13605066820687078;  // std dev = 5.099, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( recursion_teamplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.17337741171718676;  // std dev = 5.771, 210.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=130 */
%   | else return -0.23876893763427515;  // std dev = 1.135, 52.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.08500940059975653;  // std dev = 2.901, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   else if ( recursion_teamplayssport(D, B) )
%   | then return 0.06676671409908982;  // std dev = 5.522, 214.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.2995017535276715;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( recursion_teamplayssport(F, B) )
%   | | then return -0.20281620416823737;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(G, B) )
%   | then return 0.0561052958385267;  // std dev = 6.176, 252.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=126 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), recursion_teamplayssport(C, B) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20720478428112762;  // std dev = 2.130, 78.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=73 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_teamplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.04018549454985388;  // std dev = 1.243, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.03846716913564574;  // std dev = 2.495, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return -0.03489913035007599;  // std dev = 4.807, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.878194
   AUC PR    = 0.84703
   CLL	      = -0.476937
   Precision = 0.91195 at threshold = 0.5
   Recall    = 0.545113
   F1        = 0.682353


Total learning time: 2.444 seconds
Total inference time: 1.318 seconds
AUC ROC: 0.878194


Results scoring model
   AUC ROC   = 0.896888
   AUC PR    = 0.897625
   CLL	      = -0.458676
   Precision = 0.935897 at threshold = 0.5
   Recall    = 0.557252
   F1        = 0.698565


Total scoring time: 1.255 seconds
Parameter learned model CLL: -0.458676


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(E, B)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,true': 'recursion_teamplayssport(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.163, 5, 73], 'false,true,true': [2.356, 74, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.55, 13, 13], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.317, 22, 22], 'false,false,false,false': [2.915, 17, 17]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, A)', 'false': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,true': 'recursion_teamplayssport(D, B)', 'false,true,false': 'recursion_teamplayssport(E, B)', 'false,false': 'teamplaysagainstteam(F, A), recursion_teamplayssport(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [2.155, 5, 65], 'false,true,false,true': [1.94, 64, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [4.21e-08, 0, 8], 'false,false,false': [0.496, 62, 54]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [7.024, 131, 131], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'recursion_teamplayssport(D, B)', 'false': 'teamplaysagainstteam(E, A)', 'false,true': 'recursion_teamplayssport(F, B)', 'false,false': 'recursion_teamplayssport(G, B)', 'false,false,true': 'teamplaysagainstteam(H, A), teamalsoknownas(I, A)'}, {'true,true': [2.16, 5, 73], 'true,false': [0.0, 0, 0], 'false,true,true': [2.337, 74, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [5.099, 52, 52], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)'}, {'true': [6.576, 131, 131], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'true,false': 'recursion_teamplayssport(C, B)', 'true,false,false': 'recursion_teamplayssport(E, B)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(G, H)'}, {'true,true': [3.214, 52, 52], 'true,false,true': [0.035, 0, 22], 'true,false,false,true': [2.047, 27, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.099, 52, 52], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'recursion_teamplayssport(C, B)', 'true': 'teamplaysagainstteam(D, C)'}, {'true,true': [5.771, 80, 130], 'true,false': [1.135, 51, 1], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'recursion_teamplayssport(D, B)'}, {'true': [2.901, 24, 24], 'false,true': [5.522, 107, 107], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true': 'teamplaysagainstteam(E, A), recursion_teamplayssport(E, B)', 'true,false': 'recursion_teamplayssport(F, B)', 'false': 'recursion_teamplayssport(G, B)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.055, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.176, 126, 126], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), recursion_teamplayssport(C, B)', 'true': 'teamalsoknownas(D, E)', 'false': 'recursion_teamplayssport(F, B)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,true': 'teamplaysagainstteam(H, A)'}, {'true,true': [2.13, 5, 73], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.243, 11, 2], 'false,true,true,false': [2.495, 13, 13], 'false,true,false': [4.807, 102, 43], 'false,false': [0.0, 0, 0]}]]
[{'': [0.059993425378039346, 0.21585538752362976], 'false': [0.06937500000000026, 0.25], 'false,false': [0.24999999999999956, 0.2500000000000014], 'false,false,false': [0.2500000000000011, 0.24999999999999953], 'false,false,true': [0.24999999999999956, nan], 'false,true': [0.06937500000000026, nan]}, {'': [nan, 0.21797567808809895], 'false': [0.19627648521015092, 0.24205912615522568], 'false,false': [2.220446049250313e-16, 0.24556984782326044], 'false,true': [0.0663265306122428, 0.05536332179930801], 'false,true,false': [0.05536332179930801, nan]}, {'': [0.18832659219836947, nan]}, {'': [0.059788192605645316, 0.19345896228631346], 'false': [0.06828633911990882, 0.24999999999999975], 'false,false': [0.24999999999999975, nan], 'false,false,true': [nan, 0.24999999999999975], 'false,true': [0.06828633911990882, nan], 'true': [0.059788192605645316, nan]}, {'': [0.16504363021345972, nan]}, {'': [0.10538216238112795, 0.2499999999999995], 'false': [nan, 0.2499999999999995], 'false,false': [0.2499999999999995, nan], 'true': [0.09934518389024175, 0.11537214980477016], 'true,false': [5.478635533644068e-05, 0.13098482981352458], 'true,false,false': [0.13098482981352458, nan]}, {'': [0.15905219795700465, nan], 'true': [0.15858558640055428, 0.024785564866685116]}, {'': [0.17532027451117224, 0.1424910945637851], 'false': [0.1424910945637851, nan]}, {'': [0.06338339663550314, 0.15137141055386255], 'false': [0.1513714105538626, nan], 'true': [-1.1102230246251566e-17, 0.0006051279591118397], 'true,false': [0.0006051279591118397, nan]}, {'': [0.05814346946734054, 0.16850412401257012], 'false': [0.16850412401257003, nan], 'false,true': [0.2006429002861678, 0.15938872120163675], 'false,true,true': [0.11888039826305774, 0.23946207079611484], 'true': [0.05814346946734054, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
1;false;teamplaysagainstteam(F, A), recursion_teamplayssport(F, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;athleteplaysforteam(D, A).;true;true
5;true,false;recursion_teamplayssport(C, B).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
8;true;teamplaysagainstteam(E, A), recursion_teamplayssport(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | | then return 0.837740771834206;  // std dev = 0.141, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else if ( teamplaysagainstteam(A, D), athleteledsportsteam(F, A) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(D, G) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( teamplaysinleague(A, H), teamplaysinleague(D, H) )
%   | | | then return 0.7202179006167531;  // std dev = 1.857, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.517239844190421;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamalsoknownas(A, J), recursion_teamplayssport(J, B) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.11987304292246571;  // std dev = 0.147, 91.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamalsoknownas(E, F), recursion_teamplayssport(F, B) )
%   | | then return 0.7017629763273574;  // std dev = 0.139, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.4712655513113358;  // std dev = 1.671, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.7257719020402186;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07614766333442305;  // std dev = 0.211, 68.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=4 */
%   else if ( teamplaysagainstteam(I, A), recursion_teamplayssport(I, B) )
%   | then return 0.7277796409251909;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then if ( athleteplaysforteam(J, L), teamalsoknownas(K, L) )
%   | | | then return -0.21708075029492305;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.5734902881764338;  // std dev = 3.100, 62.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=50 */
%   | | else if ( teamplaysagainstteam(A, M), teamalsoknownas(A, N) )
%   | | | then return 0.3479289650666533;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08572053943023761;  // std dev = 1.354, 44.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(C, E) )
%   | | then return 0.5421426419173756;  // std dev = 0.171, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | else return 0.43059874091174083;  // std dev = 0.352, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysagainstteam(D, F) )
%   | | then return -0.11732608526144415;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.21374803357675834;  // std dev = 2.752, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.5766059239568226;  // std dev = 1.674, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | | then return 0.5559820237565949;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, K), recursion_teamplayssport(K, B) )
%   | | | then return 0.2084787386407127;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11911911870154661;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09518438796572326;  // std dev = 0.153, 79.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(C, F) )
%   | | then return 0.42190076570754576;  // std dev = 0.115, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else if ( athleteledsportsteam(G, A), teamalsoknownas(D, E) )
%   | | | then return -0.1686578848157947;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3857951831942227;  // std dev = 1.245, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( teamplaysagainstteam(H, A), athleteplaysforteam(I, H) )
%   | | then if ( teamplaysagainstteam(D, H) )
%   | | | then return -0.10571054812529558;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.3860544168425278;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, J) )
%   | | | then return 0.16231536294219584;  // std dev = 2.647, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.4329640958286018;  // std dev = 1.665, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   else if ( teamplaysagainstteam(K, A), recursion_teamplayssport(K, B) )
%   | then return 0.41797549320576854;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07464166404076689;  // std dev = 0.187, 96.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysagainstteam(D, E), recursion_teamplayssport(D, B) )
%   | | then return 0.3126352461738726;  // std dev = 0.171, 66.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | | else if ( teamplaysagainstteam(D, E) )
%   | | | then return -0.16503820806690833;  // std dev = 0.865, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3820631964205783;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then if ( teamalsoknownas(H, F), teamplaysagainstteam(A, F) )
%   | | | then return -0.09612554625142454;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.014788459509438944;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( athleteplaysforteam(C, D), teamalsoknownas(D, I) )
%   | | | then return 0.12537264108540075;  // std dev = 2.640, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.33197045013164217;  // std dev = 1.680, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   else if ( teamplaysagainstteam(J, A), recursion_teamplayssport(J, B) )
%   | then return 0.3210282871943339;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0672408698730337;  // std dev = 0.188, 96.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.08041093098217685;  // std dev = 0.239, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | else if ( recursion_teamplayssport(C, B) )
%   | | then return 0.2795244427570772;  // std dev = 0.114, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | | then return -0.10862225720681835;  // std dev = 0.221, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.1227495211952796;  // std dev = 1.453, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | then if ( athleteplaysforteam(G, H), teamalsoknownas(H, I) )
%   | | then if ( athleteledsportsteam(J, H), athleteplaysforteam(J, I) )
%   | | | then return -0.26925515882527434;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16202606485160345;  // std dev = 2.382, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.3247661390371708;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20767154480492467;  // std dev = 1.616, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return -0.04660339763523328;  // std dev = 0.222, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then if ( teamplaysinleague(A, E), athleteplaysinleague(C, E) )
%   | then return 0.21848444740976034;  // std dev = 0.149, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(G, H), recursion_teamplayssport(A, H) )
%   | | | then return -0.18925500055815228;  // std dev = 0.881, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.1389923318158711;  // std dev = 1.546, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.3264557590331364;  // std dev = 0.423, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13663395387272867;  // std dev = 2.723, 58.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   else if ( teamplaysinleague(A, J), athleteplaysforteam(K, A) )
%   | then return -0.10382869548174664;  // std dev = 0.004, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( teamplaysagainstteam(L, A), recursion_teamplayssport(L, B) )
%   | | then return 0.21278972255402398;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, M), teamplaysinleague(M, N) )
%   | | | then return 0.03331580960949815;  // std dev = 1.475, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.07023857568776591;  // std dev = 0.991, 43.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysinleague(A, D), athleteplaysforteam(C, E) )
%   | | then return 0.20841699619969614;  // std dev = 0.114, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( teamalsoknownas(F, E), athleteledsportsteam(G, A) )
%   | | | then return -0.13443711596981697;  // std dev = 1.049, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1755053331419979;  // std dev = 1.017, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( teamplaysagainstteam(H, A), athleteledsportsteam(I, H) )
%   | | then if ( teamplaysagainstteam(A, J), athleteledsportsteam(K, J) )
%   | | | then return -0.0904302721231246;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.21763608750569627;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(A, D) )
%   | | | then return 0.3605645565011388;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08837817075175063;  // std dev = 3.198, 76.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   else if ( teamalsoknownas(L, A), teamplaysagainstteam(A, M) )
%   | then return 0.09540258601993205;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.07960764806971035;  // std dev = 0.117, 74.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then return 0.20960677210020018;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09592073158730191;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysagainstteam(H, A), recursion_teamplayssport(H, B) )
%   | | then if ( teamplaysinleague(A, G), athleteplaysforteam(F, H) )
%   | | | then return 0.17591481466328962;  // std dev = 0.100, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.08293493077449574;  // std dev = 1.540, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | | then return -0.08198950531983042;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.08628726095581403;  // std dev = 3.349, 84.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else if ( teamalsoknownas(K, A), teamplaysagainstteam(A, L) )
%   | | then return 0.21254958015881495;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, M) )
%   | | | then return -0.08566001407105261;  // std dev = 0.042, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.03676747296840074;  // std dev = 0.985, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), recursion_teamplayssport(E, B) )
%   | then if ( teamplaysinleague(A, D), athleteplaysforteam(C, E) )
%   | | then return 0.15174412440132945;  // std dev = 0.089, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( athleteledsportsteam(C, E), athleteledsportsteam(F, A) )
%   | | | then return -0.3391891474937728;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1454330007953499;  // std dev = 1.052, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return -0.07708656910413432;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(C, J) )
%   | | | then return 0.2677601907839526;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05719507884535033;  // std dev = 3.222, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.0808923417228068;  // std dev = 0.065, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( athleteplayssport(L, B) )
%   | | then return -0.08978404894549172;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10484169143188429;  // std dev = 0.378, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */


Results
   AUC ROC   = 0.950774
   AUC PR    = 0.946631
   CLL	      = -0.311045
   Precision = 0.849829 at threshold = 0.5
   Recall    = 0.93609
   F1        = 0.890877


Total learning time: 257.294 seconds
Total inference time: 4.649 seconds
AUC ROC: 0.950774


Results scoring model
   AUC ROC   = 0.980887
   AUC PR    = 0.981123
   CLL	      = -0.245333
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.961832
   F1        = 0.929889


Total scoring time: 2.764 seconds
Refined model CLL: -0.245333


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950774
   AUC PR    = 0.946631
   CLL	      = -0.311045
   Precision = 0.849829 at threshold = 0.5
   Recall    = 0.93609
   F1        = 0.890877


Total learning time: 263.757 seconds
Total inference time: 4.649 seconds
AUC ROC: 0.950774
Total revision time: 263.757
Best scored revision CLL: -0.245333


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:17:10
{'AUC ROC': 0.950774, 'AUC PR': 0.946631, 'CLL': -0.311045, 'Precision': [0.849829, 0.5], 'Recall': 0.93609, 'F1': 0.890877, 'Learning time': 263.757, 'Inference time': 4.649, 'parameter_1.0': {'AUC ROC': 0.878194, 'AUC PR': 0.84703, 'CLL': -0.476937, 'Precision': [0.91195, 0.5], 'Recall': 0.545113, 'F1': 0.682353, 'Learning time': 2.444, 'Inference time': 1.318}}


