usePrologVariables: true.

% maxTreeDepthInNodes                 = 3
% maxTreeDepthInLiterals              = 12
% maxNumberOfLiteralsAtAnInteriorNode = 2
% maxFreeBridgersInBody               = 1
% maxNumberOfClauses                  = 8
% maxNodesToConsider                  = 10
% maxNodesToCreate                    = 10.000
% maxAcceptableNodeScoreToStop        = 0,003
% negPosRatio                         = 2,000
% testNegPosRatio                     = -1,000
% # of pos examples                   = 1.229
% # of neg examples                   = 0



%%%%%  WILL-Produced Tree #1 @ 13:21:30 10/22/21.  [Using 33.056.376 memory cells.]  %%%%%

% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(F, A), athleteplaysforteam(C, F) )
%   | | then return 0.8581489350995096;  // std dev = 1,06e-06, 169,000 (wgt'ed) examples reached here.  /* #pos=169 */
%   | | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(A, G) )
%   | | | then return 0.7605879594897553;  // std dev = 1,900, 41,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return 0.8522317753361965;  // std dev = 0,997, 169,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysinleague(H, D) )
%   | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(J, A), teamalsoknownas(K, J) )
%   | then if ( teamplaysagainstteam(A, L), athleteledsportsteam(M, K) )
%   | | then return -0.08124500429442717;  // std dev = 0,239, 33,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | else return -0.13035681202692448;  // std dev = 0,107, 87,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=1 */
%   | else return -0.1376197531938599;  // std dev = 0,065, 709,000 (wgt'ed) examples reached here.  /* #neg=706 #pos=3 */


% Clauses:

teamplayssport(A, B, 0.8581489350995096) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     athleteledsportsteam(C, E), 
     teamplaysagainstteam(F, A), 
     athleteplaysforteam(C, F), 
     !. // Clause #1.

teamplayssport(A, B, 0.7605879594897553) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     athleteledsportsteam(C, E), 
     teamplaysagainstteam(F, A), 
     teamplaysagainstteam(A, F), 
     !. // Clause #2.

teamplayssport(A, B, 0.8522317753361965) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     athleteledsportsteam(C, E), 
     !. // Clause #3.

teamplayssport(A, B, 0.19148226843284552) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     teamplaysagainstteam(E, A), 
     teamplaysinleague(E, D), 
     !. // Clause #4.

teamplayssport(A, B, 0.7914822684328456) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     teamplaysagainstteam(E, A), 
     !. // Clause #5.

teamplayssport(A, B, 0.5248156017661788) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     !. // Clause #6.

teamplayssport(A, B, -0.08124500429442717) :- 
     teamalsoknownas(C, A), 
     teamalsoknownas(D, C), 
     teamplaysagainstteam(A, E), 
     athleteledsportsteam(F, D), 
     !. // Clause #7.

teamplayssport(A, B, -0.13035681202692448) :- 
     teamalsoknownas(C, A), 
     teamalsoknownas(D, C), 
     !. // Clause #8.

teamplayssport(A, B, -0.1376197531938599) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_teamplayssport(a, b, 0.8581489350995096) :-  /* #pos=169 */ 
   athleteplayssport(uniqueVar1, b),
   athleteplaysinleague(uniqueVar1, underscore),
   athleteledsportsteam(uniqueVar1, underscore),
   teamplaysagainstteam(uniqueVar2, a),
   athleteplaysforteam(uniqueVar1, uniqueVar2),
   !. // Flattened version of clause #1.

flattened_teamplayssport(a, b, 0.7605879594897553) :-  /* #neg=4 #pos=37 */ 
   athleteplayssport(uniqueVar3, b),
   athleteplaysinleague(uniqueVar3, underscore),
   athleteledsportsteam(uniqueVar3, underscore),
   teamplaysagainstteam(uniqueVar4, a),
   teamplaysagainstteam(a, uniqueVar4),
   !. // Flattened version of clause #2.

flattened_teamplayssport(underscore, a, 0.8522317753361965) :-  /* #neg=1 #pos=168 */ 
   athleteplayssport(uniqueVar5, a),
   athleteplaysinleague(uniqueVar5, underscore),
   athleteledsportsteam(uniqueVar5, underscore),
   !. // Flattened version of clause #3.

flattened_teamplayssport(a, b, 0.19148226843284552) :-  /* #neg=2 #pos=1 */ 
   athleteplayssport(uniqueVar6, b),
   athleteplaysinleague(uniqueVar6, uniqueVar7),
   teamplaysagainstteam(uniqueVar8, a),
   teamplaysinleague(uniqueVar8, uniqueVar7),
   !. // Flattened version of clause #4.

flattened_teamplayssport(a, b, 0.7914822684328456) :-  /* #neg=1 #pos=14 */ 
   athleteplayssport(uniqueVar9, b),
   athleteplaysinleague(uniqueVar9, underscore),
   teamplaysagainstteam(underscore, a),
   !. // Flattened version of clause #5.

flattened_teamplayssport(underscore, a, 0.5248156017661788) :-  /* #neg=1 #pos=2 */ 
   athleteplayssport(uniqueVar10, a),
   athleteplaysinleague(uniqueVar10, underscore),
   !. // Flattened version of clause #6.

flattened_teamplayssport(a, underscore, -0.08124500429442717) :-  /* #neg=31 #pos=2 */ 
   teamalsoknownas(uniqueVar11, a),
   teamalsoknownas(uniqueVar12, uniqueVar11),
   teamplaysagainstteam(a, underscore),
   athleteledsportsteam(underscore, uniqueVar12),
   !. // Flattened version of clause #7.

flattened_teamplayssport(a, underscore, -0.13035681202692448) :-  /* #neg=86 #pos=1 */ 
   teamalsoknownas(uniqueVar13, a),
   teamalsoknownas(underscore, uniqueVar13),
   !. // Flattened version of clause #8.

flattened_teamplayssport(underscore, underscore, -0.1376197531938599) :-  /* #neg=706 #pos=3 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteplayssport(uniqueVar1, b)
%   teamalsoknownas(underscore, uniqueVar13)
%   athleteplaysforteam(uniqueVar1, uniqueVar2)
%   athleteplayssport(uniqueVar9, b)
%   teamplaysagainstteam(uniqueVar4, a)
%   athleteledsportsteam(underscore, uniqueVar12)
%   athleteledsportsteam(uniqueVar1, underscore)
%   athleteplaysinleague(uniqueVar9, underscore)
%   athleteplayssport(uniqueVar5, a)
%   teamplaysinleague(uniqueVar8, uniqueVar7)
%   teamalsoknownas(uniqueVar12, uniqueVar11)
%   athleteplaysinleague(uniqueVar10, underscore)
%   teamalsoknownas(uniqueVar13, a)
%   teamplaysagainstteam(underscore, a)
%   teamplaysagainstteam(uniqueVar8, a)
%   teamalsoknownas(uniqueVar11, a)
%   athleteplaysinleague(uniqueVar1, underscore)
%   teamplaysagainstteam(a, underscore)
%   athleteplayssport(uniqueVar6, b)
%   teamplaysagainstteam(uniqueVar2, a)
%   athleteledsportsteam(uniqueVar5, underscore)
%   athleteplaysinleague(uniqueVar6, uniqueVar7)
%   athleteplayssport(uniqueVar3, b)
%   athleteplayssport(uniqueVar10, a)
%   athleteplaysinleague(uniqueVar5, underscore)
%   athleteplaysinleague(uniqueVar3, underscore)
%   teamplaysagainstteam(a, uniqueVar4)
%   athleteledsportsteam(uniqueVar3, underscore)

%%%%%  WILL-Produced Tree #2 @ 13:21:44 10/22/21.  [Using 33.253.944 memory cells.]  %%%%%

% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(E, D) )
%   | then return 0.7216366316079471;  // std dev = 0,132, 180,000 (wgt'ed) examples reached here.  /* #pos=180 */
%   | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(A, F) )
%   | | then return 0.5626370969842887;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | | then return 0.7258949312700228;  // std dev = 0,074, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return 0.6874203105812916;  // std dev = 2,382, 166,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=160 */
%   else if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | then if ( teamplaysagainstteam(K, A), teamplaysagainstteam(K, I) )
%   | | then return -0.12784416856835637;  // std dev = 0,017, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0.2038548198777419;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( teamplaysinleague(A, L) )
%   | | then return -0.12606784115609349;  // std dev = 0,020, 527,000 (wgt'ed) examples reached here.  /* #neg=527 */
%   | | else if ( teamplaysagainstteam(M, A), athleteledsportsteam(N, M) )
%   | | | then return -0.125909584643944;  // std dev = 1,67e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.09778664975878486;  // std dev = 1,969, 140,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=4 */


% Clauses:

teamplayssport(A, B, 0.7216366316079471) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     teamplaysagainstteam(A, E), 
     teamplaysinleague(E, D), 
     !. // Clause #1.

teamplayssport(A, B, 0.5626370969842887) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     athleteplaysforteam(C, E), 
     teamplaysagainstteam(A, E), 
     !. // Clause #2.

teamplayssport(A, B, 0.7258949312700228) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     teamalsoknownas(A, E), 
     teamplaysinleague(A, F), 
     !. // Clause #3.

teamplayssport(A, B, 0.6874203105812916) :- 
     athleteplayssport(C, B), 
     athleteplaysinleague(C, D), 
     !. // Clause #4.

teamplayssport(A, B, -0.12784416856835637) :- 
     teamalsoknownas(C, A), 
     athleteplaysforteam(D, C), 
     teamplaysagainstteam(E, A), 
     teamplaysagainstteam(E, C), 
     !. // Clause #5.

teamplayssport(A, B, 0.2038548198777419) :- 
     teamalsoknownas(C, A), 
     athleteplaysforteam(D, C), 
     !. // Clause #6.

teamplayssport(A, B, -0.12606784115609349) :- 
     teamplaysinleague(A, C), 
     !. // Clause #7.

teamplayssport(A, B, -0.125909584643944) :- 
     teamplaysagainstteam(C, A), 
     athleteledsportsteam(D, C), 
     !. // Clause #8.

teamplayssport(A, B, -0.09778664975878486) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_teamplayssport(a, b, 0.7216366316079471) :-  /* #pos=180 */ 
   athleteplayssport(uniqueVar14, b),
   athleteplaysinleague(uniqueVar14, uniqueVar15),
   teamplaysagainstteam(a, uniqueVar16),
   teamplaysinleague(uniqueVar16, uniqueVar15),
   !. // Flattened version of clause #1.

flattened_teamplayssport(a, b, 0.5626370969842887) :-  /* #neg=1 #pos=5 */ 
   athleteplayssport(uniqueVar17, b),
   athleteplaysinleague(uniqueVar17, underscore),
   athleteplaysforteam(uniqueVar17, uniqueVar18),
   teamplaysagainstteam(a, uniqueVar18),
   !. // Flattened version of clause #2.

flattened_teamplayssport(a, b, 0.7258949312700228) :-  /* #pos=46 */ 
   athleteplayssport(uniqueVar19, b),
   athleteplaysinleague(uniqueVar19, underscore),
   teamalsoknownas(a, underscore),
   teamplaysinleague(a, underscore),
   !. // Flattened version of clause #3.

flattened_teamplayssport(underscore, a, 0.6874203105812916) :-  /* #neg=6 #pos=160 */ 
   athleteplayssport(uniqueVar20, a),
   athleteplaysinleague(uniqueVar20, underscore),
   !. // Flattened version of clause #4.

flattened_teamplayssport(a, underscore, -0.12784416856835637) :-  /* #neg=41 */ 
   teamalsoknownas(uniqueVar21, a),
   athleteplaysforteam(underscore, uniqueVar21),
   teamplaysagainstteam(uniqueVar22, a),
   teamplaysagainstteam(uniqueVar22, uniqueVar21),
   !. // Flattened version of clause #5.

flattened_teamplayssport(a, underscore, 0.2038548198777419) :-  /* #neg=4 #pos=2 */ 
   teamalsoknownas(uniqueVar23, a),
   athleteplaysforteam(underscore, uniqueVar23),
   !. // Flattened version of clause #6.

flattened_teamplayssport(a, underscore, -0.12606784115609349) :-  /* #neg=527 */ 
   teamplaysinleague(a, underscore),
   !. // Flattened version of clause #7.

flattened_teamplayssport(a, underscore, -0.125909584643944) :-  /* #neg=26 */ 
   teamplaysagainstteam(uniqueVar24, a),
   athleteledsportsteam(underscore, uniqueVar24),
   !. // Flattened version of clause #8.

flattened_teamplayssport(underscore, underscore, -0.09778664975878486) :-  /* #neg=136 #pos=4 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteplayssport(uniqueVar19, b)
%   teamplaysagainstteam(a, uniqueVar18)
%   athleteplaysinleague(uniqueVar14, uniqueVar15)
%   teamplaysagainstteam(a, uniqueVar16)
%   teamalsoknownas(uniqueVar21, a)
%   teamplaysagainstteam(uniqueVar22, uniqueVar21)
%   teamplaysagainstteam(uniqueVar24, a)
%   athleteplaysforteam(uniqueVar17, uniqueVar18)
%   teamplaysagainstteam(uniqueVar22, a)
%   athleteplaysinleague(uniqueVar17, underscore)
%   athleteplayssport(uniqueVar20, a)
%   athleteplaysinleague(uniqueVar19, underscore)
%   teamalsoknownas(a, underscore)
%   athleteplaysforteam(underscore, uniqueVar21)
%   athleteplaysforteam(underscore, uniqueVar23)
%   athleteplayssport(uniqueVar14, b)
%   athleteplayssport(uniqueVar17, b)
%   teamalsoknownas(uniqueVar23, a)
%   athleteledsportsteam(underscore, uniqueVar24)
%   teamplaysinleague(a, underscore)
%   athleteplaysinleague(uniqueVar20, underscore)
%   teamplaysinleague(uniqueVar16, uniqueVar15)

%%%%%  WILL-Produced Tree #3 @ 13:22:22 10/22/21.  [Using 33.485.456 memory cells.]  %%%%%

% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, A) )
%   | | then if ( teamplaysagainstteam(D, F), teamalsoknownas(G, D) )
%   | | | then return 0.5548321993441706;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.24583945135291488;  // std dev = 1,449, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( athleteplaysforteam(H, A), athleteplaysinleague(H, I) )
%   | | | then return 0.5281645604490696;  // std dev = 1,674, 104,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=101 */
%   | | | else return 0.5596437682205031;  // std dev = 1,008, 245,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=244 */
%   | else if ( teamplaysinleague(A, J), athleteplaysforteam(K, A) )
%   | | then if ( athleteledsportsteam(K, A) )
%   | | | then return 0.343781181251428;  // std dev = 0,566, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19118713231387038;  // std dev = 0,265, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return 0.6416993557614659;  // std dev = 0,256, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.42891010931988355;  // std dev = 1,459, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.10961441273721338;  // std dev = 0,062, 752,000 (wgt'ed) examples reached here.  /* #neg=749 #pos=3 */


% Clauses:

teamplayssport(A, B, 0.5548321993441706) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     teamplaysagainstteam(A, E), 
     teamalsoknownas(F, A), 
     teamplaysagainstteam(D, F), 
     teamalsoknownas(G, D), 
     !. // Clause #1.

teamplayssport(A, B, 0.24583945135291488) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     teamplaysagainstteam(A, E), 
     teamalsoknownas(F, A), 
     !. // Clause #2.

teamplayssport(A, B, 0.5281645604490696) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     athleteplaysforteam(E, A), 
     athleteplaysinleague(E, F), 
     !. // Clause #3.

teamplayssport(A, B, 0.5596437682205031) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     !. // Clause #4.

teamplayssport(A, B, 0.343781181251428) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysforteam(E, A), 
     athleteledsportsteam(E, A), 
     !. // Clause #5.

teamplayssport(A, B, -0.19118713231387038) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysforteam(E, A), 
     !. // Clause #6.

teamplayssport(A, B, 0.6416993557614659) :- 
     athleteplayssport(C, B), 
     teamalsoknownas(A, D), 
     !. // Clause #7.

teamplayssport(A, B, 0.42891010931988355) :- 
     athleteplayssport(C, B), 
     !. // Clause #8.

teamplayssport(A, B, -0.10961441273721338) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_teamplayssport(a, b, 0.5548321993441706) :-  /* #pos=23 */ 
   athleteplayssport(uniqueVar25, b),
   athleteledsportsteam(uniqueVar25, uniqueVar26),
   teamplaysagainstteam(a, underscore),
   teamalsoknownas(uniqueVar27, a),
   teamplaysagainstteam(uniqueVar26, uniqueVar27),
   teamalsoknownas(underscore, uniqueVar26),
   !. // Flattened version of clause #1.

flattened_teamplayssport(a, b, 0.24583945135291488) :-  /* #neg=3 #pos=6 */ 
   athleteplayssport(uniqueVar28, b),
   athleteledsportsteam(uniqueVar28, underscore),
   teamplaysagainstteam(a, underscore),
   teamalsoknownas(underscore, a),
   !. // Flattened version of clause #2.

flattened_teamplayssport(a, b, 0.5281645604490696) :-  /* #neg=3 #pos=101 */ 
   athleteplayssport(uniqueVar29, b),
   athleteledsportsteam(uniqueVar29, underscore),
   athleteplaysforteam(uniqueVar30, a),
   athleteplaysinleague(uniqueVar30, underscore),
   !. // Flattened version of clause #3.

flattened_teamplayssport(underscore, a, 0.5596437682205031) :-  /* #neg=1 #pos=244 */ 
   athleteplayssport(uniqueVar31, a),
   athleteledsportsteam(uniqueVar31, underscore),
   !. // Flattened version of clause #4.

flattened_teamplayssport(a, b, 0.343781181251428) :-  /* #neg=1 #pos=2 */ 
   athleteplayssport(underscore, b),
   teamplaysinleague(a, underscore),
   athleteplaysforteam(uniqueVar32, a),
   athleteledsportsteam(uniqueVar32, a),
   !. // Flattened version of clause #5.

flattened_teamplayssport(a, b, -0.19118713231387038) :-  /* #neg=4 */ 
   athleteplayssport(underscore, b),
   teamplaysinleague(a, underscore),
   athleteplaysforteam(underscore, a),
   !. // Flattened version of clause #6.

flattened_teamplayssport(a, b, 0.6416993557614659) :-  /* #pos=8 */ 
   athleteplayssport(underscore, b),
   teamalsoknownas(a, underscore),
   !. // Flattened version of clause #7.

flattened_teamplayssport(underscore, a, 0.42891010931988355) :-  /* #neg=3 #pos=10 */ 
   athleteplayssport(underscore, a),
   !. // Flattened version of clause #8.

flattened_teamplayssport(underscore, underscore, -0.10961441273721338) :-  /* #neg=749 #pos=3 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   teamplaysagainstteam(uniqueVar26, uniqueVar27)
%   athleteplayssport(underscore, b)
%   teamalsoknownas(underscore, uniqueVar26)
%   teamplaysagainstteam(a, underscore)
%   athleteledsportsteam(uniqueVar28, underscore)
%   athleteledsportsteam(uniqueVar31, underscore)
%   athleteledsportsteam(uniqueVar25, uniqueVar26)
%   athleteplaysforteam(uniqueVar30, a)
%   athleteplayssport(uniqueVar29, b)
%   teamalsoknownas(a, underscore)
%   athleteledsportsteam(uniqueVar29, underscore)
%   athleteplayssport(underscore, a)
%   athleteplayssport(uniqueVar28, b)
%   athleteplayssport(uniqueVar25, b)
%   athleteplaysinleague(uniqueVar30, underscore)
%   athleteplaysforteam(uniqueVar32, a)
%   athleteledsportsteam(uniqueVar32, a)
%   athleteplayssport(uniqueVar31, a)
%   teamplaysinleague(a, underscore)
%   athleteplaysforteam(underscore, a)
%   teamalsoknownas(uniqueVar27, a)
%   teamalsoknownas(underscore, a)

%%%%%  WILL-Produced Tree #4 @ 13:26:43 10/22/21.  [Using 33.511.976 memory cells.]  %%%%%

% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | then if ( athleteledsportsteam(C, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.42645128640361574;  // std dev = 0,203, 156,000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | | else return 0.39278571266274354;  // std dev = 1,397, 68,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=66 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.037330628731241544;  // std dev = 0,811, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.45244297825785945;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(C, I), athleteledsportsteam(J, I) )
%   | | then return 0.4261127009559929;  // std dev = 0,060, 154,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=153 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.4746457326529844;  // std dev = 0,118, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6359398851835663;  // std dev = 0,314, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(L, A), teamplaysagainstteam(M, A) )
%   | then return -0.08069192813254944;  // std dev = 0,152, 81,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=2 */
%   | else return -0.10155736531217101;  // std dev = 1,000, 688,000 (wgt'ed) examples reached here.  /* #neg=687 #pos=1 */


% Clauses:

teamplayssport(A, B, 0.42645128640361574) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysinleague(E, D), 
     athleteledsportsteam(C, F), 
     athleteplaysforteam(G, A), 
     !. // Clause #1.

teamplayssport(A, B, 0.39278571266274354) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysinleague(E, D), 
     athleteledsportsteam(C, F), 
     !. // Clause #2.

teamplayssport(A, B, 0.037330628731241544) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysinleague(E, D), 
     teamplaysagainstteam(A, F), 
     !. // Clause #3.

teamplayssport(A, B, 0.45244297825785945) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysinleague(E, D), 
     !. // Clause #4.

teamplayssport(A, B, 0.4261127009559929) :- 
     athleteplayssport(C, B), 
     athleteplaysforteam(C, D), 
     athleteledsportsteam(E, D), 
     !. // Clause #5.

teamplayssport(A, B, 0.4746457326529844) :- 
     athleteplayssport(C, B), 
     teamplaysagainstteam(D, A), 
     !. // Clause #6.

teamplayssport(A, B, 0.6359398851835663) :- 
     athleteplayssport(C, B), 
     !. // Clause #7.

teamplayssport(A, B, -0.08069192813254944) :- 
     teamalsoknownas(C, A), 
     teamplaysagainstteam(D, A), 
     !. // Clause #8.

teamplayssport(A, B, -0.10155736531217101) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_teamplayssport(a, b, 0.42645128640361574) :-  /* #pos=156 */ 
   athleteplayssport(uniqueVar33, b),
   teamplaysinleague(a, uniqueVar34),
   athleteplaysinleague(underscore, uniqueVar34),
   athleteledsportsteam(uniqueVar33, underscore),
   athleteplaysforteam(underscore, a),
   !. // Flattened version of clause #1.

flattened_teamplayssport(a, b, 0.39278571266274354) :-  /* #neg=2 #pos=66 */ 
   athleteplayssport(uniqueVar35, b),
   teamplaysinleague(a, uniqueVar36),
   athleteplaysinleague(underscore, uniqueVar36),
   athleteledsportsteam(uniqueVar35, underscore),
   !. // Flattened version of clause #2.

flattened_teamplayssport(a, b, 0.037330628731241544) :-  /* #neg=2 #pos=2 */ 
   athleteplayssport(underscore, b),
   teamplaysinleague(a, uniqueVar37),
   athleteplaysinleague(underscore, uniqueVar37),
   teamplaysagainstteam(a, underscore),
   !. // Flattened version of clause #3.

flattened_teamplayssport(a, b, 0.45244297825785945) :-  /* #pos=3 */ 
   athleteplayssport(underscore, b),
   teamplaysinleague(a, uniqueVar38),
   athleteplaysinleague(underscore, uniqueVar38),
   !. // Flattened version of clause #4.

flattened_teamplayssport(underscore, a, 0.4261127009559929) :-  /* #neg=1 #pos=153 */ 
   athleteplayssport(uniqueVar39, a),
   athleteplaysforteam(uniqueVar39, uniqueVar40),
   athleteledsportsteam(underscore, uniqueVar40),
   !. // Flattened version of clause #5.

flattened_teamplayssport(a, b, 0.4746457326529844) :-  /* #pos=10 */ 
   athleteplayssport(underscore, b),
   teamplaysagainstteam(underscore, a),
   !. // Flattened version of clause #6.

flattened_teamplayssport(underscore, a, 0.6359398851835663) :-  /* #pos=4 */ 
   athleteplayssport(underscore, a),
   !. // Flattened version of clause #7.

flattened_teamplayssport(a, underscore, -0.08069192813254944) :-  /* #neg=79 #pos=2 */ 
   teamalsoknownas(underscore, a),
   teamplaysagainstteam(underscore, a),
   !. // Flattened version of clause #8.

flattened_teamplayssport(underscore, underscore, -0.10155736531217101) :-  /* #neg=687 #pos=1 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteplayssport(uniqueVar35, b)
%   teamplaysagainstteam(underscore, a)
%   teamplaysinleague(a, uniqueVar34)
%   athleteledsportsteam(uniqueVar35, underscore)
%   athleteplayssport(underscore, b)
%   teamplaysinleague(a, uniqueVar38)
%   teamplaysinleague(a, uniqueVar36)
%   teamplaysagainstteam(a, underscore)
%   athleteplaysinleague(underscore, uniqueVar37)
%   athleteplayssport(uniqueVar39, a)
%   athleteplaysinleague(underscore, uniqueVar34)
%   athleteledsportsteam(uniqueVar33, underscore)
%   athleteplaysinleague(underscore, uniqueVar36)
%   athleteplayssport(uniqueVar33, b)
%   athleteplayssport(underscore, a)
%   athleteledsportsteam(underscore, uniqueVar40)
%   teamplaysinleague(a, uniqueVar37)
%   athleteplaysforteam(uniqueVar39, uniqueVar40)
%   athleteplaysforteam(underscore, a)
%   athleteplaysinleague(underscore, uniqueVar38)
%   teamalsoknownas(underscore, a)

%%%%%  WILL-Produced Tree #5 @ 13:27:23 10/22/21.  [Using 33.562.744 memory cells.]  %%%%%

% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(D, A), athleteplaysinleague(C, F) )
%   | | | then return 0.315738842134174;  // std dev = 0,960, 135,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | | | else return 0.34889914417782764;  // std dev = 0,210, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( teamplaysagainstteam(D, A), athleteledsportsteam(G, A) )
%   | | | then return 0.2337997478974091;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.31189963971877455;  // std dev = 1,729, 195,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=192 */
%   | else if ( teamalsoknownas(H, A), teamalsoknownas(A, H) )
%   | | then return 0.41403517708411064;  // std dev = 0,236, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return -0.043664945321843;  // std dev = 1,212, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.2919499129777339;  // std dev = 1,182, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( teamplaysagainstteam(K, A), teamalsoknownas(L, A) )
%   | then return -0.0675856534642864;  // std dev = 0,169, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | else return -0.09261345048828469;  // std dev = 0,037, 730,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=1 */


% Clauses:

teamplayssport(A, B, 0.315738842134174) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     athleteplaysforteam(E, A), 
     teamplaysagainstteam(D, A), 
     athleteplaysinleague(C, F), 
     !. // Clause #1.

teamplayssport(A, B, 0.34889914417782764) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     athleteplaysforteam(E, A), 
     !. // Clause #2.

teamplayssport(A, B, 0.2337997478974091) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     teamplaysagainstteam(D, A), 
     athleteledsportsteam(E, A), 
     !. // Clause #3.

teamplayssport(A, B, 0.31189963971877455) :- 
     athleteplayssport(C, B), 
     athleteledsportsteam(C, D), 
     !. // Clause #4.

teamplayssport(A, B, 0.41403517708411064) :- 
     athleteplayssport(C, B), 
     teamalsoknownas(D, A), 
     teamalsoknownas(A, D), 
     !. // Clause #5.

teamplayssport(A, B, -0.043664945321843) :- 
     athleteplayssport(C, B), 
     teamplaysinleague(A, D), 
     athleteplaysinleague(E, D), 
     !. // Clause #6.

teamplayssport(A, B, 0.2919499129777339) :- 
     athleteplayssport(C, B), 
     !. // Clause #7.

teamplayssport(A, B, -0.0675856534642864) :- 
     teamplaysagainstteam(C, A), 
     teamalsoknownas(D, A), 
     !. // Clause #8.

teamplayssport(A, B, -0.09261345048828469) :- !. // Clause #9.


% The flattened versions of these clauses:

flattened_teamplayssport(a, b, 0.315738842134174) :-  /* #neg=1 #pos=134 */ 
   athleteplayssport(uniqueVar41, b),
   athleteledsportsteam(uniqueVar41, uniqueVar42),
   athleteplaysforteam(underscore, a),
   teamplaysagainstteam(uniqueVar42, a),
   athleteplaysinleague(uniqueVar41, underscore),
   !. // Flattened version of clause #1.

flattened_teamplayssport(a, b, 0.34889914417782764) :-  /* #pos=38 */ 
   athleteplayssport(uniqueVar43, b),
   athleteledsportsteam(uniqueVar43, underscore),
   athleteplaysforteam(underscore, a),
   !. // Flattened version of clause #2.

flattened_teamplayssport(a, b, 0.2337997478974091) :-  /* #neg=1 #pos=10 */ 
   athleteplayssport(uniqueVar44, b),
   athleteledsportsteam(uniqueVar44, uniqueVar45),
   teamplaysagainstteam(uniqueVar45, a),
   athleteledsportsteam(underscore, a),
   !. // Flattened version of clause #3.

flattened_teamplayssport(underscore, a, 0.31189963971877455) :-  /* #neg=3 #pos=192 */ 
   athleteplayssport(uniqueVar46, a),
   athleteledsportsteam(uniqueVar46, underscore),
   !. // Flattened version of clause #4.

flattened_teamplayssport(a, b, 0.41403517708411064) :-  /* #pos=6 */ 
   athleteplayssport(underscore, b),
   teamalsoknownas(uniqueVar47, a),
   teamalsoknownas(a, uniqueVar47),
   !. // Flattened version of clause #5.

flattened_teamplayssport(a, b, -0.043664945321843) :-  /* #neg=6 #pos=4 */ 
   athleteplayssport(underscore, b),
   teamplaysinleague(a, uniqueVar48),
   athleteplaysinleague(underscore, uniqueVar48),
   !. // Flattened version of clause #6.

flattened_teamplayssport(underscore, a, 0.2919499129777339) :-  /* #neg=2 #pos=10 */ 
   athleteplayssport(underscore, a),
   !. // Flattened version of clause #7.

flattened_teamplayssport(a, underscore, -0.0675856534642864) :-  /* #neg=63 #pos=2 */ 
   teamplaysagainstteam(underscore, a),
   teamalsoknownas(underscore, a),
   !. // Flattened version of clause #8.

flattened_teamplayssport(underscore, underscore, -0.09261345048828469) :-  /* #neg=729 #pos=1 */ 
   !. // Flattened version of clause #9.


% The unique flattened literals:
%   athleteplayssport(uniqueVar41, b)
%   teamplaysagainstteam(underscore, a)
%   athleteledsportsteam(uniqueVar46, underscore)
%   teamplaysagainstteam(uniqueVar42, a)
%   athleteplaysinleague(uniqueVar41, underscore)
%   athleteledsportsteam(underscore, a)
%   athleteplayssport(underscore, b)
%   athleteledsportsteam(uniqueVar44, uniqueVar45)
%   teamplaysagainstteam(uniqueVar45, a)
%   athleteplayssport(uniqueVar43, b)
%   athleteplayssport(underscore, a)
%   athleteledsportsteam(uniqueVar43, underscore)
%   athleteplayssport(uniqueVar44, b)
%   athleteplayssport(uniqueVar46, a)
%   athleteplaysinleague(underscore, uniqueVar48)
%   athleteplaysforteam(underscore, a)
%   teamalsoknownas(uniqueVar47, a)
%   teamplaysinleague(a, uniqueVar48)
%   teamalsoknownas(underscore, a)
%   athleteledsportsteam(uniqueVar41, uniqueVar42)
%   teamalsoknownas(a, uniqueVar47)
