Starting experiment #1 for 21_yeast_uwcse

Loading pre-trained trees.
Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos  examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.1418510649004877;  // std dev = 4.47e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.33734126813469495;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.05384426172276422;  // std dev = 1.295, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.17339216963154866;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5830370454142457;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.12544463852839136;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, A) )
%   | | then if ( tempadvisedby(E, B), publication(D, E) )
%   | | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09468101003934455;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( publication(F, B) )
%   | | then return 0.6740029964812626;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.6806879552250902;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4779391948974277;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 2.11e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.0412001392616983;  // std dev = 1.262, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), tempadvisedby(K, L) )
%   | | | then return 0.2487718005867065;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.30476323976335357;  // std dev = 0.224, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return -0.14027404336356056;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20639890682313045;  // std dev = 2.459, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   else return -0.10159632948783628;  // std dev = 2.58e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4017451553806978;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(G, B) )
%   | | then if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | | then return -0.20384527048973422;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2880550476246908;  // std dev = 1.586, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.2967382188862961;  // std dev = 0.951, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.10679070155708763;  // std dev = 1.392, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.09269127618926104;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.3292682811510492;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2599610727703515;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( inphase(A, H), inphase(F, H) )
%   | | | then return -0.2666389952099131;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08019564181330033;  // std dev = 1.015, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( ta(I, A, J), publication(K, A) )
%   | | | then return 0.007365570893447609;  // std dev = 0.954, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.259930156483074;  // std dev = 1.610, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08518475138839682;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.31549501495676535;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20671993171881908;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20064425394157448;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return -0.18226656804655383;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.2689145098533885;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.029471880997485343;  // std dev = 2.360, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.25178780946977947;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17486864136705735;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(D, B) )
%   | | | then return -0.14238651479220266;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2950614390048079;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(F, A, G), publication(H, A) )
%   | | then return 0.00735112785600367;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.06630337484769801;  // std dev = 0.746, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1971665360255758;  // std dev = 1.713, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 1.29e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then if ( publication(E, D), publication(E, B) )
%   | | | then return 0.20747140786159865;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15730496280674766;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.3131755366626001;  // std dev = 0.312, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.018590605169322774;  // std dev = 1.331, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return -0.02516174711834455;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.39850595939012384;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.25971856760772066;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.32064858825327197;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420271;  // std dev = 7.45e-09, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( ta(D, A, E), publication(F, A) )
%   | then if ( publication(F, B) )
%   | | then return 0.15940203373579068;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20461630130756392;  // std dev = 0.708, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( ta(G, C, H) )
%   | | then if ( publication(I, A), publication(I, B) )
%   | | | then return 0.13946095847006312;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04486225280837457;  // std dev = 0.928, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.21675828658383345;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( publication(J, A), professor(B) )
%   | then if ( professor(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.20722290492818166;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( professor(B), publication(K, B) )
%   | | then return -0.1987695955831991;  // std dev = 0.451, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.06154539795922043;  // std dev = 0.105, 61.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */


Results
   AUC ROC   = 0.945095
   AUC PR    = 0.413994
   CLL	      = -0.208035
   Precision = 0.21374 at threshold = 0.5
   Recall    = 0.717949
   F1        = 0.329412


Total learning time: 6.107223749160767 seconds
Total inference time: 1.025 seconds
AUC ROC: 0.945095


Results scoring model
   AUC ROC   = 0.966766
   AUC PR    = 0.429286
   CLL	      = -0.222338
   Precision = 0.132075 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.233333


Total scoring time: 0.976 seconds
Parameter learned model CLL: -0.222338


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, B), publication(C, A)', 'true,false': 'ta(D, A, E), publication(F, B)', 'true,false,true': 'tempadvisedby(G, B)', 'true,false,false': 'projectmember(H, B)'}, {'true,true': [0.0, 0, 14], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.816, 1, 2], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [2.07, 6, 15], 'false': [4.47e-08, 66, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, B), publication(C, A)', 'true,false': 'publication(D, A)', 'true,false,true': 'publication(D, E), tempadvisedby(E, F)', 'true,false,false': 'tempadvisedby(G, B), ta(H, G, I)'}, {'true,true': [5.16e-08, 0, 14], 'true,false,true,true': [1.219, 3, 4], 'true,false,true,false': [1.295, 9, 2], 'true,false,false,true': [1.095, 3, 2], 'true,false,false,false': [1.557, 3, 13], 'false': [0.0, 54, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, B), publication(D, A)', 'true,true': 'publication(C, A)', 'true,true,true': 'tempadvisedby(E, B), publication(D, E)', 'true,false': 'publication(F, B)', 'true,false,false': 'publication(G, A)'}, {'true,true,true,true': [0.816, 1, 2], 'true,true,true,false': [0.0, 0, 12], 'true,true,false': [1.138, 4, 2], 'true,false,true': [0.107, 0, 10], 'true,false,false,true': [0.118, 0, 4], 'true,false,false,false': [0.903, 1, 5], 'false': [2.11e-08, 64, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,true': 'tempadvisedby(D, B), ta(E, D, F)', 'true,true,false': 'tempadvisedby(G, B), publication(H, G)', 'true,false': 'publication(I, A), tempadvisedby(J, B)', 'true,false,true': 'publication(I, K), tempadvisedby(K, L)', 'true,false,false': 'tempadvisedby(M, B), publication(N, M)'}, {'true,true,true': [2.98e-08, 0, 8], 'true,true,false,true': [1.262, 3, 3], 'true,true,false,false': [0.0, 0, 3], 'true,false,true,true': [0.804, 1, 3], 'true,false,true,false': [0.224, 7, 0], 'true,false,false,true': [0.778, 2, 1], 'true,false,false,false': [2.459, 9, 17], 'false': [2.58e-08, 57, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,true': 'tempadvisedby(D, B), ta(E, D, F)', 'true,false': 'publication(G, B)', 'true,false,true': 'tempadvisedby(H, B), ta(I, A, J)', 'true,false,false': 'tempadvisedby(K, B)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.21, 0, 6], 'true,false,true,true': [0.138, 3, 0], 'true,false,true,false': [1.586, 4, 12], 'true,false,false,true': [0.951, 1, 6], 'true,false,false,false': [1.392, 5, 3], 'false': [0.0, 44, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)', 'true,true': 'ta(D, A, E)', 'true,false': 'tempadvisedby(F, B), publication(G, B)', 'true,false,true': 'inphase(A, H), inphase(F, H)', 'true,false,false': 'ta(I, A, J), publication(K, A)'}, {'true,true,true': [0.164, 0, 4], 'true,true,false': [0.08, 0, 10], 'true,false,true,true': [0.88, 4, 1], 'true,false,true,false': [1.015, 4, 4], 'true,false,false,true': [0.954, 2, 2], 'true,false,false,false': [1.61, 3, 14], 'false': [2.11e-08, 44, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,true': 'tempadvisedby(D, B), publication(E, D)', 'true,true,true': 'publication(E, B)', 'true,false': 'tempadvisedby(F, B), publication(G, F)', 'true,false,false': 'ta(H, A, I)'}, {'true,true,true,true': [0.046, 0, 3], 'true,true,true,false': [0.01, 0, 5], 'true,true,false': [0.022, 0, 6], 'true,false,true': [0.793, 5, 1], 'true,false,false,true': [0.635, 1, 4], 'true,false,false,false': [2.36, 11, 16], 'false': [7.45e-09, 52, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, C)', 'true,true': 'publication(E, A), publication(E, B)', 'true,true,true': 'publication(D, B)', 'true,true,false': 'publication(D, B)', 'true,false': 'ta(F, A, G), publication(H, A)', 'true,false,false': 'tempadvisedby(I, B), publication(J, A)'}, {'true,true,true,true': [0.04, 0, 3], 'true,true,true,false': [0.009, 0, 5], 'true,true,false,true': [0.748, 3, 1], 'true,true,false,false': [0.1, 3, 0], 'true,false,true': [0.905, 2, 3], 'true,false,false,true': [0.746, 2, 6], 'true,false,false,false': [1.713, 4, 17], 'false': [1.29e-08, 59, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), tempadvisedby(D, B)', 'true,true': 'publication(C, A)', 'true,true,true': 'publication(E, D), publication(E, B)', 'true,true,false': 'publication(F, A)', 'true,false': 'publication(G, A)', 'true,false,true': 'publication(G, H), ta(I, H, J)', 'true,false,false': 'publication(K, B)'}, {'true,true,true,true': [0.034, 0, 3], 'true,true,true,false': [0.025, 0, 10], 'true,true,false,true': [0.312, 6, 0], 'true,true,false,false': [1.331, 4, 5], 'true,false,true,true': [1.138, 3, 4], 'true,false,true,false': [0.318, 0, 3], 'true,false,false,true': [0.032, 0, 5], 'true,false,false,false': [0.145, 0, 5], 'false': [7.45e-09, 49, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, B), student(A)', 'true': 'ta(D, A, E), publication(F, A)', 'true,true': 'publication(F, B)', 'true,false': 'ta(G, C, H)', 'true,false,true': 'publication(I, A), publication(I, B)', 'false': 'publication(J, A), professor(B)', 'false,true': 'professor(A)', 'false,false': 'professor(B), publication(K, B)'}, {'true,true,true': [0.057, 0, 4], 'true,true,false': [0.708, 5, 1], 'true,false,true,true': [0.018, 0, 7], 'true,false,true,false': [0.928, 3, 2], 'true,false,false': [0.165, 1, 10], 'false,true,true': [0.0, 7, 0], 'false,true,false': [0.795, 1, 4], 'false,false,true': [0.451, 6, 5], 'false,false,false': [0.105, 59, 2]}]]
[{'': [0.18194706994329102, 3.027880976250427e-17], 'true': [-2.5376526277146434e-16, 0.22558593749999967], 'true,false': [0.20408163265306126, 0.1823999999999996], 'true,false,true': [0.0, 0.22222222222222224], 'true,false,false': [0.0, 0.20408163265306084]}, {'': [0.21298395055174615, 0.0], 'true': [1.9032394707859825e-16, 0.24445195150746493], 'true,false': [0.21210492837371692, 0.20297552362516233], 'true,false,true': [0.21224491834486653, 0.15250568654723134], 'true,false,false': [0.24000000000000005, 0.15145086898302046]}, {'': [0.1095531584138879, 6.938893903907228e-18], 'true': [0.13784804810768456, 0.05024318725658761], 'true,true': [0.062222222222222, 0.21601919620443058], 'true,true,true': [0.22222222222222224, -2.590520390792032e-16], 'true,false': [0.0011514676027493565, 0.09272651206602137], 'true,false,false': [0.0034681137559886, 0.13578928701361517]}, {'': [0.20645598767421822, 1.1686558153949016e-17], 'true': [0.14174811302396312, 0.22628043535873496], 'true,false': [0.13426279220265813, 0.24053567573252221], 'true,false,false': [0.2019946252830074, 0.2325500854229712], 'true,true': [1.1102230246251565e-16, 0.22373738367452412], 'true,true,false': [0.26546664882717014, -3.700743415417188e-17], 'true,false,true': [0.16174057863488187, 0.007142639630093983]}, {'': [0.15010817033850113, -5.046468293750712e-18], 'true': [0.0047488830109421966, 0.19807196052537915], 'true,false': [0.16553462095475055, 0.23000617073399873], 'true,false,false': [0.12925728590657973, 0.2421715031286957], 'true,false,true': [0.006305406819099617, 0.1571849528744894], 'true,true': [-4.163336342344337e-17, 0.007328500144865228]}, {'': [0.14117704413380486, 1.0092936587501423e-17], 'true': [0.0033444535205702708, 0.18957435728390482], 'true,false': [0.16721246348792007, 0.17656165054628548], 'true,false,false': [0.22752438746670803, 0.1524201573975136], 'true,false,true': [0.1547378156104136, 0.1287420932425062], 'true,true': [0.006694016469869862, 0.0006322028741288177]}, {'': [0.1460888483173878, 1.0675221390626506e-18], 'true': [0.0023140308862726333, 0.18830221570713554], 'true,false': [0.10479704154669367, 0.19415789900565442], 'true,false,false': [0.08061855369444612, 0.20622545798769243], 'true,true': [0.003046772205030253, 8.192631166228e-05], 'true,true,true': [0.0006961112060057117, 2.016177941166486e-05]}, {'': [0.12102537637664058, 2.8226009100639575e-18], 'true': [0.08360708319884257, 0.1326118402751759], 'true,false': [0.16376943254945892, 0.12376508121965682], 'true,false,false': [0.06953918181803023, 0.13969838271882745], 'true,true': [0.0015927384781145304, 0.08701320307380785], 'true,true,false': [0.13977270395162347, 0.00334741191291571], 'true,true,true': [0.0005235069387013735, 1.556799365685646e-05]}, {'': [0.1080450869900686, 1.1328806373726086e-18], 'true': [0.10113413781374866, 0.09907467550034227], 'true,true': [0.0005855433389896017, 0.1510926824570417], 'true,true,false': [0.016267828734257177, 0.19694840912581546], 'true,false': [0.1772882454595945, 0.003143013063276834], 'true,false,true': [0.18500935473805033, 0.0336262959331623], 'true,false,false': [0.00020529088614053005, 0.004224501532479441], 'true,true,true': [0.00039549036952837846, 6.178871995687618e-05]}, {'': [0.07533688682816514, 0.048988499935860116], 'true': [0.082320968956895, 0.06073407610569879], 'true,true': [0.0008215724849048624, 0.08365016063912738], 'true,false': [0.0800026197548928, 0.02732442115293656], 'true,false,true': [4.6842254608206856e-05, 0.17212193129596046], 'false': [0.07060545330922804, 0.042918814204366725], 'false,true': [-4.956352788505163e-19, 0.1264812757202562], 'false,false': [0.20361260864567293, 0.011064365762881523]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- student(A), professor(B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false;ta(D, A, E), publication(F, B).;true;true
0;true,false,true;tempadvisedby(G, B).;true;true
0;true,false,false;projectmember(H, B).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;true
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- student(A), professor(B).;true;true
2;true;publication(C, B), publication(D, A).;true;true
2;true,true;publication(C, A).;true;true
2;true,true,true;tempadvisedby(E, B), publication(D, E).;true;true
2;true,false;publication(F, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
3;true,true,false;tempadvisedby(G, B), publication(H, G).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,true;ta(D, A, E).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;tempadvisedby(D, B), publication(E, D).;true;true
6;true,true,true;publication(E, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;true
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,true;publication(E, A), publication(E, B).;true;true
7;true,true,true;publication(D, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, B), tempadvisedby(D, B).;true;true
8;true,true;publication(C, A).;true;true
8;true,true,true;publication(E, D), publication(E, B).;true;true
8;true,false;publication(G, A).;true;true
8;true,false,false;publication(K, B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
9;true;ta(D, A, E), publication(F, A).;true;true
9;true,true;publication(F, B).;true;true
9;true,false;ta(G, C, H).;true;true
9;true,false,true;publication(I, A), publication(I, B).;true;true
9;false;publication(J, A), professor(B).;true;true
9;false,true;professor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(I, B), tempadvisedby(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.14185106490048774;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7304865328997829;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.15048980206308532;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.35048980206308533;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.36206276922576275;  // std dev = 1.553, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.7536772676473917;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5665794957580575;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.1691924629774404;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3770114746403404;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.2924727390625011;  // std dev = 1.221, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5505474032388405;  // std dev = 0.920, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1123163781936064;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.345486640430984;  // std dev = 0.813, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.5048709781562356;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41211837979806937;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( publication(L, J) )
%   | | | then return -0.23686734973117574;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08385021352621536;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.39716411028600584;  // std dev = 0.884, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.04614860842272204;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 2.98e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.3773758033810566;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3131092698102269;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.3170562397029745;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08294785410404382;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(K, A) )
%   | | then if ( publication(K, L), tempadvisedby(L, M) )
%   | | | then return 0.20543724762785795;  // std dev = 0.998, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14078557464863153;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return -0.003038321232983354;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1757831511134355;  // std dev = 1.882, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.09269127618926105;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( ta(D, A, E) )
%   | | | then return 0.309705580837263;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.260988943761259;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( publication(C, F), tempadvisedby(F, G) )
%   | | | then return 0.257703009923803;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.024654991598056075;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then return -0.2649068819954231;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( projectmember(J, B) )
%   | | | then return -0.26723525226744943;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13728075200033965;  // std dev = 1.967, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.0851847513883968;  // std dev = 1.97e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, A) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.3503094757771364;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(D, B) )
%   | | | then return 0.1510073027592578;  // std dev = 0.956, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.2708510570633013;  // std dev = 0.284, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( publication(F, B) )
%   | | then return 0.24643628898158812;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.4202115863673354;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(B), publication(G, A) )
%   | then if ( student(A), publication(H, B) )
%   | | then return 0.051972676154572864;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( professor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08612352452818717;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09338953286609339;  // std dev = 0.233, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.19670763792460064;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.17054002689483647;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.39603880799551927;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20607480803130906;  // std dev = 0.736, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | then if ( publication(I, H) )
%   | | | then return -0.06399438779452941;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44091142272945016;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.0957990608246243;  // std dev = 1.149, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04482536315244821;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.07235903429168102;  // std dev = 0.002, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(C, E), publication(F, A) )
%   | | | then return -0.07259203319099186;  // std dev = 0.674, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1422990231385304;  // std dev = 1.555, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | else return -0.3362509469689554;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(G, A) )
%   | | then return 0.16260835956589487;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3579161307623801;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06762337726731721;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then return -0.10880130747747273;  // std dev = 1.015, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(C, A), student(A) )
%   | | | then return 0.14440868525209058;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1240890277745149;  // std dev = 1.050, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(C, H), tempadvisedby(H, I) )
%   | | | then return 0.18404000706112428;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.30371996514410804;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(J, A), professor(B) )
%   | then return 0.09126133552415752;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(K, B) )
%   | | then return 0.008351690487884977;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( professor(B) )
%   | | | then return -0.18733524719042213;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06341995785513099;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */


Results
   AUC ROC   = 0.95225
   AUC PR    = 0.440239
   CLL	      = -0.212174
   Precision = 0.201166 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.327791


Total learning time: 8.67320466041565 seconds
Total inference time: 1.063 seconds
AUC ROC: 0.95225


Results scoring model
   AUC ROC   = 0.970554
   AUC PR    = 0.484318
   CLL	      = -0.219962
   Precision = 0.133858 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.235294


Total scoring time: 0.961 seconds
Refined model CLL: -0.219962


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95225
   AUC PR    = 0.440239
   CLL	      = -0.212174
   Precision = 0.201166 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.327791


Total learning time: 16.717428409576414 seconds
Total inference time: 1.063 seconds
AUC ROC: 0.95225
Total revision time: 16.717428409576414
Best scored revision CLL: -0.219962


Dataset: 21_yeast_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:19
{'AUC ROC': 0.95225, 'AUC PR': 0.440239, 'CLL': -0.212174, 'Precision': [0.201166, 0.5], 'Recall': 0.884615, 'F1': 0.327791, 'Learning time': 16.717428409576414, 'Inference time': 1.063, 'parameter': {'AUC ROC': 0.945095, 'AUC PR': 0.413994, 'CLL': -0.208035, 'Precision': [0.21374, 0.5], 'Recall': 0.717949, 'F1': 0.329412, 'Learning time': 6.107223749160767, 'Inference time': 1.025}}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos  examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048782;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(C, E), student(E) )
%   | | | then return 0.7290358010362374;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3816289395752953;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.11496227290862865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then return 0.6476061669955357;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(C, A) )
%   | | then return 0.5652233191354437;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.09766298119202152;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5975021324969048;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( student(B) )
%   | then return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.038626926170700106;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4218730841578718;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.022495287245210292;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.440577723342113;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15475126934915373;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.10583424048536615;  // std dev = 0.111, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.11451356171948956;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5067166574761424;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then return 0.07239372462061844;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.29657527913973525;  // std dev = 0.713, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.019316660405852892;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0954245439221881;  // std dev = 0.078, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, E), ta(F, E, G) )
%   | | then return 0.24595272141722158;  // std dev = 0.654, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.20755753780327874;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.3227355676862885;  // std dev = 0.213, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.361089844749453;  // std dev = 0.367, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.32225563505370797;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15415605149689868;  // std dev = 0.515, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08832510763618871;  // std dev = 0.095, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.15923026808927673;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( publication(G, F) )
%   | | | then return 0.31063821450469137;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2593826453070169;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(H, A), publication(H, B) )
%   | | | then return 0.19430544519338946;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1987276644060646;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08036120162616296;  // std dev = 0.064, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | then return 0.013898268693267851;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(H, A) )
%   | | then return 0.30324522113508345;  // std dev = 0.183, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07399767243158088;  // std dev = 0.506, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( publication(I, A), professor(B) )
%   | then if ( tempadvisedby(J, B) )
%   | | then return 0.013793394534449943;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.12762961684197252;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( professor(B) )
%   | | then return -0.2109534064929117;  // std dev = 1.045, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.07245624035262994;  // std dev = 1.05e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, A) )
%   then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | then return -0.439766318700954;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.058069513587285605;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.0677350416995144;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(I, A) )
%   | | then if ( publication(I, J), ta(K, J, L) )
%   | | | then return 0.19643473442518108;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24013148804360465;  // std dev = 0.318, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.051879957780149775;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.07048210528909912;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.07392828454371957;  // std dev = 0.090, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( tempadvisedby(D, B), publication(C, D) )
%   | then if ( publication(E, A) )
%   | | then return -0.15588735076292037;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.12916325774217957;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(C, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.20795086045177943;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11900378508286442;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.20077511284044094;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.278361113753087;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( professor(B) )
%   | then return -0.2047557639520214;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06330080956349726;  // std dev = 0.000718, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.936942
   AUC PR    = 0.210567
   CLL	      = -0.270723
   Precision = 0.127389 at threshold = 0.5
   Recall    = 0.860215
   F1        = 0.221914


Total learning time: 4.101487159729004 seconds
Total inference time: 1.197 seconds
AUC ROC: 0.936942


Results scoring model
   AUC ROC   = 0.987977
   AUC PR    = 0.828393
   CLL	      = -0.185471
   Precision = 0.413043 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.575758


Total scoring time: 0.564 seconds
Parameter learned model CLL: -0.185471


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)', 'true,false': 'publication(D, A)', 'true,false,false': 'tempadvisedby(E, B), ta(F, E, G)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [1.155, 2, 4], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.816, 1, 2], 'false': [0.0, 25, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B)', 'true,true': 'tempadvisedby(D, B), publication(C, D)', 'true,true,false': 'publication(C, E), student(E)'}, {'true,true,true': [1.095, 2, 3], 'true,true,false,true': [0.081, 0, 13], 'true,true,false,false': [1.095, 2, 3], 'true,false': [0.816, 2, 1], 'false': [0.0, 37, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, B)', 'true': 'tempadvisedby(D, B), ta(E, A, F)', 'true,false': 'publication(C, A)', 'true,false,false': 'publication(G, A)', 'false': 'student(B)'}, {'true,true': [0.172, 0, 6], 'true,false,true': [0.091, 0, 8], 'true,false,false,true': [0.846, 3, 1], 'true,false,false,false': [0.09, 0, 4], 'false,true': [7.45e-09, 24, 0], 'false,false': [0.894, 4, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,false': 'publication(D, A), tempadvisedby(E, B)', 'true,false,false': 'tempadvisedby(F, B), ta(G, F, H)'}, {'true,true': [0.1, 0, 9], 'true,false,true': [1.081, 3, 2], 'true,false,false,true': [0.109, 0, 5], 'true,false,false,false': [1.337, 4, 4], 'false': [0.111, 38, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'ta(C, A, D), publication(E, B)', 'true,true': 'tempadvisedby(F, B), ta(G, F, H)', 'true,false': 'tempadvisedby(I, B), publication(J, I)', 'true,false,false': 'publication(K, A)'}, {'true,true,true': [0.736, 1, 3], 'true,true,false': [0.245, 0, 6], 'true,false,true': [0.812, 1, 2], 'true,false,false,true': [0.713, 1, 7], 'true,false,false,false': [0.699, 1, 2], 'false': [0.078, 26, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, A)', 'true,true': 'publication(D, E), ta(F, E, G)', 'true,false': 'publication(H, A)', 'true,false,true': 'publication(H, I), ta(J, I, K)', 'true,false,false': 'tempadvisedby(L, B), ta(M, L, N)'}, {'true,true,true': [0.654, 1, 5], 'true,true,false': [0.547, 3, 1], 'true,false,true,true': [0.213, 0, 3], 'true,false,true,false': [0.367, 0, 4], 'true,false,false,true': [0.091, 0, 5], 'true,false,false,false': [0.515, 1, 2], 'false': [0.095, 38, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), ta(D, A, E)', 'true,false': 'tempadvisedby(F, B)', 'true,false,true': 'publication(G, F)', 'true,false,false': 'publication(H, A), publication(H, B)'}, {'true,true': [0.88, 1, 5], 'true,false,true,true': [0.033, 0, 3], 'true,false,true,false': [0.131, 0, 6], 'true,false,false,true': [0.005, 0, 4], 'true,false,false,false': [0.641, 1, 2], 'false': [0.064, 28, 0]}], ['advisedby(A, B)', {'': 'professor(B), ta(C, A, D)', 'true': 'tempadvisedby(E, B), ta(F, E, G)', 'true,false': 'publication(H, A)', 'false': 'publication(I, A), professor(B)', 'false,true': 'tempadvisedby(J, B)', 'false,false': 'professor(B)'}, {'true,true': [0.649, 1, 3], 'true,false,true': [0.183, 0, 4], 'true,false,false': [0.506, 1, 2], 'false,true,true': [0.749, 1, 3], 'false,true,false': [0.713, 1, 5], 'false,false,true': [1.045, 3, 3], 'false,false,false': [1.05e-08, 32, 0]}], ['advisedby(A, B)', {'': 'ta(C, A, D), publication(E, A)', 'true': 'tempadvisedby(F, B), ta(G, F, H)', 'true,false': 'professor(B)', 'false': 'professor(B), student(A)', 'false,true': 'publication(I, A)', 'false,true,true': 'publication(I, J), ta(K, J, L)', 'false,true,false': 'tempadvisedby(M, B), ta(N, M, P)'}, {'true,true': [0.721, 4, 1], 'true,false,true': [0.851, 1, 4], 'true,false,false': [0.0, 4, 0], 'false,true,true,true': [0.088, 0, 3], 'false,true,true,false': [0.318, 0, 5], 'false,true,false,true': [0.97, 1, 5], 'false,true,false,false': [0.692, 2, 2], 'false,false': [0.09, 30, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, B)', 'true': 'tempadvisedby(D, B), publication(C, D)', 'true,true': 'publication(E, A)', 'true,false': 'publication(C, A)', 'true,false,true': 'tempadvisedby(F, B)', 'true,false,false': 'tempadvisedby(G, B), ta(H, G, I)', 'false': 'professor(B)'}, {'true,true,true': [0.523, 3, 1], 'true,true,false': [0.292, 1, 2], 'true,false,true,true': [0.096, 0, 3], 'true,false,true,false': [0.016, 0, 5], 'true,false,false,true': [0.046, 0, 3], 'true,false,false,false': [0.041, 0, 5], 'false,true': [0.808, 2, 1], 'false,false': [0.000718, 21, 0]}]]
[{'': [0.11342155009451807, -1.3322676295501878e-17], 'true': [-2.9605947323337506e-16, 0.16836734693877536], 'true,false': [0.22222222222222213, 0.10937499999999978], 'true,false,false': [0.0, 0.22222222222222224]}, {'': [0.17033793361693547, 0.0], 'true': [0.1402553718110794, 0.22222222222222224], 'true,true': [0.24000000000000005, 0.09124269022771091], 'true,true,false': [0.0005029160402525434, 0.24]}, {'': [0.10807548490390886, 0.028361018122154982], 'true': [0.004907917351226236, 0.1310496863868331], 'true,false': [0.001045196059071385, 0.2113459513873975], 'true,false,false': [0.17904618616168094, 0.00201844896804515], 'false': [2.3129646346357427e-18, 0.15999999999999998]}, {'': [0.14317722648798195, 0.0003232780132137035], 'true': [0.0011056637192963237, 0.1954962116710544], 'true,false': [0.23382513949415623, 0.1578453601884626], 'true,false,false': [0.002385444098968925, 0.22358597628201565]}, {'': [0.12488257766086049, 0.0002310418727062216], 'true': [0.09710581824859525, 0.13396136167461875], 'true,false': [0.21952854783794604, 0.10589520038438147], 'true,false,false': [0.06358054573496363, 0.16282712187697185], 'true,true': [0.13542602300719775, 0.010029707747752617]}, {'': [0.08343311617628156, 0.00023987917792953355], 'true': [0.12199950810561866, 0.035718794407694016], 'true,true': [0.07127934307027196, 0.07467682252769148], 'true,false': [0.026072006284274862, 0.04075354828717105], 'true,false,false': [0.001657618957863183, 0.08825251175770116], 'true,false,true': [0.015177535153909441, 0.033612409388175446]}, {'': [0.05744032459173387, 0.00014471563958084327], 'true': [0.1290795852635493, 0.028736381663081338], 'true,false': [0.002628438571898601, 0.05867965314631747], 'true,false,false': [6.8387617467441375e-06, 0.1368988974555937], 'true,false,true': [0.0003730280429097843, 0.002880432711800468]}, {'': [0.08124726706352935, 0.05283206743837147], 'true': [0.1053271750594614, 0.05420788445560384], 'true,false': [0.008381399855183297, 0.08527875615907991], 'false': [0.11001668920169325, 0.03129936105823118], 'false,true': [0.14027841229067295, 0.08465873293867439], 'false,false': [0.1820764740462244, 3.469446951953614e-18]}, {'': [0.13627395758538213, 0.044501083221328425], 'true': [0.10404146380995964, 0.08443244508071834], 'true,false': [0.1449442739759999, 0.0], 'false': [0.0990807237851538, 0.00026876280368176206], 'false,true': [0.014071324503572853, 0.14541842619390927], 'false,true,false': [0.15667262044759428, 0.11955365012624403], 'false,true,true': [0.0025708202953931883, 0.020255599674684665]}, {'': [0.03665078696643211, 0.029410935556923114], 'true': [0.071158039954444, 0.004812639522365561], 'true,true': [0.06840516970560256, 0.028397762528635778], 'false': [0.2177789966244895, 2.4532138343894932e-08], 'true,false': [0.003036529881781696, 0.001893224646620291], 'true,false,true': [0.003070279595742511, 4.943672214892947e-05], 'true,false,false': [0.0007198032981722511, 0.000339932129082654]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- student(A), professor(B).;true;true
0;true;publication(C, A), publication(C, B).;true;true
0;true,false;publication(D, A).;true;true
0;true,false,false;tempadvisedby(E, B), ta(F, E, G).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, B).;true;true
1;true,true;tempadvisedby(D, B), publication(C, D).;true;true
1;true,true,false;publication(C, E), student(E).;true;true
2;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
2;true;tempadvisedby(D, B), ta(E, A, F).;true;true
2;true,false;publication(C, A).;true;true
2;true,false,false;publication(G, A).;true;true
2;false;student(B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;publication(D, A), tempadvisedby(E, B).;true;true
3;true,false,false;tempadvisedby(F, B), ta(G, F, H).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;true
5;true;tempadvisedby(C, B), publication(D, A).;true;true
5;true,false;publication(H, A).;true;true
5;true,false,false;tempadvisedby(L, B), ta(M, L, N).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), ta(D, A, E).;true;true
6;true,false;tempadvisedby(F, B).;true;true
6;true,false,true;publication(G, F).;true;true
6;true,false,false;publication(H, A), publication(H, B).;true;true
7;;advisedby(A, B) :- professor(B), ta(C, A, D).;true;true
7;false;publication(I, A), professor(B).;true;true
7;false,false;professor(B).;true;true
8;;advisedby(A, B) :- ta(C, A, D), publication(E, A).;true;true
8;true;tempadvisedby(F, B), ta(G, F, H).;true;true
8;true,false;professor(B).;true;true
8;false;professor(B), student(A).;true;true
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;tempadvisedby(D, B), publication(C, D).;true;true
9;true,false;publication(C, A).;true;true
9;true,false,true;tempadvisedby(F, B).;true;true
9;true,false,false;tempadvisedby(G, B), ta(H, G, I).;true;true
9;false;professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.7462168538235878;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24019192133240144;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.008741135785635002;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5538968194172128;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.27846298788959095;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6336237142482494;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.32328563302653207;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.41624832546004376;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49982020429545004;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(G, A), publication(G, B) )
%   | | then return 0.41657286686166095;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.3544847456470837;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.15266262883502904;  // std dev = 1.012, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.10159632948783634;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, B), publication(D, A) )
%   | | then return 0.3198569880495294;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.17591916329424415;  // std dev = 1.008, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.14499029011875425;  // std dev = 1.104, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.4414552346694533;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30025322692105666;  // std dev = 0.741, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926103;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.2545904943114717;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, C, F) )
%   | | | then return -0.538199190350391;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.00384277351362132;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.2945968458363354;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37554943852595296;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.3127461224111019;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06918707524729864;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.20934768915334107;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, D, F) )
%   | | | then return -0.352893703082961;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05818393421848678;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.19399783444491117;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3172170522586574;  // std dev = 0.230, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.03997340077653214;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( ta(E, A, F) )
%   | | then return 0.18213266989060237;  // std dev = 0.580, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(D, B) )
%   | | | then return 0.17776516447400903;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2790184075806288;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then return -0.07523173744621803;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.3296787345718384;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1797783963783177;  // std dev = 0.743, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, D), student(D) )
%   | then if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( sameperson(A, D) )
%   | | | then return 0.15225249252353223;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1259723777020542;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.1421105795547506;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23078656316643412;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31322530588980474;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( ta(G, A, H) )
%   | then if ( publication(I, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.2539970316433956;  // std dev = 0.508, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( publication(J, B) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.06723781678447445;  // std dev = 0.607, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A) )
%   | | then return 0.1336236985756843;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19403662153450488;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.16151191732223968;  // std dev = 1.062, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.16496030165002418;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08559452762402527;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06688003513659696;  // std dev = 0.047, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.948513
   AUC PR    = 0.248712
   CLL	      = -0.249777
   Precision = 0.148352 at threshold = 0.5
   Recall    = 0.870968
   F1        = 0.253521


Total learning time: 4.6602137088775635 seconds
Total inference time: 1.218 seconds
AUC ROC: 0.948513


Results scoring model
   AUC ROC   = 0.983871
   AUC PR    = 0.726142
   CLL	      = -0.17571
   Precision = 0.44186 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.603175


Total scoring time: 0.539 seconds
Refined model CLL: -0.17571


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948513
   AUC PR    = 0.248712
   CLL	      = -0.249777
   Precision = 0.148352 at threshold = 0.5
   Recall    = 0.870968
   F1        = 0.253521


Total learning time: 9.864700868606567 seconds
Total inference time: 1.218 seconds
AUC ROC: 0.948513
Total revision time: 9.864700868606567
Best scored revision CLL: -0.17571


Dataset: 21_yeast_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:32
{'AUC ROC': 0.948513, 'AUC PR': 0.248712, 'CLL': -0.249777, 'Precision': [0.148352, 0.5], 'Recall': 0.870968, 'F1': 0.253521, 'Learning time': 9.864700868606567, 'Inference time': 1.218, 'parameter': {'AUC ROC': 0.936942, 'AUC PR': 0.210567, 'CLL': -0.270723, 'Precision': [0.127389, 0.5], 'Recall': 0.860215, 'F1': 0.221914, 'Learning time': 4.101487159729004, 'Inference time': 1.197}}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos  examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5221908734495392;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.13135176284839997;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.2801367544392185;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5844182622594182;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.668813788513789;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11407882288121214;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.4354985337500669;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5195816731494746;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10669438424340189;  // std dev = 0.101, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.05940892472236934;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.3763723703970883;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09162309354272985;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.35522970724157854;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1261406872438308;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( professor(A) )
%   | then return -0.15564836443869065;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08427744731229246;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.09866148756518012;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.26798676706343166;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07918480574953984;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then return 0.22712728708955243;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(E, B), student(A) )
%   | then return -0.2849201588022636;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B), student(A) )
%   | | then return 0.2196839785483575;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07508013402962105;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B) )
%   then return 0.24933268466916655;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(D, A, E), publication(F, B) )
%   | then return -0.235763838486627;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( student(B) )
%   | | then return -0.06643755409994842;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.1078601580510578;  // std dev = 0.347, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then return 0.20769082524033103;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(D, A) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.2844095916169574;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(A) )
%   | | | then return -0.07218640212655286;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.028394537203644297;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.17024521235389675;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.061971556364610846;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.906879
   AUC PR    = 0.123965
   CLL	      = -0.34279
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.8793036937713623 seconds
Total inference time: 0.974 seconds
AUC ROC: 0.906879


Results scoring model
   AUC ROC   = 0.982906
   AUC PR    = 0.739538
   CLL	      = -0.169012
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.169012


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B)', 'true': 'tempadvisedby(C, B), ta(D, A, E)', 'true,false': 'tempadvisedby(F, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true': [0.816, 2, 1], 'true,false,false': [0.913, 1, 5], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), ta(D, A, E)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.423, 2, 6], 'false': [0.054, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A)', 'true,false': 'ta(D, A, E)'}, {'true,true': [0.783, 1, 2], 'true,false,true': [0.071, 0, 3], 'true,false,false': [0.091, 0, 4], 'false': [0.036, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'ta(C, A, D), tempadvisedby(E, B)'}, {'true,true': [0.061, 0, 3], 'true,false': [0.124, 0, 6], 'false': [0.101, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B)', 'true': 'tempadvisedby(C, B)'}, {'true,true': [1.095, 2, 4], 'true,false': [0.081, 0, 5], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B)', 'false': 'professor(A)'}, {'true,true': [0.133, 0, 4], 'true,false': [0.919, 1, 5], 'false,true': [0.123, 3, 0], 'false,false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'tempadvisedby(C, B)'}, {'true,true': [0.819, 1, 4], 'true,false': [0.069, 0, 5], 'false': [0.036, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), ta(C, A, D)', 'false': 'tempadvisedby(E, B), student(A)', 'false,false': 'professor(B), student(A)'}, {'true': [0.047, 0, 4], 'false,true': [0.781, 2, 1], 'false,false,true': [0.061, 0, 4], 'false,false,false': [0.032, 11, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, B)', 'false': 'ta(D, A, E), publication(F, B)', 'false,false': 'student(B)'}, {'true': [0.199, 0, 4], 'false,true': [0.736, 2, 1], 'false,false,true': [0.007, 15, 0], 'false,false,false': [0.347, 1, 4]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, B), student(A)', 'false': 'publication(D, A)', 'false,true': 'ta(E, A, F)', 'false,true,false': 'professor(A)', 'false,false': 'professor(B)'}, {'true': [0.178, 0, 4], 'false,true,true': [0.541, 3, 0], 'false,true,false,true': [0.057, 5, 0], 'false,true,false,false': [0.225, 2, 1], 'false,false,true': [0.055, 0, 4], 'false,false,false': [0.009, 6, 0]}]]
[{'': [0.18749999999999978, -1.4802973661668754e-17], 'true': [1.4802973661668753e-16, 0.22222222222222213], 'true,false': [0.22222222222222224, 0.1388888888888887]}, {'': [0.13759016688736603, 0.00020936470639222604], 'true': [0.0, 0.17857182489735995]}, {'': [0.09001457132679773, 8.28407385318388e-05], 'true': [0.2045423556780909, 0.003652769082265195], 'true,false': [0.0016880171312911123, 0.0020737881090304167]}, {'': [0.0036920907286549388, 0.0005710826110960246], 'true': [0.0012532873519124725, 0.002554834306606043]}, {'': [0.1345755474224324, 6.1679056923619804e-18], 'true': [0.1999729764345111, 0.0012990912112158747]}, {'': [0.09871736164317811, 0.0013462086895985736], 'true': [0.004393452626399674, 0.14060725602095236], 'false': [0.005057339845935875, -6.1679056923619804e-18]}, {'': [0.07474786666976732, 0.0001024100785976331], 'true': [0.13421200024783622, 0.0009482079531178856]}, {'': [0.0005498993746247127, 0.059897516810013506], 'false': [0.20352586146036958, 0.017305211395122127], 'false,false': [0.0009165236077151029, 9.516567653763269e-05]}, {'': [0.009893057923082996, 0.038913412120385536], 'false': [0.18080607342968913, 0.01171733292170785], 'false,false': [3.721023433142512e-06, 0.02407339927072569]}, {'': [0.00791774837913483, 0.034660213152167385], 'false': [0.045632264555972225, 0.013248576552804498], 'false,true': [0.09757421172797502, 0.009116618635828246], 'false,false': [0.0007484127461635411, 1.2168020939190097e-05], 'false,true,false': [0.000652404498025523, 0.016900813850992288]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B).;true;true
0;true;tempadvisedby(C, B), ta(D, A, E).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;tempadvisedby(C, B), ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A).;true;true
2;true,false;ta(D, A, E).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;ta(C, A, D), tempadvisedby(E, B).;true;true
4;;advisedby(A, B) :- professor(B).;true;true
4;true;tempadvisedby(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;true
5;false;professor(A).;true;true
6;;advisedby(A, B) :- student(A), professor(B).;true;true
6;true;tempadvisedby(C, B).;true;true
7;;advisedby(A, B) :- professor(B), ta(C, A, D).;true;true
7;false;tempadvisedby(E, B), student(A).;true;true
7;false,false;professor(B), student(A).;true;true
8;;advisedby(A, B) :- tempadvisedby(C, B).;true;true
8;false;ta(D, A, E), publication(F, B).;true;true
8;false,false;student(B).;true;true
9;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
9;false;publication(D, A).;true;true
9;false,true;ta(E, A, F).;true;true
9;false,true,false;professor(A).;true;true
9;false,false;professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.7580193346218546;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.09135266795518789;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1409528334544568;  // std dev = 0.208, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.5947969362557473;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3822571115106389;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1107794604744632;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.4474534419156601;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5282655365069245;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( professor(A) )
%   | then return -0.1581688928027929;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10032818730368144;  // std dev = 8.33e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.15365960427731856;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4049926752229105;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( student(A) )
%   | then return -0.09162846097246334;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.15715364553023556;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.33911856698700227;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2943824411704098;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, B) )
%   | then return -0.11878300277263906;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08332981925526912;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.26855244253438504;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23722425840524583;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( publication(E, B), publication(E, A) )
%   | then return -0.12874558616857348;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07491500286864501;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then return 0.21969949745448394;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(E, B) )
%   | then return -0.2532781332844776;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( professor(B) )
%   | | then return 0.1887615115426129;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07152757604972425;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then return 0.1846973069261637;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(E, A) )
%   | then if ( publication(F, B) )
%   | | then return 0.0133652434742675;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.06537310551282617;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( tempadvisedby(G, B) )
%   | | then return -0.388478451043929;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( professor(B) )
%   | | | then return 0.16153659641891627;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06755462367203492;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return -0.1110628787594129;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19377985837776987;  // std dev = 0.196, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( sameperson(A, B) )
%   | then return -0.1033053729125185;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06257739939798002;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.906434
   AUC PR    = 0.11954
   CLL	      = -0.380905
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.9763493537902832 seconds
Total inference time: 1.006 seconds
AUC ROC: 0.906434


Results scoring model
   AUC ROC   = 0.98779
   AUC PR    = 0.903864
   CLL	      = -0.180003
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.368 seconds
Refined model CLL: -0.180003


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906879
   AUC PR    = 0.123965
   CLL	      = -0.34279
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 4.596653047561646 seconds
Total inference time: 0.974 seconds
AUC ROC: 0.906879
Total revision time: 4.596653047561646
Best scored revision CLL: -0.169012


Dataset: 21_yeast_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:38
{'AUC ROC': 0.906879, 'AUC PR': 0.123965, 'CLL': -0.34279, 'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'Learning time': 4.596653047561646, 'Inference time': 0.974, 'parameter': {'AUC ROC': 0.906879, 'AUC PR': 0.123965, 'CLL': -0.34279, 'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'Learning time': 1.8793036937713623, 'Inference time': 0.974}}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos  examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.14185106490048774;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7313336960296929;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.5409724781410895;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.773974074073573;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.1842553658468876;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.44064074074023957;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839136;  // std dev = 2.11e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.3024358327452801;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07226480708954974;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( publication(C, G), student(G) )
%   | | | then return 0.502995502022618;  // std dev = 1.643, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.04627874960104331;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( publication(H, A) )
%   | then if ( ta(I, A, J) )
%   | | then if ( ta(K, B, L) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.13267767457974497;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13372317120988259;  // std dev = 0.059, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.16171822227838722;  // std dev = 0.116, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.1106103750329116;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4589351380306894;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(F, A, G) )
%   | | then if ( ta(F, H, G), publication(I, H) )
%   | | | then return 0.23216668936533152;  // std dev = 1.289, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4819732091582235;  // std dev = 0.931, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return -0.011419950414029767;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12867326792431263;  // std dev = 1.534, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return -0.1003451228156094;  // std dev = 0.039, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.44317341616517414;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G), publication(H, B) )
%   | | | then return 0.3071306389893228;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06013599590154398;  // std dev = 2.024, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( ta(I, A, J), publication(K, A) )
%   | | | then return 0.451119937223785;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24121625318974285;  // std dev = 1.431, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else return -0.09289514606324689;  // std dev = 0.054, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( publication(C, F), publication(D, F) )
%   | | | then return 0.3419834511641081;  // std dev = 0.285, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0655472322857068;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(C, G), tempadvisedby(H, G) )
%   | | | then return -0.23202989893948173;  // std dev = 1.492, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.23486387782218934;  // std dev = 0.529, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(I, A, J), publication(K, B) )
%   | | then if ( ta(I, L, M), tempadvisedby(L, N) )
%   | | | then return 0.39081871305708077;  // std dev = 0.237, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08924851301346626;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.48303055922468074;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08541568513057105;  // std dev = 0.050, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(D, A), ta(E, A, F) )
%   | then if ( ta(G, H, F), publication(C, H) )
%   | | then if ( publication(D, B) )
%   | | | then return -0.172334282023084;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4450055504845524;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.4889974278217217;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( tempadvisedby(I, B), student(A) )
%   | | then if ( publication(J, I), publication(K, A) )
%   | | | then return 0.012301215832289733;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27216919261176153;  // std dev = 1.160, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( ta(L, A, M) )
%   | | | then return -0.06781342438415588;  // std dev = 1.423, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.11303991616722768;  // std dev = 1.186, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.21070789192614758;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07733779440940172;  // std dev = 0.023, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return -0.1676444264799404;  // std dev = 1.027, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(E, A), publication(E, B) )
%   | | then return 0.24562577321507034;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.039525672076499874;  // std dev = 1.646, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2040057638454961;  // std dev = 1.238, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.0745295653054776;  // std dev = 0.047, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.23373620998620495;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3783690081658304;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( student(A), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return 0.0161568849124733;  // std dev = 1.113, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.23183508605322295;  // std dev = 0.725, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( professor(A) )
%   | | | then return -0.08167842897309724;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03285219722238391;  // std dev = 1.462, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( professor(B) )
%   | then return -0.20581108942135443;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.067511307091679;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1885459218928849;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return -0.007457314586621958;  // std dev = 1.268, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1299526113444511;  // std dev = 0.964, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.1315603535708935;  // std dev = 0.829, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06050988961336321;  // std dev = 1.326, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.06516411160327157;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 0.95419
   AUC PR    = 0.478141
   CLL	      = -0.218162
   Precision = 0.212838 at threshold = 0.5
   Recall    = 0.7875
   F1        = 0.335106


Total learning time: 9.410065412521362 seconds
Total inference time: 1.427 seconds
AUC ROC: 0.95419


Results scoring model
   AUC ROC   = 0.963903
   AUC PR    = 0.380002
   CLL	      = -0.229005
   Precision = 0.174419 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.292683


Total scoring time: 1.0 seconds
Parameter learned model CLL: -0.229005


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, B), publication(C, A)', 'true,true': 'publication(C, D), tempadvisedby(E, D)', 'true,false': 'publication(F, A), publication(G, B)', 'true,false,true': 'ta(H, A, I)', 'true,false,false': 'tempadvisedby(J, B), publication(K, B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.894, 1, 4], 'true,false,true,true': [1.095, 2, 3], 'true,false,true,false': [1.265, 8, 2], 'true,false,false,true': [1.732, 6, 6], 'true,false,false,false': [0.949, 1, 9], 'false': [1.83e-08, 47, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, B), publication(C, A)', 'true,false': 'ta(D, A, E)', 'true,false,true': 'ta(D, F, G), publication(H, F)', 'true,false,false': 'publication(I, A)'}, {'true,true': [0.064, 0, 13], 'true,false,true,true': [1.506, 3, 10], 'true,false,true,false': [0.07, 0, 4], 'true,false,false,true': [1.155, 4, 2], 'true,false,false,false': [1.158, 2, 4], 'false': [2.11e-08, 66, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, B)', 'true': 'student(A)', 'true,true': 'ta(D, A, E), tempadvisedby(F, B)', 'true,true,true': 'publication(C, A)', 'true,true,false': 'publication(C, G), student(G)', 'false': 'publication(H, A)', 'false,true': 'ta(I, A, J)', 'false,true,true': 'ta(K, B, L)'}, {'true,true,true,true': [0.866, 1, 3], 'true,true,true,false': [1.753, 8, 5], 'true,true,false,true': [1.643, 4, 23], 'true,true,false,false': [0.712, 2, 1], 'true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.6, 2, 1], 'false,true,false': [0.059, 26, 0], 'false,false': [0.116, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, B), publication(C, A)', 'true,true': 'tempadvisedby(D, B), publication(E, D)', 'true,false': 'ta(F, A, G)', 'true,false,true': 'ta(F, H, G), publication(I, H)', 'true,false,false': 'publication(J, A), tempadvisedby(K, B)'}, {'true,true,true': [0.776, 1, 2], 'true,true,false': [0.079, 0, 11], 'true,false,true,true': [1.289, 3, 5], 'true,false,true,false': [0.931, 1, 9], 'true,false,false,true': [0.87, 3, 1], 'true,false,false,false': [1.534, 5, 5], 'false': [0.039, 47, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, C)', 'true,false': 'tempadvisedby(E, B)', 'true,false,true': 'ta(F, E, G), publication(H, B)', 'true,false,false': 'ta(I, A, J), publication(K, A)'}, {'true,true': [0.104, 0, 3], 'true,false,true,true': [0.799, 1, 4], 'true,false,true,false': [2.024, 10, 10], 'true,false,false,true': [0.16, 0, 3], 'true,false,false,false': [1.431, 4, 13], 'false': [0.054, 54, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(D, B)', 'true,true': 'tempadvisedby(E, B)', 'true,true,true': 'publication(C, F), publication(D, F)', 'true,true,false': 'publication(C, G), tempadvisedby(H, G)', 'true,false': 'ta(I, A, J), publication(K, B)', 'true,false,true': 'ta(I, L, M), tempadvisedby(L, N)'}, {'true,true,true,true': [0.285, 0, 9], 'true,true,true,false': [0.816, 2, 1], 'true,true,false,true': [1.492, 7, 3], 'true,true,false,false': [0.529, 1, 5], 'true,false,true,true': [0.237, 0, 7], 'true,false,true,false': [1.023, 2, 3], 'true,false,false': [0.092, 0, 5], 'false': [0.05, 52, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, B)', 'true': 'publication(D, A), ta(E, A, F)', 'true,true': 'ta(G, H, F), publication(C, H)', 'true,true,true': 'publication(D, B)', 'true,false': 'tempadvisedby(I, B), student(A)', 'true,false,true': 'publication(J, I), publication(K, A)', 'true,false,false': 'ta(L, A, M)', 'false': 'professor(B)'}, {'true,true,true,true': [1.304, 3, 4], 'true,true,true,false': [0.125, 0, 3], 'true,true,false': [0.198, 3, 0], 'true,false,true,true': [0.542, 1, 2], 'true,false,true,false': [1.16, 2, 10], 'true,false,false,true': [1.423, 3, 6], 'true,false,false,false': [1.186, 5, 7], 'false,true': [0.769, 2, 1], 'false,false': [0.023, 42, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), publication(D, C)', 'true,false': 'publication(E, A), publication(E, B)', 'true,false,false': 'publication(F, A)'}, {'true,true': [1.027, 3, 3], 'true,false,true': [0.133, 0, 11], 'true,false,false,true': [1.646, 10, 6], 'true,false,false,false': [1.238, 2, 13], 'false': [0.047, 48, 0]}], ['advisedby(A, B)', {'': 'professor(B), publication(C, B)', 'true': 'ta(D, A, E), tempadvisedby(F, B)', 'true,true': 'publication(C, A)', 'true,false': 'student(A), publication(G, A)', 'true,false,true': 'tempadvisedby(H, B)', 'true,false,false': 'professor(A)', 'false': 'professor(B)'}, {'true,true,true': [0.037, 0, 3], 'true,true,false': [0.103, 0, 5], 'true,false,true,true': [1.113, 4, 6], 'true,false,true,false': [0.725, 1, 8], 'true,false,false,true': [0.0, 6, 0], 'true,false,false,false': [1.462, 3, 10], 'false,true': [0.816, 2, 1], 'false,false': [0.027, 45, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)', 'true,false': 'ta(D, A, E), publication(F, B)', 'true,false,true': 'tempadvisedby(G, B)', 'true,false,false': 'tempadvisedby(H, B), publication(I, B)'}, {'true,true': [0.132, 0, 13], 'true,false,true,true': [1.268, 2, 5], 'true,false,true,false': [0.964, 1, 8], 'true,false,false,true': [0.829, 2, 3], 'true,false,false,false': [1.326, 6, 4], 'false': [0.047, 58, 0]}]]
[{'': [0.22837370242214702, 7.086529944415892e-18], 'true': [0.06632653061224467, 0.2483564645726804], 'true,false': [0.22222222222222202, 0.21694214876033016], 'true,false,true': [0.23999999999999994, 0.16000000000000003], 'true,false,false': [0.25, 0.08999999999999977], 'true,true': [-2.9605947323337506e-16, 0.15999999999999986]}, {'': [0.15365174373552826, 6.7286243916676156e-18], 'true': [0.00031649924758730535, 0.20260959791660224], 'true,false': [0.14351684564035191, 0.2392599616270686], 'true,false,false': [0.22222222222222224, 0.22343097080231258], 'true,false,true': [0.17452989508528166, 0.0012087485800902353]}, {'': [0.18964112514150905, 0.017250885883995263], 'true': [0.1903486640942451, 0.0], 'true,true': [0.23450049929656408, 0.12572451426313422], 'true,true,true': [0.1875, 0.23649661466983554], 'true,true,false': [0.10003636555916161, 0.1691866798506282], 'false': [0.01784927290061396, 0.013422982094373493], 'false,true': [0.04861788957439244, 0.0035132560355196052], 'false,true,true': [-1.982541115402065e-18, 0.12004417178862332]}, {'': [0.16685946628236525, 3.270588966210924e-05], 'true': [0.0638834423595956, 0.20621143144644669], 'true,false': [0.15583045133019613, 0.22615903955071187], 'true,false,false': [0.18906702551971172, 0.23538838521328484], 'true,false,true': [0.20764611955557305, 0.08664311793610065], 'true,true': [0.20070789591813656, 0.0005683664730057023]}, {'': [0.15963658571137565, 5.458706935867413e-05], 'true': [0.003630013642148988, 0.16577554943970205], 'true,false': [0.19912773935917508, 0.10929451695966388], 'true,false,true': [0.12766628625134624, 0.2047918318933204], 'true,false,false': [0.008529029326388438, 0.12046772835046482]}, {'': [0.1593319980637647, 4.842544490922529e-05], 'true': [0.17823829913760506, 0.0908931811361876], 'true,true': [0.07667433132441852, 0.2077909930321224], 'true,true,false': [0.22272963674398386, 0.04664962927561759], 'true,false': [0.11409485615214295, 0.0017040063680864748], 'true,false,true': [0.008054414210308154, 0.2095004666306767], 'true,true,true': [0.009054121914870464, 0.22222222222222218]}, {'': [0.1893791540539086, 0.014271041329187979], 'true': [0.24121539408914028, 0.15834853108984995], 'true,true': [0.25155471564393006, 0.013005931881628574], 'true,true,true': [0.2428126996151216, 0.005176824884093693], 'true,false': [0.12006657511576829, 0.1714840823152847], 'true,false,false': [0.22514977837490546, 0.1172171256468857], 'true,false,true': [0.09792231273584463, 0.11209636763965795], 'false': [0.19729306935183946, 1.2200466794931322e-05]}, {'': [0.13420992089552375, 4.609867966180158e-05], 'true': [0.17584432285735732, 0.11776582578392587], 'true,false': [0.0016048748376991308, 0.15165250282974685], 'true,false,false': [0.1693336473331101, 0.10218226166543891]}, {'': [0.10515997946066019, 0.015025182996912115], 'true': [0.0063893427032675615, 0.11359011624728636], 'true,false': [0.10442718736369569, 0.11535543404203089], 'true,false,false': [0.0, 0.16445410959881895], 'true,false,true': [0.12383228276357902, 0.05838329317518297], 'false': [0.22222222222222224, 1.6620186530885088e-05], 'true,true': [0.0004521845934259046, 0.0021071452031969696]}, {'': [0.12363510946701495, 3.7986844680227495e-05], 'true': [0.0013358538729087903, 0.1682029294705473], 'true,false': [0.16322002767664848, 0.17124775888770566], 'true,false,false': [0.13738780439777298, 0.17588074336038545], 'true,false,true': [0.229734756138884, 0.10322569909563106]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- student(A), professor(B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), tempadvisedby(E, D).;true;true
1;;advisedby(A, B) :- student(A), professor(B).;true;true
1;true;publication(C, B), publication(C, A).;true;true
1;true,false;ta(D, A, E).;true;true
1;true,false,true;ta(D, F, G), publication(H, F).;true;true
2;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
2;true;student(A).;true;true
2;false;publication(H, A).;true;true
2;false,true;ta(I, A, J).;true;true
2;false,true,true;ta(K, B, L).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;tempadvisedby(D, B), publication(E, D).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;true
5;true;publication(C, A), publication(D, B).;true;true
5;true,false;ta(I, A, J), publication(K, B).;true;true
6;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
6;false;professor(B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;true
7;true;tempadvisedby(C, B), publication(D, C).;true;true
7;true,false;publication(E, A), publication(E, B).;true;true
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;ta(D, A, E), tempadvisedby(F, B).;true;true
8;true,true;publication(C, A).;true;true
8;true,false;student(A), publication(G, A).;true;true
8;true,false,false;professor(A).;true;true
8;false;professor(B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5724346493852265;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14185106490048774;  // std dev = 2.98e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.2338308242837324;  // std dev = 1.190, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(C, F), tempadvisedby(F, G) )
%   | | | then return 0.7702320659341353;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.526438835606735;  // std dev = 2.268, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | else return 0.106725502964882;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839136;  // std dev = 1.49e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.6174786744284414;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D), publication(F, A) )
%   | | | then return -0.28740512802712526;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1882417471274151;  // std dev = 1.993, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.6949689307445127;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5132913295343091;  // std dev = 0.900, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.11231637819360642;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4659107391410095;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.16368533479657327;  // std dev = 0.987, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.14400422479845104;  // std dev = 1.270, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.6171139389066453;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23613922908029614;  // std dev = 1.826, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.10159632948783633;  // std dev = 1.49e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, B) )
%   | | then if ( ta(C, G, D), tempadvisedby(G, H) )
%   | | | then return -0.19504674049771906;  // std dev = 0.863, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.458447376436358;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(C, I, D), publication(J, I) )
%   | | | then return -0.04030606506465324;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.25059655749421467;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | then return 0.2930706649921354;  // std dev = 0.307, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(M, B), publication(M, A) )
%   | | | then return 0.3389499309445877;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.496696411223515;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926105;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), ta(G, A, H) )
%   | | then return 0.3599875871976937;  // std dev = 0.279, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.24607780928462678;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( ta(I, A, J) )
%   | | then if ( tempadvisedby(K, B) )
%   | | | then return 0.10902789585262601;  // std dev = 1.343, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.308252248082851;  // std dev = 0.737, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(L, A), publication(L, B) )
%   | | | then return 0.1845606139980518;  // std dev = 0.970, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.03041441234221336;  // std dev = 1.340, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 1.49e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, A), student(A) )
%   | then return 0.2444449583829189;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return -0.13746623595584842;  // std dev = 1.345, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.22732904604602797;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.06259166941468595;  // std dev = 1.433, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.3193406296222318;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( ta(G, A, H), publication(I, A) )
%   | then return 0.01751114795930463;  // std dev = 0.527, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( publication(J, A), student(A) )
%   | | then if ( ta(K, B, L) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.22057705870230887;  // std dev = 0.388, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return -0.047451535798649774;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21023253113498122;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.040353255113911;  // std dev = 1.359, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.18106154534690014;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.2335975292891431;  // std dev = 0.971, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.018335193940229755;  // std dev = 1.482, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07242299339832338;  // std dev = 0.028, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, C) )
%   | | then return 0.035901230802145134;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(E, C, F), publication(G, B) )
%   | | | then return 0.10811399147521054;  // std dev = 0.534, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3216445982268029;  // std dev = 0.416, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(H, A, I) )
%   | | then if ( ta(J, K, I), publication(L, K) )
%   | | | then return 0.06782788788767463;  // std dev = 1.155, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.267432954827329;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(M, A), publication(M, B) )
%   | | | then return 0.1616279050008228;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22681632536576662;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06862139601348612;  // std dev = 0.028, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), publication(D, B) )
%   then if ( publication(E, C) )
%   | then return -0.13421446023171288;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( ta(F, C, G) )
%   | | then return 0.20600565126677695;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(D, A) )
%   | | | then return 0.14118888856186473;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.005300267514016267;  // std dev = 1.205, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( ta(H, A, I), professor(B) )
%   | then if ( ta(J, K, I), publication(L, K) )
%   | | then if ( publication(L, B) )
%   | | | then return 0.11077548192863344;  // std dev = 1.008, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.17353265724630984;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.35384047041601874;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( professor(B), publication(M, A) )
%   | | then return -0.12514402665670105;  // std dev = 0.359, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.05010727040440274;  // std dev = 0.066, 46.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */


Results
   AUC ROC   = 0.956725
   AUC PR    = 0.394245
   CLL	      = -0.217187
   Precision = 0.185 at threshold = 0.5
   Recall    = 0.925
   F1        = 0.308333


Total learning time: 5.7822206020355225 seconds
Total inference time: 1.102 seconds
AUC ROC: 0.956725


Results scoring model
   AUC ROC   = 0.963394
   AUC PR    = 0.364841
   CLL	      = -0.227887
   Precision = 0.165803 at threshold = 0.5
   Recall    = 0.969697
   F1        = 0.283186


Total scoring time: 0.91 seconds
Refined model CLL: -0.227887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956725
   AUC PR    = 0.394245
   CLL	      = -0.217187
   Precision = 0.185 at threshold = 0.5
   Recall    = 0.925
   F1        = 0.308333


Total learning time: 17.102286014556885 seconds
Total inference time: 1.102 seconds
AUC ROC: 0.956725
Total revision time: 17.102286014556885
Best scored revision CLL: -0.227887


Dataset: 21_yeast_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:00:59
{'AUC ROC': 0.956725, 'AUC PR': 0.394245, 'CLL': -0.217187, 'Precision': [0.185, 0.5], 'Recall': 0.925, 'F1': 0.308333, 'Learning time': 17.102286014556885, 'Inference time': 1.102, 'parameter': {'AUC ROC': 0.95419, 'AUC PR': 0.478141, 'CLL': -0.218162, 'Precision': [0.212838, 0.5], 'Recall': 0.7875, 'F1': 0.335106, 'Learning time': 9.410065412521362, 'Inference time': 1.427}}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos  examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | then if ( ta(G, F, E) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(B), student(A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, A) )
%   | | then return 0.7536332866070544;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.47094218664999005;  // std dev = 1.507, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7573841052178191;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), ta(C, A, D) )
%   then if ( tempadvisedby(E, B), publication(F, B) )
%   | then if ( ta(G, H, D), publication(I, H) )
%   | | then return 0.6475731354352346;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7359119447272965;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.34314492546811987;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(J, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.21358268929558846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13440114688806254;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5975925717667688;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( publication(C, B), publication(C, A) )
%   then return 0.3696341937978973;  // std dev = 0.532, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( publication(D, A) )
%   | then if ( professor(B), student(A) )
%   | | then return -0.40844562319968014;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( professor(B), ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.3112594177547426;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12874637708755246;  // std dev = 1.343, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(J, B), student(A) )
%   | | | then return 0.21033972514784954;  // std dev = 0.960, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10851603379785105;  // std dev = 0.794, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.4839791785410022;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.11542059632410902;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2216491789386108;  // std dev = 1.103, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4865153919207597;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09422301584126921;  // std dev = 0.047, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.36002971682161444;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( projectmember(E, B), ta(F, A, G) )
%   | | then return -0.11139130103845123;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.1123136137497926;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1033388085186991;  // std dev = 1.236, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( ta(I, A, J), professor(B) )
%   | then return -0.2447100761021404;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( professor(B) )
%   | | then if ( professor(A), publication(K, A) )
%   | | | then return -0.09397911973127408;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.22575370409788534;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.08463585179263511;  // std dev = 0.000961, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, B) )
%   then if ( ta(F, G, D), publication(H, G) )
%   | then if ( publication(E, G) )
%   | | then return 0.1649508565132087;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(C, G, I) )
%   | | | then return -0.2622142133360702;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10668941741293161;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.45658479786167516;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( publication(J, B), publication(J, A) )
%   | then return 0.07078592209736417;  // std dev = 0.381, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(K, B), professor(B) )
%   | | then return -0.27251051144548644;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(L, A), student(A) )
%   | | | then return -0.2230139061954843;  // std dev = 0.353, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05774132788725578;  // std dev = 0.780, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(D, C, F) )
%   | | then return 0.276423419884596;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, C, E) )
%   | | | then return -0.31900553420221744;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.014985610748177844;  // std dev = 1.180, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.18273343620116314;  // std dev = 0.631, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3412013866679342;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07685840530064088;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( publication(C, B), student(A) )
%   then if ( tempadvisedby(D, B) )
%   | then if ( projectmember(E, B) )
%   | | then return 0.11808664239965976;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.21277253909577595;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34037807869754044;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.02186662921713388;  // std dev = 0.618, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( professor(B), publication(F, A) )
%   | then return -0.2744608318228959;  // std dev = 0.444, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(I, B, J) )
%   | | | then return -0.06903637177216136;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2366557541412404;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( student(A), professor(B) )
%   | | | then return 0.2533794376044936;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0751357924294292;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( publication(C, B), tempadvisedby(D, B) )
%   then if ( projectmember(E, B) )
%   | then return 0.0559549041684026;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(C, A) )
%   | | then return 0.17946448319612407;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21323963011255684;  // std dev = 0.340, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( professor(B), student(A) )
%   | then if ( publication(F, B) )
%   | | then return -0.004968505597083256;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.19295097111749898;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.27990224742831077;  // std dev = 0.742, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.0616741369610681;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.939869
   AUC PR    = 0.3344
   CLL	      = -0.238283
   Precision = 0.133144 at threshold = 0.5
   Recall    = 0.969072
   F1        = 0.234122


Total learning time: 5.79469633102417 seconds
Total inference time: 1.342 seconds
AUC ROC: 0.939869


Results scoring model
   AUC ROC   = 0.97346
   AUC PR    = 0.548777
   CLL	      = -0.22251
   Precision = 0.262295 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.415584


Total scoring time: 0.63 seconds
Parameter learned model CLL: -0.22251


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'hasposition(B, C), student(A)', 'true': 'ta(D, A, E), tempadvisedby(F, B)', 'true,true': 'ta(G, F, E)', 'true,true,false': 'projectmember(H, B)', 'false': 'professor(B), student(A)'}, {'true,true,true': [1.095, 3, 2], 'true,true,false,true': [0.816, 2, 1], 'true,true,false,false': [0.913, 1, 5], 'true,false': [2.98e-08, 0, 7], 'false,true': [0.816, 2, 1], 'false,false': [0.0, 24, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B), ta(D, A, E)', 'true,false': 'publication(F, A)', 'true,false,false': 'publication(G, B)'}, {'true,true': [0.816, 2, 1], 'true,false,true': [0.085, 0, 4], 'true,false,false,true': [1.507, 3, 8], 'true,false,false,false': [0.093, 0, 3], 'false': [0.0, 24, 0]}], ['advisedby(A, B)', {'': 'professor(B), ta(C, A, D)', 'true': 'tempadvisedby(E, B), publication(F, B)', 'true,true': 'ta(G, H, D), publication(I, H)', 'false': 'professor(B), student(A)', 'false,true': 'publication(J, B)', 'false,true,true': 'publication(K, A)'}, {'true,true,true': [0.073, 0, 5], 'true,true,false': [0.11, 0, 3], 'true,false': [0.667, 1, 2], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.866, 3, 1], 'false,true,false': [0.126, 0, 3], 'false,false': [0.0, 30, 0]}], ['advisedby(A, B)', {'': 'publication(C, B), publication(C, A)', 'false': 'publication(D, A)', 'false,true': 'professor(B), student(A)', 'false,false': 'professor(B), ta(E, A, F)', 'false,false,true': 'ta(G, H, F), publication(I, H)', 'false,false,false': 'projectmember(J, B), student(A)'}, {'true': [0.532, 1, 4], 'false,true,true': [0.216, 5, 0], 'false,true,false': [5.27e-09, 13, 0], 'false,false,true,true': [0.872, 1, 4], 'false,false,true,false': [1.343, 3, 4], 'false,false,false,true': [0.96, 1, 3], 'false,false,false,false': [0.794, 12, 1]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'projectmember(C, B)', 'true,false': 'ta(D, A, E), publication(F, A)', 'true,false,false': 'tempadvisedby(G, B)'}, {'true,true': [0.272, 0, 4], 'true,false,true': [0.68, 1, 2], 'true,false,false,true': [1.103, 2, 6], 'true,false,false,false': [0.137, 0, 4], 'false': [0.047, 26, 0]}], ['advisedby(A, B)', {'': 'tempadvisedby(C, B), student(A)', 'true': 'publication(D, B), publication(D, A)', 'true,false': 'projectmember(E, B), ta(F, A, G)', 'true,false,false': 'projectmember(H, B)', 'false': 'ta(I, A, J), professor(B)', 'false,false': 'professor(B)', 'false,false,true': 'professor(A), publication(K, A)'}, {'true,true': [0.072, 0, 3], 'true,false,true': [0.78, 2, 1], 'true,false,false,true': [0.76, 1, 3], 'true,false,false,false': [1.236, 2, 5], 'false,true': [1.104, 3, 2], 'false,false,true,true': [0.04, 5, 0], 'false,false,true,false': [0.4, 1, 2], 'false,false,false': [0.000961, 20, 0]}], ['advisedby(A, B)', {'': 'ta(C, A, D), publication(E, B)', 'true': 'ta(F, G, D), publication(H, G)', 'true,true': 'publication(E, G)', 'true,true,false': 'ta(C, G, I)', 'false': 'publication(J, B), publication(J, A)', 'false,false': 'publication(K, B), professor(B)', 'false,false,false': 'publication(L, A), student(A)'}, {'true,true,true': [0.305, 1, 2], 'true,true,false,true': [0.744, 2, 1], 'true,true,false,false': [0.882, 1, 3], 'true,false': [0.133, 0, 4], 'false,true': [0.381, 2, 2], 'false,false,true': [0.886, 5, 1], 'false,false,false,true': [0.353, 3, 0], 'false,false,false,false': [0.78, 21, 3]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'tempadvisedby(C, B), ta(D, A, E)', 'true,true': 'ta(D, C, F)', 'true,true,false': 'ta(G, C, E)', 'true,false': 'tempadvisedby(H, B)'}, {'true,true,true': [0.079, 0, 3], 'true,true,false,true': [0.818, 3, 1], 'true,true,false,false': [1.18, 3, 4], 'true,false,true': [0.631, 1, 4], 'true,false,false': [0.14, 0, 4], 'false': [0.077, 35, 0]}], ['advisedby(A, B)', {'': 'publication(C, B), student(A)', 'true': 'tempadvisedby(D, B)', 'true,true': 'projectmember(E, B)', 'true,true,false': 'publication(C, A)', 'false': 'professor(B), publication(F, A)', 'false,false': 'ta(G, A, H)', 'false,false,true': 'ta(I, B, J)', 'false,false,false': 'student(A), professor(B)'}, {'true,true,true': [0.829, 1, 2], 'true,true,false,true': [0.052, 0, 3], 'true,true,false,false': [0.158, 0, 5], 'true,false': [0.618, 3, 3], 'false,true': [0.444, 3, 0], 'false,false,true,true': [0.0, 6, 0], 'false,false,true,false': [0.422, 3, 0], 'false,false,false,true': [0.114, 0, 3], 'false,false,false,false': [0.049, 9, 0]}], ['advisedby(A, B)', {'': 'publication(C, B), tempadvisedby(D, B)', 'true': 'projectmember(E, B)', 'true,false': 'publication(C, A)', 'false': 'professor(B), student(A)', 'false,true': 'publication(F, B)', 'false,true,false': 'tempadvisedby(G, B)'}, {'true,true': [0.837, 2, 2], 'true,false,true': [0.046, 0, 3], 'true,false,false': [0.34, 1, 5], 'false,true,true': [0.856, 1, 3], 'false,true,false,true': [0.822, 2, 2], 'false,true,false,false': [0.742, 3, 1], 'false,false': [0.02, 15, 0]}]]
[{'': [0.20408163265306084, 0.03566529492455422], 'true': [0.24489795918367338, 1.2688263138573217e-16], 'true,true': [0.24000000000000005, 0.22222222222222218], 'true,true,false': [0.22222222222222224, 0.1388888888888887], 'false': [0.22222222222222224, -6.938893903907228e-18]}, {'': [0.1782388129243646, -2.3129646346357427e-18], 'true': [0.2222222222222222, 0.14630895040594005], 'true,false': [0.0018127565545844604, 0.17670948366665892], 'true,false,false': [0.2065371179547029, 0.0028744412885215453]}, {'': [0.06599809699496544, 0.07593169237799842], 'false': [0.2353652137485372, -1.8503717077085942e-18], 'false,true': [0.23203631978791323, 0.005326391564155412], 'false,true,true': [0.2222222222222222, 0.18749999999999997], 'true': [0.003998511110605674, 0.14846228537708508], 'true,true': [0.001058928640866874, 0.004020474459874486]}, {'': [0.05670664434341997, 0.12797844848613557], 'false': [0.021476925700365943, 0.169773426385938], 'false,false': [0.2217787614579275, 0.10956878637946031], 'false,false,true': [0.15202867990215768, 0.25772066077781763], 'false,false,false': [0.2301862893948862, 0.04853359205495094], 'false,true': [0.009315023761931496, 2.135044278125301e-18]}, {'': [0.11549231223991756, 8.626420599003101e-05], 'true': [0.018451896837139686, 0.13182334448841607], 'true,false': [0.15432161588741694, 0.11863137906125547], 'true,false,false': [0.1522016249119068, 0.004721480173616094]}, {'': [0.17966510882366102, 0.05447813897222794], 'true': [0.0017093948632246707, 0.20190126723705923], 'true,false': [0.2029600865678647, 0.19142937496114143], 'true,false,false': [0.1442477739830179, 0.2183609999407158], 'false': [0.24378223676997685, 0.015108040576541758], 'false,false': [0.044147491838543516, 4.614108770478742e-08], 'false,false,true': [0.0003178132246918139, 0.053303782048857835]}, {'': [0.16678138659335268, 0.055233511789074735], 'true': [0.17562943377400433, 0.004427690521368238], 'true,true': [0.030977776642351792, 0.22357911741693157], 'true,true,false': [0.18468933736652815, 0.19442221440625018], 'false': [0.036247652976092115, 0.053930166918729865], 'false,false': [0.13071592874996688, 0.029853001476754314], 'false,false,false': [0.04164985610099516, 0.02534339185531871]}, {'': [0.15767776635025255, 0.00016775479675933878], 'true': [0.19173260796675534, 0.052601886987633364], 'true,true': [0.002069195821991674, 0.20883615757399793], 'true,true,false': [0.16712412487890038, 0.19906138160761205], 'true,false': [0.07961417238923597, 0.0048853683883306465]}, {'': [0.08161761694947615, 0.03800480700759887], 'true': [0.07388528941184974, 0.06359142742287155], 'true,true': [0.22934445038175996, 0.0072892613345197504], 'false': [0.06567757721070282, 0.02772769227059106], 'false,false': [0.026057096067630355, 0.021524236588243265], 'false,false,true': [-5.782411586589357e-19, 0.05944044997236342], 'false,false,false': [0.004352345841036313, 0.00026763607958528213], 'true,true,false': [0.00091401417591358, 0.005008219478286935]}, {'': [0.06771019416285075, 0.08078165467403657], 'false': [0.1764328829867626, 2.702077223376333e-05], 'false,true': [0.18334941372921543, 0.15511699969646708], 'false,true,false': [0.16899534231493005, 0.1374583948519646], 'true': [0.17522313635523237, 0.013365527980652844], 'true,false': [0.0007006247720109845, 0.019317726068564894]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;ta(D, A, E), tempadvisedby(F, B).;true;true
0;false;professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;projectmember(C, B), ta(D, A, E).;true;true
1;true,false;publication(F, A).;true;true
2;;advisedby(A, B) :- professor(B), ta(C, A, D).;true;true
2;true;tempadvisedby(E, B), publication(F, B).;true;true
2;true,true;ta(G, H, D), publication(I, H).;true;true
2;false;professor(B), student(A).;true;true
3;;advisedby(A, B) :- publication(C, B), publication(C, A).;true;true
3;false;publication(D, A).;true;true
3;false,true;professor(B), student(A).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
5;true;publication(D, B), publication(D, A).;true;true
5;false;ta(I, A, J), professor(B).;true;true
5;false,false;professor(B).;true;true
5;false,false,true;professor(A), publication(K, A).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;true
7;true;tempadvisedby(C, B), ta(D, A, E).;true;true
7;true,true;ta(D, C, F).;true;true
8;;advisedby(A, B) :- publication(C, B), student(A).;true;true
8;true;tempadvisedby(D, B).;true;true
8;true,true;projectmember(E, B).;true;true
8;true,true,false;publication(C, A).;true;true
8;false;professor(B), publication(F, A).;true;true
8;false,false;ta(G, A, H).;true;true
8;false,false,true;ta(I, B, J).;true;true
8;false,false,false;student(A), professor(B).;true;true
9;;advisedby(A, B) :- publication(C, B), tempadvisedby(D, B).;true;true
9;true;projectmember(E, B).;true;true
9;true,false;publication(C, A).;true;true
9;false;professor(B), student(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(E, F, D), tempadvisedby(F, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.7427692969708037;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.49179034310462466;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), ta(E, A, F) )
%   | then return 0.0898264644506378;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(G, B) )
%   | | then return 0.5801301901380953;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.4346616480673615;  // std dev = 0.949, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3346508235330678;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( professor(B) )
%   | then return -0.02892782767885482;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.5790968995901562;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.2607926113817302;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.3023902441718638;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16106745151240645;  // std dev = 1.432, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.10280680436571234;  // std dev = 0.014, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( ta(C, A, D), publication(E, B) )
%   then if ( tempadvisedby(F, B), ta(C, F, G) )
%   | then return 0.4064131588301418;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return 0.24915712775902954;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.15476429721292773;  // std dev = 0.495, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B), student(A) )
%   | then if ( tempadvisedby(I, B) )
%   | | then if ( publication(J, B) )
%   | | | then return -0.06685098596577181;  // std dev = 0.958, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.025711824490449606;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.27804279647935376;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09429495490008882;  // std dev = 0.013, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( projectmember(D, B), publication(E, B) )
%   | then return 0.06691221417728672;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.33326322962620414;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.42760754973324155;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( ta(H, A, I) )
%   | then if ( ta(J, B, K) )
%   | | then return -0.08496570500569399;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.20376630949345695;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( publication(L, A) )
%   | | then if ( tempadvisedby(M, A) )
%   | | | then return -0.08688329451768192;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.18161962206602922;  // std dev = 0.229, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( professor(B) )
%   | | | then return 0.0891880755530757;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08496570500569399;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( publication(C, A), publication(C, B) )
%   then return 0.29215884657262403;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( ta(G, H, F), publication(I, H) )
%   | | then return -0.11645512074184976;  // std dev = 0.969, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3171189084799593;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( professor(B), publication(J, A) )
%   | | then return -0.44302373826565483;  // std dev = 0.472, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( hasposition(B, K), student(A) )
%   | | | then return 0.32376375847928196;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0660989899103445;  // std dev = 0.777, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.2383626391728605;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(C, E), inphase(E, F) )
%   | | | then return 0.23687720801175607;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2465109459919299;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.30781978715107644;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07710263271771214;  // std dev = 0.071, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, C, E) )
%   | | | then return -0.06679026210746453;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23744732418289582;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.02050709593725882;  // std dev = 0.971, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2728743660817662;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06908009549781313;  // std dev = 0.055, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B), ta(D, A, E) )
%   | then return -0.23975168343484296;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1938631356928778;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07940766328865394;  // std dev = 1.297, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.22333675182275833;  // std dev = 0.296, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06469436950359285;  // std dev = 0.058, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.942997
   AUC PR    = 0.265534
   CLL	      = -0.284724
   Precision = 0.140325 at threshold = 0.5
   Recall    = 0.979381
   F1        = 0.245478


Total learning time: 4.072654724121094 seconds
Total inference time: 1.16 seconds
AUC ROC: 0.942997


Results scoring model
   AUC ROC   = 0.958786
   AUC PR    = 0.50296
   CLL	      = -0.270027
   Precision = 0.219178 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.359551


Total scoring time: 0.546 seconds
Refined model CLL: -0.270027


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.939869
   AUC PR    = 0.3344
   CLL	      = -0.238283
   Precision = 0.133144 at threshold = 0.5
   Recall    = 0.969072
   F1        = 0.234122


Total learning time: 11.043351055145262 seconds
Total inference time: 1.342 seconds
AUC ROC: 0.939869
Total revision time: 11.043351055145262
Best scored revision CLL: -0.22251


Dataset: 21_yeast_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:13
{'AUC ROC': 0.939869, 'AUC PR': 0.3344, 'CLL': -0.238283, 'Precision': [0.133144, 0.5], 'Recall': 0.969072, 'F1': 0.234122, 'Learning time': 11.043351055145262, 'Inference time': 1.342, 'parameter': {'AUC ROC': 0.939869, 'AUC PR': 0.3344, 'CLL': -0.238283, 'Precision': [0.133144, 0.5], 'Recall': 0.969072, 'F1': 0.234122, 'Learning time': 5.79469633102417, 'Inference time': 1.342}}


