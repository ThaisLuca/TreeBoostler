Starting experiment #1 for 3_imdb_cora

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048938;  // std dev = 0.000, 757.000 (wgt'ed) examples reached here.  /* #neg=757 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839238;  // std dev = 0.000, 699.000 (wgt'ed) examples reached here.  /* #neg=699 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360685;  // std dev = 0.000, 721.000 (wgt'ed) examples reached here.  /* #neg=721 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 5.72e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else return 0.539982040088682;  // std dev = 0.100, 217.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=212 */
%   | else return -0.11231637819360624;  // std dev = 3.80e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4195925735509926;  // std dev = 0.036, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.10257386365347171;  // std dev = 0.229, 707.000 (wgt'ed) examples reached here.  /* #neg=707 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32212286419264136;  // std dev = 0.033, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.0934995570647141;  // std dev = 0.212, 720.000 (wgt'ed) examples reached here.  /* #neg=720 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25613555073047106;  // std dev = 0.028, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0857653605593493;  // std dev = 0.187, 738.000 (wgt'ed) examples reached here.  /* #neg=738 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21043839535547176;  // std dev = 0.025, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07908242251637007;  // std dev = 0.138, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17759586332114866;  // std dev = 0.022, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.07357344366078332;  // std dev = 0.142, 689.000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1531227568291043;  // std dev = 0.019, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420267;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06924372620740782;  // std dev = 0.197, 710.000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13430288867602366;  // std dev = 0.017, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06432123646227293;  // std dev = 0.116, 726.000 (wgt'ed) examples reached here.  /* #neg=726 */


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.2030808564308236;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.17651927372517878;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.58e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.15033301706225677;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.12568611312244876;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.10341496122352978;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.08396823202573275;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.06745218269587282;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.0537282640183541;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.042515439518791484;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.03347174235983522;  // std dev = 17.283, 1,322.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=456 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.556096
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.026 seconds
Total inference time: 0.676 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.568998
   AUC PR    = 0.527322
   CLL	      = -0.618664
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.137996
   F1        = 0.242525


Total scoring time: 0.998 seconds
Parameter learned model CLL: -0.618664


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.58e-08, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 73], 'false': [17.283, 866, 456]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 73], 'false': [17.283, 866, 456]}]]
[{'': [-1.4600193200550003e-15, 0.22595389097798765]}, {'': [4.866731066850001e-16, 0.225953890977987]}, {'': [6.813423493590001e-16, 0.22595389097801039]}, {'': [-9.733462133700002e-17, 0.22595389097798851]}, {'': [-3.5283800234662507e-16, 0.22595389097801893]}, {'': [-1.2166827667125003e-17, 0.22595389097801194]}, {'': [-9.125120750343752e-17, 0.22595389097799753]}, {'': [6.083413833562501e-18, 0.2259538909779972]}, {'': [6.691755216918751e-17, 0.22595389097800975]}, {'': [3.650048300137501e-17, 0.22595389097801016]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22472326566275772;  // std dev = 15.858, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.07814893509951236;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.011851064900487665;  // std dev = 3.363, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.14386322081379807;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1951088784399496;  // std dev = 15.858, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.06836711157410681;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34706599335169397;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.47588605454691735;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.19258789115538322;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.010414556583647715;  // std dev = 3.363, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.12543301544918353;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.23e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16559228785236216;  // std dev = 15.858, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.05936136090327015;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28610086655010397;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.382647398804739;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.01995975307729565;  // std dev = 2.582, 62.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | | else return 0.043267463850178135;  // std dev = 2.715, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.10782354562777491;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.47110754163834817;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.16520662870034888;  // std dev = 2.135, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13123813146480376;  // std dev = 15.912, 1,105.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=395 */
%   | | | else return 0.21959401805866155;  // std dev = 2.680, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.017456506001592934;  // std dev = 2.583, 62.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | | else return 0.0379670850503853;  // std dev = 2.715, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.09150383240113756;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1129572440374193;  // std dev = 15.845, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.03186862728110678;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.167620442585936;  // std dev = 1.990, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.23349416271217685;  // std dev = 1.900, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16770214269571107;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.011672238470163214;  // std dev = 3.352, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07678249969777719;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0909922642795251;  // std dev = 15.844, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.026952652721770446;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12865696235714807;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.1990257889588761;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13993652175587287;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.01025940784524917;  // std dev = 3.352, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05951718873675119;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0706623673646574;  // std dev = 2.778, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.001845789360030367;  // std dev = 2.214, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.18645078155249378;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1658662662070048;  // std dev = 2.552, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.07244364249179298;  // std dev = 15.941, 1,105.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=405 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.11470660719253183;  // std dev = 1.601, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.009027339031089873;  // std dev = 3.352, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.05458915187176022;  // std dev = 2.923, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return -0.08830633411976228;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0573533676173288;  // std dev = 15.836, 1,083.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=397 */
%   | | | else return 0.01122817304561321;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06909938845701008;  // std dev = 1.962, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.12658397545090147;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09265488602583227;  // std dev = 1.601, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.007950745868758255;  // std dev = 3.352, 100.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05724092477131842;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05011207937921058;  // std dev = 2.774, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27842199802121914;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.04481706479930257;  // std dev = 2.106, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04208254654582775;  // std dev = 15.898, 1,105.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=395 */
%   | | | else return 0.04360592306953766;  // std dev = 2.657, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.028900408277413667;  // std dev = 3.359, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.04556756316683168;  // std dev = 1.879, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.035934683413842775;  // std dev = 2.727, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.08343808413859675;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20946808963180508;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.034639343207872465;  // std dev = 2.106, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03294936395193858;  // std dev = 15.897, 1,105.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=395 */
%   | | | else return 0.03283969801504259;  // std dev = 2.657, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15932467309041057;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04187363579014701;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010010654959209981;  // std dev = 3.633, 96.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | | else return 0.027604755340602777;  // std dev = 2.573, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */


Results
   AUC ROC   = 0.675248
   AUC PR    = 0.619103
   CLL	      = -0.549571
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 158.298 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.675248


Results scoring model
   AUC ROC   = 0.631909
   AUC PR    = 0.574823
   CLL	      = -0.601321
   Precision = 0.889908 at threshold = 0.5
   Recall    = 0.183365
   F1        = 0.304075


Total scoring time: 4.453 seconds
Refined model CLL: -0.601321


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.675248
   AUC PR    = 0.619103
   CLL	      = -0.549571
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 165.775 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.675248
Total revision time: 165.775
Best scored revision CLL: -0.601321


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:48
{'AUC ROC': 0.675248, 'AUC PR': 0.619103, 'CLL': -0.549571, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 165.775, 'Inference time': 1.414, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.556096, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.026, 'Inference time': 0.676}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.19946402441915756;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.1734083711031708;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.14776845801871816;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.12365575854629551;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.1018662109458089;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.08282615076142033;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.06663606020502794;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.0531628183992441;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04213644558101428;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03322759635862705;  // std dev = 24.321, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=898 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555607
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.929 seconds
Total inference time: 0.706 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.576015
   AUC PR    = 0.538973
   CLL	      = -0.613674
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15203
   F1        = 0.263934


Total scoring time: 1.17 seconds
Parameter learned model CLL: -0.613674


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.97e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [24.321, 1, 898]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 161], 'false': [24.321, 1, 898]}]]
[{'': [6.178632484870436e-15, 0.22481909912239448]}, {'': [-2.7362515290140504e-15, 0.22481909912234552]}, {'': [1.897722834638777e-15, 0.2248190991224029]}, {'': [1.2136599523852642e-15, 0.22481909912236928]}, {'': [6.178632484870436e-16, 0.2248190991224101]}, {'': [-2.3169871818264136e-16, 0.22481909912236167]}, {'': [4.3029761948204827e-16, 0.2248190991223506]}, {'': [-3.1444826039072757e-16, 0.22481909912236556]}, {'': [-2.372153543298471e-16, 0.2248190991223595]}, {'': [5.516636147205747e-17, 0.22481909912237213]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2247140199928464;  // std dev = 0.482, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.053270886319024574;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.012589089539666065;  // std dev = 5.816, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.32853586135927054;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.023657812578782553;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else return 0.19657894933052647;  // std dev = 0.482, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=820 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.24811816884741303;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03797677842400932;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.04666172372043658;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.01104970758826166;  // std dev = 5.816, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16555021343695697;  // std dev = 0.482, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05344043753749632;  // std dev = 4.966, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return -0.023304808017398242;  // std dev = 2.955, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.011651982616136116;  // std dev = 3.529, 93.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
%   | | | else return -0.1492020201956567;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24672098709112025;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.004912676168993;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else return 0.1389001227867098;  // std dev = 0.482, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=820 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2043915057580898;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03417442953046618;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0053587613033869745;  // std dev = 5.024, 196.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=30 */
%   | | | else return 0.02187527542603279;  // std dev = 3.860, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11237214816523623;  // std dev = 0.481, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04396937157407836;  // std dev = 4.964, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return -0.022000186085629123;  // std dev = 2.951, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.15150767294238984;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.010229564145985503;  // std dev = 3.513, 92.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3756728770307054;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.01622581375738552;  // std dev = 2.726, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else return 0.0894722583282552;  // std dev = 0.481, 2,234.000 (wgt'ed) examples reached here.  /* #neg=1,417 #pos=817 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.09600176755505126;  // std dev = 2.094, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.023024148600039037;  // std dev = 1.200, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.010714274618062765;  // std dev = 5.381, 211.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=35 */
%   | | | else return -3.190106847454068E-4;  // std dev = 3.325, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07200789030687382;  // std dev = 0.481, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03607397209832322;  // std dev = 4.965, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return -0.022979334678268532;  // std dev = 2.941, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007529996753642895;  // std dev = 3.517, 93.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
%   | | | else return -0.1285883333160221;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.13659751596300224;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.04815873306793999;  // std dev = 2.535, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else return 0.05776854281710143;  // std dev = 0.482, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=820 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1362720205136316;  // std dev = 2.291, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.11914130048212511;  // std dev = 0.982, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0020689902682577413;  // std dev = 5.011, 198.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=30 */
%   | | | else return 0.02418802929218535;  // std dev = 3.716, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04448510108993798;  // std dev = 0.481, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.15690586586775135;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02195335373988251;  // std dev = 2.028, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02468163016730637;  // std dev = 2.477, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return -3.7406888857083575E-4;  // std dev = 5.795, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03470773841713264;  // std dev = 0.481, 2,297.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=842 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07797559858095902;  // std dev = 2.079, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.03708122591512935;  // std dev = 1.184, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.021180442501885905;  // std dev = 2.476, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return -3.2519270067544196E-4;  // std dev = 5.795, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */


Results
   AUC ROC   = 0.681184
   AUC PR    = 0.623853
   CLL	      = -0.542259
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 81.785 seconds
Total inference time: 0.941 seconds
AUC ROC: 0.681184


Results scoring model
   AUC ROC   = 0.631941
   AUC PR    = 0.575664
   CLL	      = -0.600285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15203
   F1        = 0.263934


Total scoring time: 1.806 seconds
Refined model CLL: -0.600285


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681184
   AUC PR    = 0.623853
   CLL	      = -0.542259
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 87.69 seconds
Total inference time: 0.941 seconds
AUC ROC: 0.681184
Total revision time: 87.69
Best scored revision CLL: -0.600285


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:18
{'AUC ROC': 0.681184, 'AUC PR': 0.623853, 'CLL': -0.542259, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 87.69, 'Inference time': 0.941, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555607, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.929, 'Inference time': 0.706}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.19825045794214677;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.172364288590554;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.14690703590764226;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.12297285143149475;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.31e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.10134434851529456;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.08244047940564331;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.86e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.06635977564013033;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.05297086003568357;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.04200737295007663;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.03314413053581182;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555453
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.1 seconds
Total inference time: 0.673 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578351
   AUC PR    = 0.542784
   CLL	      = -0.612
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156702
   F1        = 0.270947


Total scoring time: 1.222 seconds
Parameter learned model CLL: -0.612


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.31e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 249], 'false': [29.737, 2, 1]}]]
[{'': [4.679879866050459e-15, 0.22443247700276145]}, {'': [-4.337449631949206e-15, 0.22443247700273336]}, {'': [8.5607558525313275e-16, 0.22443247700273852]}, {'': [-2.853585284177109e-16, 0.22443247700274746]}, {'': [2.1401889631328319e-16, 0.22443247700276636]}, {'': [3.8523401336390975e-16, 0.22443247700272967]}, {'': [3.2816230768036754e-16, 0.22443247700274033]}, {'': [-2.853585284177109e-17, 0.22443247700272426]}, {'': [-1.819160618662907e-16, 0.22443247700272795]}, {'': [3.566981605221386e-18, 0.22443247700275765]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22007845560788386;  // std dev = 0.481, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,253 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.1914822684328457;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.03562333782988765;  // std dev = 6.540, 293.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=52 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.023616560998792578;  // std dev = 4.381, 139.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1911229269718132;  // std dev = 0.481, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,253 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.14744577021315053;  // std dev = 2.651, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.021118876454104003;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03459747035114877;  // std dev = 6.569, 291.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=53 */
%   | | | else return 0.01480535255071873;  // std dev = 4.291, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.62e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16232990051092805;  // std dev = 0.481, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,253 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.16203317345407262;  // std dev = 2.822, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.02669927299240958;  // std dev = 6.531, 293.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=52 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016002781678537296;  // std dev = 4.383, 139.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=23 */
%   | | | else return -0.1262915468526692;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2277453741295913;  // std dev = 3.303, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | | else return -0.026800080415863365;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.13656596180836006;  // std dev = 0.481, 3,363.000 (wgt'ed) examples reached here.  /* #neg=2,141 #pos=1,222 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12381643957699673;  // std dev = 2.644, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.02221094042199375;  // std dev = 1.326, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.056928761522616646;  // std dev = 2.980, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.015450922758174923;  // std dev = 7.240, 377.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=63 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.31e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3388634550439674;  // std dev = 3.076, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return -0.015806010618132856;  // std dev = 3.154, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else return 0.10999516570037259;  // std dev = 0.480, 3,367.000 (wgt'ed) examples reached here.  /* #neg=2,150 #pos=1,217 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20938568445833694;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0381997949908827;  // std dev = 2.624, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.04846777684785959;  // std dev = 2.978, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.01345271754117615;  // std dev = 7.240, 377.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=63 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17059177165501507;  // std dev = 3.173, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return -0.03803647036912137;  // std dev = 3.084, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1107181324691729;  // std dev = 4.449, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | | | else return 0.08972724231084753;  // std dev = 27.517, 3,276.000 (wgt'ed) examples reached here.  /* #neg=2,088 #pos=1,188 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.12027267817499149;  // std dev = 2.808, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.01706905495955936;  // std dev = 6.518, 293.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=52 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10939632451763477;  // std dev = 0.975, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.014795728693971237;  // std dev = 4.272, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.86e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.13779744669201685;  // std dev = 3.265, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | | | else return -0.03937431662142421;  // std dev = 2.965, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0880108568677764;  // std dev = 4.445, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | | | else return 0.07156475110973867;  // std dev = 27.517, 3,276.000 (wgt'ed) examples reached here.  /* #neg=2,088 #pos=1,188 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.09496087537131281;  // std dev = 2.631, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.03569868234401195;  // std dev = 1.306, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01671260288104824;  // std dev = 6.538, 291.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=53 */
%   | | | else return 0.0026315754770650027;  // std dev = 4.287, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07241725545336992;  // std dev = 4.100, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return -0.14989872347448263;  // std dev = 1.532, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06924390213785188;  // std dev = 4.442, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | | | else return 0.056579753200668735;  // std dev = 27.517, 3,276.000 (wgt'ed) examples reached here.  /* #neg=2,088 #pos=1,188 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.09678599158764004;  // std dev = 2.801, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.012270831733217635;  // std dev = 6.513, 293.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=52 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.09825978186751559;  // std dev = 0.977, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.01066480623920873;  // std dev = 4.272, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0440894781436205;  // std dev = 0.480, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,209 #pos=1,253 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03526881264314926;  // std dev = 5.961, 219.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=45 */
%   | | | else return -0.016231009379800255;  // std dev = 3.831, 110.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08594123389601727;  // std dev = 0.977, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.009248022427238642;  // std dev = 4.272, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21149818985553892;  // std dev = 2.848, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return -0.06110777785995891;  // std dev = 3.365, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else return 0.03424409062521905;  // std dev = 0.480, 3,367.000 (wgt'ed) examples reached here.  /* #neg=2,150 #pos=1,217 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.009442592691418027;  // std dev = 6.466, 286.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=53 */
%   | | | else return 0.07028688286394381;  // std dev = 2.771, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002478672694764928;  // std dev = 4.460, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
%   | | | else return -0.11392567836669956;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.680655
   AUC PR    = 0.623711
   CLL	      = -0.541958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 146.656 seconds
Total inference time: 0.967 seconds
AUC ROC: 0.680655


Results scoring model
   AUC ROC   = 0.627687
   AUC PR    = 0.575423
   CLL	      = -0.600788
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156702
   F1        = 0.270947


Total scoring time: 2.56 seconds
Refined model CLL: -0.600788


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680655
   AUC PR    = 0.623711
   CLL	      = -0.541958
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 154.538 seconds
Total inference time: 0.967 seconds
AUC ROC: 0.680655
Total revision time: 154.538
Best scored revision CLL: -0.600788


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:55
{'AUC ROC': 0.680655, 'AUC PR': 0.623711, 'CLL': -0.541958, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 154.538, 'Inference time': 0.967, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555453, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.1, 'Inference time': 0.673}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.19688629920402748;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.17119048208802473;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.14593816276288293;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583118;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.12220420709728491;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015133;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.10075639994589645;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948745;  // std dev = 4.00e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.08200546115557593;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253465;  // std dev = 2.49e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.06604772309018245;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527642;  // std dev = 2.86e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.05275372324696644;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.04186111809191418;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else return 0.033049357751646115;  // std dev = 34.270, 5,243.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,776 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555288
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.789 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.580934
   AUC PR    = 0.546945
   CLL	      = -0.610132
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161869
   F1        = 0.278635


Total scoring time: 1.339 seconds
Parameter learned model CLL: -0.610132


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4e-07, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 343], 'false': [34.27, 3, 1]}]]
[{'': [3.1487608115316395e-15, 0.22399436226398495]}, {'': [-5.220313977012981e-15, 0.22399436226409414]}, {'': [-6.628970129540293e-16, 0.22399436226402755]}, {'': [-1.0357765827406709e-15, 0.22399436226399366]}, {'': [-9.114833928117903e-16, 0.2239943622640062]}, {'': [4.660994622333018e-16, 0.22399436226407446]}, {'': [1.812609019796174e-16, 0.22399436226403657]}, {'': [2.382286140303543e-16, 0.2239943622640082]}, {'': [-2.330497311166509e-16, 0.223994362264067]}, {'': [-2.3046028965979925e-16, 0.2239943622640234]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.04e-06, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2152584922090643;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.12448059339097005;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.410780514046881;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | | else return 0.5039822684328447;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07715719956232231;  // std dev = 6.434, 242.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=53 */
%   | | | else return 0.031833145625827244;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.030191945852199673;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18698454041091542;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.10864197302015659;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35309918824259745;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | | else return 0.4309973442579218;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04235113737431786;  // std dev = 7.630, 377.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=72 */
%   | | | else return 0.10314437032623015;  // std dev = 3.230, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.026476809851625618;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15893726899653732;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.093669664304728;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2907323004602758;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | | else return 0.34954182216286817;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17024723202696188;  // std dev = 3.176, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.1061899348773379;  // std dev = 0.977, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06469458315025767;  // std dev = 3.176, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.025255307493104534;  // std dev = 8.546, 500.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=89 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583118;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13246805597878572;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.07987611990339957;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23080451646120045;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | | else return 0.2719232305995038;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13145357071227567;  // std dev = 3.009, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.02817422970408857;  // std dev = 7.677, 388.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=73 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.018817903739328613;  // std dev = 5.149, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.11375982882192975;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015133;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10855787644200592;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.06745524766949605;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1784675323020117;  // std dev = 4.236, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.20649322007890336;  // std dev = 3.439, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1126348912747094;  // std dev = 3.008, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.02435430104180594;  // std dev = 7.677, 388.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=73 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016360827139361774;  // std dev = 5.149, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.10278775890452231;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948745;  // std dev = 4.00e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08773414274004929;  // std dev = 31.383, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,532 */
%   | | | else return 0.05648938351905866;  // std dev = 6.236, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13174576521267986;  // std dev = 4.331, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   | | | else return 0.1618078025790815;  // std dev = 3.316, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03966289773764644;  // std dev = 6.803, 286.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=59 */
%   | | | else return 0.007423222768248225;  // std dev = 4.588, 143.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09085547010014565;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.01803014114268975;  // std dev = 5.121, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253465;  // std dev = 2.49e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07021936238686048;  // std dev = 31.315, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,525 */
%   | | | else return 0.045610790323908725;  // std dev = 6.569, 205.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09757960347325333;  // std dev = 4.230, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.12417563638301606;  // std dev = 3.443, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13536958650793188;  // std dev = 3.164, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.09257744450697514;  // std dev = 0.985, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016219506740951854;  // std dev = 7.566, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | | else return 0.009650567465176459;  // std dev = 5.060, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527642;  // std dev = 2.86e-07, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.055680806032096915;  // std dev = 31.314, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,525 */
%   | | | else return 0.037080577930169834;  // std dev = 6.571, 205.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3349739818948276;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06812598972634404;  // std dev = 5.344, 118.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11360922934926812;  // std dev = 3.163, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.08221285691257597;  // std dev = 0.984, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.024733087019409093;  // std dev = 3.145, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.010556165798591732;  // std dev = 8.541, 500.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=89 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15355970492838372;  // std dev = 3.671, 55.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | | else return -0.1084313424250929;  // std dev = 3.416, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06633692317413457;  // std dev = 5.339, 123.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=48 */
%   | | | else return 0.04422351575108518;  // std dev = 31.581, 4,362.000 (wgt'ed) examples reached here.  /* #neg=2,793 #pos=1,569 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.08415460548587245;  // std dev = 2.975, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.01264254340234824;  // std dev = 7.650, 388.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=73 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10710683118908135;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.006751585747706601;  // std dev = 5.060, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #pos=343 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03435591828431175;  // std dev = 31.300, 4,284.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,525 */
%   | | | else return 0.021930107266128065;  // std dev = 6.569, 205.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2330946883758139;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04086901236224349;  // std dev = 5.344, 118.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09503835625822309;  // std dev = 3.145, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.07384895091125926;  // std dev = 0.984, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008979785890883087;  // std dev = 7.562, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | | else return 0.005835727351254526;  // std dev = 5.060, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */


Results
   AUC ROC   = 0.677499
   AUC PR    = 0.620428
   CLL	      = -0.546567
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 699.106 seconds
Total inference time: 1.404 seconds
AUC ROC: 0.677499


Results scoring model
   AUC ROC   = 0.637298
   AUC PR    = 0.58849
   CLL	      = -0.598036
   Precision = 0.892473 at threshold = 0.5
   Recall    = 0.195847
   F1        = 0.321207


Total scoring time: 18.967 seconds
Refined model CLL: -0.598036


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677499
   AUC PR    = 0.620428
   CLL	      = -0.546567
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 725.201 seconds
Total inference time: 1.404 seconds
AUC ROC: 0.677499
Total revision time: 725.201
Best scored revision CLL: -0.598036


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:19:03
{'AUC ROC': 0.677499, 'AUC PR': 0.620428, 'CLL': -0.546567, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 725.201, 'Inference time': 1.404, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555288, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.789, 'Inference time': 0.68}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.227 seconds
Total inference time: 0.703 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 1.401 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027515;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331555;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.37055206062581303;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451686;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.035795635786599146;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16051920012347035;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957765;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2979050023732508;  // std dev = 4.764, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33576775766136147;  // std dev = 3.644, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03325401102763194;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031226012289467045;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403077;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4877056244147768;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23412563533700037;  // std dev = 5.895, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11908733057402575;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02777923196985431;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10071049980613894;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.027413238102116648;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963216;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816059;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.37059983734124347;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1799709068147817;  // std dev = 5.895, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026615895618747283;  // std dev = 8.390, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06831490434069828;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10429800159180264;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0241170564547264;  // std dev = 5.848, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809339;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889957;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1262792569174608;  // std dev = 4.738, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1713221689567445;  // std dev = 3.628, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10054219198539636;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01980841595828135;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020056233518601165;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10142828881471896;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.05017947789451448;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24840680279489055;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10088546970532057;  // std dev = 5.892, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08457393287113743;  // std dev = 3.344, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.017039098218837458;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07371945119629442;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.020177917146612906;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630099;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.039471451616439265;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06704700119074858;  // std dev = 4.733, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10485310124481918;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03096102720188709;  // std dev = 7.626, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -2.620670751723626E-4;  // std dev = 5.005, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014549108285436823;  // std dev = 5.928, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.0927073199730919;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0441572829939313;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502913;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17504661761487053;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05545656555799156;  // std dev = 5.890, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030383282409121064;  // std dev = 7.644, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0069698150844941615;  // std dev = 4.977, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011424178368564311;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08520308594156434;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773513;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715234;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1387842461659665;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04165595024015933;  // std dev = 5.890, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08977638290578283;  // std dev = 3.330, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.007807153269193417;  // std dev = 8.473, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08115510450690312;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012498146901833386;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */


Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.545892
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 971.926 seconds
Total inference time: 1.649 seconds
AUC ROC: 0.678329


Results scoring model
   AUC ROC   = 0.625345
   AUC PR    = 0.573698
   CLL	      = -0.603291
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 25.546 seconds
Refined model CLL: -0.603291


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.545892
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1006.1000000000001 seconds
Total inference time: 1.649 seconds
AUC ROC: 0.678329
Total revision time: 1006.1000000000001
Best scored revision CLL: -0.603291


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 00:35:52
{'AUC ROC': 0.678329, 'AUC PR': 0.622436, 'CLL': -0.545892, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1006.1000000000001, 'Inference time': 1.649, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.227, 'Inference time': 0.703}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.15007931484634288;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.38e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.13081071025410268;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.1123377622279799;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4.21e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.09518671736303412;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.07970872541835274;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.06607726382872968;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.054315297400575675;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.04433609000197952;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.56e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.03598456838358082;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else return 0.02907179187874036;  // std dev = 16.164, 1,264.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=369 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807196
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1.794 seconds
Total inference time: 0.721 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589087
   AUC PR    = 0.522006
   CLL	      = -0.57677
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 0.983 seconds
Parameter learned model CLL: -0.57677


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.56e-08, 0, 80], 'false': [16.164, 895, 369]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 80], 'false': [16.164, 895, 369]}]]
[{'': [-7.993605777301127e-16, 0.2067070331276854]}, {'': [7.105427357601002e-16, 0.20670703312771466]}, {'': [1.4210854715202005e-15, 0.2067070331277056]}, {'': [2.2204460492503132e-17, 0.2067070331277065]}, {'': [-3.9968028886505636e-16, 0.20670703312770294]}, {'': [-4.4408920985006264e-17, 0.2067070331277061]}, {'': [-8.326672684688674e-17, 0.20670703312770497]}, {'': [1.6653345369377347e-17, 0.20670703312769909]}, {'': [9.159339953157541e-17, 0.20670703312769786]}, {'': [3.8857805861880476e-17, 0.20670703312770403]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995124;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17475477451556587;  // std dev = 0.465, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.048101064900487676;  // std dev = 2.856, 96.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | | else return 0.01943925768015751;  // std dev = 2.896, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.38e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2521839074352805;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.16448275923138617;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15076513599780125;  // std dev = 0.465, 1,069.000 (wgt'ed) examples reached here.  /* #neg=732 #pos=337 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09467322282735761;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.04082487789270283;  // std dev = 2.831, 92.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.031204688906999047;  // std dev = 2.872, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return -0.1472304805230278;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.37e-07, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13011398468577182;  // std dev = 0.465, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.08315386240346347;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.036023179781473506;  // std dev = 2.831, 92.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.027310159566360445;  // std dev = 2.872, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return -0.1296936108989293;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 4.21e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19274329026584067;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.1598138196520572;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1084549241170041;  // std dev = 0.465, 1,069.000 (wgt'ed) examples reached here.  /* #neg=732 #pos=337 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.15036525784470903;  // std dev = 0.457, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.03776902933615675;  // std dev = 2.838, 96.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | | else return 0.012771976350792639;  // std dev = 2.887, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.49902991106598316;  // std dev = 1.494, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.10014850574066393;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else return 0.09103818354927427;  // std dev = 0.465, 1,061.000 (wgt'ed) examples reached here.  /* #neg=725 #pos=336 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.006888877105688863;  // std dev = 3.203, 96.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=12 */
%   | | | else return -0.12317318213016747;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022180680772805942;  // std dev = 2.872, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return -0.11977978812698568;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0745443212226215;  // std dev = 0.464, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07824410963277321;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1344331919954996;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1325290877599646;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.020797215428688245;  // std dev = 3.733, 141.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06061800237989781;  // std dev = 0.464, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.11325082413587617;  // std dev = 0.456, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.031023764976973206;  // std dev = 2.829, 96.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=9 */
%   | | | else return 0.012692015820128341;  // std dev = 2.882, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04891320389294512;  // std dev = 0.464, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07203970244262863;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.02692693152006228;  // std dev = 2.789, 92.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.020847436925901908;  // std dev = 2.870, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return -0.11056005068703613;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367055;  // std dev = 8.56e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03922484144009008;  // std dev = 0.464, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.009680795631408428;  // std dev = 2.741, 66.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | | | else return -0.05235819182161475;  // std dev = 1.602, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.01810331443769834;  // std dev = 2.870, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return -0.10020005601347358;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.031301406792255015;  // std dev = 0.464, 1,096.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=347 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.06807488683219438;  // std dev = 1.522, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.11782458214924779;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.02231250090493325;  // std dev = 2.783, 91.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | | else return 0.011867460949556773;  // std dev = 2.872, 60.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */


Results
   AUC ROC   = 0.581753
   AUC PR    = 0.712645
   CLL	      = -0.794861
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 39.84 seconds
Total inference time: 0.933 seconds
AUC ROC: 0.581753


Results scoring model
   AUC ROC   = 0.650299
   AUC PR    = 0.56507
   CLL	      = -0.561845
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178174
   F1        = 0.302457


Total scoring time: 1.235 seconds
Refined model CLL: -0.561845


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.581753
   AUC PR    = 0.712645
   CLL	      = -0.794861
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 43.852000000000004 seconds
Total inference time: 0.933 seconds
AUC ROC: 0.581753
Total revision time: 43.852000000000004
Best scored revision CLL: -0.561845


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:38
{'AUC ROC': 0.581753, 'AUC PR': 0.712645, 'CLL': -0.794861, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 43.852000000000004, 'Inference time': 0.933, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807196, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1.794, 'Inference time': 0.721}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.1510822157943355;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.13167801291448306;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.11306494390411015;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.09577881563809972;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.08017790751788727;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0664398293692846;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.05458896717183398;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.044538020951750835;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03613016424178093;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.029174167898447588;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.805962
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.842 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58686
   AUC PR    = 0.518207
   CLL	      = -0.578331
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173719
   F1        = 0.296015


Total scoring time: 1.151 seconds
Parameter learned model CLL: -0.578331


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.68e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 156], 'false': [22.905, 1, 742]}]]
[{'': [6.012284687200848e-15, 0.20712337375621814]}, {'': [-2.6417614534670392e-15, 0.20712337375619766]}, {'': [1.8674520619335967e-15, 0.20712337375616738]}, {'': [1.343654532366856e-15, 0.2071233737562012]}, {'': [5.693451408334137e-16, 0.20712337375619563]}, {'': [-2.1635115351669717e-16, 0.20712337375618275]}, {'': [4.099285014000578e-16, 0.20712337375619974]}, {'': [-3.0744637605004334e-16, 0.20712337375619336]}, {'': [-2.3627823344586665e-16, 0.20712337375617654]}, {'': [5.408778837917429e-17, 0.20712337375618273]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return 0.17521054647391487;  // std dev = 0.465, 2,110.000 (wgt'ed) examples reached here.  /* #neg=1,441 #pos=669 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.03632342670953301;  // std dev = 4.334, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.0350720120225889;  // std dev = 4.351, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15353087075727362;  // std dev = 0.466, 2,171.000 (wgt'ed) examples reached here.  /* #neg=1,480 #pos=691 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09446743783575565;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03195905673500097;  // std dev = 4.334, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.030748859127446897;  // std dev = 4.351, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3589730039341686;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.05677088201778856;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return 0.13031022041746915;  // std dev = 0.465, 2,110.000 (wgt'ed) examples reached here.  /* #neg=1,441 #pos=669 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -9.301455593320241E-4;  // std dev = 4.890, 206.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=28 */
%   | | | else return -0.13720128143519483;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02753170792515489;  // std dev = 4.351, 129.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return -0.14466274280898953;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11042454752456744;  // std dev = 0.465, 2,171.000 (wgt'ed) examples reached here.  /* #neg=1,480 #pos=691 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10636714579274532;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.0261865693371477;  // std dev = 4.385, 201.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.023973087146622645;  // std dev = 4.351, 129.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return -0.12768763942843644;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09166837488654614;  // std dev = 0.465, 2,171.000 (wgt'ed) examples reached here.  /* #neg=1,480 #pos=691 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.0847111733086541;  // std dev = 2.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.10529133014780834;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.02575712615008645;  // std dev = 4.316, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.02194552923262243;  // std dev = 4.343, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07521227116108735;  // std dev = 0.465, 2,171.000 (wgt'ed) examples reached here.  /* #neg=1,480 #pos=691 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.0726941376930852;  // std dev = 2.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.09578358766754261;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.022848609814151374;  // std dev = 4.317, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.019051188635161385;  // std dev = 4.342, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22762372317152232;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.003443717711060229;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return 0.06044775517249957;  // std dev = 0.465, 2,110.000 (wgt'ed) examples reached here.  /* #neg=1,441 #pos=669 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.061844398432220116;  // std dev = 2.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.08780837751697915;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.020314665525587337;  // std dev = 4.317, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.01650311547963512;  // std dev = 4.342, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11264434896364005;  // std dev = 3.125, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return -0.11375008249590524;  // std dev = 1.536, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else return 0.048747982400408424;  // std dev = 0.465, 2,110.000 (wgt'ed) examples reached here.  /* #neg=1,441 #pos=669 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1019719595825937;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.16048132190114633;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.01927439573174824;  // std dev = 4.352, 200.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=22 */
%   | | | else return 0.016096849633856342;  // std dev = 4.342, 128.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.16589995246489897;  // std dev = 2.244, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.012483540994656485;  // std dev = 2.630, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return 0.039070323569952145;  // std dev = 0.465, 2,110.000 (wgt'ed) examples reached here.  /* #neg=1,441 #pos=669 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.05521326172928299;  // std dev = 2.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.08005004955914452;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.017821268304816895;  // std dev = 4.307, 199.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=21 */
%   | | | else return 0.013272953638666655;  // std dev = 4.336, 130.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03136946882424904;  // std dev = 0.465, 2,171.000 (wgt'ed) examples reached here.  /* #neg=1,480 #pos=691 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09165175562518943;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.1420851553885213;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0164054584299442;  // std dev = 4.346, 200.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=22 */
%   | | | else return 0.011865973955368918;  // std dev = 4.343, 128.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=23 */


Results
   AUC ROC   = 0.571069
   AUC PR    = 0.702862
   CLL	      = -0.790966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 77.102 seconds
Total inference time: 1.02 seconds
AUC ROC: 0.571069


Results scoring model
   AUC ROC   = 0.637898
   AUC PR    = 0.549499
   CLL	      = -0.564991
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173719
   F1        = 0.296015


Total scoring time: 1.711 seconds
Refined model CLL: -0.564991


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.571069
   AUC PR    = 0.702862
   CLL	      = -0.790966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 82.806 seconds
Total inference time: 1.02 seconds
AUC ROC: 0.571069
Total revision time: 82.806
Best scored revision CLL: -0.564991


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:38:03
{'AUC ROC': 0.571069, 'AUC PR': 0.702862, 'CLL': -0.790966, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 82.806, 'Inference time': 1.02, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.805962, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.842, 'Inference time': 0.72}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.1494418110889531;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.1302593529682874;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.11187535747838888;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.09481004170487303;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.0794100623987406;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.06584629222503531;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.05414079821513536;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.044207197203225086;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.035891519855448;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.029006268945711913;  // std dev = 27.972, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,104 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807983
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 3.918 seconds
Total inference time: 0.737 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.5902
   AUC PR    = 0.523766
   CLL	      = -0.575886
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.30566


Total scoring time: 1.208 seconds
Parameter learned model CLL: -0.575886


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [27.972, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 243], 'false': [27.972, 2, 1]}]]
[{'': [4.795432455335656e-15, 0.2064413363872692]}, {'': [-4.269104502920767e-15, 0.20644133638725962]}, {'': [1.052655904829778e-15, 0.20644133638721834]}, {'': [-2.3392353440661737e-16, 0.20644133638720372]}, {'': [2.777841971078581e-16, 0.20644133638727485]}, {'': [3.8743585386096e-16, 0.20644133638720888]}, {'': [3.50885301609926e-16, 0.20644133638728474]}, {'': [6.579099405186112e-17, 0.20644133638723228]}, {'': [-1.7178759557985962e-16, 0.20644133638726542]}, {'': [2.5585386575723773e-17, 0.20644133638722958]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.42064893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24775932470990064;  // std dev = 4.279, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | | else return 0.16826933861398818;  // std dev = 25.641, 3,073.000 (wgt'ed) examples reached here.  /* #neg=2,120 #pos=953 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.002692488848708207;  // std dev = 6.084, 309.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=43 */
%   | | | else return 0.024815601766178277;  // std dev = 5.000, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2519868397383668;  // std dev = 4.494, 85.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=36 */
%   | | | else return -0.1117161850675966;  // std dev = 0.950, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.21484750899909266;  // std dev = 4.279, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | | else return 0.14652698763634547;  // std dev = 25.641, 3,073.000 (wgt'ed) examples reached here.  /* #neg=2,120 #pos=953 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.12089746298961028;  // std dev = 2.704, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.05875281871264512;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005329594641222768;  // std dev = 6.076, 311.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=43 */
%   | | | else return 0.021921888461974966;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39083729593498967;  // std dev = 2.692, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.062094601466811665;  // std dev = 3.202, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.17123122141383507;  // std dev = 4.565, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.12547768212665175;  // std dev = 25.641, 3,073.000 (wgt'ed) examples reached here.  /* #neg=2,120 #pos=953 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.10550248612767076;  // std dev = 2.703, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.05174054981755327;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004675632396912014;  // std dev = 6.076, 311.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=43 */
%   | | | else return 0.019201767156055257;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10797361384552966;  // std dev = 0.463, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,228 #pos=1,020 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.0909852507340292;  // std dev = 2.702, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.04580914604725361;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.004103958550467293;  // std dev = 6.076, 311.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=43 */
%   | | | else return 0.016784286859091842;  // std dev = 4.996, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.296633032836934;  // std dev = 2.694, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.03277597918941887;  // std dev = 3.202, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.08873571471925032;  // std dev = 0.463, 3,166.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=988 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.016335225335371375;  // std dev = 5.898, 252.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=42 */
%   | | | else return -0.007979683138891348;  // std dev = 3.643, 109.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.012835832489090199;  // std dev = 4.692, 171.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | | else return -0.14506649423734022;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0736891919825481;  // std dev = 0.463, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,228 #pos=1,020 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07804501268778184;  // std dev = 2.703, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.03937675139877286;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.004773274591793828;  // std dev = 6.074, 311.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=43 */
%   | | | else return 0.01366566156491593;  // std dev = 4.991, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1382416191447867;  // std dev = 3.848, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | | else return -0.14578519299632212;  // std dev = 1.575, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09033337214008239;  // std dev = 4.541, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.0583754623864996;  // std dev = 25.641, 3,073.000 (wgt'ed) examples reached here.  /* #neg=2,120 #pos=953 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.12000747159586492;  // std dev = 2.778, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.13819759472310073;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005393355856363111;  // std dev = 6.050, 309.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=43 */
%   | | | else return 0.010312899654108146;  // std dev = 5.005, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.2285365783872404;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.06660435492105655;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.0476834598459805;  // std dev = 25.961, 3,150.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=983 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10306995743031269;  // std dev = 2.776, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.12257549556427502;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0047291227803400015;  // std dev = 6.051, 309.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=43 */
%   | | | else return 0.008949047501891148;  // std dev = 5.005, 180.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=30 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03889746506998026;  // std dev = 0.463, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,228 #pos=1,020 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.06620592417178768;  // std dev = 2.679, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.034619776092651065;  // std dev = 0.956, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006780392693422197;  // std dev = 6.058, 311.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=43 */
%   | | | else return 0.01101057037832892;  // std dev = 4.983, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1815104889496908;  // std dev = 2.598, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return -0.02964765004266898;  // std dev = 3.188, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.030655424701415745;  // std dev = 0.463, 3,166.000 (wgt'ed) examples reached here.  /* #neg=2,178 #pos=988 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08777036997863068;  // std dev = 2.767, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.11184197390767632;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004800535118501296;  // std dev = 6.345, 316.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=48 */
%   | | | else return 0.007404979871514652;  // std dev = 4.621, 173.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=25 */


Results
   AUC ROC   = 0.581722
   AUC PR    = 0.712637
   CLL	      = -0.790612
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 126.585 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.581722


Results scoring model
   AUC ROC   = 0.638707
   AUC PR    = 0.55759
   CLL	      = -0.564437
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.30566


Total scoring time: 2.237 seconds
Refined model CLL: -0.564437


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.581722
   AUC PR    = 0.712637
   CLL	      = -0.790612
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 133.94799999999998 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.581722
Total revision time: 133.94799999999998
Best scored revision CLL: -0.564437


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:40:20
{'AUC ROC': 0.581722, 'AUC PR': 0.712637, 'CLL': -0.790612, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 133.94799999999998, 'Inference time': 1.167, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807983, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 3.918, 'Inference time': 0.737}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.1502437967595862;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.13095295953276814;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.11245704619898667;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.095283865019047;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.07978572990757042;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.06613679313253427;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.05436025184633637;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.044369278166983835;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.036008512700136955;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.029088640941063396;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.524 seconds
Total inference time: 0.778 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58853
   AUC PR    = 0.520976
   CLL	      = -0.577096
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17706
   F1        = 0.300851


Total scoring time: 1.298 seconds
Parameter learned model CLL: -0.577096


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}]]
[{'': [3.4856813452382273e-15, 0.2067754534518024]}, {'': [-5.005080905983095e-15, 0.20677545345192766]}, {'': [-3.5750577899879257e-16, 0.20677545345186688]}, {'': [-9.161085586844059e-16, 0.20677545345189413]}, {'': [-4.692263349359152e-16, 0.20677545345181506]}, {'': [4.468822237484907e-16, 0.20677545345184778]}, {'': [1.8992494509310855e-16, 0.20677545345188436]}, {'': [2.2344111187424534e-16, 0.20677545345182985]}, {'': [-2.2344111187424534e-16, 0.20677545345183407]}, {'': [-1.8992494509310855e-16, 0.20677545345188839]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1713658927054922;  // std dev = 29.370, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.11921088200216803;  // std dev = 6.603, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3135944796539685;  // std dev = 5.005, 101.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13474467978036342;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07243464938522666;  // std dev = 3.433, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return -7.150924392140167E-4;  // std dev = 8.392, 581.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=82 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14919939684888292;  // std dev = 29.370, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.10407094197424004;  // std dev = 6.603, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5534216014000862;  // std dev = 1.206, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.26810451300265725;  // std dev = 4.994, 101.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1321675424048572;  // std dev = 3.274, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.06073185675711705;  // std dev = 1.350, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05165848636919825;  // std dev = 3.073, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return -6.280670001034991E-4;  // std dev = 8.392, 581.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=82 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12770413948206835;  // std dev = 29.370, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.08980117630070253;  // std dev = 6.603, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2932852399138537;  // std dev = 3.896, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return 0.17114133166274975;  // std dev = 3.343, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11065636245084999;  // std dev = 3.059, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.0798319376626132;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.052901096464474;  // std dev = 3.417, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return -5.51669166282405E-4;  // std dev = 8.392, 581.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=82 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10762936896790105;  // std dev = 29.370, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.07667702701912578;  // std dev = 6.603, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.396256210783803;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17839015551803217;  // std dev = 4.979, 101.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.280856461248301;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.027382891133522044;  // std dev = 3.200, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03581368109295647;  // std dev = 3.058, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return -4.8459269629830157E-4;  // std dev = 8.392, 581.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=82 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08949403857607408;  // std dev = 29.370, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.06486573777282445;  // std dev = 6.603, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.33561532398063665;  // std dev = 1.187, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13868898957672907;  // std dev = 4.969, 101.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09976000695251629;  // std dev = 3.258, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.0721449496568824;  // std dev = 1.311, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.030778957263458858;  // std dev = 3.058, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return -4.256938122154581E-4;  // std dev = 8.392, 581.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=82 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07357499363106638;  // std dev = 29.367, 4,016.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,255 */
%   | | | else return 0.0537918201883016;  // std dev = 6.617, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15660015467588373;  // std dev = 3.870, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return 0.06882658007154878;  // std dev = 3.327, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08391373501262007;  // std dev = 3.040, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.008160501022118414;  // std dev = 7.429, 424.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=66 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004342490728487799;  // std dev = 5.247, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.1408341602316037;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0599823628864667;  // std dev = 29.369, 4,010.000 (wgt'ed) examples reached here.  /* #neg=2,754 #pos=1,256 */
%   | | | else return 0.04416685657513739;  // std dev = 6.604, 226.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1252614721995595;  // std dev = 3.931, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | | else return 0.044323107100784846;  // std dev = 3.244, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.23463237231936976;  // std dev = 1.471, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.01356988918768239;  // std dev = 3.173, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005603926085306325;  // std dev = 7.013, 410.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=58 */
%   | | | else return 0.013082066217869894;  // std dev = 5.519, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22761451694144796;  // std dev = 3.357, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return -0.018437441665000283;  // std dev = 3.833, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | else return 0.04772813564579924;  // std dev = 0.463, 4,217.000 (wgt'ed) examples reached here.  /* #neg=2,895 #pos=1,322 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06973323329534871;  // std dev = 3.030, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.005875890001196124;  // std dev = 7.422, 424.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=66 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.003800196936201779;  // std dev = 5.245, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.1260820291404525;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03895126566112692;  // std dev = 29.355, 4,016.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,255 */
%   | | | else return 0.026956631165767145;  // std dev = 6.618, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19372063970190181;  // std dev = 1.169, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.04819403109236504;  // std dev = 4.955, 101.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05808543437206045;  // std dev = 3.029, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.005128048659291586;  // std dev = 7.422, 424.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=66 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003336488841550609;  // std dev = 5.245, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.11283240435571355;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17174238242580153;  // std dev = 3.356, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return -0.025625753430835254;  // std dev = 3.820, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | else return 0.030585452695177696;  // std dev = 0.463, 4,217.000 (wgt'ed) examples reached here.  /* #neg=2,895 #pos=1,322 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07507981469381762;  // std dev = 3.231, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.07313871855971676;  // std dev = 1.275, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.006839036283637349;  // std dev = 7.003, 410.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=58 */
%   | | | else return 0.010805983038914124;  // std dev = 5.519, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */


Results
   AUC ROC   = 0.578815
   AUC PR    = 0.711035
   CLL	      = -0.789734
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 589.324 seconds
Total inference time: 1.888 seconds
AUC ROC: 0.578815


Results scoring model
   AUC ROC   = 0.643656
   AUC PR    = 0.559644
   CLL	      = -0.565622
   Precision = 0.987952 at threshold = 0.5
   Recall    = 0.182628
   F1        = 0.308271


Total scoring time: 14.177 seconds
Refined model CLL: -0.565622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.578815
   AUC PR    = 0.711035
   CLL	      = -0.789734
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 610.323 seconds
Total inference time: 1.888 seconds
AUC ROC: 0.578815
Total revision time: 610.323
Best scored revision CLL: -0.565622


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 00:50:33
{'AUC ROC': 0.578815, 'AUC PR': 0.711035, 'CLL': -0.789734, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 610.323, 'Inference time': 1.888, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806993, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.524, 'Inference time': 0.778}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.182 seconds
Total inference time: 0.711 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 1.405 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2967454263275814;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1491187042259331;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902613;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5879828100125667;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2825983350750409;  // std dev = 5.663, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07013883095892158;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248211;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002023530754329101;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12764853140692325;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5219712292070884;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23239977619609453;  // std dev = 5.648, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11102856632026793;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061698320402801335;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0019107797772701374;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005991199920102572;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022602;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649277;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4112926354587711;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18751274242236227;  // std dev = 5.646, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01723021716585291;  // std dev = 7.456, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.0016245012358730541;  // std dev = 4.669, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008064988866160708;  // std dev = 6.181, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13983353069020008;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117464;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827349;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19714781947153934;  // std dev = 4.451, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10373197030079258;  // std dev = 3.673, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09365322705026476;  // std dev = 3.512, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05446648960597646;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 3.369264091395398E-4;  // std dev = 7.981, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.004856845350105545;  // std dev = 6.119, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032763;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.0574502846558328;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3133734866054964;  // std dev = 1.212, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1093094222368596;  // std dev = 5.625, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10351513070523911;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07046981818975813;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0020278581098908564;  // std dev = 7.965, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005181802094929035;  // std dev = 6.115, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316852;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.047419046470391094;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23526004251858407;  // std dev = 1.213, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08382766849802052;  // std dev = 5.624, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07985656479674072;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0503217720391633;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04043645456632581;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.003613314983016;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04854983220098262;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.038186054196640874;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09904966792001214;  // std dev = 4.436, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.03182151557810509;  // std dev = 3.659, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08291941357430736;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06743951926943002;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002790177217370019;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005350370657795092;  // std dev = 6.114, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.038999069347985;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03115348690401455;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1857370261471719;  // std dev = 1.208, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04480182678011047;  // std dev = 5.615, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06765496427012778;  // std dev = 3.493, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.04652968505867808;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0035904805548335333;  // std dev = 7.960, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005997957585856021;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03120427327685979;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.02475672970229035;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06937973087088817;  // std dev = 4.443, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 5.670767562846438E-4;  // std dev = 3.631, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19393119773947365;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.003831538752342946;  // std dev = 3.372, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003132788143155824;  // std dev = 7.960, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005267250578239163;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */


Results
   AUC ROC   = 0.566539
   AUC PR    = 0.701245
   CLL	      = -0.791016
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 853.144 seconds
Total inference time: 2.155 seconds
AUC ROC: 0.566539


Results scoring model
   AUC ROC   = 0.638473
   AUC PR    = 0.553475
   CLL	      = -0.566925
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 21.102 seconds
Refined model CLL: -0.566925


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566539
   AUC PR    = 0.701245
   CLL	      = -0.791016
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 882.833 seconds
Total inference time: 2.155 seconds
AUC ROC: 0.566539
Total revision time: 882.833
Best scored revision CLL: -0.566925


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 01:05:20
{'AUC ROC': 0.566539, 'AUC PR': 0.701245, 'CLL': -0.791016, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 882.833, 'Inference time': 2.155, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.182, 'Inference time': 0.711}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.2867203636709361;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.24811816884742238;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 2.36e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.20848477447887367;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.17062637354017376;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.13664585375352517;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.10762034996183606;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.08372807955323996;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.06457405393631457;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.04949778322519096;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else return 0.03777940363353924;  // std dev = 15.492, 980.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=420 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.566832
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1.657 seconds
Total inference time: 0.939 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.568789
   AUC PR    = 0.59981
   CLL	      = -0.64893
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.137577
   F1        = 0.241877


Total scoring time: 0.941 seconds
Parameter learned model CLL: -0.64893


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.36e-08, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 67], 'false': [15.492, 560, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.71e-08, 0, 67], 'false': [15.492, 560, 420]}]]
[{'': [-9.544603913195376e-16, 0.24489795918366078]}, {'': [3.1815346377317917e-16, 0.2448979591836818]}, {'': [5.302557729552986e-16, 0.2448979591836695]}, {'': [-2.9164067512541426e-16, 0.24489795918367788]}, {'': [-2.783842808015318e-16, 0.24489795918367183]}, {'': [-3.9769182971647396e-17, 0.2448979591836732]}, {'': [-6.628197161941232e-17, 0.24489795918367183]}, {'': [-6.628197161941233e-18, 0.24489795918367524]}, {'': [4.3083281552618016e-17, 0.2448979591836793]}, {'': [3.314098580970616e-17, 0.24489795918366747]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3055788416415637;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07554023944733845;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03763611458669184;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.46e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.26417084368084415;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2616318086752123;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06609369457227725;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.448295606241962;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03299265250936408;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.88e-07, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.22129228873168955;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2192721473492705;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.41257245288266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05740984924998567;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.36236334632262296;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02881915586731201;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1802460902763358;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1787352457468729;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.3151786576185065;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.056476192482004986;  // std dev = 3.031, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.33215198718371114;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.16784801281628892;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.022000676072008476;  // std dev = 2.197, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14351241307343643;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1424392447767627;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.23676009386434194;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04090684365527823;  // std dev = 2.766, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.26728670091475853;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017575960475578647;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.10362210504929797;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11232809375843687;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11159559999632984;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.17806945427207505;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.26033223955877116;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.04550062157325863;  // std dev = 3.190, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return -0.013794326699642822;  // std dev = 2.041, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08685538456114784;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08637026299843614;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.13513671764223462;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.031492330644139345;  // std dev = 2.744, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.19046415553818996;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008833176513130174;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.106160348477944;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06659737267486378;  // std dev = 0.497, 856.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=383 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06628370899125427;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.103671751136855;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.17964139090054568;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05870884119149834;  // std dev = 3.076, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007579366921055735;  // std dev = 2.397, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.09651542348573433;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367066;  // std dev = 5.37e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.3288242468923141;  // std dev = 0.461, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.04699775275072636;  // std dev = 14.425, 843.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=374 */
%   | | | else return 0.03330933192088682;  // std dev = 3.524, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.036339926395397334;  // std dev = 2.695, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.035437680054127674;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.2046766636574313;  // std dev = 0.520, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.03791371114123539;  // std dev = 14.465, 848.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=379 */
%   | | | else return 0.057648665450152334;  // std dev = 2.839, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else return 0.028840976440817463;  // std dev = 0.384, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.029979005216238207;  // std dev = 2.694, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.02867427056107117;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.18320934138758524;  // std dev = 0.492, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.64779
   AUC PR    = 0.448405
   CLL	      = -0.552949
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 164.712 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.64779


Results scoring model
   AUC ROC   = 0.620239
   AUC PR    = 0.638224
   CLL	      = -0.632159
   Precision = 0.940476 at threshold = 0.5
   Recall    = 0.162218
   F1        = 0.276708


Total scoring time: 3.065 seconds
Refined model CLL: -0.632159


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.64779
   AUC PR    = 0.448405
   CLL	      = -0.552949
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 170.375 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.64779
Total revision time: 170.375
Best scored revision CLL: -0.632159


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:08:14
{'AUC ROC': 0.64779, 'AUC PR': 0.448405, 'CLL': -0.552949, 'Precision': [0.896552, 0.5], 'Recall': 0.179002, 'F1': 0.298422, 'Learning time': 170.375, 'Inference time': 1.812, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.566832, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1.657, 'Inference time': 0.939}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.68e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.28437844329622863;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.24612233564417788;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.21e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.2068865189603542;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.26e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.1694190275926853;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.46e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.135778303124917;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694902;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.10702182829860135;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.33e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.083328649423975;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.06431514741147057;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.04933482204425348;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else return 0.03768036353344634;  // std dev = 21.849, 1,952.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=832 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.564805
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.388 seconds
Total inference time: 0.957 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.572895
   AUC PR    = 0.605826
   CLL	      = -0.646157
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.145791
   F1        = 0.25448


Total scoring time: 1.107 seconds
Parameter learned model CLL: -0.646157


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.68e-07, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.26e-07, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.33e-07, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 142], 'false': [21.849, 1, 832]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 142], 'false': [21.849, 1, 832]}]]
[{'': [5.304051407786663e-15, 0.24455791453912631]}, {'': [-2.201681716439747e-15, 0.24455791453908246]}, {'': [1.8013759498143385e-15, 0.2445579145391104]}, {'': [1.2759746311184898e-15, 0.24455791453909778]}, {'': [4.2532487703949657e-16, 0.24455791453911152]}, {'': [-1.2509555207044018e-16, 0.24455791453909217]}, {'': [3.815414338148425e-16, 0.24455791453911163]}, {'': [-2.939745473655344e-16, 0.24455791453910178]}, {'': [-3.752866562113205e-17, 0.2445579145390887]}, {'': [2.5019110414088035e-17, 0.24455791453909725]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.68e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3054088054589652;  // std dev = 0.497, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4322230091735853;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04506482294997952;  // std dev = 4.033, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00740266644279592;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2640262563236005;  // std dev = 0.497, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3710948296250062;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.039490079292975815;  // std dev = 4.033, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.361386758207022;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006499153421031202;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.06e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5017528557536352;  // std dev = 2.408, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return -0.02740763502720727;  // std dev = 1.435, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.21863042731140914;  // std dev = 20.216, 1,655.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=736 */
%   | | | else return 0.3044798261358514;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.034457093242214853;  // std dev = 4.033, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.29707588146212427;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0057019668210172144;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.26e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4007421137477938;  // std dev = 2.407, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return -0.022505474728625036;  // std dev = 1.435, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.17811155637392015;  // std dev = 20.216, 1,655.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=736 */
%   | | | else return 0.24053074202155297;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.031146327382547977;  // std dev = 3.985, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | | else return 0.398590870433661;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0051974770402677456;  // std dev = 3.171, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.46e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1430963573834462;  // std dev = 0.496, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.4133751451809416;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18511067066456027;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.023478667479337734;  // std dev = 3.988, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.22840955267865404;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0011118970254806427;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694902;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11203510156521769;  // std dev = 0.496, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17163817664692335;  // std dev = 2.796, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.11775767341434942;  // std dev = 2.339, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01807920822060301;  // std dev = 3.945, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | | else return 0.3343954272002884;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0013654223208723604;  // std dev = 3.171, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.33e-07, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08666169849088393;  // std dev = 0.496, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1294516049259009;  // std dev = 2.796, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.08897352126867221;  // std dev = 2.340, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.014273056806434094;  // std dev = 3.948, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.17153396220037515;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0013263298629072491;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21978429215225695;  // std dev = 2.407, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return -0.09028112962113881;  // std dev = 1.394, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06529747489386978;  // std dev = 20.216, 1,655.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=736 */
%   | | | else return 0.07505114714076165;  // std dev = 3.631, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008888294857859556;  // std dev = 3.921, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   | | | else return 0.26860686975503145;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.15170922475718834;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.007726423926423162;  // std dev = 3.147, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050572253890501795;  // std dev = 0.496, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.25278901639785073;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.056305924350528495;  // std dev = 3.631, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007712267418944664;  // std dev = 3.911, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | | else return 0.12783210615594617;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0022961061571165984;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.07249983187600584;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03843788380290436;  // std dev = 0.496, 1,697.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=759 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06362034970646746;  // std dev = 2.795, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.03269400400333479;  // std dev = 2.338, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.14422038063799014;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.006017787903093434;  // std dev = 1.294, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.08027697649745091;  // std dev = 1.487, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.007102374496466411;  // std dev = 4.885, 167.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=34 */


Results
   AUC ROC   = 0.622829
   AUC PR    = 0.420909
   CLL	      = -0.547035
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 202.968 seconds
Total inference time: 1.493 seconds
AUC ROC: 0.622829


Results scoring model
   AUC ROC   = 0.6335
   AUC PR    = 0.649974
   CLL	      = -0.624953
   Precision = 0.864035 at threshold = 0.5
   Recall    = 0.202259
   F1        = 0.327787


Total scoring time: 1.989 seconds
Refined model CLL: -0.624953


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622829
   AUC PR    = 0.420909
   CLL	      = -0.547035
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 208.452 seconds
Total inference time: 1.493 seconds
AUC ROC: 0.622829
Total revision time: 208.452
Best scored revision CLL: -0.624953


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:11:45
{'AUC ROC': 0.622829, 'AUC PR': 0.420909, 'CLL': -0.547035, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 208.452, 'Inference time': 1.493, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.564805, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.388, 'Inference time': 0.957}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.2820172478567089;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.2441095512527666;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.80e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.20527336778783617;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.16819886437719975;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.13490020760831312;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.10641512811386133;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.08292327144541387;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 4.21e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.06405220131497828;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.04916932761951787;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else return 0.03757990384564812;  // std dev = 26.685, 2,916.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,236 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.56278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.311 seconds
Total inference time: 0.911 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.577002
   AUC PR    = 0.611738
   CLL	      = -0.643363
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154004
   F1        = 0.266904


Total scoring time: 1.193 seconds
Parameter learned model CLL: -0.643363


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.8e-08, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 225], 'false': [26.685, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 225], 'false': [26.685, 1, 1]}]]
[{'': [5.179067051762508e-15, 0.24420396619759002]}, {'': [-4.042198674546348e-15, 0.2442039661975947]}, {'': [1.4526651486650938e-15, 0.2442039661975638]}, {'': [0.0, 0.2442039661975327]}, {'': [5.052748343182935e-16, 0.2442039661975663]}, {'': [3.552713678800501e-16, 0.24420396619758516]}, {'': [4.026408835973901e-16, 0.24420396619755386]}, {'': [7.894919286223335e-18, 0.2442039661975751]}, {'': [-1.5000346643824338e-16, 0.24420396619756227]}, {'': [9.473903143468003e-17, 0.2442039661975795]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29990804761931705;  // std dev = 0.497, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | | | else return 0.3716624486130258;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08654399682790603;  // std dev = 5.343, 162.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=37 */
%   | | | else return 0.47719655414713136;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.027960255854229364;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2593473026843409;  // std dev = 0.497, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7953743095735096;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.348257199050263;  // std dev = 4.687, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07567906832869242;  // std dev = 5.343, 162.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=37 */
%   | | | else return 0.40869536777561244;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02452247055524595;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2174527172488095;  // std dev = 0.497, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3303473117887992;  // std dev = 3.627, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | | | else return 0.2574997801957283;  // std dev = 3.027, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06562727927790074;  // std dev = 5.343, 162.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=37 */
%   | | | else return 0.3328876855252501;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021450704660148923;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17737244432663038;  // std dev = 0.497, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5622376069872117;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22366968698722062;  // std dev = 4.682, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16722258752136326;  // std dev = 3.964, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.02451841419361148;  // std dev = 4.205, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.018719920265976547;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014955;  // std dev = 3.37e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14146957457152104;  // std dev = 0.497, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.422806142809684;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17277254478773932;  // std dev = 4.681, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.13790417837239746;  // std dev = 3.957, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.020999917574345488;  // std dev = 4.205, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016303136332368944;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.83e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.35149008939335835;  // std dev = 2.866, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return -0.12882651012523547;  // std dev = 1.865, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10951454491009831;  // std dev = 24.642, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,379 #pos=1,085 */
%   | | | else return 0.13145567008654613;  // std dev = 4.681, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03716715744136586;  // std dev = 5.321, 162.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=37 */
%   | | | else return 0.18763588448476695;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014172663364884104;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.335765545385609;  // std dev = 2.752, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return -0.1521333056239367;  // std dev = 1.838, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0843907486256911;  // std dev = 24.639, 2,469.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=1,087 */
%   | | | else return 0.10590441779264875;  // std dev = 4.634, 90.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1669924345566419;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.09168289591457678;  // std dev = 1.301, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0534502677940265;  // std dev = 5.384, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | | else return 0.008003184040425767;  // std dev = 4.012, 108.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 4.21e-08, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06582687637874501;  // std dev = 0.495, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10273997745365056;  // std dev = 3.601, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | | | else return 0.052701496183475055;  // std dev = 3.007, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17139102046983234;  // std dev = 1.721, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.030643651093414714;  // std dev = 5.484, 170.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=45 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004824161911894563;  // std dev = 3.867, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.07726414616405046;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.356396327519257;  // std dev = 16.873, 1,517.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=1,126 */
%   | | | else return -0.34441987130406404;  // std dev = 6.359, 1,169.000 (wgt'ed) examples reached here.  /* #neg=1,129 #pos=40 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.20044963519937697;  // std dev = 1.447, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.04632883051320954;  // std dev = 3.647, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04231195955693213;  // std dev = 4.699, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | | else return -0.3034637086229794;  // std dev = 0.396, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.46603320801692066;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0719331605846917;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 225.000 (wgt'ed) examples reached here.  /* #pos=225 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.034883469620558105;  // std dev = 22.148, 2,524.000 (wgt'ed) examples reached here.  /* #neg=1,409 #pos=1,115 */
%   | | | else return 0.056964383394603316;  // std dev = 4.327, 93.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=41 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.03531542636137753;  // std dev = 4.695, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | | else return -0.28346479413750153;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03572959381060064;  // std dev = 4.578, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return -0.25905622055416816;  // std dev = 0.585, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return -0.35386111567937173;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06727697908672879;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.894873
   AUC PR    = 0.772944
   CLL	      = -0.449277
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 729.652 seconds
Total inference time: 2.066 seconds
AUC ROC: 0.894873


Results scoring model
   AUC ROC   = 0.869989
   AUC PR    = 0.841099
   CLL	      = -0.534996
   Precision = 0.913747 at threshold = 0.5
   Recall    = 0.232033
   F1        = 0.370087


Total scoring time: 6.824 seconds
Refined model CLL: -0.534996


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.894873
   AUC PR    = 0.772944
   CLL	      = -0.449277
   Precision = 0.903509 at threshold = 0.5
   Recall    = 0.177281
   F1        = 0.296403


Total learning time: 740.98 seconds
Total inference time: 2.066 seconds
AUC ROC: 0.894873
Total revision time: 740.98
Best scored revision CLL: -0.534996


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:24:10
{'AUC ROC': 0.894873, 'AUC PR': 0.772944, 'CLL': -0.449277, 'Precision': [0.903509, 0.5], 'Recall': 0.177281, 'F1': 0.296403, 'Learning time': 740.98, 'Inference time': 2.066, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.56278, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.311, 'Inference time': 0.911}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.27978590902153144;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.24220697833593302;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.20374732588019637;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.16704313899803436;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.13406723921757888;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.1058387538691002;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.082537682411746;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.06380190005704203;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.049011781345101514;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.037484363222167125;  // std dev = 30.732, 3,873.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,633 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560882
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.11 seconds
Total inference time: 0.943 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.580852
   AUC PR    = 0.61719
   CLL	      = -0.640725
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161704
   F1        = 0.278392


Total scoring time: 1.357 seconds
Parameter learned model CLL: -0.640725


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [30.732, 2, 1]}]]
[{'': [3.5188783104309725e-15, 0.2438592361438556]}, {'': [-4.962520694197525e-15, 0.24385923614396576]}, {'': [-3.1579677144893343e-16, 0.24385923614392138]}, {'': [-8.797195776077431e-16, 0.2438592361438924]}, {'': [-4.2858133268069536e-16, 0.24385923614390204]}, {'': [4.3985978880387156e-16, 0.24385923614388433]}, {'': [1.9737298215558337e-16, 0.24385923614391175]}, {'': [2.1992989440193578e-16, 0.24385923614390614]}, {'': [-2.1711028037114172e-16, 0.24385923614391808]}, {'': [-1.8327491200161313e-16, 0.24385923614387095]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29961748761229684;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.48828592140088267;  // std dev = 4.125, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | | | else return 0.40162719596907653;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07898226843284574;  // std dev = 6.426, 240.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=53 */
%   | | | else return 0.4581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031225858176434806;  // std dev = 4.725, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2591000721417957;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6234874599407447;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3774959204092602;  // std dev = 5.234, 113.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=66 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2057909689094006;  // std dev = 4.961, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return 0.027382080461691303;  // std dev = 4.725, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02660382919867106;  // std dev = 4.796, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21725571517877135;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3444810987863405;  // std dev = 4.116, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | | | else return 0.27752235692668176;  // std dev = 3.372, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.057001891400830326;  // std dev = 6.403, 240.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=53 */
%   | | | else return 0.35695553368646715;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02394071990159448;  // std dev = 4.725, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1772247667167914;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.4245566261091262;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24108434150568434;  // std dev = 5.227, 113.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=66 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.050749301819788054;  // std dev = 6.266, 236.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=54 */
%   | | | else return 0.27685171040299644;  // std dev = 2.633, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015526430680248587;  // std dev = 4.796, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1413644027575334;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.38001174485521105;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18350546514067634;  // std dev = 5.224, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1343512856984878;  // std dev = 4.875, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return 0.014003646741248738;  // std dev = 4.726, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.013398959284265023;  // std dev = 4.796, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11086079626159165;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16199393426954808;  // std dev = 4.108, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | | | else return 0.11807268123332859;  // std dev = 3.354, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.033657583382067195;  // std dev = 6.243, 236.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=54 */
%   | | | else return 0.20685145641882213;  // std dev = 2.628, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011545116668661417;  // std dev = 4.796, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08588312890615526;  // std dev = 0.497, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.25034725366297483;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1028641427366647;  // std dev = 5.221, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.024356756300573948;  // std dev = 6.319, 240.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=53 */
%   | | | else return 0.2365326847797241;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007338160829663687;  // std dev = 4.728, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28668428335774293;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return -0.1912179414216935;  // std dev = 2.111, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06458665418025503;  // std dev = 28.247, 3,238.000 (wgt'ed) examples reached here.  /* #neg=1,813 #pos=1,425 */
%   | | | else return 0.07581979734499428;  // std dev = 5.216, 113.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.20210599405402663;  // std dev = 2.383, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.019017805315568393;  // std dev = 6.331, 241.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09803322414929758;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.012147855910874427;  // std dev = 4.615, 150.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05034464808017596;  // std dev = 0.496, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.18405966596374787;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05640548178872038;  // std dev = 5.218, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01673172889512537;  // std dev = 6.173, 236.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=54 */
%   | | | else return 0.1564058849167845;  // std dev = 2.626, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002703312777683412;  // std dev = 4.797, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.0733539855396708;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0382958110817478;  // std dev = 0.496, 3,323.000 (wgt'ed) examples reached here.  /* #neg=1,856 #pos=1,467 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05773722621761644;  // std dev = 4.107, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | | | else return 0.029057137916749264;  // std dev = 3.347, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01403129979791477;  // std dev = 6.172, 236.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=54 */
%   | | | else return 0.1221541475902231;  // std dev = 2.625, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0023116320734077123;  // std dev = 4.797, 157.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=28 */
%   | | | else return -0.06852160593966893;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.622758
   AUC PR    = 0.420896
   CLL	      = -0.546052
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 452.59000000000003 seconds
Total inference time: 1.385 seconds
AUC ROC: 0.622758


Results scoring model
   AUC ROC   = 0.638458
   AUC PR    = 0.657681
   CLL	      = -0.624023
   Precision = 0.889401 at threshold = 0.5
   Recall    = 0.198152
   F1        = 0.324097


Total scoring time: 3.189 seconds
Refined model CLL: -0.624023


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622758
   AUC PR    = 0.420896
   CLL	      = -0.546052
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 461.24600000000004 seconds
Total inference time: 1.385 seconds
AUC ROC: 0.622758
Total revision time: 461.24600000000004
Best scored revision CLL: -0.624023


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:31:54
{'AUC ROC': 0.622758, 'AUC PR': 0.420896, 'CLL': -0.546052, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 461.24600000000004, 'Inference time': 1.385, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560882, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.11, 'Inference time': 0.943}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.11 seconds
Total inference time: 0.91 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 1.276 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4245825015330777;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.36468758839338117;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.492721975126494;  // std dev = 1.222, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2955833099140368;  // std dev = 5.916, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38360322303955946;  // std dev = 1.219, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23356001225859063;  // std dev = 5.915, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1978513538030749;  // std dev = 4.666, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.16944119483601836;  // std dev = 3.843, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155987;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15363546770502223;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1231788615832676;  // std dev = 3.835, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04103392149496016;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157903;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11621250794211743;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09206061998432577;  // std dev = 3.832, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03421308315076536;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797175400585821;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01504259737406271;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2533806330787088;  // std dev = 4.035, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.20061259533352818;  // std dev = 2.213, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06520486116477162;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.07381979548879723;  // std dev = 5.911, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026161070506565468;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721803758904671;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07792878242720495;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01564205293366694;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19250817138083867;  // std dev = 4.035, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.15491545509819654;  // std dev = 2.213, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0498152267275001;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.055404403115814536;  // std dev = 5.911, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02204137173824403;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13262135157292512;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07934944324624664;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014293238860480374;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3506725858531609;  // std dev = 21.451, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.3581433627840747;  // std dev = 7.801, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15021771829370523;  // std dev = 2.845, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.02511290838275066;  // std dev = 4.724, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.043998856348789826;  // std dev = 6.305, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.18714621677108853;  // std dev = 0.926, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5080788686099443;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07261959653327635;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.894837
   AUC PR    = 0.769486
   CLL	      = -0.449825
   Precision = 0.912281 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.299281


Total learning time: 1028.501 seconds
Total inference time: 2.188 seconds
AUC ROC: 0.894837


Results scoring model
   AUC ROC   = 0.873286
   AUC PR    = 0.844687
   CLL	      = -0.532299
   Precision = 0.924786 at threshold = 0.5
   Recall    = 0.222085
   F1        = 0.35816


Total scoring time: 9.683 seconds
Refined model CLL: -0.532299


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.894837
   AUC PR    = 0.769486
   CLL	      = -0.449825
   Precision = 0.912281 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.299281


Total learning time: 1044.57 seconds
Total inference time: 2.188 seconds
AUC ROC: 0.894837
Total revision time: 1044.57
Best scored revision CLL: -0.532299


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 01:49:22
{'AUC ROC': 0.894837, 'AUC PR': 0.769486, 'CLL': -0.449825, 'Precision': [0.912281, 0.5], 'Recall': 0.179002, 'F1': 0.299281, 'Learning time': 1044.57, 'Inference time': 2.188, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.11, 'Inference time': 0.91}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.18177907208580882;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.15817976485066187;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.1351691074749808;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.11362128456550186;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.0941503207299003;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.07708062073150929;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.062483969179725644;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.05024914063709717;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.04015463266861607;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.031928118637574276;  // std dev = 15.990, 1,168.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=378 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637693
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 1.727 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.53929
   CLL	      = -0.600279
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 0.997 seconds
Parameter learned model CLL: -0.600279


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 76], 'false': [15.99, 790, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 76], 'false': [15.99, 790, 378]}]]
[{'': [-1.3088945132422897e-15, 0.21889367142051194]}, {'': [5.609547913895527e-16, 0.2188936714205199]}, {'': [1.402386978473882e-15, 0.21889367142052618]}, {'': [-9.349246523159212e-17, 0.21889367142053584]}, {'': [-3.8565641908031755e-16, 0.21889367142053306]}, {'': [-1.1686558153949016e-17, 0.21889367142052427]}, {'': [-9.933574430856664e-17, 0.21889367142052388]}, {'': [1.1686558153949016e-17, 0.21889367142052343]}, {'': [7.596262800066861e-17, 0.21889367142052044]}, {'': [3.7981314000334304e-17, 0.21889367142053656]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.011416282291792127;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.212618789569362;  // std dev = 0.478, 962.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=341 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02836170105695919;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.04569721874664157;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18103668746464194;  // std dev = 0.477, 1,005.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=352 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.024874057193572306;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.18701313901080718;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.040225038633968396;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1540482632930254;  // std dev = 0.477, 1,005.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=352 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0217569792865155;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.15896073315130535;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03555626441776288;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12861845410765887;  // std dev = 0.477, 1,005.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=352 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.018985445643178785;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.1324864873687855;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.031542936480808186;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.46055262713275363;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.05591983850263973;  // std dev = 1.558, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.10209605742068484;  // std dev = 0.476, 972.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=337 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.054111791149871545;  // std dev = 3.560, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | | else return -0.035243936249279725;  // std dev = 1.935, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.028070426333213803;  // std dev = 2.126, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12783730057232062;  // std dev = 2.186, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.09188504850963419;  // std dev = 1.613, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else return 0.08885014658792749;  // std dev = 0.477, 962.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=341 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.061102056405054984;  // std dev = 0.978, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.10919657744944455;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.11461863317606408;  // std dev = 1.929, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.001969020488234327;  // std dev = 4.024, 128.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34563138305036456;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.060718680145168055;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.06568119230026363;  // std dev = 0.475, 972.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=337 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.23608876677232057;  // std dev = 1.746, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.1680599642044136;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016638449107770542;  // std dev = 3.661, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | | | else return -0.04219794704208999;  // std dev = 1.920, 53.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26279553899586616;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.04957940344049155;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.05223043623081833;  // std dev = 0.475, 972.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=337 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.05101425323393112;  // std dev = 0.979, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.09535407834856653;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08122162956948657;  // std dev = 1.888, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.001513417200048728;  // std dev = 4.020, 128.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.05814328799422297;  // std dev = 2.199, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.03320573065906187;  // std dev = 1.831, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.2280085687634932;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08745917466020808;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.04514149432375105;  // std dev = 0.476, 962.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=341 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02215937784168242;  // std dev = 4.029, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | | else return -0.02162038499569644;  // std dev = 1.873, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6619865129894754;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23243016273507086;  // std dev = 0.263, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.3380134870105247;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03981738498319429;  // std dev = 2.030, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.03545176999894689;  // std dev = 0.476, 962.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=341 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.06491200902582814;  // std dev = 1.890, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -1.4310477972614023E-4;  // std dev = 4.018, 128.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=20 */


Results
   AUC ROC   = 0.605821
   AUC PR    = 0.589467
   CLL	      = -0.627817
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 53.985 seconds
Total inference time: 1.336 seconds
AUC ROC: 0.605821


Results scoring model
   AUC ROC   = 0.656577
   AUC PR    = 0.593567
   CLL	      = -0.578054
   Precision = 0.946237 at threshold = 0.5
   Recall    = 0.193833
   F1        = 0.321755


Total scoring time: 1.328 seconds
Refined model CLL: -0.578054


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.605821
   AUC PR    = 0.589467
   CLL	      = -0.627817
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 58.037000000000006 seconds
Total inference time: 1.336 seconds
AUC ROC: 0.605821
Total revision time: 58.037000000000006
Best scored revision CLL: -0.578054


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:50:23
{'AUC ROC': 0.605821, 'AUC PR': 0.589467, 'CLL': -0.627817, 'Precision': [0.945736, 0.5], 'Recall': 0.16332, 'F1': 0.278539, 'Learning time': 58.037000000000006, 'Inference time': 1.336, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637693, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 1.727, 'Inference time': 0.801}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.17989925684982902;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.1565593448026987;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.13382404669450992;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.54e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.11254419934318144;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.04e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.09331601593204791;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.07645379627936029;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.58e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.06202627929521797;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.04992416060822118;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.03993057180301439;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.03177879305079284;  // std dev = 22.554, 2,331.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=750 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.591 seconds
Total inference time: 0.804 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587004
   AUC PR    = 0.544467
   CLL	      = -0.597765
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174009
   F1        = 0.296435


Total scoring time: 1.207 seconds
Parameter learned model CLL: -0.597765


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.83e-07, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.54e-07, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.04e-07, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.58e-07, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [22.554, 1, 750]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 158], 'false': [22.554, 1, 750]}]]
[{'': [6.1160640546439006e-15, 0.2182270522039108]}, {'': [-2.698263553519368e-15, 0.21822705220387015]}, {'': [1.8438134282382346e-15, 0.21822705220387456]}, {'': [1.3041607175343611e-15, 0.21822705220388436]}, {'': [5.846237699291963e-16, 0.2182270522038859]}, {'': [-2.136125313202833e-16, 0.2182270522038918]}, {'': [4.216036802374012e-16, 0.21822705220388178]}, {'': [-3.0917603217409425e-16, 0.218227052203891]}, {'': [-2.33287369731362e-16, 0.2182270522038745]}, {'': [5.340313283007082e-17, 0.21822705220388078]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20386463594150828;  // std dev = 0.476, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,321 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.006048595764685421;  // std dev = 4.360, 162.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=22 */
%   | | | else return 0.09814893509951236;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.0020661186639285146;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1403010850905902;  // std dev = 3.810, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.8314775556788255;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1768012966860115;  // std dev = 0.475, 1,946.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=672 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.25022364600172925;  // std dev = 2.642, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.16523264932090503;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05188446171896831;  // std dev = 2.201, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.002662301444197818;  // std dev = 5.401, 243.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3370146898595122;  // std dev = 2.824, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return -0.05897568070068009;  // std dev = 2.026, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14650482668893366;  // std dev = 3.807, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.15183697035271648;  // std dev = 20.656, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,231 #pos=653 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.21308774868823538;  // std dev = 2.640, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.14369308797200994;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.008069597301227848;  // std dev = 4.693, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
%   | | | else return -0.00535994245660614;  // std dev = 3.471, 102.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.54e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3446702847957776;  // std dev = 2.277, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.009855903421258277;  // std dev = 2.619, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else return 0.12676422919824015;  // std dev = 0.476, 1,951.000 (wgt'ed) examples reached here.  /* #neg=1,275 #pos=676 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05000202333206086;  // std dev = 4.752, 143.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=30 */
%   | | | else return -0.031887303212992935;  // std dev = 2.502, 62.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.08484853368268709;  // std dev = 2.146, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.03281690579749939;  // std dev = 2.821, 81.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.04e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10357013236096879;  // std dev = 0.474, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,321 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09938666345534651;  // std dev = 2.244, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.15759459226968062;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.023404056584564653;  // std dev = 5.321, 198.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=36 */
%   | | | else return -0.02882948554924366;  // std dev = 2.821, 81.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08407834198111078;  // std dev = 0.474, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,321 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03969839210734408;  // std dev = 4.746, 143.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=30 */
%   | | | else return -0.0308411909257286;  // std dev = 2.502, 62.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.01048434092906611;  // std dev = 3.527, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.14974782900770156;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.58e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06752939500227592;  // std dev = 0.474, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,321 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1618157568227858;  // std dev = 2.617, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.14095257935176939;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0037675599243694076;  // std dev = 4.763, 181.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=27 */
%   | | | else return -0.01286131075752009;  // std dev = 3.331, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053782098922461864;  // std dev = 0.474, 2,019.000 (wgt'ed) examples reached here.  /* #neg=1,321 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08317623276353953;  // std dev = 2.228, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return -0.13307161646679155;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05779815074448339;  // std dev = 2.620, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.00542694128844223;  // std dev = 5.386, 243.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17289743935368593;  // std dev = 2.792, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return -0.10792089987377887;  // std dev = 1.974, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03922581839309244;  // std dev = 3.789, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.043332641959446735;  // std dev = 20.656, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,231 #pos=653 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1182083973635582;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.1314809897823302;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.0027700495820104157;  // std dev = 4.755, 181.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=27 */
%   | | | else return -0.01076535942977428;  // std dev = 3.333, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.013545917613521587;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.48000463357679835;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03091951731910792;  // std dev = 3.789, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.03409929796433125;  // std dev = 20.656, 1,884.000 (wgt'ed) examples reached here.  /* #neg=1,231 #pos=653 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09312771931285892;  // std dev = 2.611, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.11718160250570518;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.02120837372307054;  // std dev = 2.167, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.004495663887744898;  // std dev = 5.386, 243.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=34 */


Results
   AUC ROC   = 0.597432
   AUC PR    = 0.580862
   CLL	      = -0.631166
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 83.048 seconds
Total inference time: 1.249 seconds
AUC ROC: 0.597432


Results scoring model
   AUC ROC   = 0.646251
   AUC PR    = 0.585185
   CLL	      = -0.582414
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17511
   F1        = 0.298032


Total scoring time: 1.683 seconds
Refined model CLL: -0.582414


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.597432
   AUC PR    = 0.580862
   CLL	      = -0.631166
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 88.52900000000001 seconds
Total inference time: 1.249 seconds
AUC ROC: 0.597432
Total revision time: 88.52900000000001
Best scored revision CLL: -0.582414


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:51:54
{'AUC ROC': 0.597432, 'AUC PR': 0.580862, 'CLL': -0.631166, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 88.52900000000001, 'Inference time': 1.249, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638287, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.591, 'Inference time': 0.804}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.17965923258234473;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.1563524179221917;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.41e-08, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.13365222212359087;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.11240652624288183;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.09320928994837054;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.07637353309735766;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.06196760633358817;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.07e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.04988244551269033;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.039901767067254505;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.031759560871256164;  // std dev = 27.616, 3,496.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,124 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638364
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.822 seconds
Total inference time: 0.802 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.587372
   AUC PR    = 0.545012
   CLL	      = -0.597466
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174743
   F1        = 0.2975


Total scoring time: 1.278 seconds
Parameter learned model CLL: -0.597466


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.41e-08, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-07, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [27.616, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 238], 'false': [27.616, 2, 1]}]]
[{'': [4.89617683464943e-15, 0.21814142609536064]}, {'': [-4.179663151530001e-15, 0.21814142609530637]}, {'': [1.1344799982724288e-15, 0.21814142609531095]}, {'': [-1.791284207798572e-16, 0.21814142609532813]}, {'': [3.4332947316139296e-16, 0.21814142609534493]}, {'': [3.731842099580358e-16, 0.2181414260953128]}, {'': [3.582568415597144e-16, 0.21814142609533385]}, {'': [4.8513947294544656e-17, 0.21814142609534512]}, {'': [-1.679328944811161e-16, 0.21814142609531853]}, {'': [4.47821051949643e-17, 0.21814142609536138]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4359267128772891;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return 0.10814893509951237;  // std dev = 3.354, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else return 0.20232701729128805;  // std dev = 0.475, 2,920.000 (wgt'ed) examples reached here.  /* #neg=1,915 #pos=1,005 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.24276431971489698;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03206197857777323;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.006396913536170053;  // std dev = 6.844, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40094805099651454;  // std dev = 3.011, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return 0.10409111372736739;  // std dev = 3.608, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16502623438052771;  // std dev = 4.472, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return 0.17621586924505897;  // std dev = 25.280, 2,830.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=975 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.005110000393534594;  // std dev = 5.403, 245.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=34 */
%   | | | else return 0.07462204883956858;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.057742322715235044;  // std dev = 5.153, 166.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=34 */
%   | | | else return -0.14702256746126707;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.20e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3399001896129347;  // std dev = 3.335, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return -0.026290890325556867;  // std dev = 2.733, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | else return 0.15118452140262117;  // std dev = 0.475, 2,926.000 (wgt'ed) examples reached here.  /* #neg=1,913 #pos=1,013 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.2052301266018232;  // std dev = 3.029, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.12999983166918128;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0014020142890657109;  // std dev = 5.687, 260.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=38 */
%   | | | else return 0.017580250977255487;  // std dev = 4.578, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2813508099496472;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return -0.02223433908631662;  // std dev = 2.733, 54.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=9 */
%   | | else return 0.1263652519212387;  // std dev = 0.475, 2,926.000 (wgt'ed) examples reached here.  /* #neg=1,913 #pos=1,013 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.17302384074405514;  // std dev = 3.028, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.1159939288678178;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001225775951828685;  // std dev = 5.687, 260.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=38 */
%   | | | else return 0.015429530584743134;  // std dev = 4.577, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09658771002536633;  // std dev = 4.487, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.5505243969633085;  // std dev = 1.165, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.10255158202998499;  // std dev = 0.475, 2,920.000 (wgt'ed) examples reached here.  /* #neg=1,915 #pos=1,005 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1427357167059598;  // std dev = 3.027, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.10462196413830524;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001071834089413599;  // std dev = 5.687, 260.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=38 */
%   | | | else return 0.01351960309688338;  // std dev = 4.577, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.24508048411758737;  // std dev = 3.201, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return 0.0015776760338272948;  // std dev = 3.258, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07207831301607623;  // std dev = 4.279, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return 0.0836344840011465;  // std dev = 25.280, 2,830.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=975 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1156201862179415;  // std dev = 3.026, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.09522086275879425;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.024512663751930456;  // std dev = 2.566, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.0013095398539005358;  // std dev = 6.834, 371.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=55 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.05146330283983645;  // std dev = 4.386, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.44831758644765707;  // std dev = 1.145, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.06691255140971852;  // std dev = 0.474, 2,920.000 (wgt'ed) examples reached here.  /* #neg=1,915 #pos=1,005 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08431748987385393;  // std dev = 2.529, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.09575321364193887;  // std dev = 0.990, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010722715417683026;  // std dev = 5.484, 253.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=35 */
%   | | | else return 0.027732769647318044;  // std dev = 4.991, 167.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.07e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05368786072269212;  // std dev = 0.474, 3,025.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,046 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07282383745879856;  // std dev = 2.525, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.08300339998777577;  // std dev = 0.988, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.009371757291059934;  // std dev = 5.484, 253.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=35 */
%   | | | else return 0.023892844160527744;  // std dev = 4.990, 167.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=33 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04248679315184823;  // std dev = 0.474, 3,025.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,046 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08448660717854316;  // std dev = 3.002, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.0921196652872022;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.003350475204901092;  // std dev = 5.686, 260.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=38 */
%   | | | else return 0.010215260907448767;  // std dev = 4.564, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03345334717186762;  // std dev = 0.474, 3,025.000 (wgt'ed) examples reached here.  /* #neg=1,979 #pos=1,046 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06647952168768619;  // std dev = 3.001, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.08470081680513313;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0029252100813449674;  // std dev = 5.686, 260.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=38 */
%   | | | else return 0.008916906938408463;  // std dev = 4.563, 157.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=25 */


Results
   AUC ROC   = 0.60286
   AUC PR    = 0.58653
   CLL	      = -0.630388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 118.023 seconds
Total inference time: 1.116 seconds
AUC ROC: 0.60286


Results scoring model
   AUC ROC   = 0.647576
   AUC PR    = 0.588784
   CLL	      = -0.582479
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174743
   F1        = 0.2975


Total scoring time: 1.977 seconds
Refined model CLL: -0.582479


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.60286
   AUC PR    = 0.58653
   CLL	      = -0.630388
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 125.1 seconds
Total inference time: 1.116 seconds
AUC ROC: 0.60286
Total revision time: 125.1
Best scored revision CLL: -0.582479


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:54:02
{'AUC ROC': 0.60286, 'AUC PR': 0.58653, 'CLL': -0.630388, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 125.1, 'Inference time': 1.116, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638364, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.822, 'Inference time': 0.802}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.1811369487981373;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.1576262846834548;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.1347097758208154;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.11325359174307748;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.0938656404460013;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.07686685890818594;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.06232799045101934;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.49e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.050138473825950915;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.04007840026095013;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else return 0.031877368040146646;  // std dev = 31.963, 4,672.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,509 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637894
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.906 seconds
Total inference time: 0.864 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584526
   AUC PR    = 0.540432
   CLL	      = -0.599547
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169053
   F1        = 0.289213


Total scoring time: 1.388 seconds
Parameter learned model CLL: -0.599547


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 307], 'false': [31.963, 3, 1]}]]
[{'': [3.5179966070206915e-15, 0.21866675670559016]}, {'': [-4.9066794782130695e-15, 0.21866675670565766]}, {'': [-1.8515771615898377e-16, 0.21866675670563882]}, {'': [-8.100650081955539e-16, 0.21866675670565391]}, {'': [-3.240260032782216e-16, 0.21866675670563385]}, {'': [4.2817721861764994e-16, 0.2186667567056225]}, {'': [2.0251625204888848e-16, 0.21866675670562075]}, {'': [2.0251625204888848e-16, 0.21866675670561034]}, {'': [-2.1119551999384085e-16, 0.21866675670565913]}, {'': [-1.620130016391108e-16, 0.2186667567056389]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20592090423069961;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11269438964496692;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.0918510649004878;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01501168019755162;  // std dev = 6.871, 357.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=56 */
%   | | | else return 0.04200543734166402;  // std dev = 5.785, 223.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=41 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44821050613027197;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return 0.08728679051013787;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else return 0.17763984681848713;  // std dev = 0.476, 3,888.000 (wgt'ed) examples reached here.  /* #neg=2,541 #pos=1,347 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.18059894066067367;  // std dev = 3.375, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.14847676188161604;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.041689273862922475;  // std dev = 3.225, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.014147647066618153;  // std dev = 8.305, 516.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=82 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15229489049757391;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.15657324897612301;  // std dev = 3.374, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.1306682841898615;  // std dev = 0.013, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.03631639745887352;  // std dev = 3.224, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.012387250098357424;  // std dev = 8.305, 516.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=82 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3592748422253776;  // std dev = 3.247, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return 0.043819581533663166;  // std dev = 3.978, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else return 0.12618932822930862;  // std dev = 0.476, 3,888.000 (wgt'ed) examples reached here.  /* #neg=2,541 #pos=1,347 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08883089920781395;  // std dev = 3.203, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.09359776737889099;  // std dev = 0.979, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009028528053011627;  // std dev = 6.873, 357.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=56 */
%   | | | else return 0.02785590067079636;  // std dev = 5.725, 223.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10450258738039837;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1295647266589227;  // std dev = 3.365, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.12051019283784259;  // std dev = 0.023, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0049961976222772176;  // std dev = 6.873, 358.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=56 */
%   | | | else return 0.019954846168167437;  // std dev = 5.658, 226.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=39 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08476664745252703;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10824528567214328;  // std dev = 3.363, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.10831321886907694;  // std dev = 0.021, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.004353252085281229;  // std dev = 6.873, 358.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=56 */
%   | | | else return 0.017359953483646398;  // std dev = 5.657, 226.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=39 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06802137876868293;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0891997299364833;  // std dev = 3.362, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.0982895140001551;  // std dev = 0.019, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0037912208658620497;  // std dev = 6.873, 358.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=56 */
%   | | | else return 0.015073339654599003;  // std dev = 5.657, 226.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=39 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.49e-07, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0541228081426977;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07266952313606473;  // std dev = 3.361, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return -0.08991731565306307;  // std dev = 0.018, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.003300365239724682;  // std dev = 6.873, 358.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=56 */
%   | | | else return 0.01306579328198843;  // std dev = 5.657, 226.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=39 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04278102005106661;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06806919267063449;  // std dev = 3.161, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.0945759907888322;  // std dev = 0.990, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.009176193809445923;  // std dev = 7.469, 402.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=69 */
%   | | | else return -0.0027009368188486045;  // std dev = 4.863, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #pos=307 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033644533222468326;  // std dev = 0.476, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,620 #pos=1,397 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20523906604502568;  // std dev = 1.291, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.002104182958762604;  // std dev = 3.045, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.007937939443749981;  // std dev = 7.469, 402.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=69 */
%   | | | else return -0.0023393411294318927;  // std dev = 4.863, 178.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=28 */


Results
   AUC ROC   = 0.600221
   AUC PR    = 0.582382
   CLL	      = -0.630323
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 103.007 seconds
Total inference time: 1.02 seconds
AUC ROC: 0.600221


Results scoring model
   AUC ROC   = 0.63196
   AUC PR    = 0.569896
   CLL	      = -0.587748
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169053
   F1        = 0.289213


Total scoring time: 1.773 seconds
Refined model CLL: -0.587748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600221
   AUC PR    = 0.582382
   CLL	      = -0.630323
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 111.074 seconds
Total inference time: 1.02 seconds
AUC ROC: 0.600221
Total revision time: 111.074
Best scored revision CLL: -0.587748


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:55:55
{'AUC ROC': 0.600221, 'AUC PR': 0.582382, 'CLL': -0.630323, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 111.074, 'Inference time': 1.02, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637894, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.906, 'Inference time': 0.864}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.056 seconds
Total inference time: 0.836 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 1.529 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.36066811573482954;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.05467667644457017;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.17857702459034952;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15219385565779273;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09942490398628517;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05504701669119267;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04985386106469921;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12715222749419094;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11129716342681688;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.09548188469524894;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01048448720466412;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029083565856265946;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3177586697840903;  // std dev = 4.213, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.036434234639483365;  // std dev = 3.905, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11410063384466769;  // std dev = 5.705, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.1036993832889615;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.004426700457596407;  // std dev = 7.683, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.0786376398444177;  // std dev = 3.730, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.03666756377194325;  // std dev = 6.511, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1550338547818387;  // std dev = 0.091, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2962350758118507;  // std dev = 3.659, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.007058463033318343;  // std dev = 4.412, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09234710402758829;  // std dev = 5.695, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.08412241710700173;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.20627111201953244;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01604821097489278;  // std dev = 3.403, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.005923277871312494;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023583750278021856;  // std dev = 6.424, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.21261949783236808;  // std dev = 4.174, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.03419641862845152;  // std dev = 3.876, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.06771498120485674;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08869477417264986;  // std dev = 3.476, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0871856485684271;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002842026484978313;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02403966117099299;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05395592092669654;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07235861771710858;  // std dev = 3.483, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0614456317850068;  // std dev = 1.337, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0033150925347708252;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018566104319872174;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04266016844626917;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07249180672955591;  // std dev = 3.467, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07888672482837335;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 8.994659949372779E-4;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01896060320040131;  // std dev = 6.400, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03355944205513419;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1724162426230009;  // std dev = 1.562, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0013661250304907765;  // std dev = 3.375, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00148633438155384;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.014565687549787616;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602834
   AUC PR    = 0.586332
   CLL	      = -0.629477
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 169.362 seconds
Total inference time: 1.139 seconds
AUC ROC: 0.602834


Results scoring model
   AUC ROC   = 0.639991
   AUC PR    = 0.578419
   CLL	      = -0.587595
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.666 seconds
Refined model CLL: -0.587595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602834
   AUC PR    = 0.586332
   CLL	      = -0.629477
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 179.613 seconds
Total inference time: 1.139 seconds
AUC ROC: 0.602834
Total revision time: 179.613
Best scored revision CLL: -0.587595


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 01:58:58
{'AUC ROC': 0.602834, 'AUC PR': 0.586332, 'CLL': -0.629477, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 179.613, 'Inference time': 1.139, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.056, 'Inference time': 0.836}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.17433652965321392;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.15176230588742834;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.12983721432337053;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.10934505673021633;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.09083101820090986;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07458033682080507;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.06065280102637052;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.048944391213246;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.0392514024027132;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.03132320397573137;  // std dev = 16.907, 1,322.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=418 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.723631
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1.972 seconds
Total inference time: 0.688 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.576065
   AUC PR    = 0.516418
   CLL	      = -0.598677
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15213
   F1        = 0.264085


Total scoring time: 1.016 seconds
Parameter learned model CLL: -0.598677


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 75], 'false': [16.907, 904, 418]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 75], 'false': [16.907, 904, 418]}]]
[{'': [-1.4210854715202005e-15, 0.21621299960403056]}, {'': [5.684341886080802e-16, 0.2162129996040663]}, {'': [1.3737159558028603e-15, 0.21621299960404833]}, {'': [-1.1842378929335003e-16, 0.2162129996040316]}, {'': [-3.789561257387201e-16, 0.21621299960405344]}, {'': [-1.1842378929335004e-17, 0.2162129996040334]}, {'': [-1.0066022089934752e-16, 0.21621299960403995]}, {'': [5.921189464667502e-18, 0.21621299960405052]}, {'': [7.697546304067752e-17, 0.21621299960404103]}, {'': [3.552713678800501e-17, 0.21621299960405277]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.20419544672741446;  // std dev = 15.597, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.07814893509951236;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.058517731567154355;  // std dev = 2.533, 84.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.05413176665487368;  // std dev = 0.283, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1774777081461899;  // std dev = 15.597, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.06836711157410681;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.28858739689073243;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.13487591597187418;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.02970882809319253;  // std dev = 3.126, 102.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return -0.04766921148168381;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.21e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15112249612814938;  // std dev = 15.597, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.05936136090327015;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3363737871134555;  // std dev = 2.287, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.19387946045405785;  // std dev = 1.775, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11989829345618623;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.02622302200866901;  // std dev = 3.126, 102.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return -0.04218547669776151;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5494945722009082;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.050325904946982594;  // std dev = 1.705, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.26026380297013924;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.11909484082730008;  // std dev = 15.703, 1,107.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=376 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.044410235561763475;  // std dev = 2.531, 84.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.0495122428917253;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.03749125763680067;  // std dev = 0.283, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.44898028369858045;  // std dev = 1.537, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.03505314542415246;  // std dev = 1.665, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09736916107153046;  // std dev = 15.628, 1,097.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=369 */
%   | | | else return 0.19950346820246848;  // std dev = 2.910, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.1036136741272466;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.020580710253978327;  // std dev = 3.121, 102.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return -0.03344210277084586;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08453795244964458;  // std dev = 15.542, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.019019900941222093;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19501158073172656;  // std dev = 2.284, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.08320260112923682;  // std dev = 1.771, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.03708084841860043;  // std dev = 2.531, 84.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.045972309527877245;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.029926017194678026;  // std dev = 0.283, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06791844322977623;  // std dev = 15.540, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.01594832860374204;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17955231849124326;  // std dev = 1.779, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.07448060156600042;  // std dev = 2.269, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12216506957634267;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.011125660273612406;  // std dev = 3.107, 98.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
%   | | | else return -0.026854919889456926;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05410612169087106;  // std dev = 15.539, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.013345992471079447;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12111363960209473;  // std dev = 2.278, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.03161812001577517;  // std dev = 1.763, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10967092931756033;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.009929713018840927;  // std dev = 3.107, 98.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=11 */
%   | | | else return -0.024158639826342743;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04281941483964607;  // std dev = 15.539, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.011149488259471834;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11601201749843622;  // std dev = 1.776, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.032962579126322805;  // std dev = 2.264, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.029643453705681232;  // std dev = 2.527, 84.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.04403619678953551;  // std dev = 1.797, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.021780619975005553;  // std dev = 0.283, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03371494785980355;  // std dev = 15.538, 1,075.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=372 */
%   | | | else return 0.009301351859588297;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07658157578203849;  // std dev = 2.276, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.004709402332202244;  // std dev = 1.758, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.026708027749485413;  // std dev = 2.528, 84.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=7 */
%   | | | else return 0.038447008842748445;  // std dev = 1.797, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return -0.01967479257159457;  // std dev = 0.283, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */


Results
   AUC ROC   = 0.656553
   AUC PR    = 0.696014
   CLL	      = -0.710484
   Precision = 0.913793 at threshold = 0.5
   Recall    = 0.192727
   F1        = 0.318318


Total learning time: 175.888 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.656553


Results scoring model
   AUC ROC   = 0.658788
   AUC PR    = 0.583056
   CLL	      = -0.57404
   Precision = 0.920792 at threshold = 0.5
   Recall    = 0.188641
   F1        = 0.313131


Total scoring time: 5.179 seconds
Refined model CLL: -0.57404


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.656553
   AUC PR    = 0.696014
   CLL	      = -0.710484
   Precision = 0.913793 at threshold = 0.5
   Recall    = 0.192727
   F1        = 0.318318


Total learning time: 184.055 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.656553
Total revision time: 184.055
Best scored revision CLL: -0.57404


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:02:04
{'AUC ROC': 0.656553, 'AUC PR': 0.696014, 'CLL': -0.710484, 'Precision': [0.913793, 0.5], 'Recall': 0.192727, 'F1': 0.318318, 'Learning time': 184.055, 'Inference time': 1.523, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.723631, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1.972, 'Inference time': 0.688}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.17226122645003836;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.1499719292578367;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.1283473301031304;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.54e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.10814700102004797;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.04e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.08989772728172869;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.07387422895989436;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.58e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.06013298694599269;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.048571808290691326;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.03899169384110809;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else return 0.03114782476729024;  // std dev = 23.831, 2,636.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=828 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.725326
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 2.925 seconds
Total inference time: 0.711 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.580122
   AUC PR    = 0.523197
   CLL	      = -0.595722
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160243
   F1        = 0.276224


Total scoring time: 1.165 seconds
Parameter learned model CLL: -0.595722


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.83e-07, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.54e-07, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.04e-07, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.58e-07, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 158], 'false': [23.831, 1, 828]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 158], 'false': [23.831, 1, 828]}]]
[{'': [6.1160640546439006e-15, 0.2154457597730752]}, {'': [-2.698263553519368e-15, 0.21544575977307653]}, {'': [1.8438134282382346e-15, 0.2154457597730813]}, {'': [1.3041607175343611e-15, 0.21544575977303923]}, {'': [5.846237699291963e-16, 0.21544575977303349]}, {'': [-2.136125313202833e-16, 0.21544575977303926]}, {'': [4.216036802374012e-16, 0.21544575977306735]}, {'': [-3.0917603217409425e-16, 0.2154457597730475]}, {'': [-2.33287369731362e-16, 0.21544575977306643]}, {'': [5.340313283007082e-17, 0.21544575977304165]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19349496389653467;  // std dev = 21.906, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=722 */
%   | | | else return 0.1374282143787903;  // std dev = 4.727, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.42064893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.35814893509951234;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0026105585713739688;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.10814893509951236;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.056136779186201954;  // std dev = 2.869, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16842703883448035;  // std dev = 21.875, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,427 #pos=720 */
%   | | | else return 0.11949274124198284;  // std dev = 4.865, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.361386758207022;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.3087411357856347;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0022930740171486323;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.0944674378357557;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13515397757921074;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04979032951077576;  // std dev = 2.868, 106.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14366946762510976;  // std dev = 21.906, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=722 */
%   | | | else return 0.10046217514244098;  // std dev = 4.725, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2982236860224131;  // std dev = 3.149, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.24094485692359244;  // std dev = 2.437, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.002014690287590428;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.08165239320886185;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.043369826847046766;  // std dev = 2.867, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return -0.120083319110599;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.54e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12056270746617462;  // std dev = 21.875, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,427 #pos=720 */
%   | | | else return 0.08442041042967587;  // std dev = 4.863, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23807315394732304;  // std dev = 3.149, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.19212470205640378;  // std dev = 2.435, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0017704805793268591;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.06990902274840138;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0385721929611469;  // std dev = 2.868, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return -0.1079624531879539;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.04e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09951993270137703;  // std dev = 21.906, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=722 */
%   | | | else return 0.06937648254489573;  // std dev = 4.724, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19341883193974646;  // std dev = 2.811, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.1500171371941196;  // std dev = 2.817, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0015561640475829387;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.059354635365447314;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.034434607441353245;  // std dev = 2.868, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return -0.09799645313962355;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08123538209394339;  // std dev = 21.875, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,427 #pos=720 */
%   | | | else return 0.05667630794885064;  // std dev = 4.862, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14551097674088767;  // std dev = 3.152, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.10757633086380065;  // std dev = 2.428, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0013680154731999941;  // std dev = 4.352, 158.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=22 */
%   | | | else return 0.05002771289938761;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.030841859526987328;  // std dev = 2.868, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | | else return -0.08966896219698146;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.58e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06551375519454523;  // std dev = 21.906, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=722 */
%   | | | else return 0.04600366727262325;  // std dev = 4.723, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11665291403159685;  // std dev = 2.813, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.08221277208320857;  // std dev = 2.811, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08461951872985175;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014063184321123332;  // std dev = 5.043, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */
%   | | | else return -0.027361281411464867;  // std dev = 2.866, 106.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.052507220200346004;  // std dev = 21.875, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,427 #pos=720 */
%   | | | else return 0.03672149817026173;  // std dev = 4.861, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08653909257453787;  // std dev = 3.154, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.05553441242825152;  // std dev = 2.423, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07478819248174261;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01222869846102346;  // std dev = 5.042, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */
%   | | | else return -0.024664317025152434;  // std dev = 2.866, 106.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04173702625799;  // std dev = 21.875, 2,147.000 (wgt'ed) examples reached here.  /* #neg=1,427 #pos=720 */
%   | | | else return 0.02986639101457709;  // std dev = 4.861, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07023903665817474;  // std dev = 2.816, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.04238308061389226;  // std dev = 2.808, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06659029876801398;  // std dev = 0.230, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.010619189393832945;  // std dev = 5.042, 184.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=31 */
%   | | | else return -0.022282026267228038;  // std dev = 2.866, 106.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.033033504450141395;  // std dev = 21.906, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=722 */
%   | | | else return 0.02321494314774112;  // std dev = 4.722, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.051841315760705074;  // std dev = 3.155, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.02636148921615063;  // std dev = 2.419, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06803549749523391;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.009994098157064271;  // std dev = 5.042, 185.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=31 */
%   | | | else return -0.02256005096763967;  // std dev = 2.869, 110.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=9 */


Results
   AUC ROC   = 0.685982
   AUC PR    = 0.724863
   CLL	      = -0.712295
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 406.558 seconds
Total inference time: 1.51 seconds
AUC ROC: 0.685982


Results scoring model
   AUC ROC   = 0.634675
   AUC PR    = 0.560498
   CLL	      = -0.581217
   Precision = 0.959538 at threshold = 0.5
   Recall    = 0.168357
   F1        = 0.286454


Total scoring time: 11.176 seconds
Refined model CLL: -0.581217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685982
   AUC PR    = 0.724863
   CLL	      = -0.712295
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 421.82399999999996 seconds
Total inference time: 1.51 seconds
AUC ROC: 0.685982
Total revision time: 421.82399999999996
Best scored revision CLL: -0.581217


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:09:09
{'AUC ROC': 0.685982, 'AUC PR': 0.724863, 'CLL': -0.712295, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 421.82399999999996, 'Inference time': 1.51, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.725326, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 2.925, 'Inference time': 0.711}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.17511771656979924;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.1524361376984549;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.01e-08, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.13039768491406364;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 1.19e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.10979538970964582;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014944;  // std dev = 3.53e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.09118145258136916;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.07484511659195059;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.06084742020023129;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527764;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.04908363638444523;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.03934826030221731;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else return 0.0313884469439423;  // std dev = 29.325, 3,972.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,259 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.722998
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.149 seconds
Total inference time: 0.696 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.574662
   AUC PR    = 0.514106
   CLL	      = -0.599737
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149324
   F1        = 0.259847


Total scoring time: 1.198 seconds
Parameter learned model CLL: -0.599737


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.01e-08, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 221], 'false': [29.325, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.43e-07, 0, 221], 'false': [29.325, 2, 1]}]]
[{'': [5.2728058219301554e-15, 0.21649957304355635]}, {'': [-4.051058131482924e-15, 0.21649957304349943]}, {'': [1.607562750588462e-15, 0.21649957304351178]}, {'': [6.430251002353848e-17, 0.2164995730435664]}, {'': [5.626469627059617e-16, 0.2164995730435568]}, {'': [3.37588177623577e-16, 0.21649957304356995]}, {'': [4.099285014000578e-16, 0.21649957304355072]}, {'': [-4.018906876471155e-18, 0.21649957304351908]}, {'': [-1.4869955442943272e-16, 0.21649957304353246]}, {'': [9.243485815883657e-17, 0.2164995730435101]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19693326092486976;  // std dev = 26.945, 3,241.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,098 */
%   | | | else return 0.1066696451586831;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.41584124279181894;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.37988806553429394;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005087710609715592;  // std dev = 5.542, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
%   | | | else return 0.0954370706927327;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03795496100438375;  // std dev = 3.787, 154.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17123089372409933;  // std dev = 26.945, 3,241.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,098 */
%   | | | else return 0.09318234207652475;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3573503921375268;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.3270950940363142;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004467257728716404;  // std dev = 5.542, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
%   | | | else return 0.08341787615188087;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13729333530003757;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03360886961855458;  // std dev = 3.786, 155.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.96e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14597152640680328;  // std dev = 26.945, 3,241.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,098 */
%   | | | else return 0.08055978100175708;  // std dev = 5.618, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2939889708160185;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.27068851696784535;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003920605544606595;  // std dev = 5.542, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
%   | | | else return 0.07224112169373792;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.029090274288995126;  // std dev = 3.785, 154.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
%   | | | else return -0.12180364415799251;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831047;  // std dev = 1.19e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12227333048723672;  // std dev = 26.903, 3,236.000 (wgt'ed) examples reached here.  /* #neg=2,142 #pos=1,094 */
%   | | | else return 0.06973510811640601;  // std dev = 5.814, 174.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23311597175623083;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.21646948535026073;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.09588032019965145;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.023027238112621307;  // std dev = 6.350, 283.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1187481519857411;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.026008471257383082;  // std dev = 3.785, 155.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014944;  // std dev = 3.53e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10097478881226672;  // std dev = 26.943, 3,241.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,098 */
%   | | | else return 0.05528699751939484;  // std dev = 5.619, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18008193954945415;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.16873469976091954;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0844938559016884;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.020069560189401984;  // std dev = 6.350, 283.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.022566957074322474;  // std dev = 3.784, 154.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
%   | | | else return -0.10685539287079092;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08227417363023881;  // std dev = 26.901, 3,236.000 (wgt'ed) examples reached here.  /* #neg=2,142 #pos=1,094 */
%   | | | else return 0.046007388952428716;  // std dev = 5.815, 174.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1369243095663653;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.12931268797702078;  // std dev = 3.388, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07845674722840924;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018042863704531436;  // std dev = 6.347, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return -0.022982042984472775;  // std dev = 3.789, 160.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06633848324143751;  // std dev = 26.942, 3,241.000 (wgt'ed) examples reached here.  /* #neg=2,143 #pos=1,098 */
%   | | | else return 0.03659169564578462;  // std dev = 5.620, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0983897615381058;  // std dev = 3.880, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.10466415601912438;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06745871296597698;  // std dev = 0.265, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014532330218715162;  // std dev = 6.282, 283.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=48 */
%   | | | else return -0.01787786436090003;  // std dev = 3.784, 155.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527764;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.49642740797228646;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.040080412366447146;  // std dev = 3.196, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07757649998999501;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.05050619374854521;  // std dev = 27.295, 3,352.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,133 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.07168422244955776;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014499867719431047;  // std dev = 6.345, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return -0.018506049050196465;  // std dev = 3.788, 160.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04215068414168156;  // std dev = 26.863, 3,236.000 (wgt'ed) examples reached here.  /* #neg=2,142 #pos=1,094 */
%   | | | else return 0.02036308147908657;  // std dev = 5.815, 174.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06131530687795649;  // std dev = 3.880, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | | else return 0.06667741546293147;  // std dev = 3.045, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06447365293914448;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01255169767621863;  // std dev = 6.345, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return -0.016587216934720934;  // std dev = 3.788, 160.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 221.000 (wgt'ed) examples reached here.  /* #pos=221 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return -0.24774263995997195;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10562608824501583;  // std dev = 4.031, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.05225518875949793;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.031327496977041035;  // std dev = 27.294, 3,352.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,133 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.004095174012549212;  // std dev = 5.524, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
%   | | | else return 0.04711595193624187;  // std dev = 3.266, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.011939777424835487;  // std dev = 3.784, 154.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=16 */
%   | | | else return -0.09062061750592505;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.672609
   AUC PR    = 0.706813
   CLL	      = -0.70686
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 532.762 seconds
Total inference time: 1.477 seconds
AUC ROC: 0.672609


Results scoring model
   AUC ROC   = 0.638593
   AUC PR    = 0.562277
   CLL	      = -0.584569
   Precision = 0.915751 at threshold = 0.5
   Recall    = 0.168919
   F1        = 0.285225


Total scoring time: 13.743 seconds
Refined model CLL: -0.584569


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.672609
   AUC PR    = 0.706813
   CLL	      = -0.70686
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 551.852 seconds
Total inference time: 1.477 seconds
AUC ROC: 0.672609
Total revision time: 551.852
Best scored revision CLL: -0.584569


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:18:24
{'AUC ROC': 0.672609, 'AUC PR': 0.706813, 'CLL': -0.70686, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 551.852, 'Inference time': 1.477, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.722998, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.149, 'Inference time': 0.696}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.17246173130803796;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.15014492333694493;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.1284913342481654;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.10826285868807796;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.08998804461208096;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.07394262056170045;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.060183386095092065;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.048607975067156486;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.0390169384371059;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.031164900357969955;  // std dev = 33.717, 5,275.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,658 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.725161
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.441 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.579828
   AUC PR    = 0.522752
   CLL	      = -0.59597
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159655
   F1        = 0.27535


Total scoring time: 1.484 seconds
Parameter learned model CLL: -0.59597


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [33.717, 3, 1]}]]
[{'': [3.5188783104309725e-15, 0.21552026234804825]}, {'': [-4.962520694197525e-15, 0.21552026234809168]}, {'': [-3.1579677144893343e-16, 0.2155202623481574]}, {'': [-8.797195776077431e-16, 0.2155202623480298]}, {'': [-4.2858133268069536e-16, 0.21552026234805302]}, {'': [4.3985978880387156e-16, 0.21552026234813385]}, {'': [1.9737298215558337e-16, 0.21552026234812738]}, {'': [2.1992989440193578e-16, 0.21552026234809724]}, {'': [-2.1711028037114172e-16, 0.21552026234812133]}, {'': [-1.8327491200161313e-16, 0.2155202623481203]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1914822684328405;  // std dev = 30.973, 4,317.000 (wgt'ed) examples reached here.  /* #neg=2,878 #pos=1,439 */
%   | | | else return 0.1344647245731978;  // std dev = 6.752, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3859267128772891;  // std dev = 4.236, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.3581489350995112;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 1.242437414873104E-4;  // std dev = 6.282, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.10139217834275562;  // std dev = 3.691, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009198003675998304;  // std dev = 4.749, 196.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16662738885216324;  // std dev = 30.952, 4,312.000 (wgt'ed) examples reached here.  /* #neg=2,875 #pos=1,437 */
%   | | | else return 0.11671315429583873;  // std dev = 6.847, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3321853908796465;  // std dev = 4.236, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.3087411357856347;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07840449389551966;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07519952301550667;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.01606350291757181;  // std dev = 8.492, 541.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=86 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14225135086932988;  // std dev = 30.972, 4,317.000 (wgt'ed) examples reached here.  /* #neg=2,878 #pos=1,439 */
%   | | | else return 0.09810080371920848;  // std dev = 6.754, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.27462886166793415;  // std dev = 4.236, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.25641236875858625;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -5.2190978743167926E-5;  // std dev = 6.277, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.0869743797536105;  // std dev = 3.688, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009750824180874999;  // std dev = 4.747, 196.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=26 */
%   | | | else return -0.12721756682681254;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1193830947552805;  // std dev = 30.950, 4,312.000 (wgt'ed) examples reached here.  /* #neg=2,875 #pos=1,437 */
%   | | | else return 0.08239643404310835;  // std dev = 6.849, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20778234390118566;  // std dev = 4.279, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.22118894367825864;  // std dev = 3.692, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06628287884233727;  // std dev = 0.249, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06995826923964986;  // std dev = 1.371, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.013152936066301137;  // std dev = 8.482, 541.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=86 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09867006787460862;  // std dev = 30.970, 4,317.000 (wgt'ed) examples reached here.  /* #neg=2,878 #pos=1,439 */
%   | | | else return 0.06760765879316728;  // std dev = 6.756, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17135063725299618;  // std dev = 4.234, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.16077654993670096;  // std dev = 3.744, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -1.598917970803827E-4;  // std dev = 6.273, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.07374909137465875;  // std dev = 3.686, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009931363182036483;  // std dev = 4.746, 196.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=26 */
%   | | | else return -0.11508178357965296;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08056588911837671;  // std dev = 30.949, 4,312.000 (wgt'ed) examples reached here.  /* #neg=2,875 #pos=1,437 */
%   | | | else return 0.05531542475514523;  // std dev = 6.852, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1244721934800453;  // std dev = 4.282, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.13260104989069257;  // std dev = 3.689, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -1.4040586678110007E-4;  // std dev = 6.273, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.06311504291102925;  // std dev = 3.686, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008721619603059502;  // std dev = 4.746, 196.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=26 */
%   | | | else return -0.10387106095843303;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06507460647511636;  // std dev = 30.969, 4,317.000 (wgt'ed) examples reached here.  /* #neg=2,878 #pos=1,439 */
%   | | | else return 0.04472241578912008;  // std dev = 6.758, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09468913320706455;  // std dev = 4.282, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.10052761553494237;  // std dev = 3.688, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05879337770491519;  // std dev = 0.249, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015464025236869613;  // std dev = 7.147, 368.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=62 */
%   | | | else return -0.011075193013024847;  // std dev = 4.752, 204.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.052172266703901946;  // std dev = 30.948, 4,312.000 (wgt'ed) examples reached here.  /* #neg=2,875 #pos=1,437 */
%   | | | else return 0.0358605195602011;  // std dev = 6.854, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0754989456977111;  // std dev = 4.232, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.07066649802868315;  // std dev = 3.746, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06469743150424927;  // std dev = 0.247, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.052483346175891545;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.009179338528314325;  // std dev = 8.467, 541.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=86 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04151773885462091;  // std dev = 30.969, 4,317.000 (wgt'ed) examples reached here.  /* #neg=2,878 #pos=1,439 */
%   | | | else return 0.028814193846612306;  // std dev = 6.760, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05371582122069922;  // std dev = 4.283, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.05722219468266377;  // std dev = 3.687, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04708420528790027;  // std dev = 0.249, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01283373877990381;  // std dev = 7.145, 368.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=62 */
%   | | | else return -0.010662710675748982;  // std dev = 4.751, 204.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03291288762465165;  // std dev = 30.948, 4,312.000 (wgt'ed) examples reached here.  /* #neg=2,875 #pos=1,437 */
%   | | | else return 0.02272551573186682;  // std dev = 6.855, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04277762916231001;  // std dev = 4.231, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.03982228004772111;  // std dev = 3.747, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.002276774667755381;  // std dev = 6.266, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.0481938668764759;  // std dev = 3.684, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005965744567121571;  // std dev = 4.745, 196.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=26 */
%   | | | else return -0.09352254727532715;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.685251
   AUC PR    = 0.724719
   CLL	      = -0.711187
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 774.331 seconds
Total inference time: 1.491 seconds
AUC ROC: 0.685251


Results scoring model
   AUC ROC   = 0.630433
   AUC PR    = 0.557323
   CLL	      = -0.584553
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159655
   F1        = 0.27535


Total scoring time: 22.181 seconds
Refined model CLL: -0.584553


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685251
   AUC PR    = 0.724719
   CLL	      = -0.711187
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 803.437 seconds
Total inference time: 1.491 seconds
AUC ROC: 0.685251
Total revision time: 803.437
Best scored revision CLL: -0.584553


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:31:50
{'AUC ROC': 0.685251, 'AUC PR': 0.724719, 'CLL': -0.711187, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 803.437, 'Inference time': 1.491, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.725161, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.441, 'Inference time': 0.759}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.146 seconds
Total inference time: 0.694 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 1.408 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612208;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532782;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06261940488996087;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06323004872688665;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458398;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1390268379046686;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.1005128805374948;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030199742210974687;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.002184274323244093;  // std dev = 5.547, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218128;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.082988296297292;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611724;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2030841315177579;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011279437821365137;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07042836074079036;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -5.054053779759219E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1280720050122417;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236624;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566584;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05085998932090596;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05951335191649594;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.018611883210265877;  // std dev = 9.624, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650464;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419652;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561094;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.038811975198221584;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.002510872765389293;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0026600759327990438;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11633805822828501;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0639687050699184;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441114;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180407;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201686;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056257739877824606;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021492459326428997;  // std dev = 8.037, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00560128871496794;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05138426195928969;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.036556770668143286;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0757105610847293;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.06819952394789879;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04972792592615451;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01864469526016533;  // std dev = 8.037, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004890544806448563;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04096665694210108;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.02977981753298952;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05728620015365748;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.051035559735335106;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.052591988199265464;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01953190005936583;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.009063984934914539;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03254059057397925;  // std dev = 34.597, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.023261103854103737;  // std dev = 7.315, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.043735492039097;  // std dev = 4.697, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.03747040536198402;  // std dev = 4.051, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04661995314936994;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016920926690901287;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007893642601619493;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */


Results
   AUC ROC   = 0.685222
   AUC PR    = 0.724628
   CLL	      = -0.713482
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 965.807 seconds
Total inference time: 1.565 seconds
AUC ROC: 0.685222


Results scoring model
   AUC ROC   = 0.628977
   AUC PR    = 0.560097
   CLL	      = -0.58383
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 26.522 seconds
Refined model CLL: -0.58383


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685222
   AUC PR    = 0.724628
   CLL	      = -0.713482
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1000.883 seconds
Total inference time: 1.565 seconds
AUC ROC: 0.685222
Total revision time: 1000.883
Best scored revision CLL: -0.58383


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 02:48:34
{'AUC ROC': 0.685222, 'AUC PR': 0.724628, 'CLL': -0.713482, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1000.883, 'Inference time': 1.565, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.146, 'Inference time': 0.694}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.20109278942424186;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.17480945164474282;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.148923866390919;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.1245710007289112;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.10256487469557779;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.0833418210001392;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.06700493023395351;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2.98e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.05341868040970639;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.88e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.04230816244880529;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else return 0.03333838769055738;  // std dev = 17.233, 1,318.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=452 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555821
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.032 seconds
Total inference time: 0.687 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.572779
   AUC PR    = 0.533601
   CLL	      = -0.615959
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.145558
   F1        = 0.254125


Total scoring time: 1.025 seconds
Parameter learned model CLL: -0.615959


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.23e-07, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 77], 'false': [17.233, 866, 452]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 77], 'false': [17.233, 866, 452]}]]
[{'': [-1.107339328457299e-15, 0.2253333671056144]}, {'': [6.459479416000911e-16, 0.22533336710562457]}, {'': [1.3841741605716238e-15, 0.22533336710563345]}, {'': [-6.920870802858119e-17, 0.22533336710563975]}, {'': [-3.921826788286267e-16, 0.22533336710564045]}, {'': [-1.1534784671430199e-17, 0.22533336710563234]}, {'': [-1.0381306204287178e-16, 0.22533336710563442]}, {'': [1.1534784671430199e-17, 0.22533336710563662]}, {'': [8.074349270001139e-17, 0.22533336710562635]}, {'': [3.7488050182148143e-17, 0.22533336710562812]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995126;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2205827975333699;  // std dev = 0.481, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.09399799170328522;  // std dev = 4.371, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.0072356802851030666;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.23e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19155582623255993;  // std dev = 0.481, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.2838374893261067;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.0821660635928558;  // std dev = 4.371, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.14003174958696857;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0026522192472893022;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2841215722985855;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.1997493954433504;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.16156447316979056;  // std dev = 0.480, 1,096.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=396 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2368685074770855;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.07117253088990114;  // std dev = 4.371, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12400308944709844;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.002332087033806299;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13534904019253394;  // std dev = 0.480, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.1307629980887947;  // std dev = 3.687, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.021428672057339643;  // std dev = 3.103, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else return -0.007416572439828676;  // std dev = 0.337, 61.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3485601683408338;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.09953860352710249;  // std dev = 1.595, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15572323435132984;  // std dev = 2.891, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.11091971890263509;  // std dev = 15.709, 1,068.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=387 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.10985340678118913;  // std dev = 3.682, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.01819153517876656;  // std dev = 3.103, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11041843585686638;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0011606289085066394;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17821072110077166;  // std dev = 2.774, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.20904504965768958;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05636009328657886;  // std dev = 2.379, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.0894733512458756;  // std dev = 15.709, 1,068.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=387 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.15608345194766549;  // std dev = 2.021, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.03923404496737334;  // std dev = 4.365, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.021218967428750804;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.00323804603619505;  // std dev = 2.458, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253576;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07104422146288611;  // std dev = 0.479, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03064781755639713;  // std dev = 4.384, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | | | else return 0.13607165177487085;  // std dev = 1.965, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.09921127226730952;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -3.449350324493547E-4;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 2.98e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05617662004273964;  // std dev = 0.479, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.06932177235893819;  // std dev = 3.654, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.0015421038971602538;  // std dev = 3.113, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.01784335471643078;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.002482797315074891;  // std dev = 2.457, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.88e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044126343558961466;  // std dev = 0.479, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10390313767886812;  // std dev = 2.006, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.018495781000375355;  // std dev = 4.357, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.015855920530621095;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.002189544299617906;  // std dev = 2.457, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03448653506768413;  // std dev = 0.479, 1,134.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=411 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.04912921536280227;  // std dev = 3.640, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return -0.0014847721231546424;  // std dev = 2.627, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | | else return -0.005978395921127485;  // std dev = 0.406, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */


Results
   AUC ROC   = 0.680298
   AUC PR    = 0.623615
   CLL	      = -0.543634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 51.166 seconds
Total inference time: 0.924 seconds
AUC ROC: 0.680298


Results scoring model
   AUC ROC   = 0.626127
   AUC PR    = 0.572331
   CLL	      = -0.604573
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.145558
   F1        = 0.254125


Total scoring time: 1.587 seconds
Refined model CLL: -0.604573


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680298
   AUC PR    = 0.623615
   CLL	      = -0.543634
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 55.81 seconds
Total inference time: 0.924 seconds
AUC ROC: 0.680298
Total revision time: 55.81
Best scored revision CLL: -0.604573


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:49:32
{'AUC ROC': 0.680298, 'AUC PR': 0.623615, 'CLL': -0.543634, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 55.81, 'Inference time': 0.924, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555821, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.032, 'Inference time': 0.687}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1987121010051389;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.17276147572494774;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.14723477750991928;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.12323272879903593;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1015429969471099;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.08258733621489618;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.06646502085504362;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.0530440148957288;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.04205658686691724;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.03317597420404923;  // std dev = 24.294, 2,628.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=895 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555511
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.844 seconds
Total inference time: 0.706 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577432
   AUC PR    = 0.541273
   CLL	      = -0.612651
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154863
   F1        = 0.268193


Total scoring time: 1.16 seconds
Parameter learned model CLL: -0.612651


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [24.294, 1, 895]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 164], 'false': [24.294, 1, 895]}]]
[{'': [6.325563379327721e-15, 0.22457989593398991]}, {'': [-2.859501253668696e-15, 0.22457989593394026]}, {'': [1.863008392541726e-15, 0.22457989593397182]}, {'': [1.1481330791245522e-15, 0.2245798959339989]}, {'': [8.015268665586496e-16, 0.22457989593398317]}, {'': [-2.4912321528174247e-16, 0.22457989593396438]}, {'': [4.3325776570737815e-16, 0.22457989593394406]}, {'': [-3.195276022091914e-16, 0.22457989593396144]}, {'': [-2.4641535424607135e-16, 0.22457989593395444]}, {'': [5.415722071342227e-17, 0.22457989593398034]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2158610776217764;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.1506017652881902;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.478838590271925;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.09952824544433897;  // std dev = 4.609, 116.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0.027960255854229364;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.019439257680157536;  // std dev = 3.547, 93.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18750203439969274;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.13126253372793809;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.43566081474783486;  // std dev = 3.104, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.4004859810492124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20887767071510902;  // std dev = 2.392, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.06349819973283298;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06761142286211119;  // std dev = 2.329, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.027371927303058218;  // std dev = 6.094, 257.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=45 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15936181358433235;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.11271661920548906;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6239129563991342;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3308907933790709;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18009352963643033;  // std dev = 2.390, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05625737879398295;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03454849053403335;  // std dev = 5.475, 196.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=37 */
%   | | | else return 0.013423967690204902;  // std dev = 3.548, 93.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13280148791787222;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.0954952372080083;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27488342541934335;  // std dev = 3.082, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.25442684061725224;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17742622309136605;  // std dev = 2.393, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.16186525726483553;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05267656160409038;  // std dev = 2.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.020342322833436368;  // std dev = 6.094, 257.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=45 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10880952469867579;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.07995324222803608;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20903339212663802;  // std dev = 3.082, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.19417354800974745;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.027584651847825103;  // std dev = 5.530, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return 0.1241940375873895;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006024896177623747;  // std dev = 3.673, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.1434732412035736;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08791737035853525;  // std dev = 22.137, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.06626625913906153;  // std dev = 4.683, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3539686862070626;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14380881820940783;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13800193526916602;  // std dev = 2.372, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05662946542639828;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03661950268667299;  // std dev = 2.293, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.013888740937973923;  // std dev = 6.087, 257.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=45 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06858467476796035;  // std dev = 22.110, 2,138.000 (wgt'ed) examples reached here.  /* #neg=1,379 #pos=759 */
%   | | | else return 0.08894919457265876;  // std dev = 4.808, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11866144900727617;  // std dev = 3.075, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.11045496860360345;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13888144199218644;  // std dev = 2.380, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.013495541136528302;  // std dev = 5.292, 193.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=35 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.15275658649282625;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01201260586622718;  // std dev = 3.855, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05436798387834551;  // std dev = 22.110, 2,138.000 (wgt'ed) examples reached here.  /* #neg=1,379 #pos=759 */
%   | | | else return 0.07163119545302318;  // std dev = 4.809, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08957812217548873;  // std dev = 3.076, 43.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=28 */
%   | | | else return 0.08287131148334666;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10981017565817455;  // std dev = 2.353, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.013407164399752095;  // std dev = 5.442, 197.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=37 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0019926577376242417;  // std dev = 3.675, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return -0.12732435667234762;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24553594628500286;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return -0.08129498602745736;  // std dev = 2.580, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04298171208320957;  // std dev = 22.249, 2,166.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=767 */
%   | | | else return 0.05734297066966907;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11144654022196566;  // std dev = 2.366, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.009128567456372704;  // std dev = 5.284, 193.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1373818862219465;  // std dev = 0.938, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.011909002071317256;  // std dev = 3.735, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0346800271597268;  // std dev = 22.120, 2,133.000 (wgt'ed) examples reached here.  /* #neg=1,370 #pos=763 */
%   | | | else return 0.01923038647859549;  // std dev = 4.672, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2530232279353185;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.043297597562406066;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09469991882036874;  // std dev = 2.317, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05238423593633847;  // std dev = 0.966, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00870037623679397;  // std dev = 5.434, 196.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=37 */
%   | | | else return 0.003082411209575975;  // std dev = 3.550, 93.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=15 */


Results
   AUC ROC   = 0.675088
   AUC PR    = 0.619688
   CLL	      = -0.545629
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 371.669 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.675088


Results scoring model
   AUC ROC   = 0.636055
   AUC PR    = 0.587466
   CLL	      = -0.598388
   Precision = 0.902222 at threshold = 0.5
   Recall    = 0.19169
   F1        = 0.316199


Total scoring time: 9.818 seconds
Refined model CLL: -0.598388


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.675088
   AUC PR    = 0.619688
   CLL	      = -0.545629
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 385.491 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.675088
Total revision time: 385.491
Best scored revision CLL: -0.598388


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 02:56:00
{'AUC ROC': 0.675088, 'AUC PR': 0.619688, 'CLL': -0.545629, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 385.491, 'Inference time': 1.532, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555511, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.844, 'Inference time': 0.706}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.19975440483868165;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.17365817738523195;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.25e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.14797450871888657;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.12381904009235062;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.10199091678893075;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0829182493171927;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.06670198576660145;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.0532085823241524;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.042167186362325616;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else return 0.03324745125688461;  // std dev = 29.802, 3,949.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,349 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555644
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.212 seconds
Total inference time: 0.689 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575519
   AUC PR    = 0.538189
   CLL	      = -0.614047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151038
   F1        = 0.262438


Total scoring time: 1.275 seconds
Parameter learned model CLL: -0.614047


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.25e-08, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.15e-07, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 240], 'false': [29.802, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 240], 'false': [29.802, 2, 1]}]]
[{'': [4.736951571734001e-15, 0.22491117278344738]}, {'': [-4.263256414560601e-15, 0.2249111727834422]}, {'': [1.0658141036401502e-15, 0.2249111727834472]}, {'': [-1.7763568394002506e-16, 0.22491117278343734]}, {'': [3.108624468950438e-16, 0.22491117278341546]}, {'': [3.774758283725532e-16, 0.22491117278342052]}, {'': [3.552713678800501e-16, 0.22491117278348094]}, {'': [5.551115123125783e-17, 0.22491117278342548]}, {'': [-1.7023419710919068e-16, 0.2249111727834187]}, {'': [3.700743415417188e-17, 0.22491117278346087]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21737827009018465;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.1384037121695756;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.48452256147313943;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=57 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03870449065506778;  // std dev = 6.528, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 0.018732876705351505;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18880483345502572;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.1207069464108468;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.40702077218404825;  // std dev = 3.691, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.4455227873550263;  // std dev = 2.921, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20863426638373414;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.07870190981914453;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03392739491441042;  // std dev = 6.528, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 0.016437201060423182;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1604302248602942;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.10384874917235834;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4741661209977394;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.335826273888955;  // std dev = 4.614, 91.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=57 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.176623763594354;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.06998074573501518;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02963101912298627;  // std dev = 6.528, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 0.014397484063338758;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.133640106267753;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.08825072888056754;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3683557326721201;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26297332401120943;  // std dev = 4.623, 92.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1549472576959397;  // std dev = 2.576, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.02641743489748416;  // std dev = 6.511, 290.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1599757842380725;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.01676063519822106;  // std dev = 4.549, 143.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.73e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10944195154989889;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.07418649231904387;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2790480050112112;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2000815064860631;  // std dev = 4.623, 92.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14140591036140202;  // std dev = 2.818, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.06589931489790544;  // std dev = 0.974, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02219519724517796;  // std dev = 6.515, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 0.008953694116044884;  // std dev = 4.295, 137.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.01e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08837742006561752;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.06178452771060851;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.23871211035946205;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1483163957761942;  // std dev = 4.613, 91.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=57 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12917976099553222;  // std dev = 2.558, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.019316244147104377;  // std dev = 6.495, 290.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=53 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0038514517466264396;  // std dev = 4.571, 149.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=25 */
%   | | | else return -0.13348667937838285;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0705747154527131;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.0510521079046039;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1018172803809805;  // std dev = 3.685, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.1348871240964058;  // std dev = 2.911, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015365385741299949;  // std dev = 6.367, 280.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=52 */
%   | | | else return 0.09590624928453935;  // std dev = 2.860, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1419238414139335;  // std dev = 0.100, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.010550834066323404;  // std dev = 4.551, 143.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=25 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.15e-07, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05587016326190232;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.0419083687154014;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07653972429169421;  // std dev = 3.685, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.10145780099590491;  // std dev = 2.912, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10772148192212497;  // std dev = 2.802, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.01254626861183501;  // std dev = 6.501, 290.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00223631911129513;  // std dev = 4.395, 147.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
%   | | | else return -0.1156938192836803;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.043934968597137615;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.03421722105425393;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.057678187963352175;  // std dev = 3.685, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.07662740132884509;  // std dev = 2.912, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010439339838083974;  // std dev = 6.350, 280.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=52 */
%   | | | else return 0.07996612482791556;  // std dev = 2.863, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 3.521586485443702E-4;  // std dev = 4.571, 149.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=25 */
%   | | | else return -0.10440515637427679;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.42e-08, 240.000 (wgt'ed) examples reached here.  /* #pos=240 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034374070202444325;  // std dev = 27.216, 3,218.000 (wgt'ed) examples reached here.  /* #neg=2,062 #pos=1,156 */
%   | | | else return 0.027814809675448623;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.043043648026114066;  // std dev = 3.875, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | | | else return 0.06319700114845501;  // std dev = 2.653, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030956629781190136;  // std dev = 5.841, 220.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=45 */
%   | | | else return -0.01430063006649656;  // std dev = 3.792, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14910351662563026;  // std dev = 0.946, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.009217610603216044;  // std dev = 4.446, 143.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=24 */


Results
   AUC ROC   = 0.675367
   AUC PR    = 0.620942
   CLL	      = -0.546814
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 552.866 seconds
Total inference time: 1.574 seconds
AUC ROC: 0.675367


Results scoring model
   AUC ROC   = 0.629369
   AUC PR    = 0.579207
   CLL	      = -0.600193
   Precision = 0.895833 at threshold = 0.5
   Recall    = 0.189427
   F1        = 0.312727


Total scoring time: 16.026 seconds
Refined model CLL: -0.600193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.675367
   AUC PR    = 0.620942
   CLL	      = -0.546814
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 574.3789999999999 seconds
Total inference time: 1.574 seconds
AUC ROC: 0.675367
Total revision time: 574.3789999999999
Best scored revision CLL: -0.600193


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 03:05:38
{'AUC ROC': 0.675367, 'AUC PR': 0.620942, 'CLL': -0.546814, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 574.3789999999999, 'Inference time': 1.574, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555644, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.212, 'Inference time': 0.689}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.20039898252883745;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.17421266186486709;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.1484317984467849;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.12418131723017924;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.10226750814507442;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.08312243313050253;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.06684807312659365;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.053309937552682006;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.042235227013489286;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else return 0.0332913648372661;  // std dev = 34.447, 5,271.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,804 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555729
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.713 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.574328
   AUC PR    = 0.536253
   CLL	      = -0.614912
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148655
   F1        = 0.258833


Total scoring time: 1.42 seconds
Parameter learned model CLL: -0.614912


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 315], 'false': [34.447, 3, 1]}]]
[{'': [3.5188783104309725e-15, 0.22511495246389432]}, {'': [-4.962520694197525e-15, 0.2251149524639738]}, {'': [-3.1579677144893343e-16, 0.22511495246392188]}, {'': [-8.797195776077431e-16, 0.22511495246387936]}, {'': [-4.2858133268069536e-16, 0.22511495246391852]}, {'': [4.3985978880387156e-16, 0.2251149524639026]}, {'': [1.9737298215558337e-16, 0.22511495246393426]}, {'': [2.1992989440193578e-16, 0.22511495246392266]}, {'': [-2.1711028037114172e-16, 0.22511495246394211]}, {'': [-1.8327491200161313e-16, 0.22511495246398097]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21779602123835093;  // std dev = 31.495, 4,307.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,549 */
%   | | | else return 0.1542654399538826;  // std dev = 6.553, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.43191942690279206;  // std dev = 5.462, 122.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20698614440183793;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06867525088898606;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.03636675688168998;  // std dev = 8.600, 505.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=90 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18922503089099516;  // std dev = 31.505, 4,311.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,550 */
%   | | | else return 0.13203355746262305;  // std dev = 6.501, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5880264249113611;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.37246753918806436;  // std dev = 5.470, 123.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=71 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17987691831707503;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.05448744112577215;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06010810755084074;  // std dev = 3.078, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.03188193631631887;  // std dev = 8.600, 505.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=90 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1608725327857604;  // std dev = 31.492, 4,307.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,549 */
%   | | | else return 0.11238154791477081;  // std dev = 6.559, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2971858958624624;  // std dev = 4.456, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | | else return 0.3379233620979729;  // std dev = 3.305, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.051616285806937716;  // std dev = 6.965, 298.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=61 */
%   | | | else return 0.024472348424620934;  // std dev = 4.352, 129.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.028576844755511196;  // std dev = 5.285, 192.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=34 */
%   | | | else return -0.14577432606860977;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13408461521038728;  // std dev = 31.502, 4,311.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,550 */
%   | | | else return 0.09251333549774386;  // std dev = 6.509, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23418361049018863;  // std dev = 4.454, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | | else return 0.26635046279383123;  // std dev = 3.305, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14799601762174483;  // std dev = 3.128, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.025302327338115466;  // std dev = 7.559, 384.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=70 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02492822017553578;  // std dev = 5.285, 192.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=34 */
%   | | | else return -0.128557561731378;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10985508752137431;  // std dev = 31.490, 4,307.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,549 */
%   | | | else return 0.07682527453271418;  // std dev = 6.566, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.375373639803005;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.17950905588548047;  // std dev = 5.452, 122.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12318965965649221;  // std dev = 3.129, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.05064894192651536;  // std dev = 1.352, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021118537524732705;  // std dev = 7.404, 372.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=67 */
%   | | | else return 0.024893269617808623;  // std dev = 5.337, 190.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.72e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08878516778513681;  // std dev = 31.500, 4,311.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,550 */
%   | | | else return 0.06127640660876923;  // std dev = 6.516, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13299036656798102;  // std dev = 4.441, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | | else return 0.16028881909622655;  // std dev = 3.304, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10094143587748222;  // std dev = 3.129, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.0450089982661278;  // std dev = 1.352, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.040973258426984474;  // std dev = 3.071, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.016938403239455873;  // std dev = 8.593, 505.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=90 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0709150312102089;  // std dev = 31.488, 4,307.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,549 */
%   | | | else return 0.05023624999611841;  // std dev = 6.572, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09777207087381559;  // std dev = 4.350, 79.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   | | | else return 0.12300621861871838;  // std dev = 3.422, 49.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12977352360040945;  // std dev = 2.948, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.012889038451444366;  // std dev = 7.496, 383.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=70 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014391230453700731;  // std dev = 5.437, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.1163346914166195;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.63e-07, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05620475224034459;  // std dev = 31.498, 4,311.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,550 */
%   | | | else return 0.03906244534332399;  // std dev = 6.521, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07223866873666047;  // std dev = 4.438, 82.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=47 */
%   | | | else return 0.09570249268994108;  // std dev = 3.306, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10990615321526087;  // std dev = 2.945, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.011075697732830514;  // std dev = 7.495, 383.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=70 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.13909972303652074;  // std dev = 0.949, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.01751430031906651;  // std dev = 5.335, 190.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044198939366153;  // std dev = 31.498, 4,311.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,550 */
%   | | | else return 0.03152436242889463;  // std dev = 6.521, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20689497056936265;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.053386944686707134;  // std dev = 5.449, 122.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=70 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09182972524841561;  // std dev = 2.942, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.009505307691860207;  // std dev = 7.495, 383.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=70 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01149218123476105;  // std dev = 5.428, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.103484703413026;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #pos=315 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03461474579345249;  // std dev = 31.486, 4,307.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,549 */
%   | | | else return 0.024798788253042575;  // std dev = 6.578, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03715034850728394;  // std dev = 4.346, 79.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   | | | else return 0.059514927215518355;  // std dev = 3.419, 49.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07804077106409214;  // std dev = 3.085, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.03988857705980731;  // std dev = 1.350, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0058418320311198445;  // std dev = 7.385, 372.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=67 */
%   | | | else return 0.013925325600643017;  // std dev = 5.333, 190.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=35 */


Results
   AUC ROC   = 0.678214
   AUC PR    = 0.622411
   CLL	      = -0.545988
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 761.507 seconds
Total inference time: 1.651 seconds
AUC ROC: 0.678214


Results scoring model
   AUC ROC   = 0.626131
   AUC PR    = 0.574002
   CLL	      = -0.603405
   Precision = 0.880361 at threshold = 0.5
   Recall    = 0.184049
   F1        = 0.30445


Total scoring time: 20.151 seconds
Refined model CLL: -0.603405


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678214
   AUC PR    = 0.622411
   CLL	      = -0.545988
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 788.7909999999999 seconds
Total inference time: 1.651 seconds
AUC ROC: 0.678214
Total revision time: 788.7909999999999
Best scored revision CLL: -0.603405


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 03:18:49
{'AUC ROC': 0.678214, 'AUC PR': 0.622411, 'CLL': -0.545988, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 788.7909999999999, 'Inference time': 1.651, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555729, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.713, 'Inference time': 0.722}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.219 seconds
Total inference time: 0.753 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 1.513 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027515;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.1318875444333155;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.36835820981240885;  // std dev = 4.790, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4039091967828142;  // std dev = 3.657, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016255;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690136;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16051920012347057;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957762;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5850703002521435;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.29913912303372;  // std dev = 5.912, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423052;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.034473075743909204;  // std dev = 8.438, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.03030750903748209;  // std dev = 5.853, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403076;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4556143583372519;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23579209502722454;  // std dev = 5.911, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11927868629299591;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02814489547486653;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026712042566051288;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11310454482878504;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963215;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816065;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4320404973343655;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17686945840997287;  // std dev = 5.893, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11425056730678533;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07162814060869631;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02464134592300183;  // std dev = 8.432, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.023521315774388245;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809342;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889946;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12939670146807505;  // std dev = 4.744, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1656489280209177;  // std dev = 3.636, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0980272067984274;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.020227215632120182;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07527977978759974;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02202904329467493;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514476;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09329569981262557;  // std dev = 4.744, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13152008557742254;  // std dev = 3.634, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09381799238659094;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06667542576053684;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017029350646346038;  // std dev = 8.427, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.01857550096982547;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.056142016216301056;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03947145161643938;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06874583519385268;  // std dev = 4.739, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10101354237290684;  // std dev = 3.639, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.031807693461475335;  // std dev = 7.629, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.00155491405530416;  // std dev = 4.995, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10803208385346164;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0160353815030146;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393104;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502917;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04837170420818987;  // std dev = 4.739, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.08137735823008473;  // std dev = 3.637, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07801077112045238;  // std dev = 3.331, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.011568788675616429;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012400948674936314;  // std dev = 5.922, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10256362498559135;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773526;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715227;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03496680885366618;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.06357921641778637;  // std dev = 3.643, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.028480189654130156;  // std dev = 7.631, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.011493725280853568;  // std dev = 4.971, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11739007533697378;  // std dev = 0.946, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013179287239041677;  // std dev = 5.836, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */


Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.546334
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 944.086 seconds
Total inference time: 1.526 seconds
AUC ROC: 0.678329


Results scoring model
   AUC ROC   = 0.625452
   AUC PR    = 0.573725
   CLL	      = -0.60332
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 26.066 seconds
Refined model CLL: -0.60332


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678329
   AUC PR    = 0.622436
   CLL	      = -0.546334
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 978.884 seconds
Total inference time: 1.526 seconds
AUC ROC: 0.678329
Total revision time: 978.884
Best scored revision CLL: -0.60332


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 03:35:11
{'AUC ROC': 0.678329, 'AUC PR': 0.622436, 'CLL': -0.546334, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 978.884, 'Inference time': 1.526, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.219, 'Inference time': 0.753}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.15508530587719793;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.13513894257242745;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.115964341639493;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.0981363867599713;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.08204256748756328;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.06787740985984479;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.055671075587491785;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.045333904194152744;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.50e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.036701864913870674;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else return 0.029574376149938828;  // std dev = 16.302, 1,273.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=378 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.801095
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.036 seconds
Total inference time: 0.79 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.579065
   AUC PR    = 0.505196
   CLL	      = -0.584141
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158129
   F1        = 0.273077


Total scoring time: 1.005 seconds
Parameter learned model CLL: -0.584141


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.5e-08, 0, 71], 'false': [16.302, 895, 378]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 71], 'false': [16.302, 895, 378]}]]
[{'': [-1.3009937415325778e-15, 0.20876516248704627]}, {'': [5.003822082817607e-16, 0.2087651624870616]}, {'': [1.3510319623607538e-15, 0.20876516248707322]}, {'': [-1.0007644165635214e-16, 0.20876516248706878]}, {'': [-3.3775799059018846e-16, 0.20876516248705979]}, {'': [-3.752866562113205e-17, 0.20876516248705582]}, {'': [-8.756688644930812e-17, 0.20876516248706958]}, {'': [0.0, 0.20876516248706614]}, {'': [5.942038723345908e-17, 0.20876516248706295]}, {'': [3.4401276819371045e-17, 0.20876516248705912]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17795091529752732;  // std dev = 14.822, 1,010.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=323 */
%   | | | else return 0.14386322081379807;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.018041541090963863;  // std dev = 3.375, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | | else return -0.03415875720818001;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1548795099979915;  // std dev = 14.822, 1,010.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=323 */
%   | | | else return 0.12543301544918353;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3555557392714991;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09446743783575555;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.016893336597821766;  // std dev = 3.377, 106.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=13 */
%   | | else return -0.0342598144599655;  // std dev = 0.304, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.10e-07, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13242877427658492;  // std dev = 14.822, 1,010.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=323 */
%   | | | else return 0.10782354562777491;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2926148461096878;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.44194861002444086;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008918471517599587;  // std dev = 3.474, 106.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=14 */
%   | | | else return 0.029015229000048354;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.030254631488626473;  // std dev = 0.304, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11142571773994606;  // std dev = 14.822, 1,010.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=323 */
%   | | | else return 0.09150383240113741;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23214124828648094;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.335411394950943;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08289734826629334;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.014336516721851975;  // std dev = 3.376, 106.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11853620257298429;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.022566407593228432;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09067839834966333;  // std dev = 14.728, 1,001.000 (wgt'ed) examples reached here.  /* #neg=683 #pos=318 */
%   | | | else return 0.10976113917864702;  // std dev = 3.576, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17942003892665268;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.25176837314502193;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07103930032604416;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.11030143711039414;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011617677620193778;  // std dev = 3.374, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | | else return -0.020031089686308415;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07437495791400724;  // std dev = 14.728, 1,001.000 (wgt'ed) examples reached here.  /* #neg=683 #pos=318 */
%   | | | else return 0.0904927697753142;  // std dev = 3.576, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13647857812921968;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.19047961032437172;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.007612756522522625;  // std dev = 3.467, 106.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=14 */
%   | | | else return 0.02865147023002194;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.02129325634401063;  // std dev = 0.304, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06197196783236875;  // std dev = 14.822, 1,010.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=323 */
%   | | | else return 0.04425499550033829;  // std dev = 3.159, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10293424750437866;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.14620194507639933;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06152934150646485;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0983692322082356;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009878660001581906;  // std dev = 3.374, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   | | | else return -0.015497528718515473;  // std dev = 2.499, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.18487393037216607;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.1755330649072811;  // std dev = 1.233, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return 0.05258187606142995;  // std dev = 0.467, 1,059.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=348 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.00511918839013863;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.14818015248669503;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.040091038638243974;  // std dev = 1.498, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.00947418722295111;  // std dev = 3.981, 152.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.50e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2012940284935143;  // std dev = 1.390, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.11975790574890177;  // std dev = 1.513, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.022214700897834654;  // std dev = 2.672, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.04275164885204885;  // std dev = 14.944, 1,024.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=337 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.004541185360823633;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.1305393285620362;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.003102133506901278;  // std dev = 3.440, 98.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=14 */
%   | | | else return -0.016226153538465585;  // std dev = 2.503, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1277303181956246;  // std dev = 1.621, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.12288963412214583;  // std dev = 1.245, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.017708178964991834;  // std dev = 2.672, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.03403168219946883;  // std dev = 14.944, 1,024.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=337 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.04894934712737135;  // std dev = 1.493, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.09120073491130803;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.015220910200920312;  // std dev = 1.328, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.007893642481339468;  // std dev = 3.981, 152.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=18 */


Results
   AUC ROC   = 0.574714
   AUC PR    = 0.708973
   CLL	      = -0.779343
   Precision = 0.928058 at threshold = 0.5
   Recall    = 0.167315
   F1        = 0.283516


Total learning time: 159.025 seconds
Total inference time: 1.884 seconds
AUC ROC: 0.574714


Results scoring model
   AUC ROC   = 0.652801
   AUC PR    = 0.561382
   CLL	      = -0.563162
   Precision = 0.907216 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.322344


Total scoring time: 4.161 seconds
Refined model CLL: -0.563162


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.574714
   AUC PR    = 0.708973
   CLL	      = -0.779343
   Precision = 0.928058 at threshold = 0.5
   Recall    = 0.167315
   F1        = 0.283516


Total learning time: 166.227 seconds
Total inference time: 1.884 seconds
AUC ROC: 0.574714
Total revision time: 166.227
Best scored revision CLL: -0.563162


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:38:01
{'AUC ROC': 0.574714, 'AUC PR': 0.708973, 'CLL': -0.779343, 'Precision': [0.928058, 0.5], 'Recall': 0.167315, 'F1': 0.283516, 'Learning time': 166.227, 'Inference time': 1.884, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.801095, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.036, 'Inference time': 0.79}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.1510822157943355;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.13167801291448306;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.11306494390411015;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.09577881563809972;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.08017790751788727;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.0664398293692846;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.05458896717183398;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.044538020951750835;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03613016424178093;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.029174167898447588;  // std dev = 22.905, 2,533.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=742 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.805962
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.86 seconds
Total inference time: 0.792 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58686
   AUC PR    = 0.518207
   CLL	      = -0.578331
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.173719
   F1        = 0.296015


Total scoring time: 1.152 seconds
Parameter learned model CLL: -0.578331


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.68e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [22.905, 1, 742]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 156], 'false': [22.905, 1, 742]}]]
[{'': [6.012284687200848e-15, 0.20712337375621814]}, {'': [-2.6417614534670392e-15, 0.20712337375619766]}, {'': [1.8674520619335967e-15, 0.20712337375616738]}, {'': [1.343654532366856e-15, 0.2071233737562012]}, {'': [5.693451408334137e-16, 0.20712337375619563]}, {'': [-2.1635115351669717e-16, 0.20712337375618275]}, {'': [4.099285014000578e-16, 0.20712337375619974]}, {'': [-3.0744637605004334e-16, 0.20712337375619336]}, {'': [-2.3627823344586665e-16, 0.20712337375617654]}, {'': [5.408778837917429e-17, 0.20712337375618273]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16799401256077667;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.13939893509951132;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5248156017661785;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -1.1878143592070941E-4;  // std dev = 3.930, 127.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
%   | | | else return 0.03246086170501694;  // std dev = 3.961, 109.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03372145418348144;  // std dev = 4.355, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14628933112578896;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.12156867236760067;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.448295606241962;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.27021896952830937;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07468251936627462;  // std dev = 1.980, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.006439214012882906;  // std dev = 5.212, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02956678025180036;  // std dev = 4.355, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12527957299579784;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.10457401954231209;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.362363346322623;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.2260959005406503;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006017812909085683;  // std dev = 5.206, 211.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=32 */
%   | | | else return 0.057377810016582306;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02584143586976104;  // std dev = 4.355, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10567580348533354;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.08884503157036865;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28075385369658523;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.18382902223075068;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08882727647890576;  // std dev = 2.312, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return -0.0010364162980279691;  // std dev = 5.370, 228.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=34 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14067528069855118;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.036793524340801916;  // std dev = 3.934, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08796805065550789;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.07466153784410431;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2124807012182714;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.1460498086109486;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06500255806185018;  // std dev = 1.974, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.0011847742765729965;  // std dev = 5.202, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022472644571565496;  // std dev = 4.353, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return -0.09982169068728287;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07240996524639748;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.062155637450306535;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15948988228171193;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.11405557378101747;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02245218017927629;  // std dev = 5.120, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
%   | | | else return -0.03247625221681991;  // std dev = 2.814, 77.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12466583252663353;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03209694986773786;  // std dev = 3.934, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059051297276989746;  // std dev = 20.686, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.05133587520552504;  // std dev = 4.405, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11665579658710155;  // std dev = 3.286, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return 0.07604970025598894;  // std dev = 2.011, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0194994416497515;  // std dev = 5.120, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
%   | | | else return -0.02839810626554474;  // std dev = 2.814, 77.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.15742338444410692;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.02240697864300628;  // std dev = 3.940, 110.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1379483021747779;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.030138983656505428;  // std dev = 2.960, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04841443580224077;  // std dev = 20.841, 2,033.000 (wgt'ed) examples reached here.  /* #neg=1,404 #pos=629 */
%   | | | else return 0.08262004799935602;  // std dev = 3.715, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3383900552261743;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.010889110265925041;  // std dev = 2.073, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004437413161999955;  // std dev = 5.354, 226.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=34 */
%   | | | else return 0.025714216261801245;  // std dev = 3.931, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03847098437735871;  // std dev = 20.682, 2,001.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=620 */
%   | | | else return 0.03335077233078317;  // std dev = 4.404, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07772860014069534;  // std dev = 2.586, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.044049425329905814;  // std dev = 2.852, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07815395224604066;  // std dev = 2.276, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return -0.12069515125713236;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0038579055740688246;  // std dev = 5.354, 226.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=34 */
%   | | | else return 0.022284573001838164;  // std dev = 3.930, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04038345641466654;  // std dev = 3.527, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.18400639543188185;  // std dev = 0.971, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.031360061791630436;  // std dev = 20.841, 2,033.000 (wgt'ed) examples reached here.  /* #neg=1,404 #pos=629 */
%   | | | else return 0.04815858453904965;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05749963674702551;  // std dev = 1.926, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.0041698590442722965;  // std dev = 5.187, 213.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015135806533268924;  // std dev = 4.341, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return -0.09208623676150975;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.578567
   AUC PR    = 0.710975
   CLL	      = -0.789909
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 345.86 seconds
Total inference time: 1.923 seconds
AUC ROC: 0.578567


Results scoring model
   AUC ROC   = 0.644377
   AUC PR    = 0.562823
   CLL	      = -0.565707
   Precision = 0.946237 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.324723


Total scoring time: 8.23 seconds
Refined model CLL: -0.565707


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.578567
   AUC PR    = 0.710975
   CLL	      = -0.789909
   Precision = 0.959016 at threshold = 0.5
   Recall    = 0.151751
   F1        = 0.262038


Total learning time: 358.10200000000003 seconds
Total inference time: 1.923 seconds
AUC ROC: 0.578567
Total revision time: 358.10200000000003
Best scored revision CLL: -0.565707


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:44:02
{'AUC ROC': 0.578567, 'AUC PR': 0.710975, 'CLL': -0.789909, 'Precision': [0.959016, 0.5], 'Recall': 0.151751, 'F1': 0.262038, 'Learning time': 358.10200000000003, 'Inference time': 1.923, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.805962, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.86, 'Inference time': 0.792}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.15037554906525158;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.13106690140041002;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.41e-08, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.11255258817839318;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.09536167035177806;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.07984739579619159;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.06618445815272155;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.05439624089505423;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.07e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.044395842444751914;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.03602767380807108;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else return 0.02910212061076322;  // std dev = 28.016, 3,795.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,109 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806831
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.142 seconds
Total inference time: 0.725 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.588344
   AUC PR    = 0.520704
   CLL	      = -0.577262
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176689
   F1        = 0.300315


Total scoring time: 1.278 seconds
Parameter learned model CLL: -0.577262


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.41e-08, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-07, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 238], 'false': [28.016, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 238], 'false': [28.016, 2, 1]}]]
[{'': [4.89617683464943e-15, 0.2068302200558862]}, {'': [-4.179663151530001e-15, 0.206830220055908]}, {'': [1.1344799982724288e-15, 0.2068302200558241]}, {'': [-1.791284207798572e-16, 0.20683022005585283]}, {'': [3.4332947316139296e-16, 0.20683022005586438]}, {'': [3.731842099580358e-16, 0.20683022005589397]}, {'': [3.582568415597144e-16, 0.20683022005586632]}, {'': [4.8513947294544656e-17, 0.20683022005586232]}, {'': [-1.679328944811161e-16, 0.20683022005586046]}, {'': [4.47821051949643e-17, 0.2068302200558522]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1719328979888379;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.106556578411613;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4414822684328446;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01989984538829308;  // std dev = 5.132, 246.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=30 */
%   | | | else return 0.01723984419042146;  // std dev = 3.431, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03652731347788981;  // std dev = 5.207, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14968864193731818;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.09308411005371975;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3788520179768202;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return 0.2396206853161997;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.017494671642431705;  // std dev = 5.132, 246.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=30 */
%   | | | else return 0.015128263820101595;  // std dev = 3.431, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03202243477160437;  // std dev = 5.207, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.20e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1281114946276143;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.0804762411977745;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.310375214908466;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return 0.2016709747053186;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11414168145733604;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.08232629403896428;  // std dev = 0.964, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0199509550842334;  // std dev = 5.634, 302.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=36 */
%   | | | else return 0.02906830902683806;  // std dev = 5.120, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831075;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10795723324450432;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.06892890477223125;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4784481622425821;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19148167871132682;  // std dev = 4.587, 86.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.010473218048769287;  // std dev = 5.819, 305.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=39 */
%   | | | else return 0.029044463866713555;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02520577670239593;  // std dev = 5.204, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | | else return -0.11307119286374487;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08974976357201384;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.05855288086947338;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20301684668922906;  // std dev = 3.754, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.09724004123424278;  // std dev = 2.786, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10089299088718316;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.07359212545886742;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.016815743894157836;  // std dev = 5.633, 302.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=36 */
%   | | | else return 0.022675127482823083;  // std dev = 5.117, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.98e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07376215787693846;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.049382961195451124;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3331824483570862;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11332096486722396;  // std dev = 4.576, 86.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08706276060549901;  // std dev = 2.429, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.06518719115249626;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014851962029455329;  // std dev = 5.633, 302.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=36 */
%   | | | else return 0.019683153628407023;  // std dev = 5.117, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06005037566372527;  // std dev = 25.492, 3,018.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=947 */
%   | | | else return 0.04139350875504144;  // std dev = 5.414, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12837494366230254;  // std dev = 3.747, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.043338252151254385;  // std dev = 2.773, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07436662260728573;  // std dev = 2.429, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.05811527920576045;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01313749047917839;  // std dev = 5.633, 302.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=36 */
%   | | | else return 0.017048151095120635;  // std dev = 5.116, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527744;  // std dev = 1.07e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.048586340293451054;  // std dev = 25.434, 3,012.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=942 */
%   | | | else return 0.033666816321331276;  // std dev = 5.679, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10487233433089295;  // std dev = 3.430, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | | else return 0.03667569564452916;  // std dev = 3.154, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0629533739457285;  // std dev = 2.428, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.011949506516747843;  // std dev = 5.633, 303.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01601206638395133;  // std dev = 5.198, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | | else return -0.10365793640079517;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03903732871317577;  // std dev = 25.434, 3,012.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=942 */
%   | | | else return 0.02756031506761483;  // std dev = 5.679, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20951703330245336;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0458204009684174;  // std dev = 4.563, 86.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.015745868013450928;  // std dev = 4.311, 174.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=22 */
%   | | | else return 0.007299758035271835;  // std dev = 4.372, 160.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013824712157879032;  // std dev = 5.198, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | | else return -0.09442897379268217;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 238.000 (wgt'ed) examples reached here.  /* #pos=238 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6483690012080163;  // std dev = 1.014, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.27102008881158374;  // std dev = 0.167, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.05325233077472259;  // std dev = 3.720, 94.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   | | | else return -0.10478691788845416;  // std dev = 1.035, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.0333174931173962;  // std dev = 25.709, 3,076.000 (wgt'ed) examples reached here.  /* #neg=2,113 #pos=963 */
%   | | | else return 0.03389423716260766;  // std dev = 4.521, 85.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0065345255862788495;  // std dev = 6.321, 321.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=48 */
%   | | | else return 0.013760879616283814;  // std dev = 4.347, 155.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */


Results
   AUC ROC   = 0.581664
   AUC PR    = 0.713752
   CLL	      = -0.785923
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 515.757 seconds
Total inference time: 2.151 seconds
AUC ROC: 0.581664


Results scoring model
   AUC ROC   = 0.653877
   AUC PR    = 0.568791
   CLL	      = -0.562524
   Precision = 0.951128 at threshold = 0.5
   Recall    = 0.187825
   F1        = 0.313701


Total scoring time: 12.698 seconds
Refined model CLL: -0.562524


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.581664
   AUC PR    = 0.713752
   CLL	      = -0.785923
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 533.8749999999999 seconds
Total inference time: 2.151 seconds
AUC ROC: 0.581664
Total revision time: 533.8749999999999
Best scored revision CLL: -0.562524


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 03:53:00
{'AUC ROC': 0.581664, 'AUC PR': 0.713752, 'CLL': -0.785923, 'Precision': [1.0, 0.5], 'Recall': 0.136187, 'F1': 0.239726, 'Learning time': 533.8749999999999, 'Inference time': 2.151, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806831, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.142, 'Inference time': 0.725}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.1516400593598622;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.13216039276038163;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.11346928706293137;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.09610790655285083;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.08043852891232636;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.06664108085858686;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.054740743466227045;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.49e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.04464989850814264;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.036210735478971925;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else return 0.029230742907403236;  // std dev = 32.424, 5,070.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,488 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.805278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.596 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.585746
   AUC PR    = 0.516352
   CLL	      = -0.579153
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.171492
   F1        = 0.292776


Total scoring time: 1.308 seconds
Parameter learned model CLL: -0.579153


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 308], 'false': [32.424, 3, 1]}]]
[{'': [3.50657454011478e-15, 0.20735408424069188]}, {'': [-4.9830269780578455e-15, 0.20735408424081242]}, {'': [-1.8455655474288318e-16, 0.20735408424078092]}, {'': [-8.305044963429742e-16, 0.20735408424077154]}, {'': [-3.4604354014290595e-16, 0.20735408424074075]}, {'': [4.383218175143475e-16, 0.2073540842407606]}, {'': [2.0185873175002846e-16, 0.20735408424073842]}, {'': [2.0185873175002846e-16, 0.207354084240714]}, {'': [-2.105098202536011e-16, 0.20735408424075197]}, {'': [-1.6725437773573787e-16, 0.20735408424074867]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17224990500749027;  // std dev = 29.433, 4,021.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,263 */
%   | | | else return 0.13690999704641627;  // std dev = 6.741, 226.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4206489350995111;  // std dev = 3.969, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return 0.27119241336038186;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048625125575702845;  // std dev = 3.117, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return -0.003442760402217662;  // std dev = 8.302, 578.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=80 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14996216109208407;  // std dev = 29.433, 4,021.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,263 */
%   | | | else return 0.11941342517102473;  // std dev = 6.741, 226.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3613867582070221;  // std dev = 3.969, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return 0.23487526117704188;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.022717680388899358;  // std dev = 6.708, 326.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=54 */
%   | | | else return -0.0023015704469376377;  // std dev = 4.219, 146.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0018833812805232652;  // std dev = 5.248, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.13984938047815446;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12840598528753808;  // std dev = 29.446, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,762 #pos=1,264 */
%   | | | else return 0.10096422786937906;  // std dev = 6.683, 221.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.49085540032112035;  // std dev = 1.236, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.23713104606250177;  // std dev = 5.016, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10629914381714867;  // std dev = 3.211, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.07642686014390883;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0058943218599610036;  // std dev = 6.886, 402.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=55 */
%   | | | else return 0.011053826078227781;  // std dev = 5.588, 239.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583115;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10821356171079231;  // std dev = 29.446, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,762 #pos=1,264 */
%   | | | else return 0.08560776800873035;  // std dev = 6.683, 221.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3865365234798472;  // std dev = 1.239, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1910543819738763;  // std dev = 5.013, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09164951588904988;  // std dev = 3.211, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 9.525301222258409E-4;  // std dev = 7.212, 419.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=61 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13984755151810394;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 3.516664575276448E-4;  // std dev = 5.242, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015094;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09004124385313435;  // std dev = 29.431, 4,021.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,263 */
%   | | | else return 0.07090337804047295;  // std dev = 6.745, 226.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19838358273611575;  // std dev = 3.987, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | | else return 0.108572218120724;  // std dev = 3.269, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09326546889628912;  // std dev = 2.983, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.057531348008575206;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03363730876050027;  // std dev = 3.182, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.004163301652457499;  // std dev = 8.299, 578.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=80 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07400019824167;  // std dev = 29.445, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,762 #pos=1,264 */
%   | | | else return 0.05863312284915211;  // std dev = 6.686, 221.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15839532737166015;  // std dev = 3.960, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return 0.07681123699715853;  // std dev = 3.293, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08121735293804319;  // std dev = 2.981, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.05024946992619423;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.028878194329643465;  // std dev = 3.181, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return -0.003655149749062745;  // std dev = 8.299, 578.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=80 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0602965498672225;  // std dev = 29.431, 4,021.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,263 */
%   | | | else return 0.0477133475823216;  // std dev = 6.746, 226.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12598162789349102;  // std dev = 4.001, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | | else return 0.05111856203265226;  // std dev = 3.235, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06927261827780107;  // std dev = 3.197, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -1.1464893851886605E-4;  // std dev = 7.199, 419.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=61 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -3.779126603127316E-5;  // std dev = 5.248, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.11921162431704602;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.49e-07, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04871134742062963;  // std dev = 29.444, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,762 #pos=1,264 */
%   | | | else return 0.03886625380923087;  // std dev = 6.687, 221.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20687208563045087;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0641509518239049;  // std dev = 5.021, 104.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19615178401448718;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0018505630185135027;  // std dev = 3.051, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0066889433947831065;  // std dev = 6.872, 402.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=55 */
%   | | | else return 0.011946271148176845;  // std dev = 5.583, 239.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03914266364707664;  // std dev = 29.430, 4,021.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,263 */
%   | | | else return 0.031265298531869136;  // std dev = 6.748, 226.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.16703145488411358;  // std dev = 1.222, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.045609086252434906;  // std dev = 4.990, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | | then return -0.1621505194322447;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.05337570292778172;  // std dev = 3.250, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0076157076887036585;  // std dev = 6.970, 411.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=57 */
%   | | | else return 0.009549664187904053;  // std dev = 5.500, 231.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801167;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #pos=308 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03127355496005789;  // std dev = 29.444, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,762 #pos=1,264 */
%   | | | else return 0.025221679597014705;  // std dev = 6.689, 221.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06670332725301527;  // std dev = 3.969, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return 0.0057082894235843985;  // std dev = 3.255, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05650116314213341;  // std dev = 3.180, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.07424069338970503;  // std dev = 0.949, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02385069294386177;  // std dev = 3.088, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return -0.0030360007279239412;  // std dev = 8.296, 578.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=80 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.701308
   CLL	      = -0.79003
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 722.759 seconds
Total inference time: 2.24 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.637919
   AUC PR    = 0.551647
   CLL	      = -0.567537
   Precision = 0.953216 at threshold = 0.5
   Recall    = 0.181514
   F1        = 0.304958


Total scoring time: 17.452 seconds
Refined model CLL: -0.567537


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.701308
   CLL	      = -0.79003
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 747.115 seconds
Total inference time: 2.24 seconds
AUC ROC: 0.566796
Total revision time: 747.115
Best scored revision CLL: -0.567537


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:05:30
{'AUC ROC': 0.566796, 'AUC PR': 0.701308, 'CLL': -0.79003, 'Precision': [1.0, 0.5], 'Recall': 0.136187, 'F1': 0.239726, 'Learning time': 747.115, 'Inference time': 2.24, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.805278, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.596, 'Inference time': 0.773}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.271 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 1.428 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593296;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.1169706002890261;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.579384807931358;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.28301269830657416;  // std dev = 5.657, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248211;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1276485314069232;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117948;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.47177128074187585;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23568743619292068;  // std dev = 5.655, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10439255773233062;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06725589742094903;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00259696235815649;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006594776312593016;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022602;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649284;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23818137312972218;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1501615130168827;  // std dev = 3.705, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08947289267384123;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05928955286645043;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04850720647183434;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015467406347851474;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117478;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827354;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19514870702193515;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10690738104051627;  // std dev = 3.679, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2011820519842841;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014517102420568136;  // std dev = 3.410, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04192621499012461;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013583491884514474;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032769;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583283;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.31324072272355563;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1094363119479448;  // std dev = 5.625, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07063741630117502;  // std dev = 3.511, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.058318967430824514;  // std dev = 1.336, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.036063609326107186;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011930756755965713;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316852;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039109;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23588655247514298;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.08388681985646186;  // std dev = 5.624, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.013754801156773614;  // std dev = 7.430, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.007213294659828443;  // std dev = 4.642, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006655488918179354;  // std dev = 6.189, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.14086135681567385;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982655;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664085;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09932843138739511;  // std dev = 4.434, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.03162026210725973;  // std dev = 3.660, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08683084032601725;  // std dev = 3.493, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.086232367028586;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002860100075586748;  // std dev = 7.956, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006299504469717776;  // std dev = 6.110, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03899906934798502;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014583;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08273558991240319;  // std dev = 4.445, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.013312626506612192;  // std dev = 3.637, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07351223258275245;  // std dev = 3.491, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07498071818950182;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02070134570799243;  // std dev = 3.607, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018212440770038062;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859817;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.02475672970229025;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06390060094368322;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.008166761335456;  // std dev = 3.634, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.18757529834393116;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 6.001509348732348E-4;  // std dev = 3.394, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01757288199549815;  // std dev = 3.606, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015990925749004767;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */


Results
   AUC ROC   = 0.566553
   AUC PR    = 0.701248
   CLL	      = -0.791185
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 840.939 seconds
Total inference time: 2.284 seconds
AUC ROC: 0.566553


Results scoring model
   AUC ROC   = 0.638184
   AUC PR    = 0.553111
   CLL	      = -0.566898
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 20.838 seconds
Refined model CLL: -0.566898


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566553
   AUC PR    = 0.701248
   CLL	      = -0.791185
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 870.4759999999999 seconds
Total inference time: 2.284 seconds
AUC ROC: 0.566553
Total revision time: 870.4759999999999
Best scored revision CLL: -0.566898


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 04:20:04
{'AUC ROC': 0.566553, 'AUC PR': 0.701248, 'CLL': -0.791185, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 870.4759999999999, 'Inference time': 2.284, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.271, 'Inference time': 0.752}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.2760283529789254;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.23900199931512192;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.08e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.2011739507866529;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.1650910293342311;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.13265751717009186;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.10486136547109004;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.08188271879117591;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.06337626044316294;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.04874379912419498;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.03732201439995931;  // std dev = 15.297, 962.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=402 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.55772
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1.705 seconds
Total inference time: 0.985 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.587269
   AUC PR    = 0.626096
   CLL	      = -0.636285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174538
   F1        = 0.297203


Total scoring time: 0.95 seconds
Parameter learned model CLL: -0.636285


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.08e-08, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.33e-07, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [15.297, 560, 402]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 85], 'false': [15.297, 560, 402]}]]
[{'': [-3.343730521224001e-16, 0.2432562099921633]}, {'': [9.195258933366003e-16, 0.24325620999219041]}, {'': [1.6300686290967004e-15, 0.24325620999217198]}, {'': [2.0898315757650005e-16, 0.24325620999216443]}, {'': [-3.343730521224001e-16, 0.2432562099921805]}, {'': [-5.224578939412501e-17, 0.2432562099921727]}, {'': [-1.2016531560648752e-16, 0.24325620999217157]}, {'': [2.0898315757650005e-17, 0.24325620999216824]}, {'': [-5.747036833353752e-17, 0.24325620999218442]}, {'': [3.918434204559376e-17, 0.24325620999217956]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.28794136489193745;  // std dev = 0.495, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else return 0.045648935099512344;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2491585258844674;  // std dev = 0.495, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.448295606241962;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20522947466053712;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.09003433310697653;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else return 0.04000075842466885;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.72e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20931737121600116;  // std dev = 0.495, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.36236334632262296;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.44194861002444086;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.17385240363356164;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.07788111812495957;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else return 0.03489968798418179;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17125471930964176;  // std dev = 0.495, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2807538536965852;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.335411394950943;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07843436230523917;  // std dev = 3.611, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.17134927452198237;  // std dev = 2.172, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.030331770242380172;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13709684117134024;  // std dev = 0.495, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.21248070121827123;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.25176837314502193;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12111310211917811;  // std dev = 2.943, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.05438891604253214;  // std dev = 3.013, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else return 0.02627192468282394;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.49088143281249813;  // std dev = 1.561, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.09963906781559818;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10257195933246027;  // std dev = 13.927, 794.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=337 */
%   | | | else return 0.14397816983649142;  // std dev = 2.171, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05314654621918797;  // std dev = 3.612, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.11699815087314;  // std dev = 2.165, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.022687381227671673;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08383235552475933;  // std dev = 0.494, 819.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=352 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11240352474508096;  // std dev = 1.798, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.15680126209748363;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11981419287404642;  // std dev = 1.657, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.04484634867723699;  // std dev = 3.868, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else return 0.01954068219501889;  // std dev = 0.390, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.42453363966788904;  // std dev = 1.176, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.07593803238620507;  // std dev = 1.835, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.03953121469776196;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2893586586437587;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.06061430488261572;  // std dev = 13.927, 794.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=337 */
%   | | | else return 0.07810647329617085;  // std dev = 2.170, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041179037106801396;  // std dev = 3.854, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.029292145809745224;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.3720391837926267;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17377829370224995;  // std dev = 1.504, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.37796081620737326;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13560278338966847;  // std dev = 0.823, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.04752313606787821;  // std dev = 13.966, 806.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=345 */
%   | | | else return 0.06796279490271427;  // std dev = 2.176, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04332751310983086;  // std dev = 3.874, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.0138511405532949;  // std dev = 2.205, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.30885930033955666;  // std dev = 1.163, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.04791059279836087;  // std dev = 1.834, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.02226240831533301;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.246187725651536;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.22825881989554997;  // std dev = 1.903, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.16082916028788635;  // std dev = 0.871, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031214436586084325;  // std dev = 14.193, 841.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=350 */
%   | | | else return 0.05578216934470389;  // std dev = 3.272, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */


Results
   AUC ROC   = 0.622324
   AUC PR    = 0.421816
   CLL	      = -0.5361
   Precision = 0.869919 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.303977


Total learning time: 101.618 seconds
Total inference time: 1.575 seconds
AUC ROC: 0.622324


Results scoring model
   AUC ROC   = 0.64707
   AUC PR    = 0.677232
   CLL	      = -0.61597
   Precision = 0.910448 at threshold = 0.5
   Recall    = 0.250513
   F1        = 0.392915


Total scoring time: 1.822 seconds
Refined model CLL: -0.61597


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622324
   AUC PR    = 0.421816
   CLL	      = -0.5361
   Precision = 0.869919 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.303977


Total learning time: 106.095 seconds
Total inference time: 1.575 seconds
AUC ROC: 0.622324
Total revision time: 106.095
Best scored revision CLL: -0.61597


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:21:54
{'AUC ROC': 0.622324, 'AUC PR': 0.421816, 'CLL': -0.5361, 'Precision': [0.869919, 0.5], 'Recall': 0.184165, 'F1': 0.303977, 'Learning time': 106.095, 'Inference time': 1.575, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.55772, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1.705, 'Inference time': 0.985}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.28231345952110115;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.24436208368262258;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.28e-08, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.20547583334390396;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.50e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.16835209266889245;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.73e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.13501055298042502;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.10649141919850173;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.08297427450445616;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.06408529507910828;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.04919015655280527;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else return 0.03759254161109704;  // std dev = 21.796, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=825 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.563033
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.444 seconds
Total inference time: 0.963 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.576489
   AUC PR    = 0.611005
   CLL	      = -0.643714
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152977
   F1        = 0.265361


Total scoring time: 1.092 seconds
Parameter learned model CLL: -0.643714


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.23e-07, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.28e-08, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 149], 'false': [21.796, 1, 825]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.66e-08, 0, 149], 'false': [21.796, 1, 825]}]]
[{'': [5.7224918316249676e-15, 0.24424898064382086]}, {'': [-2.3843715965104034e-15, 0.24424898064381365]}, {'': [1.8598098452781147e-15, 0.24424898064377806]}, {'': [1.3590918100109299e-15, 0.2442489806438005]}, {'': [5.007180352671847e-16, 0.24424898064379705]}, {'': [-1.6690601175572824e-16, 0.2442489806438001]}, {'': [4.0534317140676857e-16, 0.2442489806438056]}, {'': [-2.9804644956380043e-16, 0.24424898064378656]}, {'': [-3.576557394765605e-17, 0.24424898064378023]}, {'': [2.980464495638004e-17, 0.24424898064377829]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.85814893509951;  // std dev = 9.23e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30152242907541094;  // std dev = 0.497, 1,660.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=736 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5033102254220925;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.29148226843284447;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.07920156667845946;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.010926712877290126;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109562;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5728198459931654;  // std dev = 2.468, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.14854263810073168;  // std dev = 1.814, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2560849252693098;  // std dev = 19.948, 1,616.000 (wgt'ed) examples reached here.  /* #neg=907 #pos=709 */
%   | | | else return 0.35707103179681476;  // std dev = 3.493, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.25217476417968154;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.06928428259126936;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009591399008086402;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.26e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.47096277123456154;  // std dev = 2.471, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.12512254569768239;  // std dev = 1.813, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2147178380285319;  // std dev = 19.948, 1,616.000 (wgt'ed) examples reached here.  /* #neg=907 #pos=709 */
%   | | | else return 0.29330370461716465;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.21172926097600947;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.06014821880440339;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008410655575590975;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.50e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5155828920369473;  // std dev = 1.971, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.08711769983956845;  // std dev = 1.571, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2745233888039857;  // std dev = 3.146, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return 0.1752304073628294;  // std dev = 20.010, 1,627.000 (wgt'ed) examples reached here.  /* #neg=910 #pos=717 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.17307257568071305;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.05186082491732624;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13445595334207652;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.009194151142856925;  // std dev = 3.047, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.73e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14129677383711092;  // std dev = 0.494, 1,660.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=736 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.25471859481169445;  // std dev = 2.694, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.12742650891984217;  // std dev = 2.373, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.13839960736169254;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.044445402405791194;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.006933674183339431;  // std dev = 3.050, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.09932008408515161;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694904;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27563385779384914;  // std dev = 2.289, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return -0.003266268757068236;  // std dev = 2.008, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10886292226639523;  // std dev = 19.910, 1,616.000 (wgt'ed) examples reached here.  /* #neg=907 #pos=709 */
%   | | | else return 0.1434493114096809;  // std dev = 3.463, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.10882761265681526;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.03788912391134815;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1474247740994816;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.007068806349726979;  // std dev = 3.045, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.46e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20848718542913755;  // std dev = 2.279, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return -0.002517046138510437;  // std dev = 2.008, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08438161716330833;  // std dev = 19.909, 1,616.000 (wgt'ed) examples reached here.  /* #neg=907 #pos=709 */
%   | | | else return 0.10844465737755538;  // std dev = 3.462, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.084532376638451;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.0321521725597958;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11897606214382177;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.007484305721287301;  // std dev = 3.043, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.32091703869241567;  // std dev = 1.968, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.13678466094135877;  // std dev = 1.581, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06472140776280368;  // std dev = 19.918, 1,622.000 (wgt'ed) examples reached here.  /* #neg=905 #pos=717 */
%   | | | else return 0.07781616836144398;  // std dev = 3.550, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.06509492886376002;  // std dev = 3.838, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | | else return 0.027176570743836573;  // std dev = 4.044, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00558663236606298;  // std dev = 3.046, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.08970332149532718;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0499205132432573;  // std dev = 0.493, 1,660.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=736 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11698348848414981;  // std dev = 2.703, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.020801026560644132;  // std dev = 2.384, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04162962063310043;  // std dev = 4.885, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.0025952945921017437;  // std dev = 2.687, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004884266163491838;  // std dev = 3.046, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return -0.08264954304836207;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.66e-08, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03801126845307025;  // std dev = 0.493, 1,660.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=736 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2399325300680749;  // std dev = 1.014, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04275194985120109;  // std dev = 3.449, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.022699541203662358;  // std dev = 5.335, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | | else return 0.08729224752778;  // std dev = 1.609, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10517790720152725;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.005855562877958381;  // std dev = 3.042, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */


Results
   AUC ROC   = 0.623954
   AUC PR    = 0.4228
   CLL	      = -0.541577
   Precision = 0.944444 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.296081


Total learning time: 177.484 seconds
Total inference time: 1.844 seconds
AUC ROC: 0.623954


Results scoring model
   AUC ROC   = 0.634153
   AUC PR    = 0.656546
   CLL	      = -0.624927
   Precision = 0.900862 at threshold = 0.5
   Recall    = 0.214579
   F1        = 0.3466


Total scoring time: 3.079 seconds
Refined model CLL: -0.624927


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.623954
   AUC PR    = 0.4228
   CLL	      = -0.541577
   Precision = 0.944444 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.296081


Total learning time: 184.09900000000002 seconds
Total inference time: 1.844 seconds
AUC ROC: 0.623954
Total revision time: 184.09900000000002
Best scored revision CLL: -0.624927


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:25:01
{'AUC ROC': 0.623954, 'AUC PR': 0.4228, 'CLL': -0.541577, 'Precision': [0.944444, 0.5], 'Recall': 0.175559, 'F1': 0.296081, 'Learning time': 184.09900000000002, 'Inference time': 1.844, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.563033, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.444, 'Inference time': 0.963}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.2776375321969502;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.2403746996787452;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.20227654565596298;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.16592792807827905;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.13326231461592772;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.10528098324173855;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.08216408439132401;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.06355918822446194;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.04885898553941274;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.03739177517305071;  // std dev = 26.547, 2,894.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,214 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559069
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.138 seconds
Total inference time: 0.939 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.584531
   AUC PR    = 0.622322
   CLL	      = -0.638186
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169062
   F1        = 0.289227


Total scoring time: 1.326 seconds
Parameter learned model CLL: -0.638186


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [26.547, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 247], 'false': [26.547, 1, 1]}]]
[{'': [4.717773630148034e-15, 0.2435179140026874]}, {'': [-4.315036856842713e-15, 0.24351791400265502]}, {'': [9.205411961264456e-16, 0.24351791400268713]}, {'': [-2.8766912378951425e-16, 0.24351791400269915]}, {'': [2.301352990316114e-16, 0.24351791400269504]}, {'': [3.8835331711584425e-16, 0.24351791400268494]}, {'': [3.380112204526792e-16, 0.24351791400267414]}, {'': [-3.595864047368928e-17, 0.24351791400264755]}, {'': [-1.797932023684464e-16, 0.2435179140026748]}, {'': [1.0787592142106784e-17, 0.24351791400267642]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29623257293953975;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4463842292171601;  // std dev = 4.537, 85.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2786034805540564;  // std dev = 4.631, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.05014893509951186;  // std dev = 4.404, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.010691307980868306;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25621934027655124;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3829554279400077;  // std dev = 4.537, 85.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.24119857858680638;  // std dev = 4.631, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.043934015914910425;  // std dev = 4.404, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009384872109563448;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21495877253451168;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3657782828840023;  // std dev = 3.557, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.26555762395703586;  // std dev = 2.838, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20293801390731028;  // std dev = 4.631, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.03830595647102199;  // std dev = 4.404, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008229831838213778;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1755012182108431;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.28620681956971433;  // std dev = 3.553, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.2093147606924586;  // std dev = 2.837, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0646089286421246;  // std dev = 6.000, 194.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=50 */
%   | | | else return 0.3299373081322566;  // std dev = 2.128, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007210581426452094;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14013555319041185;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.298796629809264;  // std dev = 1.196, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.18785561961756106;  // std dev = 4.384, 83.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.054484339533901624;  // std dev = 5.998, 194.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=50 */
%   | | | else return 0.26351672126477504;  // std dev = 2.124, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1283835677479013;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.009034952778098708;  // std dev = 3.895, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11001923140889867;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1697778693077166;  // std dev = 3.557, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.1137926632233813;  // std dev = 2.826, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1219142327319091;  // std dev = 4.570, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.016065053429524072;  // std dev = 4.408, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11476000903899004;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.007922120995474563;  // std dev = 3.895, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08532456982674433;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12782193886102208;  // std dev = 3.558, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.08583834373077016;  // std dev = 2.826, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09600276424577009;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.013724587326941677;  // std dev = 4.408, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0057060375687121145;  // std dev = 3.899, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.08747434534138396;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06560750473573713;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.16340128194909548;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.0773131570829894;  // std dev = 4.376, 83.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02637665251118968;  // std dev = 5.979, 194.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=50 */
%   | | | else return 0.15416801504939484;  // std dev = 2.112, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004990018466387217;  // std dev = 3.899, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | | | else return -0.08074619082828645;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25290291986263613;  // std dev = 2.882, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return -0.12316732044364317;  // std dev = 1.854, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04876085511882197;  // std dev = 24.343, 2,409.000 (wgt'ed) examples reached here.  /* #neg=1,357 #pos=1,052 */
%   | | | else return 0.04988319586356714;  // std dev = 4.517, 85.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.06238828253718221;  // std dev = 4.556, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
%   | | | else return 0.00757096509006277;  // std dev = 4.410, 125.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10082137438491806;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.0063341479084183016;  // std dev = 3.893, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03807698192322859;  // std dev = 0.496, 2,463.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.24368556880594974;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0375749919084694;  // std dev = 4.517, 85.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01603376470959445;  // std dev = 5.976, 194.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=50 */
%   | | | else return 0.10154306864064182;  // std dev = 2.108, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0921043860148571;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.005543139453694058;  // std dev = 3.893, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */


Results
   AUC ROC   = 0.622794
   AUC PR    = 0.420902
   CLL	      = -0.544123
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 348.387 seconds
Total inference time: 1.492 seconds
AUC ROC: 0.622794


Results scoring model
   AUC ROC   = 0.640279
   AUC PR    = 0.661835
   CLL	      = -0.621259
   Precision = 0.882022 at threshold = 0.5
   Recall    = 0.214921
   F1        = 0.345625


Total scoring time: 3.523 seconds
Refined model CLL: -0.621259


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622794
   AUC PR    = 0.420902
   CLL	      = -0.544123
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 356.374 seconds
Total inference time: 1.492 seconds
AUC ROC: 0.622794
Total revision time: 356.374
Best scored revision CLL: -0.621259


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:31:01
{'AUC ROC': 0.622794, 'AUC PR': 0.420902, 'CLL': -0.544123, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 356.374, 'Inference time': 1.492, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559069, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.138, 'Inference time': 0.939}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.27813857777169776;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.24080206362088238;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.2026196914101287;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.1661882339611981;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.13345029727693639;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.105411316462149;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.08225142312454468;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.06361594670494396;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.04889472022051601;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.03741342341647067;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.55949
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.062 seconds
Total inference time: 0.932 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583676
   AUC PR    = 0.621135
   CLL	      = -0.638778
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167351
   F1        = 0.286719


Total scoring time: 1.306 seconds
Parameter learned model CLL: -0.638778


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}]]
[{'': [3.400143152717044e-15, 0.24359834272022948]}, {'': [-5.056623150194578e-15, 0.24359834272031694]}, {'': [-4.795073676908651e-16, 0.2435983427202726]}, {'': [-9.372189459412364e-16, 0.2435983427202801]}, {'': [-6.102821043338284e-16, 0.24359834272029984]}, {'': [4.577115782503713e-16, 0.2435983427202814]}, {'': [1.852642102441979e-16, 0.24359834272030492]}, {'': [2.343047364853091e-16, 0.24359834272027686]}, {'': [-2.261313154451239e-16, 0.24359834272025793]}, {'': [-2.0705999968469176e-16, 0.24359834272030392]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2962964061537424;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4510692890818142;  // std dev = 5.222, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2741489350995134;  // std dev = 5.511, 125.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
%   | | | else return 0.043777677614481536;  // std dev = 5.024, 167.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.030123457392505364;  // std dev = 4.728, 157.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25627367557470504;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3868751115207944;  // std dev = 5.222, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23739846429153375;  // std dev = 5.511, 125.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
%   | | | else return 0.03836464369907191;  // std dev = 5.024, 167.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13952376947684347;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02829281895999835;  // std dev = 4.721, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21500212172975308;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.34939991680130467;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | | | else return 0.2840317889311532;  // std dev = 3.336, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.19988516061762232;  // std dev = 5.511, 125.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
%   | | | else return 0.03348142849961816;  // std dev = 5.024, 167.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12360986090555182;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02475466435480617;  // std dev = 4.721, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17553377508490203;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2737882288979027;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | | | else return 0.22335876723172948;  // std dev = 3.334, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06583333788410246;  // std dev = 7.033, 267.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=69 */
%   | | | else return 0.3119267166143977;  // std dev = 2.462, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021321843523774347;  // std dev = 4.720, 157.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=27 */
%   | | | else return -0.12068854768195461;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14015878925763883;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.28767534210125056;  // std dev = 1.263, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18742684255537806;  // std dev = 5.211, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14179938739305717;  // std dev = 5.478, 125.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
%   | | | else return 0.01857444457800995;  // std dev = 4.720, 157.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02000235427875099;  // std dev = 5.026, 167.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=31 */
%   | | | else return -0.10847957617999664;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11003515927564601;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2161265260329363;  // std dev = 1.263, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14160169911780232;  // std dev = 5.211, 113.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04211790957405155;  // std dev = 6.731, 254.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=65 */
%   | | | else return 0.21185452494733442;  // std dev = 2.623, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06980562340287666;  // std dev = 1.342, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.023498331806771845;  // std dev = 4.838, 153.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28107596108504335;  // std dev = 3.574, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | | | else return -0.12912395905996898;  // std dev = 2.158, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12531903755450224;  // std dev = 4.548, 84.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.08372359502584975;  // std dev = 28.196, 3,234.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=1,426 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.034873739130241874;  // std dev = 6.983, 267.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=69 */
%   | | | else return 0.209856858974385;  // std dev = 2.453, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.1097857016687492;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01180700672616307;  // std dev = 4.716, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06542594389404967;  // std dev = 0.496, 3,282.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,438 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.30489690194008057;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07243788350201145;  // std dev = 5.239, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.15816151094332948;  // std dev = 2.722, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.025722879099914855;  // std dev = 6.873, 260.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=69 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09955496194929128;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.010204894899842243;  // std dev = 4.716, 156.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19224335442953291;  // std dev = 3.571, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | | | else return -0.11853474133250541;  // std dev = 2.132, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08056931699469978;  // std dev = 4.548, 84.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   | | | else return 0.048828903532001006;  // std dev = 28.196, 3,234.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=1,426 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.0221024304694031;  // std dev = 6.677, 254.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=65 */
%   | | | else return 0.15335674371789995;  // std dev = 2.620, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.06795983245831731;  // std dev = 1.345, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.01081805074157758;  // std dev = 4.838, 153.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.23402258445853144;  // std dev = 2.929, 45.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=31 */
%   | | | else return 0.03788787678652043;  // std dev = 3.204, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.036244118340324;  // std dev = 28.162, 3,231.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,406 */
%   | | | else return 0.024560748777205828;  // std dev = 7.818, 321.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=109 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04273373635791553;  // std dev = 5.725, 195.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=55 */
%   | | | else return -0.18891742651429116;  // std dev = 0.944, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return -0.5198280663752667;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09470255302407832;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.621989
   AUC PR    = 0.419702
   CLL	      = -0.542689
   Precision = 0.87395 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.297143


Total learning time: 457.20799999999997 seconds
Total inference time: 1.598 seconds
AUC ROC: 0.621989


Results scoring model
   AUC ROC   = 0.641958
   AUC PR    = 0.66339
   CLL	      = -0.62191
   Precision = 0.897704 at threshold = 0.5
   Recall    = 0.220739
   F1        = 0.354347


Total scoring time: 4.446 seconds
Refined model CLL: -0.62191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.621989
   AUC PR    = 0.419702
   CLL	      = -0.542689
   Precision = 0.87395 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.297143


Total learning time: 467.022 seconds
Total inference time: 1.598 seconds
AUC ROC: 0.621989
Total revision time: 467.022
Best scored revision CLL: -0.62191


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:38:51
{'AUC ROC': 0.621989, 'AUC PR': 0.419702, 'CLL': -0.542689, 'Precision': [0.87395, 0.5], 'Recall': 0.179002, 'F1': 0.297143, 'Learning time': 467.022, 'Inference time': 1.598, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.55949, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.062, 'Inference time': 0.932}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.193 seconds
Total inference time: 0.927 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 1.331 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.573597440982194;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.362674756199382;  // std dev = 5.924, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4971806226521558;  // std dev = 1.234, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2955229765557766;  // std dev = 5.919, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38742485377256514;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23342237797384244;  // std dev = 5.917, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1993700076565437;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.16714385712010682;  // std dev = 3.843, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559877;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508082;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2437161169141888;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1348949585927446;  // std dev = 5.915, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751088;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0746582173009453;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551097;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23600576317872576;  // std dev = 1.219, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0982912145674115;  // std dev = 5.910, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304394;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027478;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06581034510906802;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1787144832770146;  // std dev = 1.220, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07383110308160484;  // std dev = 5.910, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955308;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302797;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05027671515458594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06884620432803466;  // std dev = 4.672, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.047438584666097794;  // std dev = 3.826, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368243325647754;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322454;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009773119313054678;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744158;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.35149839274952765;  // std dev = 21.484, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.35884347904381586;  // std dev = 7.776, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14649983233174665;  // std dev = 2.842, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.025475192022388633;  // std dev = 4.722, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04380609261084585;  // std dev = 6.296, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.1810172299782433;  // std dev = 0.972, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5071859584398597;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07917581939199701;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.897282
   AUC PR    = 0.777654
   CLL	      = -0.451656
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1106.902 seconds
Total inference time: 1.849 seconds
AUC ROC: 0.897282


Results scoring model
   AUC ROC   = 0.871858
   AUC PR    = 0.841123
   CLL	      = -0.533228
   Precision = 0.932302 at threshold = 0.5
   Recall    = 0.197865
   F1        = 0.326448


Total scoring time: 9.728 seconds
Refined model CLL: -0.533228


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897282
   AUC PR    = 0.777654
   CLL	      = -0.451656
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1123.154 seconds
Total inference time: 1.849 seconds
AUC ROC: 0.897282
Total revision time: 1123.154
Best scored revision CLL: -0.533228


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 04:57:38
{'AUC ROC': 0.897282, 'AUC PR': 0.777654, 'CLL': -0.451656, 'Precision': [0.896552, 0.5], 'Recall': 0.179002, 'F1': 0.298422, 'Learning time': 1123.154, 'Inference time': 1.849, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.193, 'Inference time': 0.927}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.1903551903826858;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109543;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.16556832235466734;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.83e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.14129138048645623;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.1185095940836294;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.09792193659543619;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.07990070979351992;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.06453165122419639;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.051693825786461686;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367072;  // std dev = 3.33e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.04114335078803547;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.21e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else return 0.03258121863793966;  // std dev = 16.200, 1,183.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=393 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.635179
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 1.876 seconds
Total inference time: 0.848 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.567181
   AUC PR    = 0.511814
   CLL	      = -0.612236
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.134361
   F1        = 0.236893


Total scoring time: 0.999 seconds
Parameter learned model CLL: -0.612236


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.83e-08, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.33e-08, 0, 61], 'false': [16.2, 790, 393]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 61], 'false': [16.2, 790, 393]}]]
[{'': [-6.988944941902625e-16, 0.2218452592338894]}, {'': [0.0, 0.2218452592338922]}, {'': [3.4944724709513123e-16, 0.22184525923391166]}, {'': [-3.20326643170537e-16, 0.221845259233903]}, {'': [-2.1840452943445702e-16, 0.22184525923390727]}, {'': [-2.912060392459427e-17, 0.22184525923390944]}, {'': [-4.3680905886891404e-17, 0.2218452592339117]}, {'': [-2.5480528434019987e-17, 0.22184525923390477]}, {'': [1.8200377452871417e-17, 0.22184525923390536]}, {'': [2.912060392459427e-17, 0.22184525923390364]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995125;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728872004574412;  // std dev = 14.630, 930.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=334 */
%   | | | else return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.006797583748160992;  // std dev = 3.060, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.10851773156715441;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109543;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7649588165481556;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.11335809998928971;  // std dev = 2.075, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0.1798412971460509;  // std dev = 0.477, 977.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=342 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.00633386099924106;  // std dev = 3.059, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.09671634072651306;  // std dev = 0.984, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.14535657613246344;  // std dev = 3.518, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.15713904672139087;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.46e-07, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16021122213713465;  // std dev = 14.571, 930.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=334 */
%   | | | else return 0.09972666869169157;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3389782959584342;  // std dev = 1.678, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.17706837465321448;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.06593065699196698;  // std dev = 1.667, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.017700112343804416;  // std dev = 2.747, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.23589883370802345;  // std dev = 1.975, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.05652930102622497;  // std dev = 2.907, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13348136642092623;  // std dev = 14.567, 930.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=334 */
%   | | | else return 0.08415365698122067;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.27162817514841747;  // std dev = 1.675, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.14745457323968364;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.00594650987661218;  // std dev = 3.057, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.07968315081316454;  // std dev = 0.984, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.10835206483754391;  // std dev = 3.499, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.14869568501959754;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10934030057566232;  // std dev = 14.564, 930.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=334 */
%   | | | else return 0.07026998462147707;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2110363728754047;  // std dev = 1.673, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.12050610724150046;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.005426035495550542;  // std dev = 3.056, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.07245313111617774;  // std dev = 0.985, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.3229411342624938;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05373482575820804;  // std dev = 3.380, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.5304627538096873;  // std dev = 1.200, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.03279453758618802;  // std dev = 1.815, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08601416098563654;  // std dev = 2.756, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.08169150001704079;  // std dev = 14.628, 944.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=330 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.050576751969781564;  // std dev = 1.663, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.014393506799630371;  // std dev = 2.746, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.07985688072110607;  // std dev = 3.476, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.14820887340367692;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253565;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07015133223525528;  // std dev = 14.505, 930.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=334 */
%   | | | else return 0.0434772096558411;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16232091091368753;  // std dev = 1.830, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06585793003817092;  // std dev = 1.772, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.004907650778553779;  // std dev = 3.054, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.06160003788098531;  // std dev = 0.985, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.14929044547523593;  // std dev = 1.943, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.014394907137831604;  // std dev = 2.879, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.525531703392256;  // std dev = 0.282, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3657596514252579;  // std dev = 0.814, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11137111541420501;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04719112182033194;  // std dev = 2.036, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.05112225340679546;  // std dev = 0.476, 977.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=342 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.013409732048948802;  // std dev = 2.942, 89.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=10 */
%   | | | else return 0.02331208549701723;  // std dev = 3.361, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367072;  // std dev = 3.33e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04080736899241448;  // std dev = 14.459, 935.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=332 */
%   | | | else return 0.07205381313795937;  // std dev = 3.424, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12084860108337685;  // std dev = 1.829, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03212218832914678;  // std dev = 1.758, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.006905403915165159;  // std dev = 3.054, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | | else return -0.05565533758527628;  // std dev = 0.986, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04741416443993232;  // std dev = 3.424, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.13517112850477023;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.21e-08, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03202297846415512;  // std dev = 14.459, 935.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=332 */
%   | | | else return 0.05731961277145396;  // std dev = 3.424, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09743020272619833;  // std dev = 1.677, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.025806481404935213;  // std dev = 1.902, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.03907616788244303;  // std dev = 1.660, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | | else return 0.014052979052004838;  // std dev = 2.745, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0384079281110919;  // std dev = 3.422, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.12019887372706496;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.611002
   AUC PR    = 0.596978
   CLL	      = -0.62777
   Precision = 0.855346 at threshold = 0.5
   Recall    = 0.182062
   F1        = 0.300221


Total learning time: 166.043 seconds
Total inference time: 2.467 seconds
AUC ROC: 0.611002


Results scoring model
   AUC ROC   = 0.645811
   AUC PR    = 0.581025
   CLL	      = -0.586624
   Precision = 0.974684 at threshold = 0.5
   Recall    = 0.169604
   F1        = 0.288931


Total scoring time: 5.312 seconds
Refined model CLL: -0.586624


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.611002
   AUC PR    = 0.596978
   CLL	      = -0.62777
   Precision = 0.855346 at threshold = 0.5
   Recall    = 0.182062
   F1        = 0.300221


Total learning time: 174.23000000000002 seconds
Total inference time: 2.467 seconds
AUC ROC: 0.611002
Total revision time: 174.23000000000002
Best scored revision CLL: -0.586624


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:00:36
{'AUC ROC': 0.611002, 'AUC PR': 0.596978, 'CLL': -0.62777, 'Precision': [0.855346, 0.5], 'Recall': 0.182062, 'F1': 0.300221, 'Learning time': 174.23000000000002, 'Inference time': 2.467, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.635179, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 1.876, 'Inference time': 0.848}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.84e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.18394850866027485;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210956;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.16004943566738536;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.21e-08, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.13672001146690127;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.34e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.11486180614829243;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.53e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.09510975932958568;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.07780011457459413;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.37e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.0630081801927212;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.05062042419833804;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.0404098766833984;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else return 0.032097632925591695;  // std dev = 22.696, 2,345.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=764 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637026
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.681 seconds
Total inference time: 0.889 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.579295
   AUC PR    = 0.531996
   CLL	      = -0.603415
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15859
   F1        = 0.273764


Total scoring time: 1.164 seconds
Parameter learned model CLL: -0.603415


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.84e-07, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.37e-07, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 144], 'false': [22.696, 1, 764]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.32e-08, 0, 144], 'false': [22.696, 1, 764]}]]
[{'': [5.427757009278543e-15, 0.2196542114284142]}, {'': [-2.2697892947892088e-15, 0.2196542114283842]}, {'': [1.825700084939146e-15, 0.21965421142836336]}, {'': [1.30759600678074e-15, 0.2196542114283892]}, {'': [4.440892098500626e-16, 0.21965421142839847]}, {'': [-1.4802973661668753e-16, 0.21965421142840835]}, {'': [3.885780586188048e-16, 0.21965421142839545]}, {'': [-2.9605947323337506e-16, 0.21965421142840233]}, {'': [-4.0091387000352874e-17, 0.2196542114283855]}, {'': [2.7755575615628914e-17, 0.21965421142839128]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.84e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2080248656205991;  // std dev = 0.477, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.028083575622387613;  // std dev = 4.646, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | | else return -0.06912379217321499;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.11253490001179196;  // std dev = 4.650, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210956;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18076973971779783;  // std dev = 0.477, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.024630475804686514;  // std dev = 4.646, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | | else return -0.060915866908972986;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.09827646981815964;  // std dev = 4.650, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.13e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15383192692453276;  // std dev = 0.477, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.021544794194081247;  // std dev = 4.646, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | | else return -0.054018917799468116;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0848878833049537;  // std dev = 4.650, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830897;  // std dev = 4.34e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6000022049608471;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return -0.051213600510277034;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else return 0.12599631394465724;  // std dev = 0.476, 1,940.000 (wgt'ed) examples reached here.  /* #neg=1,266 #pos=674 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.01880149671694833;  // std dev = 4.646, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | | else return -0.0481595830343564;  // std dev = 1.926, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07260100636596517;  // std dev = 4.650, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 2.53e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10534247661197309;  // std dev = 0.475, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.23690634220704948;  // std dev = 2.312, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.1517613363459996;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.01369640223708225;  // std dev = 4.458, 179.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=23 */
%   | | | else return 0.045104432753678335;  // std dev = 4.527, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694903;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0853800415649872;  // std dev = 0.475, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.20351581651541858;  // std dev = 2.308, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.13329534125682457;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012038056993387952;  // std dev = 4.458, 179.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=23 */
%   | | | else return 0.03815488782558432;  // std dev = 4.526, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253523;  // std dev = 2.37e-07, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.43601882452133073;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return -0.07619483643345083;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else return 0.06665455220427866;  // std dev = 0.476, 1,940.000 (wgt'ed) examples reached here.  /* #neg=1,266 #pos=674 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.17063300965471614;  // std dev = 2.304, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.11867408179594154;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010593856007031026;  // std dev = 4.459, 179.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=23 */
%   | | | else return 0.032125779409878305;  // std dev = 4.526, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2094454090488776;  // std dev = 2.016, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.011449724811011421;  // std dev = 3.173, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else return 0.053945233011969435;  // std dev = 0.474, 1,950.000 (wgt'ed) examples reached here.  /* #neg=1,268 #pos=682 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.011660944835718896;  // std dev = 4.562, 154.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=26 */
%   | | | else return -0.04168075973334512;  // std dev = 1.935, 54.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.1031522426065044;  // std dev = 2.444, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.009216545625124764;  // std dev = 3.922, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0427726885687184;  // std dev = 0.474, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.01033746308678789;  // std dev = 4.563, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | | else return -0.03721462627050239;  // std dev = 1.931, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.035708612516945536;  // std dev = 4.617, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return -0.10805948783332833;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 6.32e-08, 144.000 (wgt'ed) examples reached here.  /* #pos=144 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033625332994828144;  // std dev = 0.474, 2,015.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=705 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13572176468489214;  // std dev = 2.290, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.10860374401349016;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.008996993243800619;  // std dev = 4.455, 179.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=23 */
%   | | | else return 0.016361270887102593;  // std dev = 4.517, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */


Results
   AUC ROC   = 0.602146
   AUC PR    = 0.585822
   CLL	      = -0.629567
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 94.884 seconds
Total inference time: 1.039 seconds
AUC ROC: 0.602146


Results scoring model
   AUC ROC   = 0.639566
   AUC PR    = 0.577158
   CLL	      = -0.58695
   Precision = 0.97093 at threshold = 0.5
   Recall    = 0.183921
   F1        = 0.309259


Total scoring time: 2.011 seconds
Refined model CLL: -0.58695


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602146
   AUC PR    = 0.585822
   CLL	      = -0.629567
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 100.74 seconds
Total inference time: 1.039 seconds
AUC ROC: 0.602146
Total revision time: 100.74
Best scored revision CLL: -0.58695


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:02:19
{'AUC ROC': 0.602146, 'AUC PR': 0.585822, 'CLL': -0.629567, 'Precision': [0.946565, 0.5], 'Recall': 0.165997, 'F1': 0.28246, 'Learning time': 100.74, 'Inference time': 1.039, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637026, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.681, 'Inference time': 0.889}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.1833267444878429;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.15951362933100652;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.01e-08, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.1362756719454092;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 1.19e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.11450654526636819;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601494;  // std dev = 3.58e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.09483515514596545;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.07759433279714552;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.06285837585069462;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527766;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.050514423367488674;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.04033708562754727;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.03204935499827142;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637215
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.731 seconds
Total inference time: 0.849 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.580396
   AUC PR    = 0.533756
   CLL	      = -0.602584
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160793
   F1        = 0.27704


Total scoring time: 1.211 seconds
Parameter learned model CLL: -0.602584


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.01e-08, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.43e-07, 0, 219], 'false': [27.773, 2, 1]}]]
[{'': [5.320959299756001e-15, 0.21943720166976471]}, {'': [-3.958274601038001e-15, 0.21943720166973363]}, {'': [1.6222436889500003e-15, 0.21943720166971947]}, {'': [6.488974755800001e-17, 0.2194372016697256]}, {'': [5.840077280220001e-16, 0.2194372016697592]}, {'': [3.4067117467950007e-16, 0.21943720166974232]}, {'': [4.136721406822501e-16, 0.219437201669759]}, {'': [-8.111218444750002e-18, 0.21943720166970757]}, {'': [-1.4600193200550003e-16, 0.21943720166974828]}, {'': [9.327901211462502e-17, 0.21943720166976563]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.207108987922221;  // std dev = 0.477, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.017569224954584316;  // std dev = 6.082, 276.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=44 */
%   | | | else return 0.03424956403032927;  // std dev = 4.803, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1799825123443024;  // std dev = 0.477, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.15068975561741405;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13804270430817106;  // std dev = 3.124, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.015417047794114255;  // std dev = 6.082, 276.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=44 */
%   | | | else return 0.030029028793663353;  // std dev = 4.803, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.96e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15318433794804528;  // std dev = 0.477, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13459010610342353;  // std dev = 2.972, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.04717248350632549;  // std dev = 0.942, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05905116004941632;  // std dev = 2.813, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.013090329992599957;  // std dev = 7.216, 387.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=62 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 1.19e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12793867293535213;  // std dev = 0.477, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.026537323138798658;  // std dev = 5.737, 224.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=40 */
%   | | | else return -0.0421834574113148;  // std dev = 2.837, 85.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06397161784160021;  // std dev = 5.307, 166.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=37 */
%   | | | else return -0.16701998803946394;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601494;  // std dev = 3.58e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10512830702398424;  // std dev = 0.477, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1066472491389803;  // std dev = 2.956, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.045692450186639706;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04871977933629568;  // std dev = 2.808, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.008670098222349827;  // std dev = 7.207, 387.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=62 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3415304656433979;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return -0.021797208380371372;  // std dev = 3.372, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10583252513996566;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.08346505184454865;  // std dev = 25.358, 2,837.000 (wgt'ed) examples reached here.  /* #neg=1,852 #pos=985 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.020608706990684185;  // std dev = 5.739, 224.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=40 */
%   | | | else return -0.03812699550170297;  // std dev = 2.837, 85.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05088700223499223;  // std dev = 5.291, 166.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=37 */
%   | | | else return -0.15062632906734016;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06830248010621465;  // std dev = 0.476, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.20016269486320315;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07374036136018867;  // std dev = 3.074, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03989825067923949;  // std dev = 2.805, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.005357149679091399;  // std dev = 7.201, 387.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=62 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527766;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2547590844194871;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return -0.030926158543482952;  // std dev = 3.372, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else return 0.053515856032949304;  // std dev = 0.476, 2,929.000 (wgt'ed) examples reached here.  /* #neg=1,910 #pos=1,019 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.01644726066208187;  // std dev = 5.736, 224.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=40 */
%   | | | else return -0.03423940085305938;  // std dev = 2.838, 85.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03975879328197536;  // std dev = 5.281, 166.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=37 */
%   | | | else return -0.1371220443426189;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4499721374425046;  // std dev = 2.453, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return -0.12304038671753977;  // std dev = 3.204, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.057131418857980884;  // std dev = 4.401, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
%   | | | else return 0.04172562466515526;  // std dev = 25.358, 2,837.000 (wgt'ed) examples reached here.  /* #neg=1,852 #pos=985 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.1724374573748119;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05635894203904662;  // std dev = 3.061, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.001875165920554757;  // std dev = 6.065, 276.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=44 */
%   | | | else return 0.013721750996314331;  // std dev = 4.783, 159.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03356626063156128;  // std dev = 0.475, 3,029.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,057 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.01300615340043543;  // std dev = 5.736, 224.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=40 */
%   | | | else return -0.03051956893656516;  // std dev = 2.838, 85.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03109574474181948;  // std dev = 5.273, 166.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=37 */
%   | | | else return -0.12525452870597634;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.60285
   AUC PR    = 0.586528
   CLL	      = -0.628966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 116.336 seconds
Total inference time: 1.221 seconds
AUC ROC: 0.60285


Results scoring model
   AUC ROC   = 0.639435
   AUC PR    = 0.577245
   CLL	      = -0.589687
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160793
   F1        = 0.27704


Total scoring time: 2.192 seconds
Refined model CLL: -0.589687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.60285
   AUC PR    = 0.586528
   CLL	      = -0.628966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 123.47 seconds
Total inference time: 1.221 seconds
AUC ROC: 0.60285
Total revision time: 123.47
Best scored revision CLL: -0.589687


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:04:25
{'AUC ROC': 0.60285, 'AUC PR': 0.586528, 'CLL': -0.628966, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 123.47, 'Inference time': 1.221, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637215, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.731, 'Inference time': 0.849}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.07e-06, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.18301553061711656;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.1592454268286877;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.13605321915986;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831136;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.11432864238624428;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601507;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.09469759418525693;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.53e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.07749120359995412;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253479;  // std dev = 2.83e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.06278326259823629;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527694;  // std dev = 1.63e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.05046124308957786;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.04030054229598155;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801156;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else return 0.03202509857847541;  // std dev = 32.055, 4,685.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,522 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63731
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 5.004 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.580947
   AUC PR    = 0.534634
   CLL	      = -0.602169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161894
   F1        = 0.278673


Total scoring time: 1.302 seconds
Parameter learned model CLL: -0.602169


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.53e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.63e-07, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 294], 'false': [32.055, 3, 1]}]]
[{'': [3.866899242231838e-15, 0.2193282906343538]}, {'': [-4.736951571734001e-15, 0.21932829063448392]}, {'': [0.0, 0.2193282906344751]}, {'': [-7.008754876545206e-16, 0.2193282906344106]}, {'': [-2.416812026394899e-16, 0.21932829063441325]}, {'': [4.2294210461910723e-16, 0.21932829063442985]}, {'': [2.718913529694261e-16, 0.21932829063442966]}, {'': [9.06304509898087e-17, 0.21932829063439507]}, {'': [-2.0240800721057276e-16, 0.21932829063440962]}, {'': [-1.3292466145171942e-16, 0.21932829063443937]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.07e-06, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4267763860799034;  // std dev = 3.537, 51.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | | else return 0.07892815587873316;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else return 0.20722962968581976;  // std dev = 0.477, 3,916.000 (wgt'ed) examples reached here.  /* #neg=2,549 #pos=1,367 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.16003572755234255;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.01458457866386897;  // std dev = 8.163, 505.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=79 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109577;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1803232144552494;  // std dev = 0.477, 4,044.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13941686835952904;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.062064272658592136;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04079262131542441;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.012799917066268075;  // std dev = 8.163, 505.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=79 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15346271096252626;  // std dev = 0.476, 4,044.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,413 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.029292951480608405;  // std dev = 6.605, 300.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=53 */
%   | | | else return -0.030576797255923556;  // std dev = 3.393, 113.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.05181831252259726;  // std dev = 5.812, 211.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=43 */
%   | | | else return -0.15180025220149174;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831136;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12815763328876945;  // std dev = 0.476, 4,044.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1139390450085954;  // std dev = 3.333, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.057053820742687965;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.033752174093144405;  // std dev = 3.240, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.008533444285101834;  // std dev = 8.157, 505.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=79 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601507;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3426630436123442;  // std dev = 3.892, 63.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | | | else return -0.07390961784215369;  // std dev = 3.297, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else return 0.10499887579073831;  // std dev = 0.476, 3,904.000 (wgt'ed) examples reached here.  /* #neg=2,541 #pos=1,363 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09429533172013624;  // std dev = 3.081, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.07417519908026973;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0015717646741728736;  // std dev = 6.717, 353.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=53 */
%   | | | else return 0.030379052734281063;  // std dev = 5.697, 214.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.53e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08527971300428049;  // std dev = 0.476, 4,044.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09173891989278446;  // std dev = 3.322, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.05393935028533247;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0021179145159216563;  // std dev = 6.818, 358.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=55 */
%   | | | else return 0.01803412567279987;  // std dev = 5.517, 216.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=37 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253479;  // std dev = 2.83e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06838335562617691;  // std dev = 0.476, 4,044.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,413 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07611591814594289;  // std dev = 3.321, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.048146307865435035;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0018455366618788018;  // std dev = 6.818, 358.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=55 */
%   | | | else return 0.015681094828917955;  // std dev = 5.517, 216.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527694;  // std dev = 1.63e-07, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2255904938049452;  // std dev = 3.512, 51.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | | else return -0.04584839144270202;  // std dev = 3.650, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else return 0.05411018084095618;  // std dev = 0.476, 3,916.000 (wgt'ed) examples reached here.  /* #neg=2,549 #pos=1,367 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0625422746687668;  // std dev = 3.320, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.043172151734811044;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0016078608334971717;  // std dev = 6.818, 358.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=55 */
%   | | | else return 0.013611220681288248;  // std dev = 5.517, 216.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2979885538971361;  // std dev = 3.170, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return -0.08237345789760896;  // std dev = 3.876, 92.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.052869776511961626;  // std dev = 4.941, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
%   | | | else return 0.04237206072103647;  // std dev = 29.335, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,469 #pos=1,321 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.0509783214747397;  // std dev = 3.319, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.038865958865056886;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.0014005450684437095;  // std dev = 6.818, 358.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=55 */
%   | | | else return 0.011796487704278456;  // std dev = 5.517, 216.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801156;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #pos=294 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.20174128107484202;  // std dev = 3.681, 63.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | | | else return -0.10001521982344083;  // std dev = 3.321, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04158086377960907;  // std dev = 4.938, 114.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=42 */
%   | | | else return 0.03329768849663321;  // std dev = 29.335, 3,790.000 (wgt'ed) examples reached here.  /* #neg=2,469 #pos=1,321 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.3904437554270354;  // std dev = 1.275, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.010948646273630564;  // std dev = 2.979, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.010655713852601974;  // std dev = 7.479, 397.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=69 */
%   | | | else return -0.011126039369648698;  // std dev = 4.628, 170.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=25 */


Results
   AUC ROC   = 0.602816
   AUC PR    = 0.586519
   CLL	      = -0.628989
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 137.685 seconds
Total inference time: 1.275 seconds
AUC ROC: 0.602816


Results scoring model
   AUC ROC   = 0.639106
   AUC PR    = 0.57649
   CLL	      = -0.588353
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161894
   F1        = 0.278673


Total scoring time: 2.384 seconds
Refined model CLL: -0.588353


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602816
   AUC PR    = 0.586519
   CLL	      = -0.628989
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 146.375 seconds
Total inference time: 1.275 seconds
AUC ROC: 0.602816
Total revision time: 146.375
Best scored revision CLL: -0.588353


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:06:54
{'AUC ROC': 0.602816, 'AUC PR': 0.586519, 'CLL': -0.628989, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 146.375, 'Inference time': 1.275, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63731, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 5.004, 'Inference time': 0.817}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.261 seconds
Total inference time: 0.846 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 1.494 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17897797555565295;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01623768256074557;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03588701090622283;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.152357693407333;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12404708788833162;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08196080741438437;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011342450521870715;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03319765109970088;  // std dev = 6.431, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12728614187660017;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10752954337973754;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07162126381164359;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04325539157542356;  // std dev = 3.632, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013884132402819311;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10463250790909598;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08942397751985218;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06552094502191683;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.040092606045152065;  // std dev = 3.630, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01210339264154037;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29871581847315376;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05862694187446702;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.08439708573735077;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08640360715079413;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06851988262894113;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006220246569494733;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023168516252679114;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2815635992028134;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.07387867633783975;  // std dev = 3.897, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08355261192876848;  // std dev = 5.795, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.0670362700543646;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 5.673172901735321E-4;  // std dev = 7.674, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.0772291850213135;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.029459984840926837;  // std dev = 6.491, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16049145455296257;  // std dev = 0.114, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2626752885203631;  // std dev = 3.659, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.03686950343060616;  // std dev = 4.417, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.053742964169159906;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2013449162260146;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0052226043794060695;  // std dev = 3.384, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0020369467881923204;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02079241246106079;  // std dev = 6.411, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04268784933088271;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1997468022072179;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.004976153888805873;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00196891239553132;  // std dev = 7.767, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01640245485328973;  // std dev = 6.403, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2383337344624708;  // std dev = 3.658, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.05861249928197606;  // std dev = 4.409, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.03329765360170869;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06601219623950653;  // std dev = 3.466, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06709292623595305;  // std dev = 1.339, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0017064436512039052;  // std dev = 7.767, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.014121886520758496;  // std dev = 6.403, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602828
   AUC PR    = 0.586271
   CLL	      = -0.629708
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 154.632 seconds
Total inference time: 1.132 seconds
AUC ROC: 0.602828


Results scoring model
   AUC ROC   = 0.640252
   AUC PR    = 0.578695
   CLL	      = -0.587924
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.38 seconds
Refined model CLL: -0.587924


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602828
   AUC PR    = 0.586271
   CLL	      = -0.629708
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 164.767 seconds
Total inference time: 1.132 seconds
AUC ROC: 0.602828
Total revision time: 164.767
Best scored revision CLL: -0.587924


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 05:09:42
{'AUC ROC': 0.602828, 'AUC PR': 0.586271, 'CLL': -0.629708, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 164.767, 'Inference time': 1.132, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.261, 'Inference time': 0.846}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.17536947890615395;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.1526532894449775;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.58e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.13057827330097413;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.10994044930102811;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.09129428931930325;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.0749303324741043;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.060910020625344716;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.049128396409170605;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.03937937157017353;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else return 0.03140938431787872;  // std dev = 16.934, 1,324.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=420 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.722795
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1.911 seconds
Total inference time: 0.689 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.574037
   AUC PR    = 0.512989
   CLL	      = -0.600147
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148073
   F1        = 0.257951


Total scoring time: 1.018 seconds
Parameter learned model CLL: -0.600147


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.58e-08, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 73], 'false': [16.934, 904, 420]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 73], 'false': [16.934, 904, 420]}]]
[{'': [-1.4600193200550003e-15, 0.2165916703936452]}, {'': [4.866731066850001e-16, 0.21659167039364705]}, {'': [6.813423493590001e-16, 0.21659167039364902]}, {'': [-9.733462133700002e-17, 0.2165916703936668]}, {'': [-3.5283800234662507e-16, 0.216591670393658]}, {'': [-1.2166827667125003e-17, 0.21659167039365737]}, {'': [-9.125120750343752e-17, 0.2165916703936515]}, {'': [6.083413833562501e-18, 0.21659167039366917]}, {'': [6.691755216918751e-17, 0.216591670393668]}, {'': [3.650048300137501e-17, 0.21659167039366156]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2015555285061009;  // std dev = 15.691, 1,092.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=375 */
%   | | | else return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.032476064900487704;  // std dev = 2.497, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | | else return -0.1033895264389493;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else return -0.04751144225897829;  // std dev = 0.292, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.88e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17537335425053677;  // std dev = 15.669, 1,089.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=374 */
%   | | | else return 0.12490189929208936;  // std dev = 3.480, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2805107770599873;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.3087411357856348;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13772128996305452;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.13121955305828592;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.031232458302671098;  // std dev = 3.409, 124.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.23e-07, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1493826684597378;  // std dev = 15.691, 1,092.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=375 */
%   | | | else return 0.10535688311553379;  // std dev = 3.382, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2352608274825524;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.2657153076258007;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.11697150885505425;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029729630495951016;  // std dev = 2.840, 89.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=9 */
%   | | | else return -0.04079372003606085;  // std dev = 1.904, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12510232621634218;  // std dev = 15.669, 1,089.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=374 */
%   | | | else return 0.08828407743286089;  // std dev = 3.481, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18967322743731468;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.21475379907704698;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11901437712562114;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10542116234559616;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.023790773232044808;  // std dev = 3.409, 124.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10297330486654564;  // std dev = 15.690, 1,092.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=375 */
%   | | | else return 0.07280670079025567;  // std dev = 3.383, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14204120953307597;  // std dev = 1.930, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.16862100830751625;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0958853121551404;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022913140747895272;  // std dev = 2.837, 89.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=9 */
%   | | | else return -0.033483341936463955;  // std dev = 1.904, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08379450162645792;  // std dev = 15.668, 1,089.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=374 */
%   | | | else return 0.05923132245972239;  // std dev = 3.482, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11272279698891051;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.1358346045625142;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08788936260269986;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10491913297628701;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.018249870885512925;  // std dev = 3.409, 124.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.223485714555256;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.13387438220395595;  // std dev = 1.600, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18354397269838948;  // std dev = 2.617, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.06733655993354232;  // std dev = 15.924, 1,125.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=388 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.09546657444578883;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08109461507151067;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.016293623230298298;  // std dev = 3.409, 124.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05361023030638982;  // std dev = 15.655, 1,089.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=374 */
%   | | | else return 0.037929228465664946;  // std dev = 3.475, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0641695272622991;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08521149504047533;  // std dev = 2.115, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07525353840936212;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.014811301884983858;  // std dev = 2.671, 79.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=8 */
%   | | | else return -0.025223402484288525;  // std dev = 2.127, 53.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.99e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.042484138231431864;  // std dev = 15.676, 1,092.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=375 */
%   | | | else return 0.029583146157966984;  // std dev = 3.377, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04929285660606034;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.07114316403379069;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07018139469843425;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01339590909044224;  // std dev = 2.835, 89.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=9 */
%   | | | else return -0.024559702862617386;  // std dev = 1.904, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03349133095109181;  // std dev = 15.654, 1,089.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=374 */
%   | | | else return 0.024093451019920515;  // std dev = 3.475, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03302873179245336;  // std dev = 1.928, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05163952702041976;  // std dev = 2.115, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08520817877366546;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06573772685284661;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.010789623930876;  // std dev = 3.409, 124.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=13 */


Results
   AUC ROC   = 0.670815
   AUC PR    = 0.706627
   CLL	      = -0.717274
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 183.25 seconds
Total inference time: 1.441 seconds
AUC ROC: 0.670815


Results scoring model
   AUC ROC   = 0.64329
   AUC PR    = 0.560031
   CLL	      = -0.580886
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.148073
   F1        = 0.257951


Total scoring time: 5.531 seconds
Refined model CLL: -0.580886


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.670815
   AUC PR    = 0.706627
   CLL	      = -0.717274
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 191.71 seconds
Total inference time: 1.441 seconds
AUC ROC: 0.670815
Total revision time: 191.71
Best scored revision CLL: -0.580886


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:12:56
{'AUC ROC': 0.670815, 'AUC PR': 0.706627, 'CLL': -0.717274, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 191.71, 'Inference time': 1.441, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.722795, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1.911, 'Inference time': 0.689}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.168335886644719;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.14658442965558574;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.12552556275191004;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.00e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.10587417267604629;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.0881231792837759;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.07252789356889598;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.81e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.05913860094083344;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.04785636278948197;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.03849078581142226;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else return 0.030807764018783865;  // std dev = 23.682, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=813 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.728593
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 2.906 seconds
Total inference time: 0.713 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.587728
   AUC PR    = 0.535661
   CLL	      = -0.590131
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175456
   F1        = 0.298533


Total scoring time: 1.131 seconds
Parameter learned model CLL: -0.590131


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.09e-06, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4e-07, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.81e-07, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 173], 'false': [23.682, 1, 813]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 173], 'false': [23.682, 1, 813]}]]
[{'': [6.8179245165420015e-15, 0.21397100663632523]}, {'': [-3.121459417212001e-15, 0.21397100663632013]}, {'': [1.8893043841020003e-15, 0.21397100663631943]}, {'': [9.241162748325002e-16, 0.21397100663630111]}, {'': [8.625085231770002e-16, 0.21397100663631938]}, {'': [-2.875028410590001e-16, 0.21397100663629742]}, {'': [4.569241581116251e-16, 0.21397100663628352]}, {'': [-3.2857467549600007e-16, 0.21397100663628776]}, {'': [-2.566989652312501e-16, 0.2139710066363062]}, {'': [5.390678269856251e-17, 0.21397100663629232]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18392403921797096;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.18247325942383524;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.27920156667845974;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03838149323904638;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | | else return -4.369234863462353E-4;  // std dev = 3.467, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109566;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16002834975921615;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.15877807893665422;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24170865544729092;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.3087411357856347;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.087764219710722;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.028507512170555235;  // std dev = 6.029, 254.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=44 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13670252685836812;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.1356655355572955;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20334742822531968;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.2564123687585866;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008850080622528001;  // std dev = 4.484, 156.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=24 */
%   | | | else return 0.07561636976463633;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -6.325913132100829E-4;  // std dev = 3.460, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
%   | | | else return -0.14530255186653945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583094;  // std dev = 4.00e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11484941726305031;  // std dev = 21.771, 2,158.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=703 */
%   | | | else return 0.11401028503071074;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1539724109858083;  // std dev = 2.690, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.20825772822359528;  // std dev = 2.829, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00775065479528714;  // std dev = 4.484, 156.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=24 */
%   | | | else return 0.06570785111002837;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -5.542072808255757E-4;  // std dev = 3.460, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
%   | | | else return -0.12817055646172576;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.86e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09510177641446876;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.09440296162229157;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12201194836981075;  // std dev = 2.689, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.1662426076381012;  // std dev = 2.830, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07908366288945912;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024466616459675412;  // std dev = 4.948, 170.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=30 */
%   | | | else return -0.003906530439351435;  // std dev = 3.465, 100.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694908;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0777967790934472;  // std dev = 21.771, 2,158.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=703 */
%   | | | else return 0.07723398977295315;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09572771348946632;  // std dev = 3.033, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.14106031041712958;  // std dev = 2.455, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11618481700659619;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024287343677292014;  // std dev = 5.027, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | | else return -0.0023312879838466474;  // std dev = 3.464, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325351;  // std dev = 2.81e-07, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06300671973859748;  // std dev = 21.771, 2,158.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=703 */
%   | | | else return 0.0625776564309524;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0668530926140015;  // std dev = 2.681, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.10666667953390396;  // std dev = 2.832, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10477599934078341;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021066777865926766;  // std dev = 5.027, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | | else return -0.0020446488220088573;  // std dev = 3.464, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.050621149307261956;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.050273265837167555;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05248302205726287;  // std dev = 3.028, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.08993983633333584;  // std dev = 2.457, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09534738653932551;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0751223541453726;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.01667338200403223;  // std dev = 6.018, 254.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.040411712511783146;  // std dev = 21.771, 2,158.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=703 */
%   | | | else return 0.04015233093979169;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.033043454924217265;  // std dev = 2.676, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.06778477584692799;  // std dev = 2.835, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06664493731888664;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08743445184116748;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.014461732331119848;  // std dev = 6.018, 254.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 173.000 (wgt'ed) examples reached here.  /* #pos=173 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0320999553478153;  // std dev = 21.787, 2,161.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=704 */
%   | | | else return 0.03190057950388268;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.026448093775647538;  // std dev = 3.024, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.05811446152044341;  // std dev = 2.460, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08070517624836407;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.059512905803570854;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.012523004779034596;  // std dev = 6.018, 254.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=44 */


Results
   AUC ROC   = 0.684338
   AUC PR    = 0.724549
   CLL	      = -0.725207
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 386.62 seconds
Total inference time: 1.631 seconds
AUC ROC: 0.684338


Results scoring model
   AUC ROC   = 0.626773
   AUC PR    = 0.560967
   CLL	      = -0.581115
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175456
   F1        = 0.298533


Total scoring time: 10.931 seconds
Refined model CLL: -0.581115


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.684338
   AUC PR    = 0.724549
   CLL	      = -0.725207
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 401.58799999999997 seconds
Total inference time: 1.631 seconds
AUC ROC: 0.684338
Total revision time: 401.58799999999997
Best scored revision CLL: -0.581115


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:19:41
{'AUC ROC': 0.684338, 'AUC PR': 0.724549, 'CLL': -0.725207, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 401.58799999999997, 'Inference time': 1.631, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.728593, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 2.906, 'Inference time': 0.713}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.1713134920615325;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.14915418103460207;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.12766648801863714;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.10759905958123564;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.08947039258913886;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.07355046274407522;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.05989424742503555;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.04840036299762765;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.03887192313897814;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else return 0.031066728946084275;  // std dev = 29.148, 3,950.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,237 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726108
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.262 seconds
Total inference time: 0.697 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582095
   AUC PR    = 0.526519
   CLL	      = -0.594322
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164189
   F1        = 0.282066


Total scoring time: 1.246 seconds
Parameter learned model CLL: -0.594322


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-07, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.26e-07, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 243], 'false': [29.148, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.88e-08, 0, 243], 'false': [29.148, 2, 1]}]]
[{'': [4.795432455335656e-15, 0.21509251722482978]}, {'': [-4.269104502920767e-15, 0.21509251722477093]}, {'': [1.052655904829778e-15, 0.21509251722484035]}, {'': [-2.3392353440661737e-16, 0.21509251722483086]}, {'': [2.777841971078581e-16, 0.2150925172247823]}, {'': [3.8743585386096e-16, 0.21509251722479453]}, {'': [3.50885301609926e-16, 0.21509251722482783]}, {'': [6.579099405186112e-17, 0.21509251722482284]}, {'': [-1.7178759557985962e-16, 0.21509251722480377]}, {'': [2.5585386575723773e-17, 0.21509251722481756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18737970433027645;  // std dev = 26.790, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,070 */
%   | | | else return 0.15444523139580876;  // std dev = 5.812, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3669208649240726;  // std dev = 3.774, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.3947343009531699;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0047006592374426006;  // std dev = 5.387, 232.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=34 */
%   | | | else return 0.13592671287729013;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.016023250330951252;  // std dev = 4.075, 151.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=19 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1630056314916187;  // std dev = 26.790, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,070 */
%   | | | else return 0.13458565557492236;  // std dev = 5.812, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.316152557176245;  // std dev = 3.774, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.33960351191966853;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.14020950672005206;  // std dev = 0.027, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09894597607923593;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.026288033062717583;  // std dev = 7.443, 394.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=67 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.06e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1391698925741691;  // std dev = 26.790, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,070 */
%   | | | else return 0.11550108123653648;  // std dev = 5.812, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26219011311468027;  // std dev = 3.774, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.2803564747193897;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12414781954997917;  // std dev = 0.025, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.036362208009739216;  // std dev = 6.303, 266.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=49 */
%   | | | else return -0.017277375114565088;  // std dev = 4.075, 151.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11688631699584093;  // std dev = 26.755, 3,243.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,067 */
%   | | | else return 0.09724504545227335;  // std dev = 5.970, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21033170903974932;  // std dev = 3.774, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.22340785418413267;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0914717228376478;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11126905480113403;  // std dev = 0.022, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.020943460732256634;  // std dev = 7.437, 394.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=67 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.60e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09668599576928831;  // std dev = 26.790, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,070 */
%   | | | else return 0.0804764081664403;  // std dev = 5.813, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17295870513649916;  // std dev = 3.552, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | | else return 0.1631770898694859;  // std dev = 3.439, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 7.744018545183289E-4;  // std dev = 5.352, 232.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=34 */
%   | | | else return 0.10705020600819916;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.019129305863822877;  // std dev = 0.329, 154.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07906676939026543;  // std dev = 26.755, 3,243.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,067 */
%   | | | else return 0.06552624505814661;  // std dev = 5.972, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13239153031883852;  // std dev = 3.551, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | | else return 0.12533007615817965;  // std dev = 3.439, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0812299695107441;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10059439396381861;  // std dev = 0.023, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.016964364179981543;  // std dev = 7.426, 394.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=67 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.92e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06395337677615189;  // std dev = 26.755, 3,243.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,067 */
%   | | | else return 0.05350512184577157;  // std dev = 5.972, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09552855874298499;  // std dev = 3.777, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.10118015290044646;  // std dev = 3.190, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09185380534123266;  // std dev = 0.021, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025488245002416022;  // std dev = 6.283, 266.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=49 */
%   | | | else return -0.017461553171155796;  // std dev = 4.075, 151.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527741;  // std dev = 1.26e-07, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.051314850520439485;  // std dev = 26.789, 3,250.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,070 */
%   | | | else return 0.0429466995025231;  // std dev = 5.814, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07587631995816471;  // std dev = 3.550, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | | else return 0.07165799195748239;  // std dev = 3.441, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08447515692571991;  // std dev = 0.020, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02206433748396481;  // std dev = 6.282, 266.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=49 */
%   | | | else return -0.015331338762732991;  // std dev = 4.075, 151.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04093409313492723;  // std dev = 26.755, 3,243.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,067 */
%   | | | else return 0.03435312999271014;  // std dev = 5.973, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05416057982248142;  // std dev = 3.777, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.057472992686256635;  // std dev = 3.189, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07760009815310402;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07816838404265698;  // std dev = 0.018, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.012225595799426697;  // std dev = 7.419, 394.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=67 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.88e-08, 243.000 (wgt'ed) examples reached here.  /* #pos=243 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.032467018678479176;  // std dev = 26.755, 3,243.000 (wgt'ed) examples reached here.  /* #neg=2,176 #pos=1,067 */
%   | | | else return 0.02757356585930542;  // std dev = 5.973, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04297638822694652;  // std dev = 3.549, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | | | else return 0.04034121679949418;  // std dev = 3.441, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06958181634798351;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07271924717153368;  // std dev = 0.017, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.01059804326117039;  // std dev = 7.419, 394.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=67 */


Results
   AUC ROC   = 0.684069
   AUC PR    = 0.724395
   CLL	      = -0.723035
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 565.131 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.684069


Results scoring model
   AUC ROC   = 0.628606
   AUC PR    = 0.559137
   CLL	      = -0.583305
   Precision = 0.952899 at threshold = 0.5
   Recall    = 0.177703
   F1        = 0.299544


Total scoring time: 16.406 seconds
Refined model CLL: -0.583305


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.684069
   AUC PR    = 0.724395
   CLL	      = -0.723035
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 587.045 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.684069
Total revision time: 587.045
Best scored revision CLL: -0.583305


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:29:31
{'AUC ROC': 0.684069, 'AUC PR': 0.724395, 'CLL': -0.723035, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 587.045, 'Inference time': 1.532, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726108, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.262, 'Inference time': 0.697}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.1710288743092336;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.1489085837674255;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.12746196631884857;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.10743440449379196;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.08934191998395555;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.07345307091890742;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.05982238406047506;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.04834871584021854;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.038835810058743966;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.031042250446685456;  // std dev = 33.641, 5,264.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,647 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726343
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.729 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582615
   AUC PR    = 0.527362
   CLL	      = -0.593929
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165231
   F1        = 0.283602


Total scoring time: 1.355 seconds
Parameter learned model CLL: -0.593929


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [33.641, 3, 1]}]]
[{'': [3.400143152717044e-15, 0.21498608284978726]}, {'': [-5.056623150194578e-15, 0.21498608284976506]}, {'': [-4.795073676908651e-16, 0.21498608284978754]}, {'': [-9.372189459412364e-16, 0.2149860828498633]}, {'': [-6.102821043338284e-16, 0.21498608284984444]}, {'': [4.577115782503713e-16, 0.21498608284984808]}, {'': [1.852642102441979e-16, 0.2149860828498435]}, {'': [2.343047364853091e-16, 0.21498608284985646]}, {'': [-2.261313154451239e-16, 0.21498608284981333]}, {'': [-2.0705999968469176e-16, 0.21498608284987125]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18519151277499624;  // std dev = 30.924, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,924 #pos=1,421 */
%   | | | else return 0.14518597213655068;  // std dev = 6.649, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3933602027051451;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.3496743588283247;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1073683062797981;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.052991341976303744;  // std dev = 7.399, 349.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=68 */
%   | | | else return 0.0017386786892553754;  // std dev = 4.897, 195.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16112048944648963;  // std dev = 30.924, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,924 #pos=1,421 */
%   | | | else return 0.12657765609393476;  // std dev = 6.649, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33844667803884393;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.30157396914689066;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0769963196066411;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.047110048768536916;  // std dev = 7.339, 345.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=67 */
%   | | | else return -0.001743193760866055;  // std dev = 4.905, 200.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13760794929169573;  // std dev = 30.924, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,924 #pos=1,421 */
%   | | | else return 0.10878516483722957;  // std dev = 6.649, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2794644128396347;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.2508082546151588;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06752542958974248;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04110216852736194;  // std dev = 7.338, 345.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=67 */
%   | | | else return -0.0015312699875389957;  // std dev = 4.905, 200.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11557136712092847;  // std dev = 30.924, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,924 #pos=1,421 */
%   | | | else return 0.09228940558938398;  // std dev = 6.649, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22421298493426095;  // std dev = 4.221, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | | | else return 0.20031511380787703;  // std dev = 3.819, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10322025107735881;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03723367863204053;  // std dev = 7.387, 349.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=68 */
%   | | | else return 0.0019255259811589535;  // std dev = 4.897, 195.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09566252749373413;  // std dev = 30.919, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,928 #pos=1,420 */
%   | | | else return 0.07705509199990673;  // std dev = 6.670, 213.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17642924497448345;  // std dev = 4.206, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.15485595169093935;  // std dev = 3.835, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09141719614165868;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0639406292701041;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.0259073127217541;  // std dev = 8.752, 516.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=94 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07828051260526184;  // std dev = 30.923, 4,345.000 (wgt'ed) examples reached here.  /* #neg=2,924 #pos=1,421 */
%   | | | else return 0.06297645226754935;  // std dev = 6.650, 216.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13794878190533094;  // std dev = 4.226, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | | | else return 0.11579797560963132;  // std dev = 3.812, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05662968134425361;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.029149017343811458;  // std dev = 7.326, 345.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=67 */
%   | | | else return -0.00416999144093659;  // std dev = 4.903, 200.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0633999025767952;  // std dev = 30.918, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,928 #pos=1,420 */
%   | | | else return 0.05097923025810519;  // std dev = 6.673, 213.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10506081776357079;  // std dev = 4.209, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.08768280086603306;  // std dev = 3.830, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0023041306581186734;  // std dev = 6.289, 314.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=47 */
%   | | | else return 0.09905876011235212;  // std dev = 3.614, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return -0.004402561786777861;  // std dev = 0.372, 192.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2754793287646201;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.006172335261647572;  // std dev = 3.760, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04970970764377888;  // std dev = 31.274, 4,464.000 (wgt'ed) examples reached here.  /* #neg=3,016 #pos=1,448 */
%   | | | else return 0.07385590866016029;  // std dev = 5.646, 128.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05173540857440513;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0844031283591744;  // std dev = 0.981, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | | else return 0.018363774354789465;  // std dev = 8.740, 516.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=94 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.040696361464111416;  // std dev = 30.908, 4,348.000 (wgt'ed) examples reached here.  /* #neg=2,928 #pos=1,420 */
%   | | | else return 0.03206133758852701;  // std dev = 6.672, 213.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06406134432802213;  // std dev = 4.227, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | | | else return 0.044883739446752065;  // std dev = 3.809, 59.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04625685929196608;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020838683088584095;  // std dev = 7.311, 345.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=67 */
%   | | | else return -0.00608383100369267;  // std dev = 4.902, 200.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3530976371864401;  // std dev = 2.370, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return -0.046293227120341535;  // std dev = 3.681, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03142094980702122;  // std dev = 31.274, 4,464.000 (wgt'ed) examples reached here.  /* #neg=3,016 #pos=1,448 */
%   | | | else return 0.04182641766721623;  // std dev = 5.645, 128.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0010543122975991428;  // std dev = 6.283, 314.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=47 */
%   | | | else return 0.07951049683100374;  // std dev = 3.610, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return -0.009022910901265955;  // std dev = 0.372, 192.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=32 */


Results
   AUC ROC   = 0.671358
   AUC PR    = 0.709988
   CLL	      = -0.716717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 708.388 seconds
Total inference time: 1.687 seconds
AUC ROC: 0.671358


Results scoring model
   AUC ROC   = 0.629019
   AUC PR    = 0.562247
   CLL	      = -0.584263
   Precision = 0.965517 at threshold = 0.5
   Recall    = 0.170299
   F1        = 0.28953


Total scoring time: 18.834 seconds
Refined model CLL: -0.584263


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.671358
   AUC PR    = 0.709988
   CLL	      = -0.716717
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 734.3059999999999 seconds
Total inference time: 1.687 seconds
AUC ROC: 0.671358
Total revision time: 734.3059999999999
Best scored revision CLL: -0.584263


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:41:48
{'AUC ROC': 0.671358, 'AUC PR': 0.709988, 'CLL': -0.716717, 'Precision': [1.0, 0.5], 'Recall': 0.152727, 'F1': 0.264984, 'Learning time': 734.3059999999999, 'Inference time': 1.687, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726343, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.729, 'Inference time': 0.728}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.389 seconds
Total inference time: 0.739 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 1.408 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612197;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.1170524186253278;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032960644365295624;  // std dev = 8.057, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0011242011748237002;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466863;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749485;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05687552734234234;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.031836430076870745;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00492430185864866;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1168321907821812;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729199;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611727;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775792;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009853341074836227;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07716868281817481;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 2.930632534424908E-6;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1445890022641478;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0966582515623662;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1675091973010358;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566584;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05187399341024181;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025578477386090204;  // std dev = 8.045, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005037879509616943;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650467;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419638;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1298666978256107;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05409511001416477;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02441850760588712;  // std dev = 8.041, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00705518505856985;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0639687050699184;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441103;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180407;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0916685149520168;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04789542466089145;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0212277640895113;  // std dev = 8.041, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006152929354304671;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05138426195928965;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.036556770668143335;  // std dev = 7.313, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0757105610847292;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.06819952394789884;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004714352261745758;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06715774979859056;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005895221186292566;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12559054271926706;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4259014507194284;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.06646466482894191;  // std dev = 4.014, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03982852303921866;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.054739158978672264;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03119124484116838;  // std dev = 6.052, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0031673232060916994;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005126239161421865;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11243441524541607;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03252894285334701;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.022544405115738828;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0440982060258523;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.037821795182630465;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0027386800452805565;  // std dev = 7.201, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.053468596934302476;  // std dev = 3.915, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004460108944534415;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1016936078346293;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.682989
   AUC PR    = 0.718624
   CLL	      = -0.711653
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 916.321 seconds
Total inference time: 1.452 seconds
AUC ROC: 0.682989


Results scoring model
   AUC ROC   = 0.634294
   AUC PR    = 0.566285
   CLL	      = -0.583014
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 24.526 seconds
Refined model CLL: -0.583014


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682989
   AUC PR    = 0.718624
   CLL	      = -0.711653
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 949.644 seconds
Total inference time: 1.452 seconds
AUC ROC: 0.682989
Total revision time: 949.644
Best scored revision CLL: -0.583014


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 05:57:41
{'AUC ROC': 0.682989, 'AUC PR': 0.718624, 'CLL': -0.711653, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 949.644, 'Inference time': 1.452, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.389, 'Inference time': 0.739}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.19708023280943107;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.17135736507449068;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.08e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.14607593709874725;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.12231354451788602;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.10084007060165472;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.08206740119938853;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.06609218169959903;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.05278468030106723;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.041881985945981505;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else return 0.0330628928160336;  // std dev = 17.132, 1,310.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=444 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555311
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.033 seconds
Total inference time: 0.695 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.58034
   AUC PR    = 0.545888
   CLL	      = -0.610497
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160681
   F1        = 0.276873


Total scoring time: 1.007 seconds
Parameter learned model CLL: -0.610497


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.08e-08, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.33e-07, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 85], 'false': [17.132, 866, 444]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 85], 'false': [17.132, 866, 444]}]]
[{'': [-3.343730521224001e-16, 0.22405687314257514]}, {'': [9.195258933366003e-16, 0.22405687314259548]}, {'': [1.6300686290967004e-15, 0.22405687314258815]}, {'': [2.0898315757650005e-16, 0.2240568731425937]}, {'': [-3.343730521224001e-16, 0.2240568731425947]}, {'': [-5.224578939412501e-17, 0.22405687314258618]}, {'': [-1.2016531560648752e-16, 0.2240568731425968]}, {'': [2.0898315757650005e-17, 0.22405687314258663]}, {'': [-5.747036833353752e-17, 0.22405687314259717]}, {'': [3.918434204559376e-17, 0.22405687314258657]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995121;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.21668986036641139;  // std dev = 0.480, 1,124.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=403 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08481560176617904;  // std dev = 3.626, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return -0.04185106490048778;  // std dev = 1.643, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0044903985141464585;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5275270165412641;  // std dev = 2.044, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.12399825594914672;  // std dev = 1.878, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24337263318845898;  // std dev = 2.813, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.18320815727935588;  // std dev = 15.776, 1,089.000 (wgt'ed) examples reached here.  /* #neg=704 #pos=385 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.07480058135002726;  // std dev = 3.623, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return -0.03839851409388376;  // std dev = 1.646, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0039429056901727644;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.72e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.37419864994576685;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.13070545578959283;  // std dev = 2.307, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.15985276645065774;  // std dev = 0.479, 1,124.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=403 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.10011127296210329;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13035320354721797;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04368269350015397;  // std dev = 3.889, 96.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=19 */
%   | | | else return 0.003460714022223107;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831025;  // std dev = 1.33e-07, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13422393595868942;  // std dev = 0.479, 1,159.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=418 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0033484209611602833;  // std dev = 3.064, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return 0.23702356773456046;  // std dev = 1.880, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.16844318350295365;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.009605921575796325;  // std dev = 2.713, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601503;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10988430945576894;  // std dev = 0.479, 1,159.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=418 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.0864666204733689;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11624796082820466;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03586169790221028;  // std dev = 3.552, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return 0.005728258028133123;  // std dev = 2.716, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3515413467640642;  // std dev = 2.035, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.03652303982134416;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.08481103837417937;  // std dev = 0.478, 1,122.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=399 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.07452475003713843;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10492795256033469;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03033226467743148;  // std dev = 3.855, 96.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=19 */
%   | | | else return -8.447517168369475E-4;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22578309130456464;  // std dev = 1.495, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.04821685873514719;  // std dev = 2.350, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1620462645893405;  // std dev = 2.816, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return 0.06680758442362321;  // std dev = 15.776, 1,089.000 (wgt'ed) examples reached here.  /* #neg=704 #pos=385 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.06842626002021829;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09745358274119628;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.028837323059483062;  // std dev = 3.550, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return 9.474184255750047E-4;  // std dev = 2.715, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0558459677411852;  // std dev = 0.478, 1,159.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=418 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2592825216392112;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.15083756295142983;  // std dev = 6.27e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.019789597317344698;  // std dev = 3.758, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return -0.02942082170609261;  // std dev = 2.092, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0439246596683795;  // std dev = 0.478, 1,159.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=418 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.04564007880969967;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09247348736611197;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.022927030283714674;  // std dev = 3.536, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return 3.331431391346599E-4;  // std dev = 2.708, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.35077203235964616;  // std dev = 1.631, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.0019066935656736656;  // std dev = 2.061, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.23810861324364446;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04304521694775173;  // std dev = 0.800, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.032205713783390336;  // std dev = 0.478, 1,122.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=399 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.015668532048311305;  // std dev = 3.757, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return -0.027811823231043777;  // std dev = 2.091, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */


Results
   AUC ROC   = 0.680663
   AUC PR    = 0.623716
   CLL	      = -0.542493
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 49.119 seconds
Total inference time: 1.015 seconds
AUC ROC: 0.680663


Results scoring model
   AUC ROC   = 0.630652
   AUC PR    = 0.585281
   CLL	      = -0.594575
   Precision = 0.970588 at threshold = 0.5
   Recall    = 0.187146
   F1        = 0.313788


Total scoring time: 1.494 seconds
Refined model CLL: -0.594575


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680663
   AUC PR    = 0.623716
   CLL	      = -0.542493
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 53.653 seconds
Total inference time: 1.015 seconds
AUC ROC: 0.680663
Total revision time: 53.653
Best scored revision CLL: -0.594575


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 05:58:37
{'AUC ROC': 0.680663, 'AUC PR': 0.623716, 'CLL': -0.542493, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 53.653, 'Inference time': 1.015, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555311, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.033, 'Inference time': 0.695}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.1951803046480918;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.16972229605977518;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.14472567689318638;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.121241469952998;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.10001913833747379;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.08145920710863024;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.06565525016104433;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.05248013310311887;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.04167645623527271;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else return 0.032929399403554084;  // std dev = 24.168, 2,614.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=881 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.55509
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.128 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.584042
   AUC PR    = 0.551849
   CLL	      = -0.607843
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168083
   F1        = 0.287793


Total scoring time: 1.161 seconds
Parameter learned model CLL: -0.607843


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.09e-06, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3e-07, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 178], 'false': [24.168, 1, 881]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 178], 'false': [24.168, 1, 881]}]]
[{'': [6.706246045376226e-15, 0.22344122548881498]}, {'': [-3.193450497798203e-15, 0.22344122548882342]}, {'': [1.9559884299013994e-15, 0.22344122548880624]}, {'': [7.983626244495507e-16, 0.22344122548880924]}, {'': [7.185263620045957e-16, 0.2234412254887863]}, {'': [7.384854276158345e-16, 0.22344122548878131]}, {'': [5.03966406683779e-16, 0.22344122548877712]}, {'': [-1.6965205769552953e-16, 0.22344122548881015]}, {'': [-4.490789762528723e-17, 0.22344122548878967]}, {'': [3.2433481618263e-17, 0.2234412254887751]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21383911251188287;  // std dev = 0.479, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,489 #pos=822 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.055951132901709014;  // std dev = 5.374, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.02668826094220901;  // std dev = 3.532, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14586475473655003;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.8300752810523392;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.25195028105233824;  // std dev = 3.951, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | | else return 0.18368918773122128;  // std dev = 22.353, 2,186.000 (wgt'ed) examples reached here.  /* #neg=1,413 #pos=773 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.049002814743577316;  // std dev = 5.374, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return 0.13458565557492316;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.024293139437693356;  // std dev = 3.528, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | | else return -0.1411936998085653;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.12428997878680341;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.6805032739328856;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1578173586935497;  // std dev = 0.479, 2,250.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=800 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13900425983795117;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.044400105739284185;  // std dev = 5.565, 192.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=39 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021268836034785958;  // std dev = 3.528, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | | else return -0.12493157519673699;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1315827623564076;  // std dev = 0.478, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,489 #pos=822 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3469435891004973;  // std dev = 1.195, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.025786365129712;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03300055655772342;  // std dev = 5.431, 186.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=37 */
%   | | | else return 0.01927050172747923;  // std dev = 3.525, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10789359976196274;  // std dev = 0.478, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,489 #pos=822 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.030046156835009875;  // std dev = 5.351, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return 0.10375300917901818;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.15336106653933393;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.019288393260401507;  // std dev = 3.519, 88.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08725595391319386;  // std dev = 0.478, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,489 #pos=822 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2921517692544349;  // std dev = 1.185, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0184669770810625;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.022364650060250183;  // std dev = 5.426, 186.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=37 */
%   | | | else return 0.015751964451700996;  // std dev = 3.519, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2643742679542717;  // std dev = 2.184, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.02408509298994005;  // std dev = 2.647, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return 0.06977236360839359;  // std dev = 0.479, 2,250.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=800 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2401447264999549;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.015932585654224618;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01909402003018796;  // std dev = 5.426, 186.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=37 */
%   | | | else return 0.013703120644618646;  // std dev = 3.519, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3339638864406889;  // std dev = 2.669, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return -0.10823058777798536;  // std dev = 2.422, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else return 0.054120008386932136;  // std dev = 0.478, 2,241.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=793 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03956629588113186;  // std dev = 5.039, 151.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=33 */
%   | | | else return -0.009884708088829904;  // std dev = 2.914, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.18495083851625593;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.011902576762187806;  // std dev = 3.519, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25780978195309734;  // std dev = 2.669, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return -0.08548748803125096;  // std dev = 2.423, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else return 0.04264334423737048;  // std dev = 0.478, 2,241.000 (wgt'ed) examples reached here.  /* #neg=1,448 #pos=793 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.199188507790974;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.012044209981390146;  // std dev = 1.792, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.005811473819295531;  // std dev = 1.781, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.012408960407094764;  // std dev = 6.215, 253.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=48 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034001594418983136;  // std dev = 0.477, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,489 #pos=822 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.010496022508280202;  // std dev = 5.300, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return 0.07942217090620884;  // std dev = 2.370, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.17519313491103955;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.00871994433505864;  // std dev = 3.519, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */


Results
   AUC ROC   = 0.68188
   AUC PR    = 0.625035
   CLL	      = -0.542168
   Precision = 0.989796 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.416309


Total learning time: 94.443 seconds
Total inference time: 0.912 seconds
AUC ROC: 0.68188


Results scoring model
   AUC ROC   = 0.633283
   AUC PR    = 0.589014
   CLL	      = -0.59738
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17186
   F1        = 0.293312


Total scoring time: 1.996 seconds
Refined model CLL: -0.59738


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.68188
   AUC PR    = 0.625035
   CLL	      = -0.542168
   Precision = 0.989796 at threshold = 0.5
   Recall    = 0.263587
   F1        = 0.416309


Total learning time: 100.728 seconds
Total inference time: 0.912 seconds
AUC ROC: 0.68188
Total revision time: 100.728
Best scored revision CLL: -0.59738


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:00:20
{'AUC ROC': 0.68188, 'AUC PR': 0.625035, 'CLL': -0.542168, 'Precision': [0.989796, 0.5], 'Recall': 0.263587, 'F1': 0.416309, 'Learning time': 100.728, 'Inference time': 0.912, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.55509, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.128, 'Inference time': 0.724}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.19825045794214677;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.172364288590554;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.14690703590764226;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.12297285143149475;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.31e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.10134434851529456;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.08244047940564331;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.86e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.06635977564013033;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.05297086003568357;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.04200737295007663;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else return 0.03314413053581182;  // std dev = 29.737, 3,940.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,340 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555453
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.496 seconds
Total inference time: 0.714 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578351
   AUC PR    = 0.542784
   CLL	      = -0.612
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156702
   F1        = 0.270947


Total scoring time: 1.426 seconds
Parameter learned model CLL: -0.612


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.31e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 249], 'false': [29.737, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 249], 'false': [29.737, 2, 1]}]]
[{'': [4.679879866050459e-15, 0.22443247700276145]}, {'': [-4.337449631949206e-15, 0.22443247700273336]}, {'': [8.5607558525313275e-16, 0.22443247700273852]}, {'': [-2.853585284177109e-16, 0.22443247700274746]}, {'': [2.1401889631328319e-16, 0.22443247700276636]}, {'': [3.8523401336390975e-16, 0.22443247700272967]}, {'': [3.2816230768036754e-16, 0.22443247700274033]}, {'': [-2.853585284177109e-17, 0.22443247700272426]}, {'': [-1.819160618662907e-16, 0.22443247700272795]}, {'': [3.566981605221386e-18, 0.22443247700275765]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21890646381729673;  // std dev = 27.254, 3,221.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,162 */
%   | | | else return 0.14473430095317083;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40031760979830816;  // std dev = 4.539, 83.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.039967116917694036;  // std dev = 6.523, 286.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00987307303054658;  // std dev = 4.320, 145.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1901168623365435;  // std dev = 27.254, 3,221.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,162 */
%   | | | else return 0.12618682118396896;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6356591776624485;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.33756698205224367;  // std dev = 4.444, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0345460198691818;  // std dev = 6.321, 268.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=49 */
%   | | | else return 0.09765822296899972;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1430571625680787;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.013112733491054454;  // std dev = 4.306, 142.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.62e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1615056465107643;  // std dev = 27.254, 3,221.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,162 */
%   | | | else return 0.10845686893002472;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6112956485210606;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.28159652169697924;  // std dev = 4.524, 83.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12984768711571226;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.02934997404139302;  // std dev = 6.519, 286.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008690252245135921;  // std dev = 4.312, 145.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=22 */
%   | | | else return -0.12689029352166997;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13448350698941874;  // std dev = 27.254, 3,221.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,162 */
%   | | | else return 0.09202127511997779;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4200320426112764;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2186033145899461;  // std dev = 4.428, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.05074900274599944;  // std dev = 5.386, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return 0.010257185770955532;  // std dev = 4.379, 138.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007621974034700548;  // std dev = 4.312, 145.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=22 */
%   | | | else return -0.11348487437480007;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.31e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11007530469376299;  // std dev = 27.271, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,163 */
%   | | | else return 0.07510041476663522;  // std dev = 5.713, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15204447577677238;  // std dev = 3.575, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.2298673279663058;  // std dev = 2.765, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2466671057876849;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06140492203822077;  // std dev = 2.484, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015157391348643091;  // std dev = 6.343, 284.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
%   | | | else return -0.0015237606143422523;  // std dev = 4.205, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08895237051317763;  // std dev = 27.253, 3,221.000 (wgt'ed) examples reached here.  /* #neg=2,059 #pos=1,162 */
%   | | | else return 0.06214678922092398;  // std dev = 5.796, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11605987574668569;  // std dev = 3.574, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.17533626414455528;  // std dev = 2.765, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018368379752076384;  // std dev = 6.299, 268.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=49 */
%   | | | else return 0.07217301820518678;  // std dev = 2.882, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.13251455821111946;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.00838578747894282;  // std dev = 4.297, 142.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.86e-07, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.355749593265362;  // std dev = 2.906, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return -0.041650896141146636;  // std dev = 3.272, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else return 0.06976407236823247;  // std dev = 0.479, 3,372.000 (wgt'ed) examples reached here.  /* #neg=2,156 #pos=1,216 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.21163328604814144;  // std dev = 1.515, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05138378380409157;  // std dev = 2.481, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.010659037325081338;  // std dev = 6.336, 284.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
%   | | | else return -0.0038014271635328305;  // std dev = 4.205, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.056167175387376554;  // std dev = 27.240, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,163 */
%   | | | else return 0.03569339131042078;  // std dev = 5.719, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2463796269367226;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07525628248463737;  // std dev = 4.419, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03338297461149625;  // std dev = 5.844, 216.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=43 */
%   | | | else return -0.007804522653146686;  // std dev = 3.690, 97.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0012498951295112847;  // std dev = 4.306, 145.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=22 */
%   | | | else return -0.1062666876833033;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.044164940759366;  // std dev = 27.239, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,163 */
%   | | | else return 0.02873907587767652;  // std dev = 5.720, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2682929631442174;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05779936514654117;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.17492718730151022;  // std dev = 1.510, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0414623105668052;  // std dev = 2.475, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008517821847889255;  // std dev = 6.335, 284.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
%   | | | else return -0.006938560132083992;  // std dev = 4.202, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801106;  // std dev = 2.98e-08, 249.000 (wgt'ed) examples reached here.  /* #pos=249 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6625046508327124;  // std dev = 0.500, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.3020214922262492;  // std dev = 0.285, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.25278769086987235;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.011497941205441653;  // std dev = 3.942, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.03233196116241637;  // std dev = 0.478, 3,363.000 (wgt'ed) examples reached here.  /* #neg=2,153 #pos=1,210 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.013804007561424804;  // std dev = 6.500, 286.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=52 */
%   | | | else return -0.002412785827156151;  // std dev = 4.259, 139.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=22 */


Results
   AUC ROC   = 0.68137
   AUC PR    = 0.624743
   CLL	      = -0.544851
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 514.652 seconds
Total inference time: 1.477 seconds
AUC ROC: 0.68137


Results scoring model
   AUC ROC   = 0.649399
   AUC PR    = 0.600353
   CLL	      = -0.595416
   Precision = 0.951557 at threshold = 0.5
   Recall    = 0.173065
   F1        = 0.292865


Total scoring time: 13.149 seconds
Refined model CLL: -0.595416


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.68137
   AUC PR    = 0.624743
   CLL	      = -0.544851
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 533.7230000000001 seconds
Total inference time: 1.477 seconds
AUC ROC: 0.68137
Total revision time: 533.7230000000001
Best scored revision CLL: -0.595416


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:09:16
{'AUC ROC': 0.68137, 'AUC PR': 0.624743, 'CLL': -0.544851, 'Precision': [0.878261, 0.5], 'Recall': 0.274457, 'F1': 0.418219, 'Learning time': 533.7230000000001, 'Inference time': 1.477, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555453, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.496, 'Inference time': 0.714}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.19927398260995946;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.1732448791295895;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.1476335920227796;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.1235488718128935;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.1017845618013165;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.08276583762506953;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.06659287640972339;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.053132832873067484;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.04211629711301648;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.03321457785997342;  // std dev = 34.390, 5,262.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,795 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555582
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.619 seconds
Total inference time: 0.731 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.576451
   AUC PR    = 0.539719
   CLL	      = -0.613381
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152902
   F1        = 0.265248


Total scoring time: 1.321 seconds
Parameter learned model CLL: -0.613381


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [34.39, 3, 1]}]]
[{'': [3.333410365294297e-15, 0.22475874947138688]}, {'': [-5.000115547941446e-15, 0.22475874947142577]}, {'': [-4.386066270124075e-16, 0.22475874947152014]}, {'': [-9.430042480766762e-16, 0.2247587494714273]}, {'': [-5.701886151161297e-16, 0.22475874947137106]}, {'': [4.605369583630279e-16, 0.22475874947147884]}, {'': [1.9189039931792828e-16, 0.2247587494714746]}, {'': [2.3026847918151394e-16, 0.22475874947147487]}, {'': [-2.2478589634385887e-16, 0.2247587494714626]}, {'': [-2.0285556499323847e-16, 0.22475874947144903]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21813960891624767;  // std dev = 31.435, 4,289.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,544 */
%   | | | else return 0.13087620782678608;  // std dev = 6.606, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4036034805540588;  // std dev = 5.477, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.04597962293020077;  // std dev = 7.594, 378.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04371594540878963;  // std dev = 5.415, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18959065076719786;  // std dev = 31.443, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,545 */
%   | | | else return 0.11016595325053702;  // std dev = 6.558, 216.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3342289468418389;  // std dev = 4.496, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return 0.40912824106187506;  // std dev = 3.304, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041291382801835634;  // std dev = 7.411, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | | else return 0.09836081117056086;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03831066349347694;  // std dev = 5.415, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16117557249002604;  // std dev = 31.431, 4,289.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,544 */
%   | | | else return 0.09446310791330888;  // std dev = 6.615, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.577571547067039;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.28062856405945735;  // std dev = 5.459, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13209659389114534;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.03380456654823904;  // std dev = 7.590, 378.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0334346224216311;  // std dev = 5.415, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13440291660134224;  // std dev = 31.439, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,545 */
%   | | | else return 0.0762490949804274;  // std dev = 6.569, 216.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.44919202172346395;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.22259628877291618;  // std dev = 5.457, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11282367060757525;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.02934833370705881;  // std dev = 7.590, 378.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0290716142448949;  // std dev = 5.415, 194.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11009522361579344;  // std dev = 31.427, 4,289.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,544 */
%   | | | else return 0.06429691748531816;  // std dev = 6.625, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.33861183108028514;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17220673162485897;  // std dev = 5.456, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0950500747580598;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.025395174940227385;  // std dev = 7.590, 378.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=71 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09729584522777665;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.028752824604586478;  // std dev = 5.319, 189.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08904044033802033;  // std dev = 31.435, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,545 */
%   | | | else return 0.04999507225342214;  // std dev = 6.579, 216.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32549682794584883;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.12714306552722887;  // std dev = 5.443, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.019545334082161483;  // std dev = 7.394, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | | else return 0.07327307781494727;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08515766047624178;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.024928424431622246;  // std dev = 5.318, 189.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07110432419316354;  // std dev = 31.435, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,545 */
%   | | | else return 0.041223287455529736;  // std dev = 6.580, 216.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24787361612455872;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.09607536190798298;  // std dev = 5.443, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08193692177164409;  // std dev = 2.856, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.06484078076260684;  // std dev = 1.341, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016844288734688913;  // std dev = 7.598, 378.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=72 */
%   | | | else return 0.02148105056484407;  // std dev = 5.241, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05637596574115447;  // std dev = 31.422, 4,289.000 (wgt'ed) examples reached here.  /* #neg=2,745 #pos=1,544 */
%   | | | else return 0.03247127122837057;  // std dev = 6.640, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0553115950135958;  // std dev = 4.437, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | | | else return 0.12083680137003065;  // std dev = 3.272, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013687798473018167;  // std dev = 7.386, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | | else return 0.059667143074758004;  // std dev = 3.365, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.08823187648474845;  // std dev = 0.949, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.01833219336151557;  // std dev = 5.321, 192.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2657802923203216;  // std dev = 3.819, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | | else return -0.08344070094156893;  // std dev = 3.812, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.043094026825123755;  // std dev = 31.605, 4,368.000 (wgt'ed) examples reached here.  /* #neg=2,816 #pos=1,552 */
%   | | | else return 0.05262131792632612;  // std dev = 5.438, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16713522339199358;  // std dev = 1.596, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -9.212001817581341E-4;  // std dev = 2.705, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011040513926273159;  // std dev = 7.594, 378.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=72 */
%   | | | else return 0.016484690894085986;  // std dev = 5.242, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03473131381024331;  // std dev = 31.405, 4,293.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,545 */
%   | | | else return 0.018438653699868007;  // std dev = 6.584, 216.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15939105951008933;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.041116861584266036;  // std dev = 5.442, 121.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06752544686809007;  // std dev = 2.887, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.00969529040054753;  // std dev = 7.577, 378.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=71 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08106937691553218;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.015334231430772798;  // std dev = 5.314, 189.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=35 */


Results
   AUC ROC   = 0.680489
   AUC PR    = 0.62392
   CLL	      = -0.545589
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 724.916 seconds
Total inference time: 1.537 seconds
AUC ROC: 0.680489


Results scoring model
   AUC ROC   = 0.635115
   AUC PR    = 0.583581
   CLL	      = -0.601671
   Precision = 0.947368 at threshold = 0.5
   Recall    = 0.169891
   F1        = 0.288115


Total scoring time: 18.369 seconds
Refined model CLL: -0.601671


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680489
   AUC PR    = 0.62392
   CLL	      = -0.545589
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 750.2250000000001 seconds
Total inference time: 1.537 seconds
AUC ROC: 0.680489
Total revision time: 750.2250000000001
Best scored revision CLL: -0.601671


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:21:49
{'AUC ROC': 0.680489, 'AUC PR': 0.62392, 'CLL': -0.545589, 'Precision': [0.878261, 0.5], 'Recall': 0.274457, 'F1': 0.418219, 'Learning time': 750.2250000000001, 'Inference time': 1.537, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555582, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.619, 'Inference time': 0.731}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.384 seconds
Total inference time: 0.719 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 1.562 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027518;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331555;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6533371991725403;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.36833025418179166;  // std dev = 5.913, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.030171111907377385;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1605192001234705;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957763;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.29844323418653285;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3356561097871145;  // std dev = 3.645, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.032849356126780964;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02972048696584879;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.0926206606840308;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23380330009182837;  // std dev = 4.769, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2666970475706609;  // std dev = 3.651, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13182164589385853;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08067015192563701;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04638358869390878;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956929003;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963235;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816067;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17641618316746832;  // std dev = 4.770, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20986744547493835;  // std dev = 3.646, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10989290830638028;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.024229319004557798;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07456565614773732;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.024203504364134678;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809333;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889962;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.132053737726591;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1612193777437725;  // std dev = 3.654, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10982334156617776;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07484620800281404;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03124098055443247;  // std dev = 3.500, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.0191900674335841;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367405;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514456;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3670858626234846;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.09475804674564713;  // std dev = 5.895, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.036301022200237475;  // std dev = 7.641, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 6.222393825533111E-4;  // std dev = 4.997, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01631947121898108;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10293713734885913;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630123;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.0394714516164392;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.27520994691655354;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07116915218329335;  // std dev = 5.895, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015363995237870106;  // std dev = 8.382, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.05764404622030782;  // std dev = 3.617, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07065118053213447;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.016365481864489623;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044157282993930735;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502904;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.246784474991512;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05162456426025351;  // std dev = 5.889, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08603388226296886;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07016796974788467;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01129405175106331;  // std dev = 8.425, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.014271648681489005;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773523;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715327;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1906676515586085;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03878464870109748;  // std dev = 5.889, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026466338139472488;  // std dev = 7.629, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.006413547637249833;  // std dev = 4.993, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010363623604723664;  // std dev = 5.922, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09354808454530529;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.678013
   AUC PR    = 0.622352
   CLL	      = -0.546077
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 974.465 seconds
Total inference time: 1.497 seconds
AUC ROC: 0.678013


Results scoring model
   AUC ROC   = 0.625295
   AUC PR    = 0.573685
   CLL	      = -0.603347
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 24.922 seconds
Refined model CLL: -0.603347


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678013
   AUC PR    = 0.622352
   CLL	      = -0.546077
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 1008.3330000000001 seconds
Total inference time: 1.497 seconds
AUC ROC: 0.678013
Total revision time: 1008.3330000000001
Best scored revision CLL: -0.603347


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 06:38:41
{'AUC ROC': 0.678013, 'AUC PR': 0.622352, 'CLL': -0.546077, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 1008.3330000000001, 'Inference time': 1.497, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.384, 'Inference time': 0.719}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 2.92e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.14157567649262193;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.12345311521713834;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.15e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.10615923876339481;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2.15e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.09014288075691522;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4.21e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.0756977297672743;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.06296392797357427;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 1.23e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.0519528468282553;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 8.16e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.04258214082820268;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.03471081313163694;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3.65e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else return 0.028168471247661628;  // std dev = 15.927, 1,249.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=354 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.817894
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1.922 seconds
Total inference time: 0.725 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.605791
   AUC PR    = 0.548899
   CLL	      = -0.564222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.211581
   F1        = 0.349265


Total scoring time: 1.01 seconds
Parameter learned model CLL: -0.564222


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.15e-08, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.15e-07, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.23e-07, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.16e-08, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 95], 'false': [15.927, 895, 354]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 95], 'false': [15.927, 895, 354]}]]
[{'': [8.975276662232845e-16, 0.20309602365637605]}, {'': [4.487638331116422e-16, 0.20309602365640061]}, {'': [1.7202613602612952e-15, 0.2030960236563965]}, {'': [4.861608192042791e-16, 0.2030960236563987]}, {'': [1.8698493046318426e-17, 0.20309602365639454]}, {'': [-4.674623261579606e-17, 0.2030960236563966]}, {'': [1.5893719089370662e-16, 0.2030960236564026]}, {'': [7.011934892369409e-17, 0.20309602365639884]}, {'': [-6.077010240053489e-17, 0.20309602365639942]}, {'': [1.402386978473882e-17, 0.2030960236564058]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995115;  // std dev = 2.92e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1673465867629126;  // std dev = 0.462, 1,022.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=316 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08037115732173383;  // std dev = 4.497, 117.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06609348914291195;  // std dev = 2.150, 66.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14408248271894086;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3865425612211386;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14159764484807427;  // std dev = 2.221, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.033948672816379095;  // std dev = 3.878, 156.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.04e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12343776773037256;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3298122221556714;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.01662911591548322;  // std dev = 3.952, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0544656824194271;  // std dev = 2.149, 67.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | | | else return -0.1301037025359333;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583099;  // std dev = 2.15e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4581766300109241;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.1715927046781452;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03100276715918094;  // std dev = 2.142, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.10245169176851467;  // std dev = 14.622, 1,007.000 (wgt'ed) examples reached here.  /* #neg=699 #pos=308 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.2701633490411173;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.10699965224896661;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.12066292990577136;  // std dev = 2.219, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.028330820185967838;  // std dev = 3.874, 156.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 4.21e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08672304115369116;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20509033090383308;  // std dev = 2.147, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.21361117311261388;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.04075738324377996;  // std dev = 3.091, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
%   | | | else return 0.049465056436046054;  // std dev = 2.922, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07145912527684894;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21981531237655239;  // std dev = 1.768, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.09367909186460403;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08294943761159775;  // std dev = 2.178, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.02428638457441687;  // std dev = 3.865, 156.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 1.23e-07, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05834430069968334;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.17040378060836464;  // std dev = 1.766, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.008206058269911203;  // std dev = 3.887, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03884997549848163;  // std dev = 2.152, 67.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | | | else return -0.11575093368831986;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 8.16e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047281227730842035;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04993146554827106;  // std dev = 3.898, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return -0.06640956683403407;  // std dev = 1.695, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03500649395465856;  // std dev = 2.152, 67.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=5 */
%   | | | else return -0.10442012892065279;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936713;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03808543498443871;  // std dev = 0.461, 1,051.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=323 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13938083105497098;  // std dev = 1.761, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.08039043573865264;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0031398208615874825;  // std dev = 3.872, 114.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=19 */
%   | | | else return -0.031791232058831186;  // std dev = 2.153, 66.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801115;  // std dev = 3.65e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.4520585045839292;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12161710034675388;  // std dev = 2.540, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.34249256715364895;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2409486401465295;  // std dev = 0.198, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.027709381418406155;  // std dev = 0.460, 1,034.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=314 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.03742383051916256;  // std dev = 3.036, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
%   | | | else return 0.038950237950789786;  // std dev = 2.886, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */


Results
   AUC ROC   = 0.564965
   AUC PR    = 0.699191
   CLL	      = -0.805437
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 39.272 seconds
Total inference time: 0.975 seconds
AUC ROC: 0.564965


Results scoring model
   AUC ROC   = 0.666687
   AUC PR    = 0.59216
   CLL	      = -0.546208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.216036
   F1        = 0.355311


Total scoring time: 1.27 seconds
Refined model CLL: -0.546208


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.564965
   AUC PR    = 0.699191
   CLL	      = -0.805437
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 43.474000000000004 seconds
Total inference time: 0.975 seconds
AUC ROC: 0.564965
Total revision time: 43.474000000000004
Best scored revision CLL: -0.546208


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:39:26
{'AUC ROC': 0.564965, 'AUC PR': 0.699191, 'CLL': -0.805437, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 43.474000000000004, 'Inference time': 0.975, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.817894, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1.922, 'Inference time': 0.725}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.14715250794587487;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.12827909867861784;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.11021378776260408;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830936;  // std dev = 4.13e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.09345544368531396;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.82e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.07833483758339112;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.06501362944990675;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.76e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.05351069928187156;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.043740897823023116;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.03555415349080911;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.028768080985539488;  // std dev = 22.751, 2,519.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=728 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.81083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.845 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.594655
   AUC PR    = 0.53101
   CLL	      = -0.572538
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.18931
   F1        = 0.318352


Total scoring time: 1.164 seconds
Parameter learned model CLL: -0.572538


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.13e-07, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [22.751, 1, 728]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 170], 'false': [22.751, 1, 728]}]]
[{'': [6.687461042448002e-15, 0.20548050772842683]}, {'': [-3.0093574691016007e-15, 0.20548050772843685]}, {'': [1.9226450497038004e-15, 0.2054805077284081]}, {'': [1.0031191563672002e-15, 0.20548050772839635]}, {'': [8.568309460636502e-16, 0.20548050772838264]}, {'': [-2.716781048494501e-16, 0.20548050772839693]}, {'': [4.493137887894751e-16, 0.2054805077283899]}, {'': [-3.2392389424357507e-16, 0.20548050772841717]}, {'': [-2.481674996220938e-16, 0.20548050772838822]}, {'': [5.4858078863831267e-17, 0.2054805077283851]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1699225581414477;  // std dev = 20.607, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.08750673326464928;  // std dev = 4.389, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32873717039363;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.029955102500392516;  // std dev = 5.683, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -2.581445465053424E-4;  // std dev = 3.706, 113.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14795387030059276;  // std dev = 20.607, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.07651719096730317;  // std dev = 4.389, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2838374893261067;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.11418623766746648;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.5991488136202087;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09593706587885373;  // std dev = 2.456, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 4.943318417888E-4;  // std dev = 5.132, 213.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=31 */
%   | | | else return 0.030101752161722152;  // std dev = 4.255, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.250677073984115;  // std dev = 3.082, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.010031834676298973;  // std dev = 1.235, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.12227381933426085;  // std dev = 20.816, 2,041.000 (wgt'ed) examples reached here.  /* #neg=1,416 #pos=625 */
%   | | | else return 0.16082841939044135;  // std dev = 3.519, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.5057043685053483;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08353387831498779;  // std dev = 2.456, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.055439435888962885;  // std dev = 2.318, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.005087234190996437;  // std dev = 6.248, 305.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=46 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830936;  // std dev = 4.13e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10719503879274069;  // std dev = 20.601, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.04860430576749435;  // std dev = 4.391, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2326580169977523;  // std dev = 2.722, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.06503090751944166;  // std dev = 2.298, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15561854362984753;  // std dev = 2.394, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.02193755544018346;  // std dev = 1.091, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04799281095936045;  // std dev = 2.317, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.0044528106357804385;  // std dev = 6.248, 305.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=46 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.82e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08920008934792194;  // std dev = 20.600, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.041295278022412195;  // std dev = 4.392, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18871963417748758;  // std dev = 2.722, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.05294128167611001;  // std dev = 2.296, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04185689868787122;  // std dev = 5.295, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
%   | | | else return -0.0026159094728857475;  // std dev = 3.096, 75.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004068728981873782;  // std dev = 3.712, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.14927674377440012;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07338556009957856;  // std dev = 20.600, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.034908649309044706;  // std dev = 4.392, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15257658820767914;  // std dev = 2.909, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.018801015065088623;  // std dev = 2.033, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.38865275546042366;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.050053765493457046;  // std dev = 2.431, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0031618350314873323;  // std dev = 5.129, 213.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=31 */
%   | | | else return 0.020637612713328812;  // std dev = 4.248, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.76e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05980808964656468;  // std dev = 20.600, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.029382501535941522;  // std dev = 4.392, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2591758125192851;  // std dev = 1.123, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06036913391379228;  // std dev = 3.361, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.29547971145251356;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.042168559935108915;  // std dev = 2.430, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.040728436630181115;  // std dev = 2.316, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.0010049167907277667;  // std dev = 6.243, 305.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.048370064666611264;  // std dev = 20.600, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.024640519452294403;  // std dev = 4.392, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1121666811806898;  // std dev = 2.726, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.002009497592307008;  // std dev = 2.249, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12704205308193112;  // std dev = 2.359, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.15220352815625193;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03931951708639169;  // std dev = 2.443, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 8.769310897521612E-4;  // std dev = 6.243, 305.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=46 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03887912110673432;  // std dev = 20.599, 1,979.000 (wgt'ed) examples reached here.  /* #neg=1,362 #pos=617 */
%   | | | else return 0.0205998591568991;  // std dev = 4.392, 109.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08508135488071798;  // std dev = 2.902, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return -0.01160269874669203;  // std dev = 2.010, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.027903838419965295;  // std dev = 5.260, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
%   | | | else return -0.013460450976075294;  // std dev = 3.052, 75.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1238322065090507;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0013850860551141869;  // std dev = 3.709, 113.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4899734452361716;  // std dev = 12.072, 825.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=631 */
%   | | | else return -0.246227250418462;  // std dev = 5.753, 1,366.000 (wgt'ed) examples reached here.  /* #neg=1,334 #pos=32 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.07538999566667758;  // std dev = 2.346, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.00554814608007297;  // std dev = 5.085, 158.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0311472137929353;  // std dev = 4.096, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
%   | | | else return -0.18454772677763764;  // std dev = 0.254, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.189923366041331;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.773555
   AUC PR    = 0.815698
   CLL	      = -0.661541
   Precision = 0.990476 at threshold = 0.5
   Recall    = 0.13489
   F1        = 0.237443


Total learning time: 567.416 seconds
Total inference time: 2.295 seconds
AUC ROC: 0.773555


Results scoring model
   AUC ROC   = 0.896095
   AUC PR    = 0.840194
   CLL	      = -0.468618
   Precision = 0.994413 at threshold = 0.5
   Recall    = 0.198218
   F1        = 0.330548


Total scoring time: 10.982 seconds
Refined model CLL: -0.468618


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.773555
   AUC PR    = 0.815698
   CLL	      = -0.661541
   Precision = 0.990476 at threshold = 0.5
   Recall    = 0.13489
   F1        = 0.237443


Total learning time: 582.407 seconds
Total inference time: 2.295 seconds
AUC ROC: 0.773555
Total revision time: 582.407
Best scored revision CLL: -0.468618


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:49:12
{'AUC ROC': 0.773555, 'AUC PR': 0.815698, 'CLL': -0.661541, 'Precision': [0.990476, 0.5], 'Recall': 0.13489, 'F1': 0.237443, 'Learning time': 582.407, 'Inference time': 2.295, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.81083, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.845, 'Inference time': 0.722}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.07e-06, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.14775485945814248;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.1288001811139083;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 2.89e-08, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.11065113268469264;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.09381215386884759;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.88e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.07861815789215967;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.15e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.06523320733346;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.89e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.0536770150628279;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.04386411214509904;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.03564341142339809;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else return 0.028831193366730835;  // std dev = 27.891, 3,781.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,095 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.810078
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.125 seconds
Total inference time: 0.786 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.593541
   AUC PR    = 0.529233
   CLL	      = -0.573399
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.187082
   F1        = 0.315197


Total scoring time: 1.299 seconds
Parameter learned model CLL: -0.573399


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-08, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 252], 'false': [27.891, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 252], 'false': [27.891, 2, 1]}]]
[{'': [4.511382449270477e-15, 0.20573433293504167]}, {'': [-4.3985978880387156e-15, 0.20573433293505555]}, {'': [7.894919286223335e-16, 0.205734332935]}, {'': [-3.101575433873453e-16, 0.20573433293503]}, {'': [1.409807015397024e-16, 0.2057343329350119]}, {'': [3.9474596431116675e-16, 0.20573433293497903]}, {'': [3.313046486183007e-16, 0.20573433293498974]}, {'': [-2.114710523095536e-17, 0.20573433293504836]}, {'': [-1.6212780677065777e-16, 0.20573433293503565]}, {'': [-7.04903507698512e-18, 0.20573433293500257]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.07e-06, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1675375084372954;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.09652102812276717;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3789822684328446;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06052988748046453;  // std dev = 6.378, 252.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=51 */
%   | | | else return 0.01052988748046475;  // std dev = 3.683, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.004490398514146123;  // std dev = 4.526, 164.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14589526957800372;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.08436065565384063;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32633124836517574;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.18340385319677519;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1713375508852992;  // std dev = 2.867, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.024501224930428812;  // std dev = 6.740, 319.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 9.174242255316988E-4;  // std dev = 4.531, 169.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=24 */
%   | | | else return -0.14239855772446142;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.46e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12495104558004212;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.07304559196920257;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27009652261085065;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.15599733614673367;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14884896324368482;  // std dev = 2.867, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.021386689489304705;  // std dev = 6.740, 319.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=55 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12554532215376518;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.004642187305787533;  // std dev = 4.522, 164.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10541081651139844;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.06271788025136758;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21604312509939916;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.13015597951886929;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4194643536168253;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06976178002208291;  // std dev = 2.906, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.007028578435225433;  // std dev = 6.040, 302.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=43 */
%   | | | else return 0.03265249489982958;  // std dev = 5.171, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 1.88e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08776076336907687;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.0534508684114529;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17990560528038546;  // std dev = 3.496, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.09062671158049287;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.35749618712554454;  // std dev = 1.278, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.060426578712459475;  // std dev = 2.905, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006139069205938957;  // std dev = 6.040, 302.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=43 */
%   | | | else return 0.028333413795769178;  // std dev = 5.171, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948795;  // std dev = 3.15e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07225232751220573;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.04525844663405933;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1414352285020821;  // std dev = 3.500, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.07078115740162998;  // std dev = 2.723, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1449081150341607;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return -0.0754846705110302;  // std dev = 1.206, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005365707851553193;  // std dev = 6.040, 302.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=43 */
%   | | | else return 0.02450698574855206;  // std dev = 5.171, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.89e-07, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0589345451845841;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.03810814937740858;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3035383118544424;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06980982715631083;  // std dev = 4.247, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12266188757118839;  // std dev = 2.894, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return -0.06385278941464607;  // std dev = 1.210, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00469249407366815;  // std dev = 6.040, 302.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=43 */
%   | | | else return 0.02113790407054151;  // std dev = 5.171, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527728;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04770910891710004;  // std dev = 25.288, 2,993.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=926 */
%   | | | else return 0.03193504859301373;  // std dev = 5.588, 172.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.31631758118278486;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05395909309284175;  // std dev = 4.307, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.28368886999892684;  // std dev = 1.252, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0252008921870076;  // std dev = 2.851, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.040606955702884286;  // std dev = 2.757, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 2.7663230156735974E-5;  // std dev = 7.457, 430.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=66 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19223347200272953;  // std dev = 2.241, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.0382204764736029;  // std dev = 3.284, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else return 0.038530339699453436;  // std dev = 0.461, 3,165.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=979 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.09351070259872615;  // std dev = 2.875, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return -0.0713599620479849;  // std dev = 1.163, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00486253272530349;  // std dev = 6.037, 302.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=43 */
%   | | | else return 0.017923902475908835;  // std dev = 5.171, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #pos=252 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0308573126165759;  // std dev = 25.276, 3,002.000 (wgt'ed) examples reached here.  /* #neg=2,077 #pos=925 */
%   | | | else return 0.01809274743580177;  // std dev = 5.616, 163.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06407659613490986;  // std dev = 3.465, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.012019457831554616;  // std dev = 2.718, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11214420254170089;  // std dev = 2.792, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.1437518291906321;  // std dev = 0.249, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0042610943639877505;  // std dev = 6.102, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | | else return 0.0156514725705062;  // std dev = 5.215, 181.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=34 */


Results
   AUC ROC   = 0.577126
   AUC PR    = 0.709764
   CLL	      = -0.794281
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 494.185 seconds
Total inference time: 2.122 seconds
AUC ROC: 0.577126


Results scoring model
   AUC ROC   = 0.64586
   AUC PR    = 0.565087
   CLL	      = -0.563384
   Precision = 0.992248 at threshold = 0.5
   Recall    = 0.190052
   F1        = 0.319003


Total scoring time: 12.418 seconds
Refined model CLL: -0.563384


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.577126
   AUC PR    = 0.709764
   CLL	      = -0.794281
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 512.0269999999999 seconds
Total inference time: 2.122 seconds
AUC ROC: 0.577126
Total revision time: 512.0269999999999
Best scored revision CLL: -0.563384


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 06:57:48
{'AUC ROC': 0.577126, 'AUC PR': 0.709764, 'CLL': -0.794281, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 512.0269999999999, 'Inference time': 2.122, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.810078, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.125, 'Inference time': 0.786}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.14954359385321636;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.13034738423086556;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.11194919281662404;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.09487019688037553;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.07945776848817075;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.0658831950294664;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.054168686577335486;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.04422780389179243;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.03590640193572471;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else return 0.029016753610692916;  // std dev = 32.308, 5,055.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,473 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807858
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.494 seconds
Total inference time: 0.774 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589922
   AUC PR    = 0.523272
   CLL	      = -0.576064
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.179844
   F1        = 0.304861


Total scoring time: 1.361 seconds
Parameter learned model CLL: -0.576064


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-06, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 323], 'false': [32.308, 3, 1]}]]
[{'': [3.255737612770738e-15, 0.20648381160346269]}, {'': [-5.015595781836002e-15, 0.2064838116035744]}, {'': [-3.959680880396843e-16, 0.20648381160348567]}, {'': [-9.239255387592634e-16, 0.2064838116035538]}, {'': [-5.499556778328949e-16, 0.20648381160352355]}, {'': [4.509636558229738e-16, 0.2064838116035506]}, {'': [1.924844872415132e-16, 0.20648381160355206]}, {'': [2.3098138468981585e-16, 0.2064838116035272]}, {'': [-2.2273204952232243e-16, 0.20648381160352913]}, {'': [-2.0073382240900663e-16, 0.2064838116035494]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.03e-06, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16952618060848923;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.10043968399819113;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.425313114203989;  // std dev = 4.056, 67.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | | else return 0.26240425424844843;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.004275695662892538;  // std dev = 8.419, 568.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=83 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1476117824532774;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.08776804983333411;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.36530051424428595;  // std dev = 4.056, 67.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | | else return 0.22737026470343863;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12613172375972473;  // std dev = 3.060, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.051666244033952445;  // std dev = 1.343, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.059108556712728584;  // std dev = 3.422, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return 0.0037544205975294565;  // std dev = 8.419, 568.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=83 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12638173083859205;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.07595081923714399;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6147313990657531;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.22831455971543851;  // std dev = 5.108, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11520022791217921;  // std dev = 3.273, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.059286303933401806;  // std dev = 1.355, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002941961910756901;  // std dev = 7.136, 405.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=60 */
%   | | | else return 0.017304241540033773;  // std dev = 5.496, 224.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10656430523022566;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.06515012947912513;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.48112593649847357;  // std dev = 0.947, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.18405673757443283;  // std dev = 5.105, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.017399458219134113;  // std dev = 6.669, 324.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=54 */
%   | | | else return 0.003923428410600763;  // std dev = 4.184, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0168650837545068;  // std dev = 5.649, 235.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=38 */
%   | | | else return -0.14351836311244162;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08866256569339603;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.05545318903707497;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3790865702558799;  // std dev = 1.161, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.14387957614650865;  // std dev = 5.053, 106.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1072777856875059;  // std dev = 3.051, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.047597985684021515;  // std dev = 1.344, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 9.638406772496474E-4;  // std dev = 7.168, 404.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=61 */
%   | | | else return 0.012122607772311656;  // std dev = 5.576, 235.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07293764144661787;  // std dev = 29.316, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.04688156849277993;  // std dev = 6.456, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17251970636667843;  // std dev = 4.027, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | | | else return 0.05717783069523025;  // std dev = 3.242, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09556266685307532;  // std dev = 3.263, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.0015177832532761568;  // std dev = 7.133, 408.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=60 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01452976975988235;  // std dev = 5.637, 233.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=38 */
%   | | | else return -0.12700627532744455;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.059434906815626756;  // std dev = 29.292, 4,012.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,245 */
%   | | | else return 0.039167842716808475;  // std dev = 6.563, 223.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2810504016199735;  // std dev = 0.942, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08089799418289532;  // std dev = 5.075, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09086403544182725;  // std dev = 3.042, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.041802725712511334;  // std dev = 1.345, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0017828357880155475;  // std dev = 7.212, 410.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=62 */
%   | | | else return 0.011432637022634867;  // std dev = 5.505, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04815616398880942;  // std dev = 29.315, 4,008.000 (wgt'ed) examples reached here.  /* #neg=2,760 #pos=1,248 */
%   | | | else return 0.031718994041866566;  // std dev = 6.457, 227.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=55 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10924157735012358;  // std dev = 4.026, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | | | else return 0.02175109143184736;  // std dev = 3.223, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07674025723386342;  // std dev = 3.041, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.036800411060349016;  // std dev = 1.345, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029210894108177437;  // std dev = 3.397, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -7.382270883042199E-4;  // std dev = 8.411, 568.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=83 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.038744024051480384;  // std dev = 29.291, 4,012.000 (wgt'ed) examples reached here.  /* #neg=2,767 #pos=1,245 */
%   | | | else return 0.02558491071666806;  // std dev = 6.565, 223.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08867559015233248;  // std dev = 3.999, 67.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | | else return 0.006851903525214127;  // std dev = 3.247, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.17460483130478288;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.048654841113949306;  // std dev = 3.316, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.024848918365296988;  // std dev = 3.396, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -6.457682541309784E-4;  // std dev = 8.411, 568.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=83 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #pos=323 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.15643896586280484;  // std dev = 1.028, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03033730993441028;  // std dev = 29.999, 4,230.000 (wgt'ed) examples reached here.  /* #neg=2,929 #pos=1,301 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18181592888991138;  // std dev = 0.952, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.030949843435660557;  // std dev = 5.057, 106.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18188917192973195;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005294400250643205;  // std dev = 3.144, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006329446630033035;  // std dev = 7.048, 396.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=59 */
%   | | | else return 0.014252457579865332;  // std dev = 5.571, 233.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=37 */


Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.792981
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 699.028 seconds
Total inference time: 2.14 seconds
AUC ROC: 0.566463


Results scoring model
   AUC ROC   = 0.641994
   AUC PR    = 0.559578
   CLL	      = -0.565048
   Precision = 0.955556 at threshold = 0.5
   Recall    = 0.191537
   F1        = 0.319109


Total scoring time: 16.313 seconds
Refined model CLL: -0.565048


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566463
   AUC PR    = 0.701226
   CLL	      = -0.792981
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 722.196 seconds
Total inference time: 2.14 seconds
AUC ROC: 0.566463
Total revision time: 722.196
Best scored revision CLL: -0.565048


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:09:54
{'AUC ROC': 0.566463, 'AUC PR': 0.701226, 'CLL': -0.792981, 'Precision': [1.0, 0.5], 'Recall': 0.136187, 'F1': 0.239726, 'Learning time': 722.196, 'Inference time': 2.14, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807858, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.494, 'Inference time': 0.774}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 7.095 seconds
Total inference time: 0.747 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 1.549 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593332;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902616;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.579384807931358;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.28301269830657416;  // std dev = 5.657, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248217;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1276485314069231;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.47177128074187585;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23568743619292068;  // std dev = 5.655, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.0017388388470989046;  // std dev = 8.039, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009345128964586108;  // std dev = 6.180, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1411379214179515;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022602;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649288;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23818137312972212;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.15016151301688274;  // std dev = 3.705, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10350000778379959;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06721007502832631;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03866888558351641;  // std dev = 3.640, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013696051400872696;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117475;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827361;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19514870702193515;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10690738104051617;  // std dev = 3.679, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08422515063936485;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07206525315036082;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04081078002126314;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012029571935036842;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0736916231203277;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.0574502846558328;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.31324072272355574;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1094363119479449;  // std dev = 5.625, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.015425843327959134;  // std dev = 7.450, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.010798275142033366;  // std dev = 4.626, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008166280029623016;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12349761680567084;  // std dev = 0.008, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316845;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039102;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23588655247514298;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0838868198564621;  // std dev = 5.624, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08128129362809346;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06463157628059574;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.027286917362250536;  // std dev = 3.629, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018902360526218006;  // std dev = 9.357, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982655;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664083;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09932843138739493;  // std dev = 4.434, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.03162026210725967;  // std dev = 3.660, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06793623680249901;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.002029933867088476;  // std dev = 8.015, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0067908338937036385;  // std dev = 6.184, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.10997449993092212;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.038999069347984965;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014524;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08273558991240311;  // std dev = 4.445, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.0133126265066121;  // std dev = 3.637, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19233408125775595;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008178655562960956;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.015506668298936085;  // std dev = 3.622, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016678702526404822;  // std dev = 9.355, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859772;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290245;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06390060094368333;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.008166761335456055;  // std dev = 3.634, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06390690279934612;  // std dev = 3.492, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06205182339443326;  // std dev = 1.336, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0034120915989246624;  // std dev = 8.007, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006168533253589256;  // std dev = 6.044, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */


Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791171
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 860.54 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.566386


Results scoring model
   AUC ROC   = 0.63848
   AUC PR    = 0.553475
   CLL	      = -0.566873
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 20.938 seconds
Refined model CLL: -0.566873


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791171
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 890.122 seconds
Total inference time: 2.258 seconds
AUC ROC: 0.566386
Total revision time: 890.122
Best scored revision CLL: -0.566873


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 07:24:47
{'AUC ROC': 0.566386, 'AUC PR': 0.701208, 'CLL': -0.791171, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 890.122, 'Inference time': 2.258, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 7.095, 'Inference time': 0.747}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.2814239093528546;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.2436036812478897;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.20486772832443176;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.16789179701697263;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.13467901286638115;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.10626215352336507;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.08282097855296555;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.06398581782334359;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.04912754582476254;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else return 0.037554557914413735;  // std dev = 15.396, 971.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=411 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.562273
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1.715 seconds
Total inference time: 0.889 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.578029
   AUC PR    = 0.613203
   CLL	      = -0.642662
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.156057
   F1        = 0.269982


Total scoring time: 0.97 seconds
Parameter learned model CLL: -0.642662


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 76], 'false': [15.396, 560, 411]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.37e-08, 0, 76], 'false': [15.396, 560, 411]}]]
[{'': [-1.3088945132422897e-15, 0.2441132704241624]}, {'': [5.609547913895527e-16, 0.2441132704241856]}, {'': [1.402386978473882e-15, 0.24411327042418296]}, {'': [-9.349246523159212e-17, 0.24411327042418285]}, {'': [-3.8565641908031755e-16, 0.24411327042418146]}, {'': [-1.1686558153949016e-17, 0.24411327042418202]}, {'': [-9.933574430856664e-17, 0.24411327042418102]}, {'': [1.1686558153949016e-17, 0.2441132704241781]}, {'': [7.596262800066861e-17, 0.2441132704241749]}, {'': [3.7981314000334304e-17, 0.24411327042416972]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2964722883929208;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.6081489350995123;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09624417319475047;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04810106490048779;  // std dev = 1.649, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.06e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25642338582550395;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7825276830227569;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4422392753357079;  // std dev = 2.571, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3005700856794747;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.06942546906761912;  // std dev = 3.138, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04234600794187315;  // std dev = 1.649, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.26e-07, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2151215569338686;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.42518568034386267;  // std dev = 1.928, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.3115483165976149;  // std dev = 1.724, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06890796475346744;  // std dev = 3.358, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.3811576871554439;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009946352110153284;  // std dev = 1.848, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return -0.1512086987612421;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17562346961190997;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5372365373974141;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.268694675820692;  // std dev = 2.556, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.24609280336515885;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04485125649064667;  // std dev = 3.108, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.008791546072513727;  // std dev = 1.849, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return -0.13291079071777698;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14022280011048235;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4046307491300505;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20314113115179827;  // std dev = 2.555, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04604462191657961;  // std dev = 3.336, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.2998149136699694;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.15739908311138673;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03363402780666681;  // std dev = 1.646, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1100790344593751;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.20392010513586495;  // std dev = 1.921, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.1105009628640486;  // std dev = 1.685, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01926993035877217;  // std dev = 2.885, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.31374441920625;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.18200309681416757;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0013739813729839422;  // std dev = 2.209, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08536428607109267;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1543253681622895;  // std dev = 1.921, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.08345982251302239;  // std dev = 1.686, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.19346412282470535;  // std dev = 1.642, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.1402028472154644;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05046658295791421;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.01653601501282708;  // std dev = 3.435, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.98e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3415955546470388;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.04026781425061927;  // std dev = 1.403, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06289266244721803;  // std dev = 14.155, 815.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=355 */
%   | | | else return 0.08525476735063917;  // std dev = 2.402, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024472191144628598;  // std dev = 3.275, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.22499300842218456;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.00874013703200696;  // std dev = 1.841, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return -0.11308722361201505;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04985199885088866;  // std dev = 0.496, 835.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=366 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.16790236059398514;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06521267935688124;  // std dev = 2.403, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.14932424201436556;  // std dev = 1.641, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.12388191402306808;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.042248960901001706;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.009048863915207614;  // std dev = 3.418, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.32424723354696117;  // std dev = 1.464, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.0374436263197238;  // std dev = 1.834, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.04921589334749652;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1602242257156331;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.03617869200602442;  // std dev = 14.155, 815.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=355 */
%   | | | else return 0.05012715772564321;  // std dev = 2.404, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.013823161170462313;  // std dev = 3.013, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return -0.011746264725034096;  // std dev = 1.848, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */


Results
   AUC ROC   = 0.622728
   AUC PR    = 0.42089
   CLL	      = -0.5435
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 108.309 seconds
Total inference time: 1.37 seconds
AUC ROC: 0.622728


Results scoring model
   AUC ROC   = 0.643741
   AUC PR    = 0.665052
   CLL	      = -0.619552
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.221766
   F1        = 0.355848


Total scoring time: 1.424 seconds
Refined model CLL: -0.619552


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622728
   AUC PR    = 0.42089
   CLL	      = -0.5435
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 112.418 seconds
Total inference time: 1.37 seconds
AUC ROC: 0.622728
Total revision time: 112.418
Best scored revision CLL: -0.619552


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:26:43
{'AUC ROC': 0.622728, 'AUC PR': 0.42089, 'CLL': -0.5435, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 112.418, 'Inference time': 1.37, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.562273, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1.715, 'Inference time': 0.889}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.27903828360002436;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.24156940306748378;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.2032356654538065;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.16665532433887909;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.13378745578662096;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.10564496846457526;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.08240793523516568;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.06371763095070922;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.048958734698393874;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else return 0.037452211889406645;  // std dev = 21.712, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=814 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560249
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.375 seconds
Total inference time: 0.932 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582136
   AUC PR    = 0.61899
   CLL	      = -0.639841
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164271
   F1        = 0.282187


Total scoring time: 1.08 seconds
Parameter learned model CLL: -0.639841


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1e-06, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.62e-07, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 160], 'false': [21.712, 1, 814]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 160], 'false': [21.712, 1, 814]}]]
[{'': [6.306066779870889e-15, 0.24374150481935125]}, {'': [-2.7533531010703883e-15, 0.24374150481933973]}, {'': [1.909583602355269e-15, 0.243741504819311]}, {'': [1.2656542480726785e-15, 0.2437415048193056]}, {'': [5.995204332975846e-16, 0.24374150481931564]}, {'': [-2.220446049250313e-16, 0.24374150481932097]}, {'': [4.274358644806853e-16, 0.2437415048193204]}, {'': [-3.164135620181696e-16, 0.24374150481931114]}, {'': [-2.3869795029440865e-16, 0.24374150481933324]}, {'': [5.2735593669694933e-17, 0.2437415048193359]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.00e-06, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2954205550751468;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4831489350995114;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return 0.5010060779566552;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20597502205603316;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.07892815587873316;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027163019606554626;  // std dev = 3.158, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25552811107597306;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.41365732870831184;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return 0.4285227559352606;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17900772288295236;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.06904606590247302;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023824207111351053;  // std dev = 3.158, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2144072192990878;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5116053739648668;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32764781720845565;  // std dev = 3.853, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.15238217752655298;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.05994387298826515;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1302440688179762;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020486872849250527;  // std dev = 3.155, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.50e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17508688312446574;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2969547595707203;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.26309988756718095;  // std dev = 3.800, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12730547512046397;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.05168803174205984;  // std dev = 3.640, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019011176932606663;  // std dev = 3.155, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.10820226032633766;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 3.10e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.39822031291308674;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.043576640602623735;  // std dev = 1.960, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13754013651093944;  // std dev = 19.873, 1,607.000 (wgt'ed) examples reached here.  /* #neg=908 #pos=699 */
%   | | | else return 0.20022873169143277;  // std dev = 3.800, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09142356378430572;  // std dev = 4.649, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.02178276530703371;  // std dev = 2.699, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11266147189552043;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.01618237470232357;  // std dev = 3.153, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949056;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10963473262308329;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21483633349876693;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.15066986774779773;  // std dev = 3.800, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16176919313954846;  // std dev = 1.720, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.05103834249135249;  // std dev = 5.086, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015081378094047117;  // std dev = 3.153, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.09526560333244087;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.62e-07, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0850491467225421;  // std dev = 0.496, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2475297231477051;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10696563777235837;  // std dev = 3.853, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.039640319799155666;  // std dev = 5.016, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
%   | | | else return 0.1431696299706339;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013107636885207117;  // std dev = 3.153, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.08737680680109676;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2547783258744949;  // std dev = 2.364, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.09105395059447628;  // std dev = 1.654, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06383290986933778;  // std dev = 19.873, 1,607.000 (wgt'ed) examples reached here.  /* #neg=908 #pos=699 */
%   | | | else return 0.084231603134075;  // std dev = 3.797, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1778815882860375;  // std dev = 1.924, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.06482631525945873;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04453974480888488;  // std dev = 1.842, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.01772383550390281;  // std dev = 5.521, 178.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=40 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04979379339149614;  // std dev = 0.495, 1,642.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=718 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.17604042818160567;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06292225845295808;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0539524258025157;  // std dev = 4.632, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return -0.017461446117568193;  // std dev = 2.657, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.008138104158562004;  // std dev = 3.155, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return -0.08007760007199242;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 160.000 (wgt'ed) examples reached here.  /* #pos=160 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.2883193925422441;  // std dev = 1.882, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.03365529223560247;  // std dev = 2.285, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.19581496940651513;  // std dev = 1.245, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.2013998477709391;  // std dev = 1.014, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.03694829458657298;  // std dev = 19.873, 1,607.000 (wgt'ed) examples reached here.  /* #neg=908 #pos=699 */
%   | | | else return 0.04646137391939753;  // std dev = 3.796, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020737977862867456;  // std dev = 4.623, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
%   | | | else return 0.0010027362864640274;  // std dev = 3.526, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */


Results
   AUC ROC   = 0.62288
   AUC PR    = 0.421363
   CLL	      = -0.54263
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 204.628 seconds
Total inference time: 1.58 seconds
AUC ROC: 0.62288


Results scoring model
   AUC ROC   = 0.636573
   AUC PR    = 0.659104
   CLL	      = -0.623436
   Precision = 0.883065 at threshold = 0.5
   Recall    = 0.224846
   F1        = 0.358429


Total scoring time: 2.441 seconds
Refined model CLL: -0.623436


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.62288
   AUC PR    = 0.421363
   CLL	      = -0.54263
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 210.524 seconds
Total inference time: 1.58 seconds
AUC ROC: 0.62288
Total revision time: 210.524
Best scored revision CLL: -0.623436


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:30:17
{'AUC ROC': 0.62288, 'AUC PR': 0.421363, 'CLL': -0.54263, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 210.524, 'Inference time': 1.58, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560249, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.375, 'Inference time': 0.932}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.27823868311469535;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.2408874450582616;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.16e-08, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.20268824004045966;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.16624022548052578;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.53e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.13348783605585152;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.10543733785951818;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.08226885755067878;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1.30e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.06362727541073988;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.048901852425410716;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.30e-08, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else return 0.03741774452094607;  // std dev = 26.566, 2,897.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,217 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559575
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.075 seconds
Total inference time: 0.942 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583504
   AUC PR    = 0.620898
   CLL	      = -0.638896
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167009
   F1        = 0.286217


Total scoring time: 1.315 seconds
Parameter learned model CLL: -0.638896


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.16e-08, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-07, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.3e-07, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 244], 'false': [26.566, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 244], 'false': [26.566, 1, 1]}]]
[{'': [4.77577904363346e-15, 0.24361435162774916]}, {'': [-4.309849380839952e-15, 0.24361435162773862]}, {'': [9.90100533436205e-16, 0.24361435162772999]}, {'': [-2.3296483139675417e-16, 0.24361435162772402]}, {'': [2.620854353213484e-16, 0.24361435162770623]}, {'': [3.8584800200087406e-16, 0.2436143516276937]}, {'': [3.4216709611398266e-16, 0.2436143516277136]}, {'': [6.91614343209114e-17, 0.24361435162774234]}, {'': [-1.7472362354756562e-16, 0.24361435162773606]}, {'': [2.1840452943445702e-17, 0.24361435162770623]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29676682127836906;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.439967116917693;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.4970378239884004;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.22089403313872663;  // std dev = 4.856, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.056262142646681924;  // std dev = 4.104, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.053461435099511775;  // std dev = 4.485, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25667408446787654;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37758322384456416;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.4252219791951284;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09281450807056126;  // std dev = 5.914, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
%   | | | else return 0.35393897604936864;  // std dev = 2.284, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04682818175076765;  // std dev = 4.485, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.92e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21532154180846425;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3072064233595729;  // std dev = 3.591, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.3474934472138483;  // std dev = 2.964, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.317870469885652;  // std dev = 2.226, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.07910618388128049;  // std dev = 5.923, 188.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=48 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.040809405505974866;  // std dev = 4.485, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583108;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17577363701192153;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23889132045912853;  // std dev = 3.650, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.27699641444341;  // std dev = 2.888, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1501947750077776;  // std dev = 4.797, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.035402917210169346;  // std dev = 4.485, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025082051198231134;  // std dev = 4.110, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.53e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14032995205971888;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.26508564461507983;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1891912814193798;  // std dev = 4.511, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12404580341491893;  // std dev = 4.792, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.03058949027882841;  // std dev = 4.485, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08531939916770188;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.02280926204530422;  // std dev = 3.997, 104.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 3.07e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11015247017317195;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.13103437697170353;  // std dev = 3.581, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.16925772217724236;  // std dev = 2.968, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04640667090120641;  // std dev = 6.156, 209.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=53 */
%   | | | else return 0.18850778015771003;  // std dev = 2.255, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.019714911898361918;  // std dev = 4.106, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | | | else return -0.09374078570587116;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08541305084814162;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1746717320413662;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1055050898808452;  // std dev = 4.513, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.08636736868479862;  // std dev = 4.776, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.019552246285161078;  // std dev = 4.486, 128.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15205136191552573;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01821359613342289;  // std dev = 4.091, 109.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452774;  // std dev = 1.30e-07, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0656647343443872;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06967857482352467;  // std dev = 3.645, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.10231474816990539;  // std dev = 2.887, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.030199648130424698;  // std dev = 6.147, 209.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=53 */
%   | | | else return 0.13547199832136303;  // std dev = 2.251, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07807229750751978;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.016330607031800684;  // std dev = 3.987, 104.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05018485981189341;  // std dev = 0.496, 2,460.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,079 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.04789364683558139;  // std dev = 3.572, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.08275667282434189;  // std dev = 2.973, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017276950069918313;  // std dev = 5.817, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
%   | | | else return 0.19871265080835143;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09500464979918516;  // std dev = 0.958, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.0173165832732663;  // std dev = 4.374, 123.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 7.30e-08, 244.000 (wgt'ed) examples reached here.  /* #pos=244 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.28529511024296733;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return -0.12708016167252897;  // std dev = 2.032, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03627654889563196;  // std dev = 24.343, 2,409.000 (wgt'ed) examples reached here.  /* #neg=1,357 #pos=1,052 */
%   | | | else return 0.04283537256962007;  // std dev = 4.510, 85.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014228095825114825;  // std dev = 5.816, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
%   | | | else return 0.15379733436061463;  // std dev = 2.266, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08269294182804302;  // std dev = 0.958, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.014779853583294625;  // std dev = 4.374, 123.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */


Results
   AUC ROC   = 0.622866
   AUC PR    = 0.421284
   CLL	      = -0.545272
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 338.568 seconds
Total inference time: 1.468 seconds
AUC ROC: 0.622866


Results scoring model
   AUC ROC   = 0.637755
   AUC PR    = 0.65934
   CLL	      = -0.624401
   Precision = 0.892537 at threshold = 0.5
   Recall    = 0.204654
   F1        = 0.332962


Total scoring time: 2.931 seconds
Refined model CLL: -0.624401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622866
   AUC PR    = 0.421284
   CLL	      = -0.545272
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 345.88899999999995 seconds
Total inference time: 1.468 seconds
AUC ROC: 0.622866
Total revision time: 345.88899999999995
Best scored revision CLL: -0.624401


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:36:05
{'AUC ROC': 0.622866, 'AUC PR': 0.421284, 'CLL': -0.545272, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 345.88899999999995, 'Inference time': 1.468, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559575, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.075, 'Inference time': 0.942}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.27933756559046324;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.24182463720540787;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.20344050934554328;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.1668106054970346;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.13389949769908013;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.10572258311149904;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.08245990790483408;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.06375138934001698;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.048979985724695654;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.03746509106106452;  // std dev = 30.716, 3,870.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,630 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560502
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.198 seconds
Total inference time: 0.91 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581622
   AUC PR    = 0.618271
   CLL	      = -0.640195
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.163244
   F1        = 0.280671


Total scoring time: 1.211 seconds
Parameter learned model CLL: -0.640195


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [30.716, 2, 1]}]]
[{'': [3.4856813452382273e-15, 0.2437887680360621]}, {'': [-5.005080905983095e-15, 0.24378876803604474]}, {'': [-3.5750577899879257e-16, 0.24378876803611838]}, {'': [-9.161085586844059e-16, 0.2437887680361083]}, {'': [-4.692263349359152e-16, 0.24378876803613256]}, {'': [4.468822237484907e-16, 0.24378876803611652]}, {'': [1.8992494509310855e-16, 0.24378876803608734]}, {'': [2.2344111187424534e-16, 0.24378876803613703]}, {'': [-2.2344111187424534e-16, 0.24378876803609076]}, {'': [-1.8992494509310855e-16, 0.24378876803608393]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2979791866908985;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.43472551167608986;  // std dev = 5.206, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.24276431971489792;  // std dev = 5.547, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | | else return 0.050695518950443115;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.044815601766178284;  // std dev = 4.772, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25770593151776455;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5392296928737088;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3715952261031927;  // std dev = 5.203, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2105717177991739;  // std dev = 5.547, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | | else return 0.04441163907694578;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03927218032611472;  // std dev = 4.772, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.216144440349016;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3205590625653275;  // std dev = 4.009, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return 0.30398211213499443;  // std dev = 3.547, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17819907632636486;  // std dev = 5.547, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | | else return 0.038719272221305764;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09121714735231809;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.03788503146631365;  // std dev = 4.669, 144.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17639129562486416;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.36383162264864755;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.23833194850944;  // std dev = 5.202, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14748280921895493;  // std dev = 5.547, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | | else return 0.03361157548670459;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.031056076285373053;  // std dev = 4.766, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
%   | | | else return -0.11500295319065729;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14077047727437278;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19434233714929586;  // std dev = 4.217, 74.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   | | | else return 0.1810482114158105;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05400305635062906;  // std dev = 6.957, 261.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=67 */
%   | | | else return 0.2052090670701741;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02693247255455694;  // std dev = 4.766, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
%   | | | else return -0.10380766267405823;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11045425195575376;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2513260211843557;  // std dev = 1.200, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13549055724565778;  // std dev = 5.200, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.037218399935689726;  // std dev = 6.753, 252.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=63 */
%   | | | else return 0.2641699258693707;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0214070906477982;  // std dev = 5.004, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.09454075954131848;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08561338934955952;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.18904001906512824;  // std dev = 1.201, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.10191238114593365;  // std dev = 5.200, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03105676675537878;  // std dev = 6.752, 252.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=63 */
%   | | | else return 0.20903447384292834;  // std dev = 2.616, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01834913523112499;  // std dev = 5.004, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.08675294063753848;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06579430198738326;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0847165849909931;  // std dev = 4.222, 74.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=44 */
%   | | | else return 0.07483361419832857;  // std dev = 3.270, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.15183291706597846;  // std dev = 2.696, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.02637564531772169;  // std dev = 6.889, 260.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=68 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09314963123381452;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.01872790830355567;  // std dev = 4.658, 144.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0502665926817153;  // std dev = 0.496, 3,299.000 (wgt'ed) examples reached here.  /* #neg=1,848 #pos=1,451 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06497438947707376;  // std dev = 4.012, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return 0.05552949717648154;  // std dev = 3.524, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.020224605490704563;  // std dev = 6.731, 252.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=63 */
%   | | | else return 0.1555079912970245;  // std dev = 2.614, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011101750115571385;  // std dev = 5.005, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.08085621579870785;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.3705439620737284;  // std dev = 2.876, 46.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | | | else return 0.055904648662029204;  // std dev = 2.902, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.06443752243218277;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.21190868324849566;  // std dev = 1.486, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.0364222899941864;  // std dev = 28.180, 3,226.000 (wgt'ed) examples reached here.  /* #neg=1,813 #pos=1,413 */
%   | | | else return 0.04026027133958354;  // std dev = 5.199, 111.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=64 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020348385562006348;  // std dev = 6.817, 250.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=68 */
%   | | | else return 0.005322384310740065;  // std dev = 4.683, 152.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=27 */


Results
   AUC ROC   = 0.622458
   AUC PR    = 0.420515
   CLL	      = -0.545166
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 434.617 seconds
Total inference time: 1.502 seconds
AUC ROC: 0.622458


Results scoring model
   AUC ROC   = 0.635063
   AUC PR    = 0.655839
   CLL	      = -0.625303
   Precision = 0.887872 at threshold = 0.5
   Recall    = 0.199179
   F1        = 0.325367


Total scoring time: 3.4 seconds
Refined model CLL: -0.625303


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.622458
   AUC PR    = 0.420515
   CLL	      = -0.545166
   Precision = 0.84252 at threshold = 0.5
   Recall    = 0.184165
   F1        = 0.30226


Total learning time: 443.426 seconds
Total inference time: 1.502 seconds
AUC ROC: 0.622458
Total revision time: 443.426
Best scored revision CLL: -0.625303


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 07:43:32
{'AUC ROC': 0.622458, 'AUC PR': 0.420515, 'CLL': -0.545166, 'Precision': [0.84252, 0.5], 'Recall': 0.184165, 'F1': 0.30226, 'Learning time': 443.426, 'Inference time': 1.502, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560502, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.198, 'Inference time': 0.91}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.08 seconds
Total inference time: 0.914 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 1.348 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5723011334923009;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3627563419854591;  // std dev = 5.925, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.49880130934987527;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.29541334709163836;  // std dev = 5.918, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38879169496533694;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23333753595545717;  // std dev = 5.917, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19940191364702797;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1670996628400862;  // std dev = 3.843, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598454;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508096;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.24482009007711936;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.13482620051706817;  // std dev = 5.915, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751086;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2283906622842639;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094521;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551097;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11630246542431319;  // std dev = 4.679, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09174011784863051;  // std dev = 3.829, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830461;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960783;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25051959821536446;  // std dev = 4.043, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.19997015176175972;  // std dev = 2.219, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06520486116477162;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.0750067504865272;  // std dev = 5.913, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026593228785955356;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06777294304188584;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01424958428630278;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19051966932718264;  // std dev = 4.042, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.1543798424982658;  // std dev = 2.219, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08803163957419105;  // std dev = 4.965, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.04910419331732051;  // std dev = 31.680, 4,076.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=1,804 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.1368243325647754;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322235;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.06923665802894197;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005848;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.35089328363068756;  // std dev = 21.446, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.3580547013610187;  // std dev = 7.801, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13186295160782457;  // std dev = 2.858, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.024751129820898044;  // std dev = 4.715, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04434371126128051;  // std dev = 6.303, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.1716131378869498;  // std dev = 1.032, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5062022154397001;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08535272928885211;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.895447
   AUC PR    = 0.776619
   CLL	      = -0.449866
   Precision = 0.912281 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.299281


Total learning time: 1039.963 seconds
Total inference time: 2.068 seconds
AUC ROC: 0.895447


Results scoring model
   AUC ROC   = 0.874878
   AUC PR    = 0.848103
   CLL	      = -0.532286
   Precision = 0.935599 at threshold = 0.5
   Recall    = 0.214696
   F1        = 0.349249


Total scoring time: 9.818 seconds
Refined model CLL: -0.532286


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895447
   AUC PR    = 0.776619
   CLL	      = -0.449866
   Precision = 0.912281 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.299281


Total learning time: 1056.209 seconds
Total inference time: 2.068 seconds
AUC ROC: 0.895447
Total revision time: 1056.209
Best scored revision CLL: -0.532286


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 08:01:12
{'AUC ROC': 0.895447, 'AUC PR': 0.776619, 'CLL': -0.449866, 'Precision': [0.912281, 0.5], 'Recall': 0.179002, 'F1': 0.299281, 'Learning time': 1056.209, 'Inference time': 2.068, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.08, 'Inference time': 0.914}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.18408750165240848;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.16016920822851685;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.58e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.1368193251375332;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.11494119318194343;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.09517110515294583;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.07784606955185833;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.06304162069399541;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.050644075472968106;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.04042610927707997;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else return 0.03210839199826491;  // std dev = 16.047, 1,172.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=382 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.636984
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 1.869 seconds
Total inference time: 0.788 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.579295
   AUC PR    = 0.532125
   CLL	      = -0.603499
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.15859
   F1        = 0.273764


Total scoring time: 1.039 seconds
Parameter learned model CLL: -0.603499


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.58e-08, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.83e-08, 0, 72], 'false': [16.047, 790, 382]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 72], 'false': [16.047, 790, 382]}]]
[{'': [-1.282924384011292e-15, 0.21970261738632407]}, {'': [3.9474596431116675e-16, 0.21970261738634173]}, {'': [6.41462192005646e-16, 0.2197026173863422]}, {'': [-9.868649107779169e-17, 0.21970261738634808]}, {'': [-3.4540271877227093e-16, 0.21970261738633445]}, {'': [-1.2335811384723961e-17, 0.21970261738634625]}, {'': [-8.635067969306773e-17, 0.21970261738634153]}, {'': [6.1679056923619804e-18, 0.21970261738634686]}, {'': [6.47630097698008e-17, 0.21970261738634075]}, {'': [3.39234813079909e-17, 0.21970261738634894]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995128;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.005487428536851416;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.21427138407909938;  // std dev = 0.479, 980.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=349 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004216350829849429;  // std dev = 3.332, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return -0.009775593202374476;  // std dev = 2.465, 53.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 1.69e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18427434104305115;  // std dev = 0.478, 1,014.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=359 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05154258263854086;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.024868187516100856;  // std dev = 1.580, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.004624023893100348;  // std dev = 3.830, 124.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.15e-07, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15670845507902864;  // std dev = 0.478, 1,014.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=359 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0456407429776432;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.004998868242870951;  // std dev = 3.333, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return -0.010490229376764217;  // std dev = 2.463, 53.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3178254900672823;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.051415683736613274;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else return 0.13251146141363201;  // std dev = 0.479, 980.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=349 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.009562078092567582;  // std dev = 3.053, 81.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return 0.13031640514851392;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007080051930933165;  // std dev = 2.733, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.14063019787800946;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44485312251183917;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.03139920387779213;  // std dev = 1.466, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.1034566996465795;  // std dev = 0.476, 990.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=347 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09166746734827896;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1412609852210153;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00975237363505886;  // std dev = 3.529, 97.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.026021634576376126;  // std dev = 2.050, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08655798828809022;  // std dev = 0.477, 1,014.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=359 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.008310313600208894;  // std dev = 3.046, 81.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return 0.11233873748395778;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.1292888037516183;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.008574639494594829;  // std dev = 2.725, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2140972712780977;  // std dev = 1.611, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.09005576544546216;  // std dev = 1.668, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.07077915470349652;  // std dev = 0.478, 980.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=349 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08450677408477061;  // std dev = 1.506, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.11575136783713809;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006464636741759055;  // std dev = 3.524, 97.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.021979379155196006;  // std dev = 2.051, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 2.11e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05484687728179153;  // std dev = 0.476, 1,014.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=359 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.007408659261811218;  // std dev = 3.040, 81.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | | else return 0.09568796489271358;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.11319010480809122;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0068776508400897815;  // std dev = 2.724, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936706;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3041818979241655;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.013450493919566724;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.040449678431516804;  // std dev = 0.476, 990.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=347 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07728499754114639;  // std dev = 1.500, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.0976965787223168;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029338393698235418;  // std dev = 1.444, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.006871254173698175;  // std dev = 3.809, 124.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22998993500352397;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.010722409353329394;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.031746067398454064;  // std dev = 0.476, 990.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=347 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06700334347427786;  // std dev = 1.499, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.08942800800566415;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004097895876750537;  // std dev = 3.519, 97.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
%   | | | else return -0.01822471544511229;  // std dev = 2.051, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */


Results
   AUC ROC   = 0.603014
   AUC PR    = 0.586511
   CLL	      = -0.628469
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 41.895 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.603014


Results scoring model
   AUC ROC   = 0.644627
   AUC PR    = 0.578473
   CLL	      = -0.584361
   Precision = 0.952941 at threshold = 0.5
   Recall    = 0.178414
   F1        = 0.300557


Total scoring time: 1.315 seconds
Refined model CLL: -0.584361


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603014
   AUC PR    = 0.586511
   CLL	      = -0.628469
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 46.118 seconds
Total inference time: 1.167 seconds
AUC ROC: 0.603014
Total revision time: 46.118
Best scored revision CLL: -0.584361


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:02:00
{'AUC ROC': 0.603014, 'AUC PR': 0.586511, 'CLL': -0.628469, 'Precision': [0.946565, 0.5], 'Recall': 0.165997, 'F1': 0.28246, 'Learning time': 46.118, 'Inference time': 1.167, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.636984, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 1.869, 'Inference time': 0.788}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.46e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.18135098989402781;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.1578107823046794;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.28e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.13486290085969838;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.62e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.11337618219481217;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.89e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.09396056943236783;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.0769381536307841;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.49e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.062380025109438235;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.05017540215018806;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.0401038460022113;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.99e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else return 0.031894314428870287;  // std dev = 22.605, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=755 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637827
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.778 seconds
Total inference time: 0.825 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.584251
   AUC PR    = 0.540051
   CLL	      = -0.599791
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168502
   F1        = 0.288407


Total scoring time: 1.142 seconds
Parameter learned model CLL: -0.599791


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.46e-07, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.28e-08, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.62e-07, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 153], 'false': [22.605, 1, 755]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.99e-08, 0, 153], 'false': [22.605, 1, 755]}]]
[{'': [5.851528412142001e-15, 0.21874248657114492]}, {'': [-2.507797890918001e-15, 0.21874248657112813]}, {'': [1.8576280673466673e-15, 0.21874248657110504]}, {'': [1.3932210505100003e-15, 0.2187424865711343]}, {'': [5.456782447830835e-16, 0.21874248657111578]}, {'': [-1.8576280673466672e-16, 0.21874248657112016]}, {'': [4.0635613973208343e-16, 0.21874248657111997]}, {'': [-3.0766964865429174e-16, 0.2187424865711257]}, {'': [-3.773307011797918e-17, 0.2187424865711233]}, {'': [3.192798240752084e-17, 0.218742486571133]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.46e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20575849685249534;  // std dev = 0.476, 2,008.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=698 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.08117051783332424;  // std dev = 4.908, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return -0.01281880683597155;  // std dev = 2.640, 62.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009409439301193045;  // std dev = 3.909, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39642940759238937;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.08762227269829746;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.21216439724042271;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.17693692335122763;  // std dev = 20.638, 1,883.000 (wgt'ed) examples reached here.  /* #neg=1,232 #pos=651 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.009191047912662498;  // std dev = 4.657, 187.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.13972620704515668;  // std dev = 2.522, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.15152165236600718;  // std dev = 2.498, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.02489308278324971;  // std dev = 3.395, 80.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.33e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15219336829189023;  // std dev = 0.476, 2,008.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.00806922278401282;  // std dev = 4.657, 187.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.12096977383417853;  // std dev = 2.522, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.06627881549765904;  // std dev = 4.209, 102.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return -0.13561675814999183;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830886;  // std dev = 4.62e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.30515007876185585;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.05126251702152911;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15475060593751166;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.1256296264852099;  // std dev = 20.638, 1,883.000 (wgt'ed) examples reached here.  /* #neg=1,232 #pos=651 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.007090393449521673;  // std dev = 4.657, 187.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.10326842382637598;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.12507085228838571;  // std dev = 2.486, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.013991067189604528;  // std dev = 3.391, 80.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.89e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10445423667785007;  // std dev = 0.476, 2,008.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.006234970229993667;  // std dev = 4.657, 187.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.0870576059755013;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05083551436236386;  // std dev = 4.198, 102.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return -0.1284777882515738;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949045;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08473051648198952;  // std dev = 0.476, 2,008.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1151971569712446;  // std dev = 2.299, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.08466604356479426;  // std dev = 0.925, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.035312407750035586;  // std dev = 2.222, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.00582910319591131;  // std dev = 5.880, 258.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325352;  // std dev = 2.49e-07, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1925150292392222;  // std dev = 2.611, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return -0.019061619882971313;  // std dev = 2.470, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else return 0.06761543694809416;  // std dev = 0.476, 1,946.000 (wgt'ed) examples reached here.  /* #neg=1,271 #pos=675 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.096786003747403;  // std dev = 2.295, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.07285709407045847;  // std dev = 0.926, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005008095764243518;  // std dev = 4.928, 173.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=30 */
%   | | | else return 0.01235017878006356;  // std dev = 3.903, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.336383042038475;  // std dev = 2.384, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return -0.10455471547555632;  // std dev = 2.526, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else return 0.05368482684200923;  // std dev = 0.475, 1,943.000 (wgt'ed) examples reached here.  /* #neg=1,269 #pos=674 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.00809680447904253;  // std dev = 4.657, 187.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=25 */
%   | | | else return 0.07054645660010707;  // std dev = 2.521, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03618176986111662;  // std dev = 4.172, 102.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return -0.1178651580367066;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.023546077148546122;  // std dev = 3.415, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.35212660106893756;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04243746608295764;  // std dev = 0.475, 1,946.000 (wgt'ed) examples reached here.  /* #neg=1,271 #pos=675 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07641945033249174;  // std dev = 2.285, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.06397434935617968;  // std dev = 0.925, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 2.3155431340543542E-4;  // std dev = 4.922, 173.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=30 */
%   | | | else return 0.012053476410599062;  // std dev = 3.903, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 6.99e-08, 153.000 (wgt'ed) examples reached here.  /* #pos=153 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03357433134649402;  // std dev = 0.475, 2,008.000 (wgt'ed) examples reached here.  /* #neg=1,310 #pos=698 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.01681762612878424;  // std dev = 4.589, 158.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=25 */
%   | | | else return -0.039624011581096914;  // std dev = 2.640, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.028248267576350822;  // std dev = 4.163, 102.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=23 */
%   | | | else return -0.10764417427540061;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.600561
   AUC PR    = 0.584026
   CLL	      = -0.629725
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 101.80799999999999 seconds
Total inference time: 1.266 seconds
AUC ROC: 0.600561


Results scoring model
   AUC ROC   = 0.642268
   AUC PR    = 0.581516
   CLL	      = -0.586712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168502
   F1        = 0.288407


Total scoring time: 1.687 seconds
Refined model CLL: -0.586712


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600561
   AUC PR    = 0.584026
   CLL	      = -0.629725
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 107.41499999999999 seconds
Total inference time: 1.266 seconds
AUC ROC: 0.600561
Total revision time: 107.41499999999999
Best scored revision CLL: -0.586712


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:03:51
{'AUC ROC': 0.600561, 'AUC PR': 0.584026, 'CLL': -0.629725, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 107.41499999999999, 'Inference time': 1.266, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637827, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.778, 'Inference time': 0.825}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.18236545931603143;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.1586851698728439;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.94e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.13558845541029943;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.11395685601581798;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601495;  // std dev = 3.37e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.09441001145277268;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.0772755077861682;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.06262608126149884;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 2.98e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.05034989257757229;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.040223974174915654;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.03197423276944143;  // std dev = 27.732, 3,510.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,138 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63751
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.704 seconds
Total inference time: 0.832 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582232
   AUC PR    = 0.536744
   CLL	      = -0.601243
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164464
   F1        = 0.282472


Total scoring time: 1.236 seconds
Parameter learned model CLL: -0.601243


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.94e-08, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [27.732, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 224], 'false': [27.732, 2, 1]}]]
[{'': [5.075305255429287e-15, 0.219100169641506]}, {'': [-4.0602442043434294e-15, 0.21910016964150172]}, {'': [1.522591576628786e-15, 0.2191001696415037]}, {'': [0.0, 0.21910016964149018]}, {'': [5.075305255429287e-16, 0.2191001696414927]}, {'': [3.489272363107635e-16, 0.21910016964146428]}, {'': [4.044383875420213e-16, 0.2191001696414865]}, {'': [3.96508223080413e-18, 0.21910016964148632]}, {'': [-1.5067312477055697e-16, 0.21910016964147327]}, {'': [9.516197353929913e-17, 0.21910016964148687]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20766991296538104;  // std dev = 0.477, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02758415104635604;  // std dev = 6.508, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.006930429979852727;  // std dev = 3.835, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4355948402742724;  // std dev = 3.206, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return 0.030943677483575408;  // std dev = 2.683, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else return 0.17902125489084397;  // std dev = 0.476, 2,939.000 (wgt'ed) examples reached here.  /* #neg=1,916 #pos=1,023 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12226240650652709;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.07321798203220185;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02419306421196706;  // std dev = 6.508, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.006088885498374814;  // std dev = 3.835, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.84e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41601688923367597;  // std dev = 2.920, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.013271830226061616;  // std dev = 3.322, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.20064674790264087;  // std dev = 4.307, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
%   | | | else return 0.15215927505261848;  // std dev = 25.396, 2,843.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=989 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10515772905032524;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.06505041401465694;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.02116371889255315;  // std dev = 6.508, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.005352975019655939;  // std dev = 3.835, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.32866248525346875;  // std dev = 3.204, 43.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | | else return -0.0023905652396898533;  // std dev = 2.689, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else return 0.12719823868539762;  // std dev = 0.476, 2,939.000 (wgt'ed) examples reached here.  /* #neg=1,916 #pos=1,023 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08932310366667832;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.05816152585513603;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018471071803025315;  // std dev = 6.508, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.004708664922615573;  // std dev = 3.835, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601495;  // std dev = 3.37e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.31014231411835247;  // std dev = 2.664, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.014353874909682589;  // std dev = 3.176, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else return 0.10453988545383532;  // std dev = 0.476, 2,939.000 (wgt'ed) examples reached here.  /* #neg=1,916 #pos=1,023 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03895228072912116;  // std dev = 5.710, 216.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | | | else return -0.0385672922672853;  // std dev = 2.985, 86.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017288150319247797;  // std dev = 4.895, 170.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=29 */
%   | | | else return -0.1525118381211636;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08513625387862477;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03391768017875133;  // std dev = 5.709, 216.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=41 */
%   | | | else return -0.033592359394802734;  // std dev = 2.984, 86.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01503232110754515;  // std dev = 4.895, 170.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=29 */
%   | | | else return -0.13398464837519297;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06828217798929515;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07005255086402154;  // std dev = 2.786, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.05486018072155003;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.014098803876674863;  // std dev = 6.499, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.01037501639199844;  // std dev = 3.829, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 2.98e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.054302671510375114;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10399065968489539;  // std dev = 2.670, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.10727734458273924;  // std dev = 0.982, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01044481387721808;  // std dev = 6.333, 292.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=49 */
%   | | | else return -0.008187369705665637;  // std dev = 4.117, 135.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042902278553185416;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordvenue(A, G) )
%   | | | then return -0.1743477296512407;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0397276691084062;  // std dev = 2.927, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.011131502032134316;  // std dev = 6.493, 301.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=51 */
%   | | | else return -0.010363192946753972;  // std dev = 3.826, 126.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033724256679175724;  // std dev = 0.475, 3,027.000 (wgt'ed) examples reached here.  /* #neg=1,969 #pos=1,058 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26439248604911336;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0019768143982805612;  // std dev = 2.531, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007966363498623964;  // std dev = 6.331, 292.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=49 */
%   | | | else return -0.008708182610669348;  // std dev = 4.117, 135.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=20 */


Results
   AUC ROC   = 0.603043
   AUC PR    = 0.586507
   CLL	      = -0.629343
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 109.77600000000001 seconds
Total inference time: 1.024 seconds
AUC ROC: 0.603043


Results scoring model
   AUC ROC   = 0.641778
   AUC PR    = 0.579158
   CLL	      = -0.58752
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164464
   F1        = 0.282472


Total scoring time: 1.961 seconds
Refined model CLL: -0.58752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603043
   AUC PR    = 0.586507
   CLL	      = -0.629343
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 116.677 seconds
Total inference time: 1.024 seconds
AUC ROC: 0.603043
Total revision time: 116.677
Best scored revision CLL: -0.58752


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:05:50
{'AUC ROC': 0.603043, 'AUC PR': 0.586507, 'CLL': -0.629343, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 116.677, 'Inference time': 1.024, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63751, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.704, 'Inference time': 0.832}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.18200528396654436;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.15837473981230732;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.1353308931258032;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.11375076196553435;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.09425053377525686;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.63e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.07715583893502383;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.06253882908994297;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.84e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.05028804282359536;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.040181413606471365;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801162;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else return 0.03194593427534504;  // std dev = 32.006, 4,678.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,515 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637622
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.947 seconds
Total inference time: 0.832 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582874
   AUC PR    = 0.537765
   CLL	      = -0.600759
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165749
   F1        = 0.284365


Total scoring time: 1.341 seconds
Parameter learned model CLL: -0.600759


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.83e-07, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.84e-07, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 301], 'false': [32.006, 3, 1]}]]
[{'': [3.6825470690556684e-15, 0.21897341416549554]}, {'': [-4.8156384749189514e-15, 0.21897341416548802]}, {'': [-9.442428382194023e-17, 0.21897341416549282]}, {'': [-7.790003415310068e-16, 0.2189734141655491]}, {'': [-2.950758869435632e-16, 0.21897341416557842]}, {'': [4.3671231267647354e-16, 0.21897341416555835]}, {'': [2.655682982492069e-16, 0.2189734141655276]}, {'': [1.12128837038554e-16, 0.21897341416553595]}, {'': [-2.0655312086049424e-16, 0.2189734141655529]}, {'': [-1.5048870234121723e-16, 0.21897341416552857]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.43191942690278984;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | | | else return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.20241123018147905;  // std dev = 5.248, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | | else return 0.20645760317561712;  // std dev = 29.307, 3,784.000 (wgt'ed) examples reached here.  /* #neg=2,466 #pos=1,318 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1289822684328457;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.10018439823382112;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.025661625454842664;  // std dev = 7.412, 394.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=66 */
%   | | | else return 0.009834328357938776;  // std dev = 4.786, 178.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.36651636570726576;  // std dev = 3.721, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.030172806976576913;  // std dev = 3.471, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | else return 0.180232125649462;  // std dev = 0.476, 3,902.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,363 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.130092158359731;  // std dev = 3.176, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.09518007727621328;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02625647443145455;  // std dev = 7.554, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.009571607178410173;  // std dev = 4.456, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.33940209834826346;  // std dev = 3.851, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | | | else return 0.02287362895059566;  // std dev = 3.238, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else return 0.15246748404326443;  // std dev = 0.476, 3,906.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,360 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11326605573474152;  // std dev = 3.175, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.08376302024292143;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022972377410284135;  // std dev = 7.554, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.008390040448109667;  // std dev = 4.456, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3455450022282012;  // std dev = 3.169, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return 0.017395535812740698;  // std dev = 3.753, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | else return 0.12735469986414066;  // std dev = 0.476, 3,906.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,360 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09735700545551897;  // std dev = 3.174, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.07435222768443907;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020048871256806797;  // std dev = 7.554, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.007360937608471219;  // std dev = 4.456, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015083;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.104913457905447;  // std dev = 0.475, 4,034.000 (wgt'ed) examples reached here.  /* #neg=2,626 #pos=1,408 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10381110102717285;  // std dev = 3.054, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.09819230406198437;  // std dev = 0.983, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.015672548234441554;  // std dev = 7.379, 394.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=66 */
%   | | | else return 1.4036048002388156E-4;  // std dev = 4.786, 178.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694877;  // std dev = 3.63e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08506784985280609;  // std dev = 0.475, 4,034.000 (wgt'ed) examples reached here.  /* #neg=2,626 #pos=1,408 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3131031432848668;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010356135142741153;  // std dev = 7.394, 402.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=66 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.020832358313169604;  // std dev = 5.635, 221.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=39 */
%   | | | else return -0.14340992375743697;  // std dev = 0.099, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253476;  // std dev = 2.83e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2333175001649742;  // std dev = 3.120, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
%   | | | else return -0.019320909231007516;  // std dev = 3.752, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | else return 0.06800175592183721;  // std dev = 0.476, 3,906.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,360 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07923989887950943;  // std dev = 3.145, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.06804285526048354;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013242988902311115;  // std dev = 7.548, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.008891586978817357;  // std dev = 4.441, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.84e-07, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15908934619975496;  // std dev = 3.601, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
%   | | | else return -0.035531425247319504;  // std dev = 3.269, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else return 0.054087062256294866;  // std dev = 0.476, 3,906.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,360 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06651361255644961;  // std dev = 3.143, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.061144720884951306;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011475106232945896;  // std dev = 7.548, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.007799036074859731;  // std dev = 4.441, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22432072436576667;  // std dev = 3.317, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | | else return -0.0573093671762387;  // std dev = 3.810, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else return 0.042855543018166464;  // std dev = 0.475, 3,902.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,363 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07908030937869502;  // std dev = 3.021, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.08991557562222173;  // std dev = 0.983, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00951825875281226;  // std dev = 7.367, 394.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=66 */
%   | | | else return -0.004670050889635546;  // std dev = 4.783, 178.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801162;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #pos=301 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1886126605030885;  // std dev = 3.087, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return -0.05109884431133585;  // std dev = 3.967, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | else return 0.03369604063062313;  // std dev = 0.475, 3,902.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,363 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.054271090952162926;  // std dev = 3.131, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return -0.056231465782246415;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008733539510338695;  // std dev = 7.543, 403.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=69 */
%   | | | else return -0.00798360963563378;  // std dev = 4.440, 170.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=23 */


Results
   AUC ROC   = 0.603113
   AUC PR    = 0.586536
   CLL	      = -0.629092
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 159.611 seconds
Total inference time: 1.329 seconds
AUC ROC: 0.603113


Results scoring model
   AUC ROC   = 0.63889
   AUC PR    = 0.576533
   CLL	      = -0.586223
   Precision = 0.981982 at threshold = 0.5
   Recall    = 0.180066
   F1        = 0.304328


Total scoring time: 2.523 seconds
Refined model CLL: -0.586223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.603113
   AUC PR    = 0.586536
   CLL	      = -0.629092
   Precision = 0.946565 at threshold = 0.5
   Recall    = 0.165997
   F1        = 0.28246


Total learning time: 168.422 seconds
Total inference time: 1.329 seconds
AUC ROC: 0.603113
Total revision time: 168.422
Best scored revision CLL: -0.586223


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:08:41
{'AUC ROC': 0.603113, 'AUC PR': 0.586536, 'CLL': -0.629092, 'Precision': [0.946565, 0.5], 'Recall': 0.165997, 'F1': 0.28246, 'Learning time': 168.422, 'Inference time': 1.329, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637622, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.947, 'Inference time': 0.832}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.197 seconds
Total inference time: 0.854 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 1.34 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17897797555565295;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.152357693407333;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.037852563790625134;  // std dev = 7.580, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.02107650384057457;  // std dev = 3.969, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04262239483710574;  // std dev = 6.521, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14881633877145173;  // std dev = 0.042, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12728614187660017;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10370798203848547;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07155932566872243;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010078130912833941;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029577825465778352;  // std dev = 6.430, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.31848485924380876;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.03885790110381167;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.10416612650801546;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1012055549963572;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07563897535140475;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007729895723662219;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025857781346453158;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2941781289613479;  // std dev = 3.662, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.00724865258487326;  // std dev = 4.436, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.08448745900160949;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08625730389722872;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06640733572225296;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006727851368201406;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022412188293706687;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06798542269162497;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08241337037889866;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0702147735972969;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.004462164106877363;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020619478808260285;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.19790901448665915;  // std dev = 4.206, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.048735469232938325;  // std dev = 3.858, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.05389833603078962;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0013666133286724651;  // std dev = 7.672, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07489460472631827;  // std dev = 3.724, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02586696601722984;  // std dev = 6.492, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.13984110860776508;  // std dev = 0.102, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19723574417637235;  // std dev = 3.394, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.03784921286476351;  // std dev = 4.524, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.04260067605297736;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19702532045804705;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005617218310649281;  // std dev = 3.386, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0023531230838656323;  // std dev = 7.764, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015254142815708097;  // std dev = 6.401, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.15177982487754352;  // std dev = 3.375, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.030336457290890274;  // std dev = 4.523, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.03350065370960041;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06574184466192665;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06599599665847247;  // std dev = 1.335, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002040001935429958;  // std dev = 7.764, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.013123857852328755;  // std dev = 6.400, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.600299
   AUC PR    = 0.582401
   CLL	      = -0.629808
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 171.688 seconds
Total inference time: 1.223 seconds
AUC ROC: 0.600299


Results scoring model
   AUC ROC   = 0.632913
   AUC PR    = 0.570096
   CLL	      = -0.588271
   Precision = 0.980815 at threshold = 0.5
   Recall    = 0.180176
   F1        = 0.304429


Total scoring time: 2.743 seconds
Refined model CLL: -0.588271


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600299
   AUC PR    = 0.582401
   CLL	      = -0.629808
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 181.968 seconds
Total inference time: 1.223 seconds
AUC ROC: 0.600299
Total revision time: 181.968
Best scored revision CLL: -0.588271


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 08:11:46
{'AUC ROC': 0.600299, 'AUC PR': 0.582401, 'CLL': -0.629808, 'Precision': [0.945736, 0.5], 'Recall': 0.16332, 'F1': 0.278539, 'Learning time': 181.968, 'Inference time': 1.223, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.197, 'Inference time': 0.854}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.17793825037415;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.46e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.15486858931908992;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 2.24e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.13241970057636013;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.11141844009996489;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.09244274685204036;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.07579653178305355;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.06154536647840743;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.04958187634868163;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 5.77e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.03969392623632935;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else return 0.0316205535986707;  // std dev = 17.003, 1,329.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=425 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.72074
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1.844 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.568966
   AUC PR    = 0.504304
   CLL	      = -0.603802
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.137931
   F1        = 0.242424


Total scoring time: 1.038 seconds
Parameter learned model CLL: -0.603802


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.24e-08, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 68], 'false': [17.003, 904, 425]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.71e-08, 0, 68], 'false': [17.003, 904, 425]}]]
[{'': [-1.1494073666707504e-15, 0.2175241091108012]}, {'': [3.134747363647501e-16, 0.21752410911083273]}, {'': [5.747036833353752e-16, 0.2175241091108231]}, {'': [-2.873518416676876e-16, 0.21752410911083175]}, {'': [-3.0041328901621885e-16, 0.21752410911080278]}, {'': [-3.918434204559376e-17, 0.21752410911081715]}, {'': [-7.18379604169219e-17, 0.2175241091108071]}, {'': [0.0, 0.2175241091108169]}, {'': [4.89804275569922e-17, 0.2175241091108211]}, {'': [3.2653618371328135e-17, 0.21752410911082182]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19758168898788808;  // std dev = 15.655, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.2277141524908167;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.399815601766179;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0010060779566551958;  // std dev = 3.071, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.07627729440868444;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.46e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17178886001065394;  // std dev = 15.655, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.19767444717406893;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34387981480959035;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.1665388245648817;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.141973578240806;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03757834462932513;  // std dev = 3.492, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return -0.06724328615966313;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462837;  // std dev = 1.98e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14643212646593795;  // std dev = 15.655, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.16768939043808612;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28365037994782877;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.14209424281556463;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0015667443842268427;  // std dev = 3.063, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.13923221554087492;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.05968782284768318;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1225961607278173;  // std dev = 15.655, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.13931909849942023;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22576143804174864;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.11914890490746437;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.12536970722729393;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.029778777135301217;  // std dev = 3.484, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return -0.053292701099389925;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601499;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4282901995679296;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.05196913861510017;  // std dev = 1.563, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10024934433980358;  // std dev = 15.780, 1,111.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=377 */
%   | | | else return 0.14559349676239766;  // std dev = 3.057, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0033811247959760053;  // std dev = 3.058, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.11421462840391718;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.04782335674785768;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08202538284731907;  // std dev = 15.636, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.09479425069267346;  // std dev = 3.271, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14369674649089945;  // std dev = 2.404, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07122774133526491;  // std dev = 1.873, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0029599382126187716;  // std dev = 3.058, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | | else return 0.09576630010228183;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.043103445940869366;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06604238423771318;  // std dev = 15.636, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.0755089213009211;  // std dev = 3.270, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11457848068378033;  // std dev = 2.445, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.04644611591328697;  // std dev = 1.815, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11162538645061629;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02103318618272948;  // std dev = 3.474, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | | else return -0.038998049696118704;  // std dev = 1.933, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527725;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05273323871241159;  // std dev = 15.635, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.05959589484683851;  // std dev = 3.270, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09230566584045757;  // std dev = 2.410, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.03138080982405665;  // std dev = 1.858, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.10102652695734195;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01817684668741327;  // std dev = 3.474, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return -0.03540231200009038;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 5.77e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2967349960906336;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.0804844368007743;  // std dev = 1.564, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.041042910710388514;  // std dev = 15.780, 1,111.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=377 */
%   | | | else return 0.0516064571559091;  // std dev = 3.047, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.09221398131905656;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.015676110417752936;  // std dev = 3.474, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | | else return -0.032233586717248935;  // std dev = 1.933, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801095;  // std dev = 4.71e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.032830329658157256;  // std dev = 15.622, 1,093.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=371 */
%   | | | else return 0.03821254746475464;  // std dev = 3.268, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.058094686967021136;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.009461542600046642;  // std dev = 1.805, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08477952653095054;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01349526874293939;  // std dev = 3.473, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | else return -0.029425902501221485;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=4 */


Results
   AUC ROC   = 0.658393
   AUC PR    = 0.695071
   CLL	      = -0.715158
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 186.601 seconds
Total inference time: 1.501 seconds
AUC ROC: 0.658393


Results scoring model
   AUC ROC   = 0.633344
   AUC PR    = 0.553099
   CLL	      = -0.586136
   Precision = 0.925 at threshold = 0.5
   Recall    = 0.150101
   F1        = 0.25829


Total scoring time: 5.582 seconds
Refined model CLL: -0.586136


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.658393
   AUC PR    = 0.695071
   CLL	      = -0.715158
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 195.065 seconds
Total inference time: 1.501 seconds
AUC ROC: 0.658393
Total revision time: 195.065
Best scored revision CLL: -0.586136


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:15:04
{'AUC ROC': 0.658393, 'AUC PR': 0.695071, 'CLL': -0.715158, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 195.065, 'Inference time': 1.501, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.72074, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1.844, 'Inference time': 0.712}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.17278123229435183;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.15042057872172115;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.12872077609117966;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.1084474281827336;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.09013189838005939;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.07405152562161835;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.060263617661559514;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.048665530932171165;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.03905709740776925;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else return 0.031192051664469502;  // std dev = 23.851, 2,638.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=830 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.724899
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 3.014 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.579108
   AUC PR    = 0.52151
   CLL	      = -0.596463
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158215
   F1        = 0.273205


Total scoring time: 1.198 seconds
Parameter learned model CLL: -0.596463


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.68e-07, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 156], 'false': [23.851, 1, 830]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 156], 'false': [23.851, 1, 830]}]]
[{'': [6.012284687200848e-15, 0.21563881475676464]}, {'': [-2.6417614534670392e-15, 0.21563881475676194]}, {'': [1.8674520619335967e-15, 0.2156388147567706]}, {'': [1.343654532366856e-15, 0.215638814756755]}, {'': [5.693451408334137e-16, 0.21563881475672464]}, {'': [-2.1635115351669717e-16, 0.21563881475675903]}, {'': [4.099285014000578e-16, 0.2156388147567411]}, {'': [-3.0744637605004334e-16, 0.2156388147567607]}, {'': [-2.3627823344586665e-16, 0.21563881475672342]}, {'': [5.408778837917429e-17, 0.21563881475674063]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18840723768253312;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.14786856126773526;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995117;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.06386322081379688;  // std dev = 5.347, 175.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03658790700575084;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16389070568983896;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.12889853858452954;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.29415244793700734;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03219217687928014;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.05590998527091811;  // std dev = 5.347, 175.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.032192176879280054;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13990282889803987;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.11073367450846265;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585871;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.24498779946109306;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.053776978484784604;  // std dev = 3.875, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return 0.029667550225047423;  // std dev = 3.930, 102.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.028419782209517463;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11740295660306954;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.09387946405263078;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19926726861502117;  // std dev = 3.283, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.20804346977898724;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.034468409428957215;  // std dev = 1.337, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.04327351904974255;  // std dev = 5.346, 175.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02516256473091569;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601497;  // std dev = 2.98e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09707023209585007;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.0786716053298223;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16213658016117344;  // std dev = 3.239, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.15511609192417272;  // std dev = 2.692, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03037632357108578;  // std dev = 1.337, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.03729978310642499;  // std dev = 5.346, 175.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.022335198232359826;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07926582146146781;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.0652746161544868;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12067335516313238;  // std dev = 3.284, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.12650124706828195;  // std dev = 2.637, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03883581600112282;  // std dev = 3.869, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return 0.014890567852057252;  // std dev = 3.928, 102.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.019869521792523246;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.53e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06407229078579478;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.053708367072687044;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09220144233395865;  // std dev = 3.285, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.09646264436600918;  // std dev = 2.637, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03108104369690885;  // std dev = 1.337, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.028351492729978348;  // std dev = 5.345, 175.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.017710468582975307;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05137105257800964;  // std dev = 21.898, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=716 */
%   | | | else return 0.04388732841267493;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07261556237900153;  // std dev = 3.238, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.06908174825298824;  // std dev = 2.694, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03056514178948493;  // std dev = 3.867, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return 0.008796572241568039;  // std dev = 3.928, 102.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01581309378359783;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2939985202730769;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.007054915228717333;  // std dev = 3.100, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04025648950097031;  // std dev = 22.102, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,490 #pos=727 */
%   | | | else return 0.04634536659404916;  // std dev = 4.180, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02610233826057572;  // std dev = 3.867, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return 0.0075092449354249805;  // std dev = 3.928, 102.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.014140372784048567;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031982110856526885;  // std dev = 21.891, 2,173.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=715 */
%   | | | else return 0.036944510612896775;  // std dev = 4.693, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04144902723251399;  // std dev = 3.287, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0.04391171644789529;  // std dev = 2.636, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.022221900286013733;  // std dev = 3.867, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | | else return 0.0064045427108455994;  // std dev = 3.928, 102.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.012661547861026504;  // std dev = 2.991, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.677458
   AUC PR    = 0.71299
   CLL	      = -0.710233
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 397.875 seconds
Total inference time: 1.632 seconds
AUC ROC: 0.677458


Results scoring model
   AUC ROC   = 0.624479
   AUC PR    = 0.554101
   CLL	      = -0.586694
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.158215
   F1        = 0.273205


Total scoring time: 11.256 seconds
Refined model CLL: -0.586694


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677458
   AUC PR    = 0.71299
   CLL	      = -0.710233
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 413.34299999999996 seconds
Total inference time: 1.632 seconds
AUC ROC: 0.677458
Total revision time: 413.34299999999996
Best scored revision CLL: -0.586694


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:22:00
{'AUC ROC': 0.677458, 'AUC PR': 0.71299, 'CLL': -0.710233, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 413.34299999999996, 'Inference time': 1.632, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.724899, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 3.014, 'Inference time': 0.717}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.1706172574512558;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.14855338549913835;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.12716613986028427;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.10719619647467606;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.0891560087922312;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.07331209074746266;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.059718318179929605;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.04827389229615336;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.0387834646179739;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.031006747330538553;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726685
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.137 seconds
Total inference time: 0.749 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583446
   AUC PR    = 0.528742
   CLL	      = -0.59333
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166892
   F1        = 0.286045


Total scoring time: 1.302 seconds
Parameter learned model CLL: -0.59333


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 247], 'false': [29.116, 2, 1]}]]
[{'': [4.717773630148034e-15, 0.2148318698784584]}, {'': [-4.315036856842713e-15, 0.214831869878421]}, {'': [9.205411961264456e-16, 0.21483186987845337]}, {'': [-2.8766912378951425e-16, 0.2148318698784526]}, {'': [2.301352990316114e-16, 0.21483186987840797]}, {'': [3.8835331711584425e-16, 0.21483186987845734]}, {'': [3.380112204526792e-16, 0.21483186987846187]}, {'': [-3.595864047368928e-17, 0.21483186987846326]}, {'': [-1.797932023684464e-16, 0.21483186987845312]}, {'': [1.0787592142106784e-17, 0.21483186987843855]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18635090554285696;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.12911667703499546;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3496743588283247;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.3930326560297439;  // std dev = 3.271, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.056779072085812884;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | | else return 0.020311097261674106;  // std dev = 4.484, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | else return -0.005796643131780267;  // std dev = 0.343, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1621193694366719;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.11266129744074303;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30157396914689066;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.338170894412266;  // std dev = 3.271, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06519071826039505;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04245186207036076;  // std dev = 6.429, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | | else return -0.00509248543390463;  // std dev = 4.157, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13843571895900442;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.09706581909958835;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.27585875875804355;  // std dev = 3.826, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.24488006540823312;  // std dev = 3.287, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05713395288453151;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0370658612471306;  // std dev = 6.429, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | | else return -0.004476279068948691;  // std dev = 4.157, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1162324049252722;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.08267719178617931;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20066765282997293;  // std dev = 3.843, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.22457437266872712;  // std dev = 3.266, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.050376539980555114;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.03223115463610763;  // std dev = 6.429, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | else return -0.003936495382011202;  // std dev = 0.343, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09616797979045565;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.06971435418028558;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.173415597461531;  // std dev = 3.821, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.1529178412204346;  // std dev = 3.292, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04464832318839621;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.027925819354427842;  // std dev = 6.429, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | | else return -0.003463238380343589;  // std dev = 4.157, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07859201722529763;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.05827410738582207;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13294696797956054;  // std dev = 3.820, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.11803206067978908;  // std dev = 3.293, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.037785951973002954;  // std dev = 4.803, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | | else return 2.7942320586830114E-4;  // std dev = 4.482, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | else return -0.003047986844879513;  // std dev = 0.343, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06358373471171834;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.04835250864385031;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09144789345698608;  // std dev = 3.848, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.10303318176343483;  // std dev = 3.260, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0027220316453648546;  // std dev = 5.515, 238.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=36 */
%   | | | else return 0.07957498438647523;  // std dev = 3.113, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else return -0.0025196632671158105;  // std dev = 0.365, 151.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05102693021983789;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.039872653269189456;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07668268198024163;  // std dev = 3.818, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.06749631830074586;  // std dev = 3.295, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04454140164586091;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019606543068168874;  // std dev = 6.421, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | | else return -0.0030605206455864118;  // std dev = 4.157, 147.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04068842747630837;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.03271184643243439;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05185130970875278;  // std dev = 3.849, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.05894553455888067;  // std dev = 3.258, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0021181164770295675;  // std dev = 5.514, 238.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=36 */
%   | | | else return 0.06544550127381486;  // std dev = 3.112, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else return -0.00470341759988435;  // std dev = 0.365, 151.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.032281902348122775;  // std dev = 26.761, 3,248.000 (wgt'ed) examples reached here.  /* #neg=2,182 #pos=1,066 */
%   | | | else return 0.02672423988056353;  // std dev = 5.533, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.043693999599642784;  // std dev = 3.816, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.03785009704081418;  // std dev = 3.296, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.040445162903707435;  // std dev = 0.277, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.03802522420936317;  // std dev = 1.310, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.010569780794426888;  // std dev = 7.532, 402.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=69 */


Results
   AUC ROC   = 0.681435
   AUC PR    = 0.722355
   CLL	      = -0.71325
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 601.934 seconds
Total inference time: 1.583 seconds
AUC ROC: 0.681435


Results scoring model
   AUC ROC   = 0.627389
   AUC PR    = 0.559944
   CLL	      = -0.584142
   Precision = 0.950355 at threshold = 0.5
   Recall    = 0.181081
   F1        = 0.3042


Total scoring time: 17.06 seconds
Refined model CLL: -0.584142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681435
   AUC PR    = 0.722355
   CLL	      = -0.71325
   Precision = 0.978261 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.280374


Total learning time: 624.4329999999999 seconds
Total inference time: 1.583 seconds
AUC ROC: 0.681435
Total revision time: 624.4329999999999
Best scored revision CLL: -0.584142


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:32:27
{'AUC ROC': 0.681435, 'AUC PR': 0.722355, 'CLL': -0.71325, 'Precision': [0.978261, 0.5], 'Recall': 0.163636, 'F1': 0.280374, 'Learning time': 624.4329999999999, 'Inference time': 1.583, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726685, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.137, 'Inference time': 0.749}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.1699830294678481;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.14800605792446705;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.12671021942543084;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831175;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.10682897000650646;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.08886929139815845;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.95e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.0730945614876278;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.059557654973399037;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.04815829876397824;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.038702534789997946;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else return 0.030951806130674987;  // std dev = 33.584, 5,256.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,639 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.727212
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.567 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.584643
   AUC PR    = 0.530687
   CLL	      = -0.59244
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169285
   F1        = 0.289554


Total scoring time: 1.337 seconds
Parameter learned model CLL: -0.59244


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.95e-07, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 334], 'false': [33.584, 3, 1]}]]
[{'': [3.318702598160947e-15, 0.21459359195776054]}, {'': [-5.105696304862995e-15, 0.2145935919578592]}, {'': [-5.105696304862995e-16, 0.21459359195783476]}, {'': [-9.785917917654075e-16, 0.2145935919577883]}, {'': [-7.445807111258534e-16, 0.21459359195776173]}, {'': [4.680221612791079e-16, 0.21459359195778424]}, {'': [1.8082674413056441e-16, 0.21459359195784838]}, {'': [2.4464794794135187e-16, 0.2145935919578082]}, {'': [-2.28692646988655e-16, 0.21459359195782424]}, {'': [-2.2337421333775603e-16, 0.2145935919578053]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995084;  // std dev = 1.05e-06, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18632802579879174;  // std dev = 30.908, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,422 */
%   | | | else return 0.11923267894187725;  // std dev = 6.258, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3516554286060048;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.38542166237223846;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026402903353480542;  // std dev = 6.639, 315.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=53 */
%   | | | else return 0.09426004621062349;  // std dev = 3.604, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.005487428536851788;  // std dev = 4.829, 198.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1620996584939825;  // std dev = 30.908, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,422 */
%   | | | else return 0.10408985418011664;  // std dev = 6.258, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3032500246685279;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.33175979078693324;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.023158403276550964;  // std dev = 6.639, 315.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=53 */
%   | | | else return 0.08239403101034408;  // std dev = 3.604, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.004820759370112794;  // std dev = 4.829, 198.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13855137892080044;  // std dev = 30.899, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,912 #pos=1,421 */
%   | | | else return 0.08699986459535307;  // std dev = 6.302, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2521202691025467;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.27429972376679773;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08132520785297627;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.03910574746134506;  // std dev = 7.413, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | else return -0.005850367572950669;  // std dev = 0.341, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831175;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.116363741561568;  // std dev = 30.907, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,422 */
%   | | | else return 0.07382015196963225;  // std dev = 6.261, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2030100710052971;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.21906651197024388;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0713616097377836;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.0340153879387658;  // std dev = 7.413, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | else return -0.005146782291857395;  // std dev = 0.341, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601512;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09643753846546027;  // std dev = 30.897, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,912 #pos=1,421 */
%   | | | else return 0.05910011197578042;  // std dev = 6.306, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15946545779488006;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.17051219783759697;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06308847033643863;  // std dev = 0.249, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029475048887310343;  // std dev = 7.413, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | | else return -0.004530261206777219;  // std dev = 4.832, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.95e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07883956913704936;  // std dev = 30.896, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,912 #pos=1,421 */
%   | | | else return 0.049245480782016536;  // std dev = 6.306, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12310592320435645;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.13050232775438872;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05612945756432938;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.02545519002656548;  // std dev = 7.413, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | else return -0.003989484510025082;  // std dev = 0.341, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06386010407809757;  // std dev = 30.904, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,422 */
%   | | | else return 0.039584285296135814;  // std dev = 6.267, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09396905639664431;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.0988863612890323;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004960918697295511;  // std dev = 6.406, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.07666257991856706;  // std dev = 3.587, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else return -0.007137450159851693;  // std dev = 0.363, 198.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527647;  // std dev = 2.86e-07, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05129489033204224;  // std dev = 30.895, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,912 #pos=1,421 */
%   | | | else return 0.03188861800497914;  // std dev = 6.309, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07122723712208447;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.07451920515299726;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004334246190896327;  // std dev = 6.406, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.06594991096161495;  // std dev = 3.586, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else return -0.006162996658503938;  // std dev = 0.363, 198.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=31 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.040943987253763275;  // std dev = 30.903, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,422 */
%   | | | else return 0.025506071180878595;  // std dev = 6.269, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05376137237348546;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.055999112411695716;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0037849606742087487;  // std dev = 6.406, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.056295196200353566;  // std dev = 3.586, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else return -0.005325345076661007;  // std dev = 0.363, 198.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801187;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #pos=334 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03252204357518555;  // std dev = 30.895, 4,333.000 (wgt'ed) examples reached here.  /* #neg=2,912 #pos=1,421 */
%   | | | else return 0.020193717051200984;  // std dev = 6.311, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04047638246288684;  // std dev = 4.387, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.04202671949435203;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.052626414878631844;  // std dev = 0.250, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017262901036537465;  // std dev = 7.397, 357.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=68 */
%   | | | else return -0.005239007614330436;  // std dev = 4.834, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */


Results
   AUC ROC   = 0.685871
   AUC PR    = 0.724952
   CLL	      = -0.711247
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 794.648 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.685871


Results scoring model
   AUC ROC   = 0.630892
   AUC PR    = 0.562761
   CLL	      = -0.583057
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169285
   F1        = 0.289554


Total scoring time: 21.207 seconds
Refined model CLL: -0.583057


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685871
   AUC PR    = 0.724952
   CLL	      = -0.711247
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 822.759 seconds
Total inference time: 1.532 seconds
AUC ROC: 0.685871
Total revision time: 822.759
Best scored revision CLL: -0.583057


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 08:46:13
{'AUC ROC': 0.685871, 'AUC PR': 0.724952, 'CLL': -0.711247, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 822.759, 'Inference time': 1.532, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.727212, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.567, 'Inference time': 0.669}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.355 seconds
Total inference time: 0.699 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 1.379 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1628116560761219;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532781;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03296064436529561;  // std dev = 8.057, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0011242011748237013;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1390268379046687;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.10051288053749477;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691553;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04741720871610842;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02927724921344666;  // std dev = 8.063, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.002402383737453957;  // std dev = 5.541, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218131;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729204;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611719;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775795;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009768910732355786;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.077123628548085;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 1.1566183927192815E-4;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1449012003835007;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0966582515623662;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007202689441513344;  // std dev = 7.212, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07654146924790853;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0011936172445969743;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12785419724949756;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650471;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419631;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561097;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.044553897243320775;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0630016084956394;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.016819464177437415;  // std dev = 9.621, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0639687050699184;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.046047402274411;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180408;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201686;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.039740894679771314;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0206492957963738;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006466785628812432;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.05603722632168818;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05007518751086494;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.0726218266243911;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05743678817975472;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021669758089674127;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.009117634359389682;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04103063959954758;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.027527922411707425;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.058142087461058686;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05078107759014429;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.050724820932203506;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018801744496972726;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007939775851881136;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4176818285464766;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.07303334614334417;  // std dev = 4.006, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03142305579895852;  // std dev = 34.916, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.04147522053627348;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04502848528311321;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016679377767983554;  // std dev = 8.035, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.008129330868177492;  // std dev = 5.534, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */


Results
   AUC ROC   = 0.682385
   AUC PR    = 0.714896
   CLL	      = -0.712486
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 838.63 seconds
Total inference time: 1.586 seconds
AUC ROC: 0.682385


Results scoring model
   AUC ROC   = 0.63918
   AUC PR    = 0.572123
   CLL	      = -0.582254
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 23.34 seconds
Refined model CLL: -0.582254


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682385
   AUC PR    = 0.714896
   CLL	      = -0.712486
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 870.7040000000001 seconds
Total inference time: 1.586 seconds
AUC ROC: 0.682385
Total revision time: 870.7040000000001
Best scored revision CLL: -0.582254


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 09:00:46
{'AUC ROC': 0.682385, 'AUC PR': 0.714896, 'CLL': -0.712486, 'Precision': [1.0, 0.5], 'Recall': 0.152727, 'F1': 0.264984, 'Learning time': 870.7040000000001, 'Inference time': 1.586, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.355, 'Inference time': 0.699}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.1960694243961435;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.17048750989298886;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.14535770777222068;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583102;  // std dev = 1.52e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.12174342913543773;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.10040365509836585;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.08174420999918648;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.42e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.06586010641789043;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.05262300572547327;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.041772942484396385;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else return 0.03299211943269199;  // std dev = 17.107, 1,308.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=442 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 1.905 seconds
Total inference time: 0.698 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.582231
   AUC PR    = 0.548907
   CLL	      = -0.609121
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164461
   F1        = 0.282468


Total scoring time: 1.052 seconds
Parameter learned model CLL: -0.609121


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.15e-08, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.52e-07, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 87], 'false': [17.107, 866, 442]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 87], 'false': [17.107, 866, 442]}]]
[{'': [-1.6334315764600004e-16, 0.22373023221014243]}, {'': [8.983873670530003e-16, 0.22373023221017707]}, {'': [1.7151031552830005e-15, 0.22373023221014496]}, {'': [2.654326311747501e-16, 0.22373023221016664]}, {'': [-3.471042099977501e-16, 0.22373023221017946]}, {'': [-4.083578941150001e-17, 0.22373023221016033]}, {'': [1.0208947352875003e-16, 0.2237302322101621]}, {'': [1.0208947352875003e-16, 0.2237302322101621]}, {'': [-6.635815779368752e-17, 0.22373023221015217]}, {'': [4.083578941150001e-17, 0.22373023221015464]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21020886019314045;  // std dev = 15.609, 1,068.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=376 */
%   | | | else return 0.2381489350995123;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.40814893509951233;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041822404487267484;  // std dev = 3.833, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.007085105312278284;  // std dev = 2.441, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.80e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18264664096489439;  // std dev = 15.609, 1,068.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=376 */
%   | | | else return 0.2066188083042412;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3508875906974797;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.39279418357704865;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03665473934841164;  // std dev = 3.833, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.30874113578563506;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.006439654982325505;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.86e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1571727855876544;  // std dev = 15.607, 1,065.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=377 */
%   | | | else return 0.1377503042766525;  // std dev = 3.441, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28903586629606187;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.32092546969114216;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03199835524575135;  // std dev = 3.833, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.2564123687585864;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12473985742153453;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.007006516905079592;  // std dev = 2.441, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583102;  // std dev = 1.52e-07, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12941751253914924;  // std dev = 15.608, 1,068.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=376 */
%   | | | else return 0.15045027079756002;  // std dev = 3.434, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2295985701405742;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.2520656448143302;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03656398128919015;  // std dev = 3.348, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | | else return -0.04162577285119943;  // std dev = 1.888, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return 0.06468374865030384;  // std dev = 0.414, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10786221282050142;  // std dev = 15.607, 1,065.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=377 */
%   | | | else return 0.08880308712272374;  // std dev = 3.437, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1728080380733345;  // std dev = 1.959, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.19415387642456336;  // std dev = 1.874, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.023813106387979018;  // std dev = 3.829, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.20011404871129349;  // std dev = 1.576, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11387770068096296;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0028880941287634998;  // std dev = 2.437, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08574614975799145;  // std dev = 15.607, 1,068.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=376 */
%   | | | else return 0.10413585504570153;  // std dev = 3.436, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13107081267091353;  // std dev = 1.958, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.14760639564366934;  // std dev = 1.874, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.007887320650656884;  // std dev = 3.519, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return 0.12061789550884296;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.2321619638176192;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03289889953161887;  // std dev = 2.681, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.42e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07014392945152682;  // std dev = 15.607, 1,065.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=377 */
%   | | | else return 0.052242090295262146;  // std dev = 3.433, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09877052080538015;  // std dev = 2.219, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.11614622364186475;  // std dev = 1.557, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0068079201920916675;  // std dev = 3.519, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return 0.10440338368522398;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.18006328163121388;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06474774721452815;  // std dev = 2.880, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05427031631563146;  // std dev = 15.606, 1,068.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=376 */
%   | | | else return 0.07051861154349331;  // std dev = 3.438, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07194809883844032;  // std dev = 1.955, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.08602574710298226;  // std dev = 1.877, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.11143744455632867;  // std dev = 1.042, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.019057676885752287;  // std dev = 3.656, 97.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.19417356459413432;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.021107864052082544;  // std dev = 2.674, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04413206143003987;  // std dev = 15.608, 1,065.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=377 */
%   | | | else return 0.027757572592212603;  // std dev = 3.430, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.054138126332537874;  // std dev = 2.217, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.06847076713386278;  // std dev = 1.559, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007834340469282894;  // std dev = 3.789, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 0.16411523784732587;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.008547933802212778;  // std dev = 0.340, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5853726202652866;  // std dev = 0.963, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.3189938461775302;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.09743851966490717;  // std dev = 1.999, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.16250411527019257;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.05590288903991216;  // std dev = 2.638, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.03590975807897311;  // std dev = 15.746, 1,080.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=389 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02313435412053216;  // std dev = 3.788, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | | else return -0.0011945351436259835;  // std dev = 2.442, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */


Results
   AUC ROC   = 0.683673
   AUC PR    = 0.626044
   CLL	      = -0.544977
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 188.639 seconds
Total inference time: 1.618 seconds
AUC ROC: 0.683673


Results scoring model
   AUC ROC   = 0.649432
   AUC PR    = 0.60087
   CLL	      = -0.593623
   Precision = 0.895652 at threshold = 0.5
   Recall    = 0.194707
   F1        = 0.319876


Total scoring time: 5.974 seconds
Refined model CLL: -0.593623


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.683673
   AUC PR    = 0.626044
   CLL	      = -0.544977
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 197.57 seconds
Total inference time: 1.618 seconds
AUC ROC: 0.683673
Total revision time: 197.57
Best scored revision CLL: -0.593623


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:04:07
{'AUC ROC': 0.683673, 'AUC PR': 0.626044, 'CLL': -0.544977, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 197.57, 'Inference time': 1.618, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555192, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 1.905, 'Inference time': 0.698}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.05e-06, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.19795845890903105;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.17211304909232708;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.14669969755695642;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.21e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.12280841122876328;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.1012186160813607;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.08234749622509085;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.73e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.066293113007315;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.05292450309829946;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.04197617123245027;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else return 0.03312392938168766;  // std dev = 24.267, 2,625.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=892 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555417
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.852 seconds
Total inference time: 0.676 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.578848
   AUC PR    = 0.543561
   CLL	      = -0.611625
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.157696
   F1        = 0.272431


Total scoring time: 1.156 seconds
Parameter learned model CLL: -0.611625


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.72e-07, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 167], 'false': [24.267, 1, 892]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 167], 'false': [24.267, 1, 892]}]]
[{'': [6.552310257907511e-15, 0.2243390113378935]}, {'': [-2.9783228445034138e-15, 0.22433901133791348]}, {'': [1.9146361143236234e-15, 0.2243390113378295]}, {'': [1.0636867301797906e-15, 0.224339011337901]}, {'': [8.296756495402368e-16, 0.22433901133789172]}, {'': [-2.6592168254494765e-16, 0.224339011337902]}, {'': [4.467484266755121e-16, 0.22433901133785925]}, {'': [-3.191060190539372e-16, 0.2243390113378591]}, {'': [-2.473071647668013e-16, 0.22433901133786355]}, {'': [5.3184336508989535e-17, 0.22433901133787676]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.05e-06, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2190316698463701;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.035568289938221115;  // std dev = 5.210, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.03709630352056501;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.371008280093293;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.04088007496508784;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else return 0.19175772080918896;  // std dev = 0.481, 2,235.000 (wgt'ed) examples reached here.  /* #neg=1,425 #pos=810 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.5204304988795779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.034314199465278264;  // std dev = 2.219, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.010319354457443952;  // std dev = 2.048, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.03560503986039919;  // std dev = 6.047, 245.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=45 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.65e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.31770757083681583;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.025086055237013398;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13908232980413496;  // std dev = 3.848, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.16301231698771632;  // std dev = 22.384, 2,168.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=786 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.025956728859697922;  // std dev = 5.191, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.16155472128889412;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -0.1471830438027197;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.024523893001492332;  // std dev = 3.740, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830925;  // std dev = 4.21e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13447966775744516;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4383858982297934;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02849863218372966;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.024804565181798733;  // std dev = 5.161, 180.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=33 */
%   | | | else return 0.021389508508437818;  // std dev = 3.740, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.72e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11007213990399009;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3522731929957752;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024770576322093292;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.00288904263802343;  // std dev = 2.047, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.022831166661392024;  // std dev = 6.035, 245.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=45 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08883460956093411;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.013967350538764026;  // std dev = 5.160, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.12960918329573176;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.1306284758074517;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.020087096655473216;  // std dev = 3.731, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.73e-07, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07089639560049105;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.012060975398867692;  // std dev = 5.160, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.10777607079827571;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.11649758613312916;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.01738499987191139;  // std dev = 3.731, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05608999520461781;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.04122296900483658;  // std dev = 4.735, 138.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=29 */
%   | | | else return -0.02267764229237744;  // std dev = 3.078, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.012981569244650337;  // std dev = 3.728, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | | else return -0.16078116136912604;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04408068775129444;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25573956123533786;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.012236167752872569;  // std dev = 2.219, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.008478064950949547;  // std dev = 5.138, 180.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=33 */
%   | | | else return 0.012394393273366387;  // std dev = 3.726, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03446726267649799;  // std dev = 0.480, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,477 #pos=834 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.004626334028552013;  // std dev = 5.144, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.09092522243688965;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.13521373927261696;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.010715959301940322;  // std dev = 3.726, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */


Results
   AUC ROC   = 0.681019
   AUC PR    = 0.623807
   CLL	      = -0.542463
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 84.001 seconds
Total inference time: 0.899 seconds
AUC ROC: 0.681019


Results scoring model
   AUC ROC   = 0.628957
   AUC PR    = 0.576452
   CLL	      = -0.601389
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.157696
   F1        = 0.272431


Total scoring time: 1.525 seconds
Refined model CLL: -0.601389


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681019
   AUC PR    = 0.623807
   CLL	      = -0.542463
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 89.534 seconds
Total inference time: 0.899 seconds
AUC ROC: 0.681019
Total revision time: 89.534
Best scored revision CLL: -0.601389


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:05:39
{'AUC ROC': 0.681019, 'AUC PR': 0.623807, 'CLL': -0.542463, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 89.534, 'Inference time': 0.899, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555417, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.852, 'Inference time': 0.676}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.1985852618372038;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.17265234817532557;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.14714473528383112;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.12316133796351032;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.10148843314045507;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.0825470043962943;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.06643612199841034;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.05302393153164941;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.042043079087800445;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.03316723639529426;  // std dev = 29.751, 3,942.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,342 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555495
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 4.153 seconds
Total inference time: 0.725 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577722
   AUC PR    = 0.541767
   CLL	      = -0.612456
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.155444
   F1        = 0.269063


Total scoring time: 1.286 seconds
Parameter learned model CLL: -0.612456


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.751, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 247], 'false': [29.751, 2, 1]}]]
[{'': [4.717773630148034e-15, 0.22453943417504318]}, {'': [-4.315036856842713e-15, 0.22453943417505612]}, {'': [9.205411961264456e-16, 0.22453943417501918]}, {'': [-2.8766912378951425e-16, 0.22453943417508263]}, {'': [2.301352990316114e-16, 0.22453943417507602]}, {'': [3.8835331711584425e-16, 0.22453943417507766]}, {'': [3.380112204526792e-16, 0.22453943417505615]}, {'': [-3.595864047368928e-17, 0.22453943417502004]}, {'': [-1.797932023684464e-16, 0.22453943417506653]}, {'': [1.0787592142106784e-17, 0.22453943417501704]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3697768420762556;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.10100607795665523;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.22089403313872663;  // std dev = 4.856, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.21873915950774575;  // std dev = 27.387, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,080 #pos=1,173 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.04879641711390076;  // std dev = 6.549, 278.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=53 */
%   | | | else return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.056678346864217515;  // std dev = 4.652, 136.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.09540328966956482;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1820310054326095;  // std dev = 4.845, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
%   | | | else return 0.19002947017107788;  // std dev = 27.814, 3,355.000 (wgt'ed) examples reached here.  /* #neg=2,145 #pos=1,210 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04275202666239042;  // std dev = 6.549, 278.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=53 */
%   | | | else return 0.12274496957659235;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.043395875878212344;  // std dev = 4.664, 142.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | | else return -0.1459606546910228;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1250995880064383;  // std dev = 4.806, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.8200908191725185;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1631898682202958;  // std dev = 4.856, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | | else return 0.16137897605615603;  // std dev = 27.387, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,080 #pos=1,173 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.03728281810080324;  // std dev = 6.549, 278.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=53 */
%   | | | else return 0.10556366885005943;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.12885510907442152;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.045245926497089056;  // std dev = 4.645, 136.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13410791385955936;  // std dev = 0.480, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05763532242888806;  // std dev = 6.125, 222.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=48 */
%   | | | else return 0.003240090272177384;  // std dev = 3.825, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.033701833749764154;  // std dev = 4.655, 142.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | | else return -0.13178575820795974;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1097940996727198;  // std dev = 0.480, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.026092344075032022;  // std dev = 6.545, 278.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=53 */
%   | | | else return 0.08877521841235461;  // std dev = 3.050, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.11754085728991151;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03568831835190896;  // std dev = 4.640, 136.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08863388187330926;  // std dev = 0.480, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04604823426605161;  // std dev = 6.122, 222.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=48 */
%   | | | else return -0.0053604067604896095;  // std dev = 3.819, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.15328555614708228;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.028946692562589443;  // std dev = 4.635, 141.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27055677170760417;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return -0.05653468015269029;  // std dev = 3.520, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else return 0.07097012414124522;  // std dev = 0.480, 3,357.000 (wgt'ed) examples reached here.  /* #neg=2,147 #pos=1,210 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03944757404686877;  // std dev = 6.122, 222.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=48 */
%   | | | else return -0.004567011845351983;  // std dev = 3.819, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022927468436983494;  // std dev = 4.641, 142.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | | else return -0.11801310328889647;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05595624455037264;  // std dev = 0.479, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.09019646466215234;  // std dev = 2.591, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.01353943797951395;  // std dev = 6.727, 289.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=57 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.019718829754387945;  // std dev = 4.641, 142.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | | else return -0.10629992911442582;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04398968437712176;  // std dev = 0.479, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.009574488927864874;  // std dev = 6.534, 278.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=53 */
%   | | | else return 0.07320467768772412;  // std dev = 3.042, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.13412523430730133;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.020118649644752597;  // std dev = 4.629, 141.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03440720802022784;  // std dev = 0.479, 3,468.000 (wgt'ed) examples reached here.  /* #neg=2,219 #pos=1,249 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07586631430227246;  // std dev = 2.591, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.008335011593932101;  // std dev = 6.722, 289.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=57 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.11137525369665997;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.02145264092346351;  // std dev = 4.621, 136.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=27 */


Results
   AUC ROC   = 0.682065
   AUC PR    = 0.625082
   CLL	      = -0.542702
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 166.856 seconds
Total inference time: 0.915 seconds
AUC ROC: 0.682065


Results scoring model
   AUC ROC   = 0.626041
   AUC PR    = 0.575289
   CLL	      = -0.603449
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.155444
   F1        = 0.269063


Total scoring time: 2.473 seconds
Refined model CLL: -0.603449


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682065
   AUC PR    = 0.625082
   CLL	      = -0.542702
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 174.768 seconds
Total inference time: 0.915 seconds
AUC ROC: 0.682065
Total revision time: 174.768
Best scored revision CLL: -0.603449


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:08:36
{'AUC ROC': 0.682065, 'AUC PR': 0.625082, 'CLL': -0.542702, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 174.768, 'Inference time': 0.915, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555495, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 4.153, 'Inference time': 0.725}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.1988981269610778;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.1729215226142326;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.1473668268045655;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.12333741618295051;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.10162299983068986;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.86e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.08264646341702446;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.06650738025274071;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.05307344733346719;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.04207637856238972;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.033188773700249606;  // std dev = 34.371, 5,259.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,792 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555535
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.657 seconds
Total inference time: 0.699 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.577159
   AUC PR    = 0.540868
   CLL	      = -0.61287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.154318
   F1        = 0.267375


Total scoring time: 1.346 seconds
Parameter learned model CLL: -0.61287


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [34.371, 3, 1]}]]
[{'': [3.3028286188237073e-15, 0.2246391801072001]}, {'': [-5.041159470836185e-15, 0.2246391801072179]}, {'': [-4.3458271300311937e-16, 0.22463918010732079]}, {'': [-9.560819686068626e-16, 0.22463918010719824]}, {'': [-6.301449338545231e-16, 0.22463918010718983]}, {'': [4.563118486532754e-16, 0.2246391801072179]}, {'': [1.8469765302632573e-16, 0.22463918010724188]}, {'': [2.3358820823917666e-16, 0.22463918010723397]}, {'': [-2.281559243266377e-16, 0.22463918010724815]}, {'': [-2.091429306327512e-16, 0.22463918010721468]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21502625851958151;  // std dev = 31.430, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.1669724645112784;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.47633075328133145;  // std dev = 5.095, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07583600992944498;  // std dev = 7.076, 294.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=64 */
%   | | | else return 0.020120766085427504;  // std dev = 4.390, 142.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.030191945852199673;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18678509154154468;  // std dev = 31.430, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.14540748819909438;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3869643529850991;  // std dev = 4.234, 75.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | | else return 0.47824830712476907;  // std dev = 2.988, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15080074214669167;  // std dev = 3.234, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.038032306736288136;  // std dev = 7.606, 385.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=71 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14310846764975868;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02656871925747478;  // std dev = 5.206, 187.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=33 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1587736207423248;  // std dev = 31.430, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.12454431536818707;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5581411580647906;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.32727539105272335;  // std dev = 5.078, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06101108138699835;  // std dev = 7.059, 294.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=64 */
%   | | | else return 0.012666183372563906;  // std dev = 4.389, 142.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020876984842482467;  // std dev = 5.150, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.12393325089185987;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1323394986406586;  // std dev = 31.430, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.10508265943671474;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4260794867224648;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.25585351755756386;  // std dev = 5.078, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.028984504223735986;  // std dev = 7.483, 372.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=69 */
%   | | | else return 0.10877329117914677;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10582673424584552;  // std dev = 0.970, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.020913972164211852;  // std dev = 5.103, 178.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10849734689008021;  // std dev = 31.403, 4,301.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,533 */
%   | | | else return 0.08704876726299857;  // std dev = 6.726, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17617275325514542;  // std dev = 4.208, 75.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | | else return 0.24947606772073494;  // std dev = 2.975, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11972117454067668;  // std dev = 3.228, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.024031302888671554;  // std dev = 7.596, 385.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=71 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12746787041085808;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.015011521965228992;  // std dev = 5.194, 187.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=33 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.86e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08773431011669595;  // std dev = 31.429, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.0706683152675892;  // std dev = 6.602, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27227538991914485;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14487828410857037;  // std dev = 5.072, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09941633301158467;  // std dev = 2.832, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.02351045375039656;  // std dev = 7.783, 393.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010262880488290754;  // std dev = 5.153, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.10844490610966694;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07019412069586876;  // std dev = 31.401, 4,301.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,533 */
%   | | | else return 0.05648701375717488;  // std dev = 6.731, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09482441580724886;  // std dev = 4.205, 75.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | | else return 0.15022008450624322;  // std dev = 2.972, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04085393283109578;  // std dev = 7.026, 294.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=64 */
%   | | | else return -0.0027447110683247885;  // std dev = 4.382, 142.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1019105409272118;  // std dev = 0.953, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.010912374894576275;  // std dev = 5.060, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05564217228852237;  // std dev = 31.401, 4,301.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,533 */
%   | | | else return 0.04542461208687003;  // std dev = 6.732, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07128268469274116;  // std dev = 4.206, 75.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | | | else return 0.11335840364453115;  // std dev = 2.973, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09612851039795654;  // std dev = 3.205, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.015590567546692564;  // std dev = 7.590, 385.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09798713154155198;  // std dev = 0.969, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.008772249143718023;  // std dev = 5.095, 178.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0438155523752014;  // std dev = 31.428, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,536 */
%   | | | else return 0.03615558414674747;  // std dev = 6.607, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2251944278315578;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.055120267265074734;  // std dev = 5.056, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011254771413336537;  // std dev = 7.454, 372.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=69 */
%   | | | else return 0.07897088077417616;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.11953314707227143;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0051478279758335995;  // std dev = 5.185, 187.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034350120481201535;  // std dev = 31.401, 4,301.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,533 */
%   | | | else return 0.028309534302809955;  // std dev = 6.734, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03394237551391023;  // std dev = 3.967, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | | else return 0.07400908638945872;  // std dev = 3.273, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009634149627021818;  // std dev = 7.454, 372.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=69 */
%   | | | else return 0.06648430620364415;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.08573951208186978;  // std dev = 0.969, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.007504183248695276;  // std dev = 5.092, 178.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=32 */


Results
   AUC ROC   = 0.677987
   AUC PR    = 0.622346
   CLL	      = -0.547337
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 768.773 seconds
Total inference time: 1.598 seconds
AUC ROC: 0.677987


Results scoring model
   AUC ROC   = 0.627651
   AUC PR    = 0.578742
   CLL	      = -0.600671
   Precision = 0.903153 at threshold = 0.5
   Recall    = 0.18924
   F1        = 0.312915


Total scoring time: 21.283 seconds
Refined model CLL: -0.600671


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677987
   AUC PR    = 0.622346
   CLL	      = -0.547337
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 797.0590000000001 seconds
Total inference time: 1.598 seconds
AUC ROC: 0.677987
Total revision time: 797.0590000000001
Best scored revision CLL: -0.600671


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:21:56
{'AUC ROC': 0.677987, 'AUC PR': 0.622346, 'CLL': -0.547337, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 797.0590000000001, 'Inference time': 1.598, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555535, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.657, 'Inference time': 0.699}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.432 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 1.437 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027532;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331555;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6400564718493374;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.368812845460615;  // std dev = 5.906, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451661;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1605192001234706;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.11289879459957766;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2985975937166098;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.334943814902431;  // std dev = 3.638, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033254011027631945;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031226012289467;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403078;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23068462036726306;  // std dev = 4.757, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2717384784692037;  // std dev = 3.639, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11908733057402582;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027779231969854327;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02637116177616474;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10964998699963195;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816065;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17639000238257224;  // std dev = 4.755, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20998630734759602;  // std dev = 3.639, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10147787156109828;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.024034907228854232;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07034535483845093;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025606608078599956;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809339;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.061407742638899414;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12950733173242918;  // std dev = 4.750, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.165690435847814;  // std dev = 3.641, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022164076138753933;  // std dev = 8.381, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06453490595170909;  // std dev = 3.627, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11166473589769363;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.02131150838241757;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514476;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.30055770805377513;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.09811617791952827;  // std dev = 5.896, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09422799105517163;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.015998606864273398;  // std dev = 8.484, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07559163948714119;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.020308154204782925;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0561420162163009;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.039471451616439265;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22853013380439466;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07362450066179567;  // std dev = 5.896, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08246121724270167;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013778434140105393;  // std dev = 8.482, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014642772719667338;  // std dev = 5.928, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09277245361262962;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393084;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502923;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17716357785283707;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.055239302587515395;  // std dev = 5.896, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0685458167924854;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01180221465180452;  // std dev = 8.482, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012576417711283183;  // std dev = 5.928, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08525821185764125;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773518;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.024640335297715237;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03295504345206508;  // std dev = 4.730, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.06809861348180887;  // std dev = 3.637, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02673704688351031;  // std dev = 7.633, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.009902697781579477;  // std dev = 4.973, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010785721249888455;  // std dev = 5.928, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07884345928741311;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.677993
   AUC PR    = 0.622347
   CLL	      = -0.546029
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 935.509 seconds
Total inference time: 1.467 seconds
AUC ROC: 0.677993


Results scoring model
   AUC ROC   = 0.624992
   AUC PR    = 0.573607
   CLL	      = -0.603339
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 24.523 seconds
Refined model CLL: -0.603339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.677993
   AUC PR    = 0.622347
   CLL	      = -0.546029
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 968.9010000000001 seconds
Total inference time: 1.467 seconds
AUC ROC: 0.677993
Total revision time: 968.9010000000001
Best scored revision CLL: -0.603339


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 09:38:08
{'AUC ROC': 0.677993, 'AUC PR': 0.622347, 'CLL': -0.546029, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 968.9010000000001, 'Inference time': 1.467, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.432, 'Inference time': 0.741}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.15563716115916207;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.13561594181247352;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.47e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.11636364885919641;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.09846066865519199;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.08229861247285283;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.06807439122455095;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.05581897523192809;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.045442364123842144;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 6.32e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.036779507543108034;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.71e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else return 0.02962850696350011;  // std dev = 16.317, 1,274.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=379 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.800431
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1.894 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.577951
   AUC PR    = 0.503294
   CLL	      = -0.584953
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.155902
   F1        = 0.26975


Total scoring time: 1.01 seconds
Parameter learned model CLL: -0.584953


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.47e-08, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.32e-08, 0, 70], 'false': [16.317, 895, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.71e-08, 0, 70], 'false': [16.317, 895, 379]}]]
[{'': [-1.2180732613030289e-15, 0.20898898141551633]}, {'': [4.0602442043434295e-16, 0.2089889814155263]}, {'': [6.0903663065151445e-16, 0.2089889814155473]}, {'': [-1.0150610510858574e-16, 0.2089889814155337]}, {'': [-3.2989484160290367e-16, 0.20898898141553895]}, {'': [-3.8064789415719653e-17, 0.20898898141553116]}, {'': [-8.247371040072592e-17, 0.20898898141554034]}, {'': [0.0, 0.20898898141553646]}, {'': [5.709718412357947e-17, 0.20898898141554137]}, {'': [3.172065784643304e-17, 0.20898898141553857]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17509978765718054;  // std dev = 14.692, 997.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=316 */
%   | | | else return 0.261657707029336;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.030049822664462805;  // std dev = 3.998, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07187602851154071;  // std dev = 1.938, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.16453017924867933;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16003483650370448;  // std dev = 15.031, 1,030.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=335 */
%   | | | else return 0.25843961744447513;  // std dev = 2.563, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.39272921274552614;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.008171559263245115;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07170431399728658;  // std dev = 1.753, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.026431095746504173;  // std dev = 3.998, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.06e-07, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12966768446561394;  // std dev = 14.686, 997.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=316 */
%   | | | else return 0.20222780470590165;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3128212590037161;  // std dev = 2.115, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.09953833485129883;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08548551269436133;  // std dev = 1.731, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.13352474314429796;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.20054383110964016;  // std dev = 1.669, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.023312514861267293;  // std dev = 3.998, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1155723698984692;  // std dev = 14.789, 1,000.000 (wgt'ed) examples reached here.  /* #neg=676 #pos=324 */
%   | | | else return 0.051680725642295325;  // std dev = 3.265, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25085861385121394;  // std dev = 2.117, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.08310834460602225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07339685230912951;  // std dev = 1.730, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.009322358650643655;  // std dev = 3.381, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -2.524424707718772E-4;  // std dev = 2.763, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else return -0.17055359449950808;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08967177547099862;  // std dev = 14.682, 997.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=316 */
%   | | | else return 0.15367466785218686;  // std dev = 3.701, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19530277192710496;  // std dev = 2.117, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.0686608035347795;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2899910539113599;  // std dev = 1.310, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.026949252150404352;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04552861666342066;  // std dev = 1.741, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.01970931184735931;  // std dev = 3.997, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.11155813535595314;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07139776354692288;  // std dev = 1.511, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13104707904845664;  // std dev = 2.546, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.07836963896844241;  // std dev = 15.016, 1,029.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=336 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.05609667611723748;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.12364081571746909;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.13589134278288184;  // std dev = 1.625, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.017474584389059016;  // std dev = 3.997, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06482167188046539;  // std dev = 14.779, 1,000.000 (wgt'ed) examples reached here.  /* #neg=676 #pos=324 */
%   | | | else return 0.0025551167762560075;  // std dev = 3.251, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1308449130262148;  // std dev = 2.164, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.039868190908433444;  // std dev = 1.388, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.047179492287965225;  // std dev = 1.729, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.00830561257255155;  // std dev = 3.329, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -3.513782351837597E-4;  // std dev = 2.762, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | | else return -0.15450857902274834;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04662283382518983;  // std dev = 14.672, 997.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=316 */
%   | | | else return 0.10205036732127618;  // std dev = 3.697, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10523967208401436;  // std dev = 2.132, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.022888716872101082;  // std dev = 1.434, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19772289784538716;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.035123226505849266;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02702251241054203;  // std dev = 1.733, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.014757823183875515;  // std dev = 3.996, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 6.32e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04259745437835197;  // std dev = 14.777, 1,000.000 (wgt'ed) examples reached here.  /* #neg=676 #pos=324 */
%   | | | else return -0.014979161548220285;  // std dev = 3.241, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.16710206229655059;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04423225103022224;  // std dev = 2.433, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15041948636463;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02954275402065648;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018849991139906378;  // std dev = 3.335, 110.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=13 */
%   | | | else return 0.005344032854401133;  // std dev = 2.801, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.71e-08, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.021591771710310743;  // std dev = 1.877, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.2101009932458571;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034123364711863356;  // std dev = 15.014, 1,030.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=335 */
%   | | | else return 0.023731339131892307;  // std dev = 2.511, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.12712680099084797;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1025427812882386;  // std dev = 1.337, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.025519946008563863;  // std dev = 1.733, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.012191700532021841;  // std dev = 3.995, 161.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=18 */


Results
   AUC ROC   = 0.569512
   AUC PR    = 0.705146
   CLL	      = -0.787709
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 137.906 seconds
Total inference time: 1.842 seconds
AUC ROC: 0.569512


Results scoring model
   AUC ROC   = 0.657602
   AUC PR    = 0.561509
   CLL	      = -0.56642
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.167038
   F1        = 0.283019


Total scoring time: 4.079 seconds
Refined model CLL: -0.56642


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.569512
   AUC PR    = 0.705146
   CLL	      = -0.787709
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.136187
   F1        = 0.239726


Total learning time: 144.889 seconds
Total inference time: 1.842 seconds
AUC ROC: 0.569512
Total revision time: 144.889
Best scored revision CLL: -0.56642


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:40:36
{'AUC ROC': 0.569512, 'AUC PR': 0.705146, 'CLL': -0.787709, 'Precision': [1.0, 0.5], 'Recall': 0.136187, 'F1': 0.239726, 'Learning time': 144.889, 'Inference time': 1.842, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.800431, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1.894, 'Inference time': 0.723}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995102;  // std dev = 8.00e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.1568959985294211;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109557;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.13670392045696278;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.21e-08, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.11727414956608812;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.00e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.09919972985285509;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.15e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.08288176119970152;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694896;  // std dev = 1.33e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.06852264252669943;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253529;  // std dev = 2.21e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.05615519937623383;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.0456886422463669;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.036955570510371905;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.58e-08, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else return 0.0297510562815705;  // std dev = 23.131, 2,554.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=763 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.798923
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.819 seconds
Total inference time: 0.739 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.575167
   AUC PR    = 0.498392
   CLL	      = -0.58689
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150334
   F1        = 0.261375


Total scoring time: 1.126 seconds
Parameter learned model CLL: -0.58689


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8e-07, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4e-07, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.15e-07, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.33e-07, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.21e-07, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 135], 'false': [23.131, 1, 763]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 135], 'false': [23.131, 1, 763]}]]
[{'': [4.736951571734001e-15, 0.20949725552194182]}, {'': [-2.0000462191765784e-15, 0.20949725552194087]}, {'': [1.7895150382106225e-15, 0.20949725552189605]}, {'': [1.1842378929335002e-15, 0.20949725552192552]}, {'': [3.4211316906967787e-16, 0.20949725552191084]}, {'': [1.3158198810372225e-16, 0.2094972555219261]}, {'': [3.618504672852362e-16, 0.20949725552192267]}, {'': [-2.8290127442300287e-16, 0.20949725552191623]}, {'': [-4.2764146133709734e-17, 0.20949725552191795]}, {'': [2.3026847918151394e-17, 0.20949725552190873]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995102;  // std dev = 8.00e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18215077080395886;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.013726064900488208;  // std dev = 5.979, 320.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=41 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109557;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2222534006475401;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.0745926104841849;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.15823591068788861;  // std dev = 0.468, 2,119.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=686 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.36887697659770574;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.060108107550840964;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.11690238620380397;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.012063399800787123;  // std dev = 5.979, 320.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=41 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.92e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13541767612019207;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1301853458366793;  // std dev = 2.323, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.008551562581682279;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.008484058767760465;  // std dev = 4.997, 217.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=29 */
%   | | | else return 0.00906157030456463;  // std dev = 3.970, 126.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=19 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.00e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16442798302128628;  // std dev = 3.357, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.12678776152287952;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.11403552480618877;  // std dev = 0.468, 2,119.000 (wgt'ed) examples reached here.  /* #neg=1,432 #pos=687 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2994698470440152;  // std dev = 1.298, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05062660713953365;  // std dev = 1.783, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.08534157491449806;  // std dev = 2.402, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.010378230874886315;  // std dev = 5.978, 320.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 2.15e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09428479112023834;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23636753402924965;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04370996200465661;  // std dev = 1.784, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07183794992302255;  // std dev = 2.401, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.00914454949068781;  // std dev = 5.978, 320.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694896;  // std dev = 1.33e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0771802623455811;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.0817882740662518;  // std dev = 2.295, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.00894993211510771;  // std dev = 4.928, 219.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=29 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.012675597993420844;  // std dev = 4.109, 126.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=20 */
%   | | | else return -0.15501146314741032;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253529;  // std dev = 2.21e-07, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06255578323572905;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.0672973747028045;  // std dev = 2.294, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.032522822804645836;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0797624988045023;  // std dev = 2.136, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.00783289528892612;  // std dev = 5.976, 320.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05029950608658302;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12109524290211861;  // std dev = 1.956, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.029416274203088132;  // std dev = 0.989, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.013627405917678146;  // std dev = 5.039, 226.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=30 */
%   | | | else return 0.0163644123719141;  // std dev = 4.006, 123.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.040188945659185044;  // std dev = 0.468, 2,179.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=706 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05636329520998666;  // std dev = 2.285, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.029184094100934786;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.010486381343924758;  // std dev = 4.986, 217.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=29 */
%   | | | else return 0.011084650333023615;  // std dev = 3.930, 126.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.58e-08, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08189748621013015;  // std dev = 3.413, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.15538436647496456;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.03176821913800767;  // std dev = 0.468, 2,119.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=686 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0457403573815878;  // std dev = 2.284, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.024628811590819047;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.009216325990630169;  // std dev = 4.986, 217.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=29 */
%   | | | else return 0.009759870841572;  // std dev = 3.930, 126.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=19 */


Results
   AUC ROC   = 0.580053
   AUC PR    = 0.71118
   CLL	      = -0.786702
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 64.831 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.580053


Results scoring model
   AUC ROC   = 0.630408
   AUC PR    = 0.532571
   CLL	      = -0.574523
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.151448
   F1        = 0.263056


Total scoring time: 1.445 seconds
Refined model CLL: -0.574523


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.580053
   AUC PR    = 0.71118
   CLL	      = -0.786702
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 70.22099999999999 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.580053
Total revision time: 70.22099999999999
Best scored revision CLL: -0.574523


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:41:48
{'AUC ROC': 0.580053, 'AUC PR': 0.71118, 'CLL': -0.786702, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 70.22099999999999, 'Inference time': 0.936, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.798923, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.819, 'Inference time': 0.739}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.15242113688615985;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.13283576009740092;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.80e-08, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.11403527277176911;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.09656838829043173;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.0808030218255861;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.066922366157016;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.05495272105581076;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5.96e-08, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.0448060170062217;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.036323054957573465;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else return 0.029309516605744212;  // std dev = 28.114, 3,806.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,120 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804324
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.034 seconds
Total inference time: 0.697 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.584261
   AUC PR    = 0.513905
   CLL	      = -0.580276
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168523
   F1        = 0.288437


Total scoring time: 1.185 seconds
Parameter learned model CLL: -0.580276


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.8e-08, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.26e-07, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 227], 'false': [28.114, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 227], 'false': [28.114, 2, 1]}]]
[{'': [5.133436505050944e-15, 0.20767607304231422]}, {'': [-4.13179035772393e-15, 0.2076760730423206]}, {'': [1.4398663367825818e-15, 0.20767607304228441]}, {'': [-3.1301442103969174e-17, 0.20767607304226876]}, {'': [4.695216315595376e-16, 0.20767607304229996]}, {'': [3.443158631436609e-16, 0.20767607304227412]}, {'': [3.7561730524763006e-16, 0.2076760730422621]}, {'': [1.5650721051984587e-17, 0.207676073042274]}, {'': [-1.525945302568497e-16, 0.20767607304230326]}, {'': [4.303948289295761e-17, 0.20767607304230865]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.08e-06, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17648379888891647;  // std dev = 0.466, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.0034977723088142477;  // std dev = 4.622, 172.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=25 */
%   | | | else return 0.02208336132901982;  // std dev = 5.008, 183.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=30 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0014016266982408761;  // std dev = 4.636, 178.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13527948622748917;  // std dev = 4.347, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.8352794862274896;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15327507399930318;  // std dev = 0.466, 3,173.000 (wgt'ed) examples reached here.  /* #neg=2,164 #pos=1,009 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.35759945699669404;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.062078812041741434;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.016158690781186116;  // std dev = 5.839, 310.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=39 */
%   | | | else return 0.021818956205748665;  // std dev = 4.999, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.72e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1313499817121695;  // std dev = 0.466, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00730654263322338;  // std dev = 6.436, 321.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=49 */
%   | | | else return 0.035677786608736814;  // std dev = 2.224, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -6.299068576403501E-4;  // std dev = 4.622, 178.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=25 */
%   | | | else return -0.12785798582543187;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583106;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10288937052562967;  // std dev = 4.314, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | | else return 0.6033497246180979;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.10983848734221625;  // std dev = 0.465, 3,174.000 (wgt'ed) examples reached here.  /* #neg=2,166 #pos=1,008 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12012225879854226;  // std dev = 2.565, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.024941045372804036;  // std dev = 1.268, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.014930654713547117;  // std dev = 5.838, 310.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=39 */
%   | | | else return 0.018631033643463454;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.26e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15830244994959125;  // std dev = 4.236, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | | else return -0.1162803566461028;  // std dev = 1.164, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return 0.09118254815827197;  // std dev = 0.465, 3,174.000 (wgt'ed) examples reached here.  /* #neg=2,166 #pos=1,008 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.014229927637341173;  // std dev = 5.700, 249.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=39 */
%   | | | else return -0.03383814316187068;  // std dev = 3.140, 103.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.17074597061526728;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.01627866322909539;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07525936111414083;  // std dev = 0.465, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3111135136250039;  // std dev = 0.999, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04442297181522327;  // std dev = 2.647, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013056681698823716;  // std dev = 5.837, 310.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=39 */
%   | | | else return 0.014198011789854517;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06115119550521476;  // std dev = 0.465, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09846838277217632;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.03507939487838477;  // std dev = 1.209, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.011502821145048801;  // std dev = 5.837, 310.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=39 */
%   | | | else return 0.012363933676009832;  // std dev = 4.997, 181.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527758;  // std dev = 5.96e-08, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.03895202982581174;  // std dev = 4.274, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | | else return 0.4251054938835872;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06664523324586999;  // std dev = 4.321, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.04837912618325564;  // std dev = 25.858, 3,088.000 (wgt'ed) examples reached here.  /* #neg=2,109 #pos=979 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.08386147497660396;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.004033807253555829;  // std dev = 6.266, 322.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=46 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.002075831771516357;  // std dev = 4.607, 178.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=25 */
%   | | | else return -0.1206362884942991;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03946755703544132;  // std dev = 0.465, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41971199232692447;  // std dev = 1.276, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.042095599826720315;  // std dev = 1.922, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03810956770186773;  // std dev = 2.711, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return -0.004513211833339773;  // std dev = 7.294, 447.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=62 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 9.88e-08, 227.000 (wgt'ed) examples reached here.  /* #pos=227 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03146729367259232;  // std dev = 0.465, 3,267.000 (wgt'ed) examples reached here.  /* #neg=2,227 #pos=1,040 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3578304769694138;  // std dev = 1.267, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03713910845111572;  // std dev = 1.922, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.00472995067392838;  // std dev = 6.092, 317.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=44 */
%   | | | else return 0.006590814001130859;  // std dev = 4.844, 174.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=28 */


Results
   AUC ROC   = 0.575463
   AUC PR    = 0.707642
   CLL	      = -0.792729
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 128.98 seconds
Total inference time: 1.006 seconds
AUC ROC: 0.575463


Results scoring model
   AUC ROC   = 0.632495
   AUC PR    = 0.543599
   CLL	      = -0.568781
   Precision = 0.995708 at threshold = 0.5
   Recall    = 0.172235
   F1        = 0.293671


Total scoring time: 2.224 seconds
Refined model CLL: -0.568781


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.575463
   AUC PR    = 0.707642
   CLL	      = -0.792729
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 136.42299999999997 seconds
Total inference time: 1.006 seconds
AUC ROC: 0.575463
Total revision time: 136.42299999999997
Best scored revision CLL: -0.568781


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:44:07
{'AUC ROC': 0.575463, 'AUC PR': 0.707642, 'CLL': -0.792729, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 136.42299999999997, 'Inference time': 1.006, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804324, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.034, 'Inference time': 0.697}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.15205786472694655;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.13252165975570748;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.11377206179174691;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.09635426625632873;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.08063356067970531;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.06679161563107988;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.05485420980395013;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.46e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.04473348440439419;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.03627088774359271;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else return 0.029272943509770947;  // std dev = 32.447, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,491 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.804767
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.641 seconds
Total inference time: 0.736 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.584911
   AUC PR    = 0.514957
   CLL	      = -0.579769
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.169822
   F1        = 0.290338


Total scoring time: 1.375 seconds
Parameter learned model CLL: -0.579769


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 305], 'false': [32.447, 3, 1]}]]
[{'': [3.634251369789365e-15, 0.20752647071263627]}, {'': [-4.845668493052486e-15, 0.20752647071274247]}, {'': [-1.397788988380525e-16, 0.20752647071269326]}, {'': [-8.153769098886396e-16, 0.20752647071270633]}, {'': [-3.145025223856181e-16, 0.20752647071269759]}, {'': [4.309849380839952e-16, 0.20752647071269653]}, {'': [2.0966834825707875e-16, 0.20752647071271585]}, {'': [1.9802010668724104e-16, 0.2075264707127002]}, {'': [-2.1258040864953816e-16, 0.20752647071270827]}, {'': [-1.5725126119280905e-16, 0.2075264707126744]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17538400033182577;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.02634465375394662;  // std dev = 6.764, 327.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=55 */
%   | | | else return -0.00949812372401706;  // std dev = 3.952, 136.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.002720630117879647;  // std dev = 5.249, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.13977857523919068;  // std dev = 4.934, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.8354307491522345;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15221116807433696;  // std dev = 0.465, 4,249.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,346 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.25633891339942594;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.028833951943141835;  // std dev = 2.882, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.04708113936641109;  // std dev = 3.110, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return -0.004788751094962007;  // std dev = 8.248, 572.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=79 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13056324024139232;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09963816158472534;  // std dev = 2.990, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.05770212811350601;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04507060509114814;  // std dev = 3.097, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return -0.004203257338932801;  // std dev = 8.248, 572.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=79 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10992808262457764;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2158145824854126;  // std dev = 1.543, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.019729285215609887;  // std dev = 2.879, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010282558924622476;  // std dev = 6.765, 398.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=53 */
%   | | | else return 0.017438697173250993;  // std dev = 5.643, 237.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=38 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08066743612582204;  // std dev = 4.934, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.6338325191906817;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0909337264857629;  // std dev = 0.465, 4,249.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,346 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08682912970216607;  // std dev = 2.980, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.05378417916122651;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007701595890013186;  // std dev = 6.819, 402.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=54 */
%   | | | else return 0.012801631571679987;  // std dev = 5.571, 232.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.63e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0853105967836997;  // std dev = 4.851, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.5751264423509472;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09715423915238693;  // std dev = 4.868, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | | else return 0.07317914502681191;  // std dev = 29.914, 4,145.000 (wgt'ed) examples reached here.  /* #neg=2,838 #pos=1,307 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.07463322183982303;  // std dev = 2.979, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.047265291509328296;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.03307897033991964;  // std dev = 3.087, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return -0.00380077483307095;  // std dev = 8.245, 572.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=79 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06085617483145938;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07545512047394057;  // std dev = 2.992, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.06604251848314564;  // std dev = 1.267, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010302848885010846;  // std dev = 6.754, 398.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=53 */
%   | | | else return 0.015102697329110818;  // std dev = 5.642, 237.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=38 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452766;  // std dev = 2.46e-07, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04909118622063397;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.06487088550324982;  // std dev = 2.991, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -2.894561507397461E-4;  // std dev = 7.181, 413.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=61 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.15197534885580316;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.001057364182363145;  // std dev = 5.232, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03935507460262097;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2257852755342317;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.007872781379650855;  // std dev = 2.927, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.007457481534230778;  // std dev = 6.808, 402.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=54 */
%   | | | else return 0.009104109676110061;  // std dev = 5.572, 232.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #pos=305 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.031394730407026235;  // std dev = 0.465, 4,369.000 (wgt'ed) examples reached here.  /* #neg=2,983 #pos=1,386 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.014328331339179025;  // std dev = 6.721, 327.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=55 */
%   | | | else return -0.017359658533353667;  // std dev = 3.904, 136.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 9.852094472455387E-4;  // std dev = 5.238, 230.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=32 */
%   | | | else return -0.12405026712643387;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.569038
   AUC PR    = 0.701986
   CLL	      = -0.794083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 143.573 seconds
Total inference time: 0.92 seconds
AUC ROC: 0.569038


Results scoring model
   AUC ROC   = 0.630564
   AUC PR    = 0.542605
   CLL	      = -0.56931
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172606
   F1        = 0.294397


Total scoring time: 2.334 seconds
Refined model CLL: -0.56931


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.569038
   AUC PR    = 0.701986
   CLL	      = -0.794083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 152.923 seconds
Total inference time: 0.92 seconds
AUC ROC: 0.569038
Total revision time: 152.923
Best scored revision CLL: -0.56931


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 09:46:42
{'AUC ROC': 0.569038, 'AUC PR': 0.701986, 'CLL': -0.794083, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 152.923, 'Inference time': 0.92, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.804767, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.641, 'Inference time': 0.736}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.94 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 1.389 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.003742804831313513;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1491187042259335;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.11697060028902619;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5793848079313582;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2830126983065742;  // std dev = 5.657, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.00328658464620897;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008483607059122275;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12764853140692306;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117945;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.47039829901803554;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23578322561551432;  // std dev = 5.655, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09624124323568949;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06632006140613476;  // std dev = 1.356, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06555354714967836;  // std dev = 3.667, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0022947716043269276;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022588;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649282;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23824884494565765;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.15005926713350645;  // std dev = 3.705, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11829604081851137;  // std dev = 3.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07750870491246355;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.035758807219455284;  // std dev = 3.631, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020141490310582513;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117457;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.0704903719682736;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1950868446378731;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10699441144519187;  // std dev = 3.680, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07687458477455715;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06381175635779184;  // std dev = 1.358, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0489753362378884;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001768222199639869;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032776;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583279;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15291425337041376;  // std dev = 4.450, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07983316574537619;  // std dev = 3.672, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09605559525045522;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07435146134016202;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0021078234518535346;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006458341064449837;  // std dev = 6.113, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316851;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.047419046470391135;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12358798389164703;  // std dev = 4.459, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.051528970696062805;  // std dev = 3.650, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08184067146647032;  // std dev = 3.497, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06521715822261528;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0023378265333484035;  // std dev = 8.011, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006799344975823804;  // std dev = 6.045, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982614;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664084;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2564401388409051;  // std dev = 1.212, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.05835141456489865;  // std dev = 5.613, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19272328231528837;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00853623182038268;  // std dev = 3.400, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.024306218157068897;  // std dev = 3.621, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018291806406852522;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.038999069347984965;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.031153486904014524;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18522331921992555;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04481483610330611;  // std dev = 5.614, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18691696843040348;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 8.156362293835196E-4;  // std dev = 3.390, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.023829599569599156;  // std dev = 3.615, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016060646184701721;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859776;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290294;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06380473628917498;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.008375536388730006;  // std dev = 3.633, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.012130922866875941;  // std dev = 7.430, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.014285308172667637;  // std dev = 4.610, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005808622960959723;  // std dev = 6.180, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.11024912576733784;  // std dev = 0.013, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 848.455 seconds
Total inference time: 2.227 seconds
AUC ROC: 0.566386


Results scoring model
   AUC ROC   = 0.638595
   AUC PR    = 0.553504
   CLL	      = -0.56687
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 20.91 seconds
Refined model CLL: -0.56687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566386
   AUC PR    = 0.701208
   CLL	      = -0.791136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 877.694 seconds
Total inference time: 2.227 seconds
AUC ROC: 0.566386
Total revision time: 877.694
Best scored revision CLL: -0.56687


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 10:01:23
{'AUC ROC': 0.566386, 'AUC PR': 0.701208, 'CLL': -0.791136, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 877.694, 'Inference time': 2.227, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.94, 'Inference time': 0.728}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.2784387901719713;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.24105811671161034;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.20282525690527736;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.16634413898553696;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.1335628559815732;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.10548933552137592;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.08230369318374797;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.06364990991682011;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.04891610217109285;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.03742637823642788;  // std dev = 15.342, 966.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=406 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559743
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1.641 seconds
Total inference time: 0.887 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583162
   AUC PR    = 0.620424
   CLL	      = -0.639133
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166324
   F1        = 0.285211


Total scoring time: 0.93 seconds
Parameter learned model CLL: -0.639133


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.8e-08, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [15.342, 560, 406]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 81], 'false': [15.342, 560, 406]}]]
[{'': [-7.894919286223335e-16, 0.24364629279561792]}, {'': [7.894919286223335e-16, 0.24364629279563602]}, {'': [1.4474018691409447e-15, 0.24364629279562106]}, {'': [8.77213254024815e-17, 0.24364629279563257]}, {'': [-2.8509430755806487e-16, 0.24364629279562267]}, {'': [-4.386066270124075e-17, 0.24364629279562947]}, {'': [-8.22387425648264e-17, 0.24364629279563668]}, {'': [1.644774851296528e-17, 0.2436462927956372]}, {'': [-4.9343245538895844e-17, 0.24364629279562916]}, {'': [3.8378079863585656e-17, 0.24364629279563668]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.29681064513668237;  // std dev = 14.097, 807.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=354 */
%   | | | else return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06968739663797391;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.013645936695359509;  // std dev = 2.088, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.257861318047769;  // std dev = 0.496, 831.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7836903250791358;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3087411357856347;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.47128972411722725;  // std dev = 1.368, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.007055904457406526;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.060055798543728445;  // std dev = 2.952, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.014573311662663933;  // std dev = 2.078, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21621622893496706;  // std dev = 0.496, 831.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6248223069634062;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25641236875858664;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.6496934417950018;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1429711526428804;  // std dev = 1.529, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.059488568923215496;  // std dev = 2.938, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.018686404984827966;  // std dev = 2.086, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.39361118505997555;  // std dev = 1.693, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.021928198474347446;  // std dev = 1.387, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.17540537507140266;  // std dev = 14.097, 807.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=354 */
%   | | | else return 0.2061374073445397;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.33089575340301314;  // std dev = 1.324, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.04054567549148578;  // std dev = 0.684, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05137007857542772;  // std dev = 2.944, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return -0.01961354129715562;  // std dev = 2.076, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14042874188885104;  // std dev = 0.495, 831.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1358583240674337;  // std dev = 2.121, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.32829524215081346;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.18539501471394584;  // std dev = 2.403, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.004159451427540799;  // std dev = 2.099, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15175444213979744;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.007027272383841641;  // std dev = 2.174, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11018344251617011;  // std dev = 0.495, 831.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.37026931933013835;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11471190423514176;  // std dev = 2.525, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1526108759160226;  // std dev = 2.400, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.0036049484291773896;  // std dev = 2.099, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1332341335751954;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.006094211249572687;  // std dev = 2.174, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23163332469724535;  // std dev = 1.690, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.037358299927516;  // std dev = 1.358, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08502561205817441;  // std dev = 14.097, 807.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=354 */
%   | | | else return 0.08726810137555921;  // std dev = 2.524, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.12361637336259923;  // std dev = 2.399, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.0031231639682402666;  // std dev = 2.099, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009802213878408366;  // std dev = 2.178, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return -0.13243015142765593;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06542886557234223;  // std dev = 0.495, 831.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=366 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.045489637687966954;  // std dev = 2.097, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.2016804895593434;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16071888363457162;  // std dev = 1.337, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.023446319185808195;  // std dev = 2.892, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.008533766249741025;  // std dev = 2.178, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return -0.1179413763915171;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.04820204241744997;  // std dev = 14.190, 823.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=361 */
%   | | | else return 0.08997935641839461;  // std dev = 3.294, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return -0.11668220258059687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04179144060162337;  // std dev = 2.562, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return 0.3213162829184287;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013506715792737415;  // std dev = 2.338, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.20849639381824572;  // std dev = 0.354, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.12327500369018955;  // std dev = 2.152, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.036141115206803846;  // std dev = 14.404, 847.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=367 */
%   | | else return 0.026810193329908052;  // std dev = 0.367, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then return 0.00773192713232254;  // std dev = 0.368, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else return -0.18181037820799328;  // std dev = 0.325, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.648447
   AUC PR    = 0.448246
   CLL	      = -0.542699
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 158.028 seconds
Total inference time: 2.246 seconds
AUC ROC: 0.648447


Results scoring model
   AUC ROC   = 0.64804
   AUC PR    = 0.66955
   CLL	      = -0.615816
   Precision = 0.922414 at threshold = 0.5
   Recall    = 0.219713
   F1        = 0.354892


Total scoring time: 4.233 seconds
Refined model CLL: -0.615816


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.648447
   AUC PR    = 0.448246
   CLL	      = -0.542699
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 164.832 seconds
Total inference time: 2.246 seconds
AUC ROC: 0.648447
Total revision time: 164.832
Best scored revision CLL: -0.615816


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:04:12
{'AUC ROC': 0.648447, 'AUC PR': 0.448246, 'CLL': -0.542699, 'Precision': [0.910714, 0.5], 'Recall': 0.175559, 'F1': 0.294372, 'Learning time': 164.832, 'Inference time': 2.246, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559743, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1.641, 'Inference time': 0.887}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.27993520252335863;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.24233428957610365;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.20384947845256757;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.16712054684127073;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2.98e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.1341230675652087;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.10587741065389265;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.56e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.08256355821562304;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.06381870327164844;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.049022358417744966;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.03749077493349787;  // std dev = 21.735, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=817 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.561008
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.37 seconds
Total inference time: 0.907 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.580595
   AUC PR    = 0.61683
   CLL	      = -0.640901
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.161191
   F1        = 0.27763


Total scoring time: 1.075 seconds
Parameter learned model CLL: -0.640901


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.83e-07, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [21.735, 1, 817]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 157], 'false': [21.735, 1, 817]}]]
[{'': [6.155019876648002e-15, 0.24388261203653058]}, {'': [-2.715449945580001e-15, 0.2438826120364808]}, {'': [1.8555574628130005e-15, 0.24388261203652115]}, {'': [1.3350962232435004e-15, 0.2438826120365104]}, {'': [5.657187386625001e-16, 0.24388261203649947]}, {'': [-2.1497312069175006e-16, 0.24388261203651176]}, {'': [4.186318666102501e-16, 0.24388261203650002]}, {'': [-3.1114530626437506e-16, 0.24388261203650777]}, {'': [-2.3194468285162506e-16, 0.24388261203649117]}, {'': [5.3743280172937514e-17, 0.24388261203652387]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30611544227654086;  // std dev = 0.497, 1,672.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=749 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4581489350995123;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.30045662740720364;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.01141628229179202;  // std dev = 2.798, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.03719990210979;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.26462711486872265;  // std dev = 0.497, 1,672.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=749 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.8088934321586064;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27598129460613885;  // std dev = 3.469, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2598140542673534;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.010032259705424013;  // std dev = 2.798, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.032731629105728646;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.22165509015422333;  // std dev = 0.497, 1,672.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=749 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7216595375354787;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23377537312085173;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3868799553756433;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.04636536633135842;  // std dev = 4.132, 106.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.028898482350066822;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3883034201097067;  // std dev = 2.417, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.045540653532568705;  // std dev = 1.661, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.18012883662536738;  // std dev = 20.082, 1,631.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=730 */
%   | | | else return 0.188171647452281;  // std dev = 3.458, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.19310544552583642;  // std dev = 3.546, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.015852673086141703;  // std dev = 2.786, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02558978825684682;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2.98e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30479385560398237;  // std dev = 2.415, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.03656320521790075;  // std dev = 1.662, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.14339862612051074;  // std dev = 20.082, 1,631.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=730 */
%   | | | else return 0.1480954181353528;  // std dev = 3.454, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.7806322024537575;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.057866226400938414;  // std dev = 1.934, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0967455358361019;  // std dev = 2.219, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.010349412093748555;  // std dev = 4.343, 158.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11211902537069503;  // std dev = 0.497, 1,672.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=749 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1989066200501585;  // std dev = 2.601, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.04875156662062745;  // std dev = 2.277, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14492657973271442;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.016316002911257392;  // std dev = 2.750, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.024722497377623286;  // std dev = 2.806, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.09416427321447333;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.56e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27024482720037923;  // std dev = 2.358, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return -0.13811922155074743;  // std dev = 1.711, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08707502622123396;  // std dev = 20.065, 1,633.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=732 */
%   | | | else return 0.07088141149037415;  // std dev = 3.388, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.21667402104217007;  // std dev = 1.828, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.016024599190620638;  // std dev = 4.059, 106.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=23 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.021967215173723794;  // std dev = 2.806, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.08643414454279141;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18258612769333876;  // std dev = 2.392, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.06519680758089219;  // std dev = 1.684, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06635769656380949;  // std dev = 20.067, 1,631.000 (wgt'ed) examples reached here.  /* #neg=901 #pos=730 */
%   | | | else return 0.0632886458443238;  // std dev = 3.416, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.09846435608911738;  // std dev = 3.490, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.017441789594867706;  // std dev = 2.742, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01956120531111077;  // std dev = 2.807, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.0798490772022275;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.050333679504699046;  // std dev = 0.496, 1,672.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=749 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.43350847223230204;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.037816875919722714;  // std dev = 3.383, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.0763974648867841;  // std dev = 3.489, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return -0.015273881101492578;  // std dev = 2.742, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.017451810715629294;  // std dev = 2.807, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.0741760994162981;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.14511273723694562;  // std dev = 2.900, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | | else return 0.035967204737983705;  // std dev = 20.457, 1,704.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=757 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.023028275819012626;  // std dev = 3.270, 92.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return -0.05250051134982692;  // std dev = 0.388, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.017103062158989584;  // std dev = 3.371, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | | else return -0.08804342777281575;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.38135887358346837;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06924065376884174;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.618865
   AUC PR    = 0.416261
   CLL	      = -0.544724
   Precision = 0.961165 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.289474


Total learning time: 257.883 seconds
Total inference time: 2.068 seconds
AUC ROC: 0.618865


Results scoring model
   AUC ROC   = 0.64728
   AUC PR    = 0.662044
   CLL	      = -0.616012
   Precision = 0.935 at threshold = 0.5
   Recall    = 0.191992
   F1        = 0.318569


Total scoring time: 5.338 seconds
Refined model CLL: -0.616012


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618865
   AUC PR    = 0.416261
   CLL	      = -0.544724
   Precision = 0.961165 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.289474


Total learning time: 266.666 seconds
Total inference time: 2.068 seconds
AUC ROC: 0.618865
Total revision time: 266.666
Best scored revision CLL: -0.616012


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:08:42
{'AUC ROC': 0.618865, 'AUC PR': 0.416261, 'CLL': -0.544724, 'Precision': [0.961165, 0.5], 'Recall': 0.170396, 'F1': 0.289474, 'Learning time': 266.666, 'Inference time': 2.068, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.561008, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.37, 'Inference time': 0.907}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.2778380542704917;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.24054573667176904;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.20241388454069614;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.16603212015052135;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.13333756549415596;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.04e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.10533316183358758;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.08219905325577782;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.06358191464946777;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.0488732941769806;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 5.96e-08, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else return 0.037400443040107374;  // std dev = 26.553, 2,895.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,215 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.216 seconds
Total inference time: 0.919 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.584189
   AUC PR    = 0.621848
   CLL	      = -0.638423
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168378
   F1        = 0.288225


Total scoring time: 1.305 seconds
Parameter learned model CLL: -0.638423


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.04e-07, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 246], 'false': [26.553, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 246], 'false': [26.553, 1, 1]}]]
[{'': [4.621416167545367e-15, 0.24355016242049293]}, {'': [-4.274809954979465e-15, 0.24355016242043034]}, {'': [9.242832335090735e-16, 0.2435501624204456]}, {'': [-2.8883851047158543e-16, 0.2435501624204674]}, {'': [2.310708083772684e-16, 0.2435501624204495]}, {'': [3.754900636130611e-16, 0.24355016242047406]}, {'': [3.393852498041129e-16, 0.24355016242049377]}, {'': [-3.9715295189843e-17, 0.24355016242045802]}, {'': [-1.7691358766384608e-16, 0.24355016242045982]}, {'': [1.4441925523579274e-17, 0.2435501624204558]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.07e-06, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29969172336788813;  // std dev = 0.497, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3713068298363537;  // std dev = 4.357, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.25814893509951103;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.03832911527969242;  // std dev = 4.049, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0021489350995123634;  // std dev = 3.925, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25916323832674076;  // std dev = 0.497, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4490783247512932;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | | | else return 0.2158969030301937;  // std dev = 2.853, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22373365448410532;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.03359898340764262;  // std dev = 4.049, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0018871452646535157;  // std dev = 3.925, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21730605013722898;  // std dev = 0.497, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6283533173242484;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2591914094511319;  // std dev = 4.322, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.18886832215749788;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.029345809292021515;  // std dev = 4.049, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0016569151437053442;  // std dev = 3.925, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.450080762567267;  // std dev = 2.798, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return -0.034317865512090574;  // std dev = 1.971, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.17586780017391793;  // std dev = 24.475, 2,431.000 (wgt'ed) examples reached here.  /* #neg=1,361 #pos=1,070 */
%   | | | else return 0.20526102464222404;  // std dev = 4.276, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.2736338918907145;  // std dev = 2.201, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.057422368480804085;  // std dev = 5.541, 171.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=42 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07041892962341947;  // std dev = 0.962, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.004503625654978115;  // std dev = 3.805, 117.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14118192469785582;  // std dev = 0.496, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5530558143514026;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15983132754376655;  // std dev = 4.272, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.13630406771163325;  // std dev = 4.359, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.016754535241826348;  // std dev = 4.048, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.001833310729805402;  // std dev = 3.923, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.10010489279416179;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.04e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.31232795331071317;  // std dev = 2.775, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return -0.06434921330729775;  // std dev = 1.919, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14754671239407946;  // std dev = 3.929, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.10923024190425351;  // std dev = 24.531, 2,443.000 (wgt'ed) examples reached here.  /* #neg=1,365 #pos=1,078 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.10904655492068263;  // std dev = 4.358, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.014451547233513256;  // std dev = 4.048, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0016095957142384912;  // std dev = 3.923, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.0914419138950984;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08548711804393758;  // std dev = 0.496, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.17947822251085438;  // std dev = 3.197, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | | | else return 0.017198673337852344;  // std dev = 2.798, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.08608767366645462;  // std dev = 4.357, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.012444292535388769;  // std dev = 4.048, 111.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=20 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0014129382150423206;  // std dev = 3.923, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
%   | | | else return -0.08412403526988435;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2141071332816128;  // std dev = 2.775, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return -0.06890714966952897;  // std dev = 1.919, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06521380811668803;  // std dev = 24.475, 2,431.000 (wgt'ed) examples reached here.  /* #neg=1,361 #pos=1,070 */
%   | | | else return 0.06840457361807327;  // std dev = 4.240, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16234364908872717;  // std dev = 2.180, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.019438694498996666;  // std dev = 5.513, 171.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=42 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05996589037756032;  // std dev = 0.961, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.0043542206093891735;  // std dev = 3.802, 117.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04998341610402101;  // std dev = 0.495, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,099 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3150384580840642;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04591299785971192;  // std dev = 4.229, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.12596827314322662;  // std dev = 2.178, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.016128914505361844;  // std dev = 5.512, 171.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=42 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05350474816095044;  // std dev = 0.961, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.003826929646520396;  // std dev = 3.802, 117.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.134007030008011;  // std dev = 5.96e-08, 246.000 (wgt'ed) examples reached here.  /* #pos=246 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3625072981074148;  // std dev = 16.111, 1,467.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=1,117 */
%   | | | else return -0.3583448695234656;  // std dev = 6.031, 1,201.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=33 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.03821070544957055;  // std dev = 4.008, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | | else return -0.04831830256419871;  // std dev = 0.454, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03333221964928667;  // std dev = 4.694, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | | | else return -0.14877513031157424;  // std dev = 0.580, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.41392426033157015;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07617522902572287;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.892829
   AUC PR    = 0.778214
   CLL	      = -0.450002
   Precision = 0.94958 at threshold = 0.5
   Recall    = 0.194492
   F1        = 0.322857


Total learning time: 632.937 seconds
Total inference time: 2.003 seconds
AUC ROC: 0.892829


Results scoring model
   AUC ROC   = 0.889019
   AUC PR    = 0.865689
   CLL	      = -0.522988
   Precision = 0.957746 at threshold = 0.5
   Recall    = 0.232717
   F1        = 0.374449


Total scoring time: 7.237 seconds
Refined model CLL: -0.522988


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.892829
   AUC PR    = 0.778214
   CLL	      = -0.450002
   Precision = 0.94958 at threshold = 0.5
   Recall    = 0.194492
   F1        = 0.322857


Total learning time: 644.6949999999999 seconds
Total inference time: 2.003 seconds
AUC ROC: 0.892829
Total revision time: 644.6949999999999
Best scored revision CLL: -0.522988


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:19:31
{'AUC ROC': 0.892829, 'AUC PR': 0.778214, 'CLL': -0.450002, 'Precision': [0.94958, 0.5], 'Recall': 0.194492, 'F1': 0.322857, 'Learning time': 644.6949999999999, 'Inference time': 2.003, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559237, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.216, 'Inference time': 0.919}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.2788885265140404;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.24144168382026335;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.20313315349078676;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.16657760595777488;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.13373137040888936;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.10560611075630127;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.08238191187467234;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.70e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.06370072627716972;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.0489480929179353;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else return 0.03744576292149557;  // std dev = 30.699, 3,867.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,627 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560123
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.98 seconds
Total inference time: 0.946 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.582392
   AUC PR    = 0.619348
   CLL	      = -0.639664
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164784
   F1        = 0.282944


Total scoring time: 1.241 seconds
Parameter learned model CLL: -0.639664


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.7e-07, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 321], 'false': [30.699, 2, 1]}]]
[{'': [3.364563733194244e-15, 0.24371778763081806]}, {'': [-5.0468455997913656e-15, 0.24371778763078056]}, {'': [-3.541646034941309e-16, 0.24371778763084823]}, {'': [-9.075467964537104e-16, 0.2437177876308609]}, {'': [-5.312469052411964e-16, 0.24371778763084156]}, {'': [4.537733982268552e-16, 0.2437177876308853]}, {'': [1.9368376753585285e-16, 0.2437177876308349]}, {'': [2.268866991134276e-16, 0.24371778763084306]}, {'': [-2.241197881486297e-16, 0.2437177876308609]}, {'': [-1.9645067850065075e-16, 0.24371778763085816]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29749715477361705;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4068215014711947;  // std dev = 5.290, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.24607996958227119;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | | else return 0.056779072085812884;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03314893509951167;  // std dev = 4.806, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25729568968830924;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.43168245346891815;  // std dev = 3.953, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | | else return 0.2896947605894087;  // std dev = 3.559, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.21341021956819103;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | | else return 0.049725858206807735;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09114597453225;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.0329104195511427;  // std dev = 4.706, 152.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21581731398452192;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6295103166898564;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.28425798411916536;  // std dev = 5.274, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.18050480162937207;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | | else return 0.04331337974409107;  // std dev = 4.821, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026525204122581258;  // std dev = 4.800, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | | else return -0.12667842659336326;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17614580646715805;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.47526583708341186;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22548923125751094;  // std dev = 5.272, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06910415894622006;  // std dev = 6.695, 238.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=62 */
%   | | | else return 0.2645662075342051;  // std dev = 2.435, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08178592520106406;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.02638148476325328;  // std dev = 4.701, 152.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14059542946072418;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4094179027184956;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17136146803206526;  // std dev = 5.178, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12884079330948786;  // std dev = 5.228, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | | else return 0.02778538556325675;  // std dev = 4.822, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021052871363419674;  // std dev = 4.796, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | | else return -0.11420954952885479;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.82e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11033436014712875;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1821032482713606;  // std dev = 3.896, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | | else return 0.08594670900461515;  // std dev = 3.523, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.046092571277361334;  // std dev = 6.682, 238.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=62 */
%   | | | else return 0.18747711099626363;  // std dev = 2.429, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018292410562102835;  // std dev = 4.796, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | | else return -0.10316184529144304;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08553381014425374;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.27280081887619834;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09661107477367598;  // std dev = 5.248, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.08760632083945798;  // std dev = 5.214, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   | | | else return 0.016896244516601842;  // std dev = 4.823, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07474286009167566;  // std dev = 0.970, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.019235913160803576;  // std dev = 4.694, 152.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.70e-07, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06574283642938882;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.22219194310685303;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07268675264289201;  // std dev = 5.248, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1421843531767826;  // std dev = 2.477, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.027121708613226627;  // std dev = 6.648, 236.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=63 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014400843368003574;  // std dev = 4.792, 160.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=28 */
%   | | | else return -0.0944443962995858;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(A, F) )
%   | | then if ( venue(G, B), title(G, E) )
%   | | | then return 0.049961423000274514;  // std dev = 28.449, 3,287.000 (wgt'ed) examples reached here.  /* #neg=1,844 #pos=1,443 */
%   | | | else return 0.054179477140184944;  // std dev = 6.430, 175.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=76 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.05102680248909731;  // std dev = 5.489, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | | | else return -0.1672838621127869;  // std dev = 0.741, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0472031631630018;  // std dev = 5.650, 178.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=52 */
%   | | | else return -0.13950739818294405;  // std dev = 1.049, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.45831435772915363;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08667876451115598;  // std dev = 0.030, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801178;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #pos=321 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03828493329311939;  // std dev = 0.496, 3,314.000 (wgt'ed) examples reached here.  /* #neg=1,858 #pos=1,456 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08152614167150486;  // std dev = 3.876, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | | else return 0.03939279361155952;  // std dev = 3.361, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -1.3041675853658698E-4;  // std dev = 6.546, 252.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=59 */
%   | | | else return 0.269228672280303;  // std dev = 2.378, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09006563115123116;  // std dev = 1.339, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.011532354933180191;  // std dev = 4.615, 135.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=27 */


Results
   AUC ROC   = 0.64814
   AUC PR    = 0.447775
   CLL	      = -0.547126
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.290276


Total learning time: 556.595 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.64814


Results scoring model
   AUC ROC   = 0.62899
   AUC PR    = 0.650295
   CLL	      = -0.624988
   Precision = 0.938462 at threshold = 0.5
   Recall    = 0.187885
   F1        = 0.313088


Total scoring time: 6.286 seconds
Refined model CLL: -0.624988


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.64814
   AUC PR    = 0.447775
   CLL	      = -0.547126
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.290276


Total learning time: 568.102 seconds
Total inference time: 1.765 seconds
AUC ROC: 0.64814
Total revision time: 568.102
Best scored revision CLL: -0.624988


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:29:02
{'AUC ROC': 0.64814, 'AUC PR': 0.447775, 'CLL': -0.547126, 'Precision': [0.925926, 0.5], 'Recall': 0.172117, 'F1': 0.290276, 'Learning time': 568.102, 'Inference time': 1.765, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560123, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.98, 'Inference time': 0.946}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 4.963 seconds
Total inference time: 0.988 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 1.328 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.39055105437540644;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.35220854356048176;  // std dev = 3.871, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.503812763904907;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2952196155158656;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.254596872795733;  // std dev = 4.689, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.22474350208010285;  // std dev = 3.852, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.33407870228800607;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1772509223764373;  // std dev = 5.920, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598814;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.25084527456786;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.13439502809660384;  // std dev = 5.920, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960136;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298012;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2818121507887652;  // std dev = 4.023, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.1774895311128982;  // std dev = 2.244, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08503271295175786;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.09543837887087177;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03444964905968141;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015495049753858731;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08532461712318502;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06572397037549134;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09096911715090267;  // std dev = 4.685, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.06704271473616528;  // std dev = 3.839, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026395161011138316;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17211129695474153;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06729373266459869;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014206603161461377;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05021383565748051;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21467580205999345;  // std dev = 1.256, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.051446848087009826;  // std dev = 5.908, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368886553082539;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021351729125605515;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07991491883767295;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014314967891661534;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3510543785149954;  // std dev = 21.461, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.35842688334442974;  // std dev = 7.784, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.15016838474847247;  // std dev = 2.840, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.02638352650867414;  // std dev = 4.725, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.044395344784024134;  // std dev = 6.304, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.18064622826860302;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5033178357024279;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07834736466188745;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.897126
   AUC PR    = 0.775397
   CLL	      = -0.450305
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1058.394 seconds
Total inference time: 1.914 seconds
AUC ROC: 0.897126


Results scoring model
   AUC ROC   = 0.873837
   AUC PR    = 0.845646
   CLL	      = -0.532618
   Precision = 0.935599 at threshold = 0.5
   Recall    = 0.214696
   F1        = 0.349249


Total scoring time: 9.568 seconds
Refined model CLL: -0.532618


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897126
   AUC PR    = 0.775397
   CLL	      = -0.450305
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1074.253 seconds
Total inference time: 1.914 seconds
AUC ROC: 0.897126
Total revision time: 1074.253
Best scored revision CLL: -0.532618


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 10:47:00
{'AUC ROC': 0.897126, 'AUC PR': 0.775397, 'CLL': -0.450305, 'Precision': [0.896552, 0.5], 'Recall': 0.179002, 'F1': 0.298422, 'Learning time': 1074.253, 'Inference time': 1.914, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 4.963, 'Inference time': 0.988}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.1741662511168235;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.15161542051651747;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.15e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.12971502063682425;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.74e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.10924684934656342;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.09075456905962247;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.07452254819973146;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.06061030307794827;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.04891396683240667;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.03923022472828468;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else return 0.03130892688302201;  // std dev = 15.800, 1,155.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=365 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.640197
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 1.905 seconds
Total inference time: 0.851 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.598018
   AUC PR    = 0.561863
   CLL	      = -0.589652
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.196035
   F1        = 0.327808


Total scoring time: 0.982 seconds
Parameter learned model CLL: -0.589652


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.04e-07, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.15e-08, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.74e-07, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.01e-07, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 89], 'false': [15.8, 790, 365]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 89], 'false': [15.8, 790, 365]}]]
[{'': [1.5967252488991015e-16, 0.2161503719945101]}, {'': [1.037871411784416e-15, 0.2161503719945179]}, {'': [1.7164796425665342e-15, 0.21615037199452836]}, {'': [3.3930411539105907e-16, 0.21615037199452403]}, {'': [-3.3930411539105907e-16, 0.21615037199452677]}, {'': [-3.991813122247754e-17, 0.21615037199452006]}, {'': [1.1476462726462293e-16, 0.21615037199453235]}, {'': [9.979532805619384e-17, 0.21615037199451786]}, {'': [-7.484649604214538e-17, 0.21615037199452392]}, {'': [3.991813122247754e-17, 0.2161503719945319]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.19e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20387757831558792;  // std dev = 0.476, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.03719990210979;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.012221435270858057;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 3.04e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5814757421515501;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.03147574215155004;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.17687388072445914;  // std dev = 0.475, 967.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=334 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.23796730798362134;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.032731629105728646;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.010740229829918681;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.91e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15081418637977756;  // std dev = 0.475, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return -0.013411432862707445;  // std dev = 2.967, 79.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=10 */
%   | | | else return -0.07122243360491748;  // std dev = 1.370, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14167921099553638;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.012672628828818743;  // std dev = 1.876, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.74e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12606435733762333;  // std dev = 0.475, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.25333273742220686;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.15232535867582592;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.041669747632881324;  // std dev = 2.866, 97.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return 0.02582280457972476;  // std dev = 2.462, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10370268685611245;  // std dev = 0.475, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.03369358040764722;  // std dev = 2.977, 100.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return 0.06080003158345464;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.11634052647752582;  // std dev = 1.705, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.013593091681828014;  // std dev = 1.874, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4052594475509208;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.07192611421758761;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.08033841515026928;  // std dev = 0.474, 974.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=333 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02984992577940139;  // std dev = 2.977, 100.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return 0.05418211229975622;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04011388652360513;  // std dev = 2.522, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.15918040574578318;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253578;  // std dev = 1.01e-07, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06755287979989635;  // std dev = 0.474, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.22356213363591362;  // std dev = 1.489, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.12569387907284432;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.032108048726927615;  // std dev = 2.859, 97.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return 0.013962104740975733;  // std dev = 2.442, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05379713793536747;  // std dev = 0.474, 995.000 (wgt'ed) examples reached here.  /* #neg=651 #pos=344 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.18934975071886276;  // std dev = 1.484, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.1126416204709749;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.028647167729280595;  // std dev = 2.858, 97.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return 0.012111808387561516;  // std dev = 2.441, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3564411348438874;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.07242038641383103;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.04234298835817492;  // std dev = 0.475, 967.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=334 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.15679362284415946;  // std dev = 1.479, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.10195816338401616;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02562929652337429;  // std dev = 2.858, 97.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=9 */
%   | | | else return 0.010492959482779854;  // std dev = 2.441, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.3468412464144516;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.40297120263057984;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.249245732503873;  // std dev = 0.308, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09875302887977419;  // std dev = 2.203, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.027092759232609114;  // std dev = 14.424, 968.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=315 */
%   | | | else return -0.037720225718228396;  // std dev = 3.754, 92.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.4209048952983494;  // std dev = 1.488, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.009080118907813444;  // std dev = 2.440, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */


Results
   AUC ROC   = 0.605217
   AUC PR    = 0.590908
   CLL	      = -0.630443
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 47.092 seconds
Total inference time: 1.238 seconds
AUC ROC: 0.605217


Results scoring model
   AUC ROC   = 0.675141
   AUC PR    = 0.621107
   CLL	      = -0.566392
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.198238
   F1        = 0.330882


Total scoring time: 1.738 seconds
Refined model CLL: -0.566392


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.605217
   AUC PR    = 0.590908
   CLL	      = -0.630443
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 51.717 seconds
Total inference time: 1.238 seconds
AUC ROC: 0.605217
Total revision time: 51.717
Best scored revision CLL: -0.566392


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:47:54
{'AUC ROC': 0.605217, 'AUC PR': 0.590908, 'CLL': -0.630443, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 51.717, 'Inference time': 1.238, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.640197, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 1.905, 'Inference time': 0.851}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.1801901014802963;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.1568100772041697;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.13403222729025524;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.11271097783717438;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2.98e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.09344527896407731;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.07655098458289854;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.56e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.06209730427999067;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.04997464107029511;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.03996541579134265;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else return 0.031802046766275;  // std dev = 22.564, 2,332.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=751 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638194
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.739 seconds
Total inference time: 0.821 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.586454
   AUC PR    = 0.543587
   CLL	      = -0.598171
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172907
   F1        = 0.294836


Total scoring time: 1.105 seconds
Parameter learned model CLL: -0.598171


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.83e-07, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-07, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.56e-07, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 157], 'false': [22.564, 1, 751]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.19e-08, 0, 157], 'false': [22.564, 1, 751]}]]
[{'': [6.155019876648002e-15, 0.21833065353691464]}, {'': [-2.715449945580001e-15, 0.21833065353686132]}, {'': [1.8555574628130005e-15, 0.21833065353691006]}, {'': [1.3350962232435004e-15, 0.21833065353690204]}, {'': [5.657187386625001e-16, 0.2183306535368846]}, {'': [-2.1497312069175006e-16, 0.21833065353688713]}, {'': [4.186318666102501e-16, 0.2183306535368865]}, {'': [-3.1114530626437506e-16, 0.21833065353689116]}, {'': [-2.3194468285162506e-16, 0.21833065353690917]}, {'': [5.3743280172937514e-17, 0.2183306535368825]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.1308762078267851;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20914231258295102;  // std dev = 0.477, 1,963.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=689 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.010466815894214018;  // std dev = 4.416, 151.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=23 */
%   | | | else return -0.05489454316135731;  // std dev = 1.911, 46.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.03209496733951207;  // std dev = 2.831, 82.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109563;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18055625641926548;  // std dev = 0.477, 2,022.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=707 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.17973078228587272;  // std dev = 2.444, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.15348746769538002;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.024487209752484144;  // std dev = 3.990, 158.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=18 */
%   | | | else return 0.008979192363611095;  // std dev = 3.798, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.40e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14300076569827516;  // std dev = 3.635, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.8038134828623194;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1529810966681483;  // std dev = 0.476, 1,960.000 (wgt'ed) examples reached here.  /* #neg=1,276 #pos=684 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.15489090049231677;  // std dev = 2.443, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.13459147949238653;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.021592982265346193;  // std dev = 3.990, 158.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=18 */
%   | | | else return 0.007876512366692182;  // std dev = 3.798, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583089;  // std dev = 4.58e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29176319597057787;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.028292547184217497;  // std dev = 2.824, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else return 0.12940769455373874;  // std dev = 0.477, 1,963.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=689 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13105086218077686;  // std dev = 2.443, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.11967402458138018;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.019083327999697967;  // std dev = 3.990, 158.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=18 */
%   | | | else return 0.00690342248873644;  // std dev = 3.798, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014967;  // std dev = 2.98e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10536965521281474;  // std dev = 0.476, 2,022.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=707 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10229698888291142;  // std dev = 1.900, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.07225651152263576;  // std dev = 0.968, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.026385156110268756;  // std dev = 2.401, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return -0.010694146735637452;  // std dev = 5.118, 239.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=30 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694905;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08540425954887691;  // std dev = 0.476, 2,022.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=707 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10458641046936219;  // std dev = 2.436, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.11019100613669591;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.015851659811568615;  // std dev = 3.991, 158.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=18 */
%   | | | else return 0.00595461832759706;  // std dev = 3.791, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253517;  // std dev = 2.56e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24599528691277608;  // std dev = 2.281, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.0022834423397819817;  // std dev = 2.813, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else return 0.06795739801325466;  // std dev = 0.476, 1,960.000 (wgt'ed) examples reached here.  /* #neg=1,276 #pos=684 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08562270236206761;  // std dev = 2.436, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.09984365684116024;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01407211161917916;  // std dev = 3.991, 158.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=18 */
%   | | | else return 0.005211543662698889;  // std dev = 3.791, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0413310065387099;  // std dev = 3.582, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.570532213420169;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05402720665200121;  // std dev = 0.476, 1,960.000 (wgt'ed) examples reached here.  /* #neg=1,276 #pos=684 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08647955518210959;  // std dev = 1.884, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.06648827077064011;  // std dev = 0.972, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011697342703916437;  // std dev = 4.374, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.003493223351499519;  // std dev = 3.556, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042951362047243945;  // std dev = 0.476, 2,022.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=707 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1739541881799794;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.011761510577592017;  // std dev = 1.823, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.010304800277854154;  // std dev = 4.374, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.0030614611314502714;  // std dev = 3.555, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.19e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03375028282608031;  // std dev = 0.476, 2,022.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=707 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06779960961893391;  // std dev = 2.417, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.09126066500581809;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 8.759708899040815E-4;  // std dev = 4.714, 188.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=26 */
%   | | | else return -0.017866572979749726;  // std dev = 2.834, 82.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */


Results
   AUC ROC   = 0.600495
   AUC PR    = 0.584141
   CLL	      = -0.6311
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 73.344 seconds
Total inference time: 1.242 seconds
AUC ROC: 0.600495


Results scoring model
   AUC ROC   = 0.64782
   AUC PR    = 0.584155
   CLL	      = -0.582222
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.176211
   F1        = 0.299625


Total scoring time: 1.591 seconds
Refined model CLL: -0.582222


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600495
   AUC PR    = 0.584141
   CLL	      = -0.6311
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 78.77899999999998 seconds
Total inference time: 1.242 seconds
AUC ROC: 0.600495
Total revision time: 78.77899999999998
Best scored revision CLL: -0.582222


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:49:16
{'AUC ROC': 0.600495, 'AUC PR': 0.584141, 'CLL': -0.6311, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 78.77899999999998, 'Inference time': 1.242, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638194, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.739, 'Inference time': 0.821}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.1833267444878429;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.15951362933100652;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.01e-08, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.1362756719454092;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 1.19e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.11450654526636819;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601494;  // std dev = 3.58e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.09483515514596545;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.07759433279714552;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.06285837585069462;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527766;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.050514423367488674;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.04033708562754727;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else return 0.03204935499827142;  // std dev = 27.773, 3,515.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,143 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637215
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.612 seconds
Total inference time: 0.811 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.580396
   AUC PR    = 0.533756
   CLL	      = -0.602584
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.160793
   F1        = 0.27704


Total scoring time: 1.205 seconds
Parameter learned model CLL: -0.602584


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.01e-08, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.19e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 219], 'false': [27.773, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.43e-07, 0, 219], 'false': [27.773, 2, 1]}]]
[{'': [5.320959299756001e-15, 0.21943720166976471]}, {'': [-3.958274601038001e-15, 0.21943720166973363]}, {'': [1.6222436889500003e-15, 0.21943720166971947]}, {'': [6.488974755800001e-17, 0.2194372016697256]}, {'': [5.840077280220001e-16, 0.2194372016697592]}, {'': [3.4067117467950007e-16, 0.21943720166974232]}, {'': [4.136721406822501e-16, 0.219437201669759]}, {'': [-8.111218444750002e-18, 0.21943720166970757]}, {'': [-1.4600193200550003e-16, 0.21943720166974828]}, {'': [9.327901211462502e-17, 0.21943720166976563]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995091;  // std dev = 1.08e-06, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20877682670558786;  // std dev = 0.477, 3,026.000 (wgt'ed) examples reached here.  /* #neg=1,965 #pos=1,061 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.015452305886028595;  // std dev = 5.949, 267.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=42 */
%   | | | else return 0.03461952333480568;  // std dev = 4.971, 170.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109572;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.34142642326191813;  // std dev = 3.427, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.08078812538957703;  // std dev = 3.240, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1986042173436008;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.18022395049540157;  // std dev = 25.391, 2,836.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=991 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1469824147532124;  // std dev = 2.907, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.1011049800872228;  // std dev = 0.978, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.009751582576584806;  // std dev = 5.888, 265.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=41 */
%   | | | else return 0.02908771010039934;  // std dev = 4.805, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.96e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.28790297352172356;  // std dev = 3.427, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.06912567197476398;  // std dev = 3.240, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16882610737871312;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.15335932457052076;  // std dev = 25.391, 2,836.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=991 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1277200898058137;  // std dev = 2.906, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.0889057708252251;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.008538714909019089;  // std dev = 5.888, 265.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=41 */
%   | | | else return 0.025448422358232727;  // std dev = 4.805, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 1.19e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12877791311621178;  // std dev = 0.477, 3,026.000 (wgt'ed) examples reached here.  /* #neg=1,965 #pos=1,061 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2761849717384636;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -8.550273326681593E-4;  // std dev = 2.404, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.008626379636014966;  // std dev = 5.948, 267.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=42 */
%   | | | else return 0.024143610441075162;  // std dev = 4.939, 170.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601494;  // std dev = 3.58e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.366194565350088;  // std dev = 2.471, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.018148944000696023;  // std dev = 3.625, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0.10545572248050805;  // std dev = 0.477, 2,933.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,027 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10534495188604284;  // std dev = 2.895, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.08105977686543499;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00523469436767563;  // std dev = 5.889, 265.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=41 */
%   | | | else return 0.020406038467960397;  // std dev = 4.796, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948823;  // std dev = 2.73e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2570401308894628;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return -0.02175750300512071;  // std dev = 3.139, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else return 0.08545319060652093;  // std dev = 0.477, 2,933.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,027 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08878636583045181;  // std dev = 2.894, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.07237011571692618;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013827251136647848;  // std dev = 6.380, 295.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=49 */
%   | | | else return -9.880076021491205E-5;  // std dev = 4.120, 131.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24288209524063686;  // std dev = 2.459, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.005409751129973038;  // std dev = 3.588, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else return 0.06849741116202852;  // std dev = 0.477, 2,933.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,027 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2132829733452729;  // std dev = 1.330, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0018775845647880176;  // std dev = 2.740, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0036424033323548734;  // std dev = 5.889, 265.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=41 */
%   | | | else return 0.015985144750580813;  // std dev = 4.795, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527766;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0544506189309512;  // std dev = 0.476, 3,026.000 (wgt'ed) examples reached here.  /* #neg=1,965 #pos=1,061 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07058701132430323;  // std dev = 2.882, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.0690183883175536;  // std dev = 0.958, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01069585946551558;  // std dev = 6.379, 295.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=49 */
%   | | | else return -6.442255452545471E-4;  // std dev = 4.120, 131.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17532386159531702;  // std dev = 2.447, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return -0.022613238496142878;  // std dev = 3.565, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else return 0.04297978269143956;  // std dev = 0.477, 2,933.000 (wgt'ed) examples reached here.  /* #neg=1,906 #pos=1,027 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.22416420022738817;  // std dev = 1.266, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.010694681302034801;  // std dev = 2.382, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 5.452927464305794E-4;  // std dev = 5.945, 267.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=42 */
%   | | | else return 0.014406318067283475;  // std dev = 4.912, 170.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=30 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.43e-07, 219.000 (wgt'ed) examples reached here.  /* #pos=219 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033739641535461135;  // std dev = 0.476, 3,026.000 (wgt'ed) examples reached here.  /* #neg=1,965 #pos=1,061 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17996055600720456;  // std dev = 1.321, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.010279150276090783;  // std dev = 2.713, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.008892430418687444;  // std dev = 6.373, 295.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=49 */
%   | | | else return -0.002816733871271753;  // std dev = 4.123, 131.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=20 */


Results
   AUC ROC   = 0.602779
   AUC PR    = 0.586319
   CLL	      = -0.629178
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 106.369 seconds
Total inference time: 1.211 seconds
AUC ROC: 0.602779


Results scoring model
   AUC ROC   = 0.635984
   AUC PR    = 0.571501
   CLL	      = -0.589687
   Precision = 0.991489 at threshold = 0.5
   Recall    = 0.171072
   F1        = 0.291797


Total scoring time: 1.924 seconds
Refined model CLL: -0.589687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602779
   AUC PR    = 0.586319
   CLL	      = -0.629178
   Precision = 0.945736 at threshold = 0.5
   Recall    = 0.16332
   F1        = 0.278539


Total learning time: 113.11000000000001 seconds
Total inference time: 1.211 seconds
AUC ROC: 0.602779
Total revision time: 113.11000000000001
Best scored revision CLL: -0.589687


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:51:11
{'AUC ROC': 0.602779, 'AUC PR': 0.586319, 'CLL': -0.629178, 'Precision': [0.945736, 0.5], 'Recall': 0.16332, 'F1': 0.278539, 'Learning time': 113.11000000000001, 'Inference time': 1.211, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637215, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.612, 'Inference time': 0.811}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.18171608651096996;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.1581254759232159;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.13512405761413113;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.11358522816819419;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.09412241072656644;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.58e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.07705966916342653;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.06246868591042489;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.46e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.05023830104975478;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.04014716896312127;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.03192315227410482;  // std dev = 31.991, 4,676.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,513 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.859 seconds
Total inference time: 0.796 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.583425
   AUC PR    = 0.538656
   CLL	      = -0.600355
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16685
   F1        = 0.285984


Total scoring time: 1.278 seconds
Parameter learned model CLL: -0.600355


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [31.991, 3, 1]}]]
[{'': [3.6582398276757634e-15, 0.2188714499388808]}, {'': [-4.877653103567684e-15, 0.2188714499389545]}, {'': [-1.407015318336832e-16, 0.21887144993895685]}, {'': [-7.738584250852576e-16, 0.21887144993895088]}, {'': [-3.0485331897298027e-16, 0.2188714499389523]}, {'': [4.221045955010496e-16, 0.21887144993892083]}, {'': [2.0518973392412133e-16, 0.21887144993894198]}, {'': [1.9932717009771787e-16, 0.21887144993892677]}, {'': [-2.110522977505248e-16, 0.21887144993896682]}, {'': [-1.5242665948649013e-16, 0.21887144993896834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.40814893509951117;  // std dev = 3.854, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return 0.09271683633408023;  // std dev = 3.814, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | else return 0.20571775424023267;  // std dev = 0.476, 3,887.000 (wgt'ed) examples reached here.  /* #neg=2,536 #pos=1,351 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.16723984419042145;  // std dev = 3.427, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.06492798797741088;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008717116917694117;  // std dev = 6.710, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.03489312114602298;  // std dev = 5.593, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17938474426453455;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.14563831078134049;  // std dev = 3.427, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.05720661123539924;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.007652671540229603;  // std dev = 6.710, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.030592293727837953;  // std dev = 5.593, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1526906696321154;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12473679331147955;  // std dev = 3.427, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.05070064289107805;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006712726744156264;  // std dev = 6.710, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.026733160754441723;  // std dev = 5.593, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.37011420218913155;  // std dev = 3.071, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return 0.009743361266119488;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else return 0.127750587461517;  // std dev = 0.476, 3,902.000 (wgt'ed) examples reached here.  /* #neg=2,542 #pos=1,360 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10523796677383727;  // std dev = 3.427, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.045161602872387976;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0058840020608831615;  // std dev = 6.710, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.02329248935670489;  // std dev = 5.593, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10479193194519971;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19897412139349757;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02257435092870769;  // std dev = 3.324, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005154329470028104;  // std dev = 6.710, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.02024221159766147;  // std dev = 5.593, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.58e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08497978837702926;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.022988150636877987;  // std dev = 6.585, 293.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=53 */
%   | | | else return -0.04314951158328316;  // std dev = 3.135, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03879425426675567;  // std dev = 5.997, 233.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=46 */
%   | | | else return -0.16419542920810404;  // std dev = 0.132, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06817278610133161;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.019914524246649933;  // std dev = 6.585, 293.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=53 */
%   | | | else return -0.037823705300485906;  // std dev = 3.135, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0335887214661819;  // std dev = 5.995, 233.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=46 */
%   | | | else return -0.14303638923230172;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.46e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05422647250192217;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.005248647905873349;  // std dev = 6.663, 343.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=53 */
%   | | | else return 0.05919805742059886;  // std dev = 2.967, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.028972270095916575;  // std dev = 5.994, 233.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=46 */
%   | | | else return -0.12648944147977323;  // std dev = 0.107, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042849125061308425;  // std dev = 0.476, 4,028.000 (wgt'ed) examples reached here.  /* #neg=2,625 #pos=1,403 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06926265087581628;  // std dev = 3.400, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return -0.051922734574717605;  // std dev = 1.328, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0012410152268756273;  // std dev = 6.691, 352.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=53 */
%   | | | else return 0.015458502687497915;  // std dev = 5.581, 215.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.19126805767475594;  // std dev = 3.853, 60.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=33 */
%   | | | else return -0.055575631495310855;  // std dev = 3.805, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | | else return 0.033114671313536986;  // std dev = 0.476, 3,887.000 (wgt'ed) examples reached here.  /* #neg=2,536 #pos=1,351 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.01610267332436771;  // std dev = 6.584, 293.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=53 */
%   | | | else return -0.03661198711364734;  // std dev = 3.126, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023178765364347563;  // std dev = 5.984, 233.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=46 */
%   | | | else return -0.11525152308259198;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.600452
   AUC PR    = 0.58413
   CLL	      = -0.629807
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 142.404 seconds
Total inference time: 1.008 seconds
AUC ROC: 0.600452


Results scoring model
   AUC ROC   = 0.63885
   AUC PR    = 0.576103
   CLL	      = -0.588212
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16685
   F1        = 0.285984


Total scoring time: 2.357 seconds
Refined model CLL: -0.588212


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600452
   AUC PR    = 0.58413
   CLL	      = -0.629807
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 150.898 seconds
Total inference time: 1.008 seconds
AUC ROC: 0.600452
Total revision time: 150.898
Best scored revision CLL: -0.588212


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:53:45
{'AUC ROC': 0.600452, 'AUC PR': 0.58413, 'CLL': -0.629807, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 150.898, 'Inference time': 1.008, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637712, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.859, 'Inference time': 0.796}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.343 seconds
Total inference time: 0.812 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 1.54 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3928303268904019;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.0354875665427812;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.17851159415457662;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12470259009449199;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15230763842936762;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10835398529614791;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06961459904338328;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012956819299053401;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03302547339819371;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3408046992891192;  // std dev = 4.226, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.01492508366010973;  // std dev = 3.895, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.143176247186586;  // std dev = 5.815, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.12622742147551294;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10423210814297935;  // std dev = 3.496, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07446147112132669;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.009945240578072643;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029763286118881037;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10454832702811415;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08902509109847;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06542789675696495;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00867020380963679;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025871430826539667;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08479981222749593;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08583282356142306;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06940095264195591;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006343268704052928;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023165647482162405;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27403013275359606;  // std dev = 3.659, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.025998337546380475;  // std dev = 4.419, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else return 0.06779909031181662;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20298192063532358;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0068378601412710386;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.005515309582766982;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020042626161223005;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.19467751544592193;  // std dev = 4.188, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.0496649802129602;  // std dev = 3.867, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.05394609805084407;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06861277716991905;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06712711220305673;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0047924698864667565;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017301183528751415;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19542301898511402;  // std dev = 3.397, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.039268880119194716;  // std dev = 4.508, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05832557462268053;  // std dev = 5.789, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.042135470051943756;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.00363805436536694;  // std dev = 7.665, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07557019728701252;  // std dev = 3.732, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.026324290705549442;  // std dev = 6.479, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16405762006176844;  // std dev = 0.133, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03348576322678154;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1978558890728621;  // std dev = 1.559, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0023514351684572068;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 8.157777337519081E-4;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.014584200530326939;  // std dev = 6.397, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602853
   AUC PR    = 0.586458
   CLL	      = -0.629556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 171.10399999999998 seconds
Total inference time: 1.186 seconds
AUC ROC: 0.602853


Results scoring model
   AUC ROC   = 0.63993
   AUC PR    = 0.578498
   CLL	      = -0.587761
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.543 seconds
Refined model CLL: -0.587761


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602853
   AUC PR    = 0.586458
   CLL	      = -0.629556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 181.53 seconds
Total inference time: 1.186 seconds
AUC ROC: 0.602853
Total revision time: 181.53
Best scored revision CLL: -0.587761


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 10:56:49
{'AUC ROC': 0.602853, 'AUC PR': 0.586458, 'CLL': -0.629556, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 181.53, 'Inference time': 1.186, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.343, 'Inference time': 0.812}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.17121884391409709;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.14907250977406453;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.12759847823506582;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.10754430955408022;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.08942767677698421;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.07351808382850247;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.059870358189850856;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.048383196211122026;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.038859921338007704;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else return 0.031058595141598238;  // std dev = 16.823, 1,316.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=412 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726186
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1.887 seconds
Total inference time: 0.687 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.58215
   AUC PR    = 0.526555
   CLL	      = -0.594238
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.1643
   F1        = 0.28223


Total scoring time: 0.98 seconds
Parameter learned model CLL: -0.594238


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.8e-08, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.43e-08, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.65e-08, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 81], 'false': [16.823, 904, 412]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.58e-08, 0, 81], 'false': [16.823, 904, 412]}]]
[{'': [-7.894919286223335e-16, 0.2150571410093971]}, {'': [7.894919286223335e-16, 0.21505714100940898]}, {'': [1.4474018691409447e-15, 0.21505714100942194]}, {'': [8.77213254024815e-17, 0.21505714100943427]}, {'': [-2.8509430755806487e-16, 0.21505714100941098]}, {'': [-4.386066270124075e-17, 0.2150571410094252]}, {'': [-8.22387425648264e-17, 0.21505714100942075]}, {'': [1.644774851296528e-17, 0.21505714100941453]}, {'': [-4.9343245538895844e-17, 0.21505714100940343]}, {'': [3.8378079863585656e-17, 0.21505714100941237]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19148226843284083;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.15226658215833588;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.05380110901255586;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.00548742853685133;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.055644168348763574;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.53e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16653882456487723;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.13270212707734708;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22373365448410584;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.3688769765977055;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.047124903278381446;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.004820759370113289;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.049004671366977226;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14209424281557073;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.11392329431478496;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1888683221574971;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.3027909085849407;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.041065927600903766;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.004237246199910482;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.04337632507990242;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583104;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11914890490745451;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.09647729905356218;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15570029437174387;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.23934016640989336;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.16002957242904242;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04094961610334122;  // std dev = 3.474, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.03856195701722025;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09841340278401228;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.08073093732006884;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12582628229372106;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.18430382771628467;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03624461497575115;  // std dev = 2.671, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.008732087220363099;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else return -0.03441150007757422;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0802665494425312;  // std dev = 15.513, 1,083.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=361 */
%   | | | else return 0.0668667535882363;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10008916917880542;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.13977569193759035;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.16687106458458764;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.027381774828251094;  // std dev = 3.479, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | else return -0.030808874165824486;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253567;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06377344114189219;  // std dev = 15.506, 1,085.000 (wgt'ed) examples reached here.  /* #neg=725 #pos=360 */
%   | | | else return 0.07714786991901018;  // std dev = 3.289, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07866279780602584;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1052107561348137;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.14749167478167033;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03269530924916021;  // std dev = 3.460, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.027662974677685723;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 3.65e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7187525728002622;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08969631122930594;  // std dev = 1.925, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05336462394413295;  // std dev = 15.682, 1,107.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=369 */
%   | | | else return 0.05525297905885504;  // std dev = 2.834, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.12989325321862163;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14905113428070146;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01412676472484185;  // std dev = 4.056, 130.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367116;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.3745069272211299;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return -0.1844398628544901;  // std dev = 1.016, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else return -0.28259854875817464;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.044427837633596264;  // std dev = 15.722, 1,113.000 (wgt'ed) examples reached here.  /* #neg=740 #pos=373 */
%   | | | else return 0.06894648071799435;  // std dev = 2.845, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.02814928680719316;  // std dev = 3.452, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.026304245863174834;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03173903991945903;  // std dev = 15.463, 1,085.000 (wgt'ed) examples reached here.  /* #neg=725 #pos=360 */
%   | | | else return 0.043028640510612434;  // std dev = 3.290, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.031185462435587938;  // std dev = 1.980, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.051295523904594006;  // std dev = 2.073, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13436553825295325;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021437215612794484;  // std dev = 3.450, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return -0.023704353744289555;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */


Results
   AUC ROC   = 0.678362
   AUC PR    = 0.710053
   CLL	      = -0.718429
   Precision = 0.977778 at threshold = 0.5
   Recall    = 0.16
   F1        = 0.275


Total learning time: 189.382 seconds
Total inference time: 1.608 seconds
AUC ROC: 0.678362


Results scoring model
   AUC ROC   = 0.644398
   AUC PR    = 0.56907
   CLL	      = -0.578416
   Precision = 0.93617 at threshold = 0.5
   Recall    = 0.178499
   F1        = 0.29983


Total scoring time: 5.403 seconds
Refined model CLL: -0.578416


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678362
   AUC PR    = 0.710053
   CLL	      = -0.718429
   Precision = 0.977778 at threshold = 0.5
   Recall    = 0.16
   F1        = 0.275


Total learning time: 197.652 seconds
Total inference time: 1.608 seconds
AUC ROC: 0.678362
Total revision time: 197.652
Best scored revision CLL: -0.578416


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:00:09
{'AUC ROC': 0.678362, 'AUC PR': 0.710053, 'CLL': -0.718429, 'Precision': [0.977778, 0.5], 'Recall': 0.16, 'F1': 0.275, 'Learning time': 197.652, 'Inference time': 1.608, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726186, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1.887, 'Inference time': 0.687}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1706964636166175;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.148621736421656;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.1272230689935453;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.10724204167165666;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.08919179348679196;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.07333923118832887;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.05973835579983407;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.04828830240440201;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.03879354818119552;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else return 0.031013588482356337;  // std dev = 23.772, 2,630.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=822 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726619
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 2.907 seconds
Total inference time: 0.687 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583164
   AUC PR    = 0.528221
   CLL	      = -0.593494
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166329
   F1        = 0.285217


Total scoring time: 1.127 seconds
Parameter learned model CLL: -0.593494


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 164], 'false': [23.772, 1, 822]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 164], 'false': [23.772, 1, 822]}]]
[{'': [6.325563379327721e-15, 0.21486157093498146]}, {'': [-2.859501253668696e-15, 0.21486157093499295]}, {'': [1.863008392541726e-15, 0.21486157093498412]}, {'': [1.1481330791245522e-15, 0.2148615709349468]}, {'': [8.015268665586496e-16, 0.21486157093498362]}, {'': [-2.4912321528174247e-16, 0.21486157093497865]}, {'': [4.3325776570737815e-16, 0.21486157093497976]}, {'': [-3.195276022091914e-16, 0.21486157093496178]}, {'': [-2.4641535424607135e-16, 0.21486157093496464]}, {'': [5.415722071342227e-17, 0.21486157093493868]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.02e-06, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18493138482528423;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.20189893509951096;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.041006077956654306;  // std dev = 5.114, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | | else return -0.03546808617708343;  // std dev = 2.989, 94.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16089635798231441;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.17550281540681956;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27021896952830937;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.3987612182903489;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0359407541170112;  // std dev = 5.114, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | | else return -0.031205177447040607;  // std dev = 2.989, 94.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13742216778059396;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.14949541683718384;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2260959005406503;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.32542309878784204;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.03137882864178603;  // std dev = 5.114, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.024037013246740072;  // std dev = 2.983, 91.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
%   | | | else return -0.13392712313684998;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.34e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11542294765740085;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.1250234389860588;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18382902223075068;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.2552031565056606;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08888910843904753;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.015030619285879279;  // std dev = 5.844, 254.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09553000756634354;  // std dev = 21.923, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,470 #pos=714 */
%   | | | else return 0.10290426896870507;  // std dev = 4.733, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1460498086109486;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.19505010282679752;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.026457321268543683;  // std dev = 5.109, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.022995795696511993;  // std dev = 2.983, 91.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
%   | | | else return -0.12072634865241848;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949067;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07810258470132879;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.08411386962722535;  // std dev = 4.653, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11405557378101747;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.1471249676392452;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08086337691566833;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021952514558138733;  // std dev = 5.020, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return -0.023180627901340668;  // std dev = 2.987, 94.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.67e-07, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0632048917976994;  // std dev = 21.923, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,470 #pos=714 */
%   | | | else return 0.06789752718012435;  // std dev = 4.732, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08333379731751286;  // std dev = 2.904, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.11843321520396216;  // std dev = 2.533, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08691112517825246;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02104970788008782;  // std dev = 5.105, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | | else return -0.020589092011218016;  // std dev = 2.987, 94.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05075063206896624;  // std dev = 21.923, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,470 #pos=714 */
%   | | | else return 0.05424584010152675;  // std dev = 4.732, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06287065999014314;  // std dev = 2.904, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.09033224596318;  // std dev = 2.533, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0802571476060687;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022037434855887786;  // std dev = 4.707, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
%   | | | else return -0.020941800111206124;  // std dev = 3.577, 104.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.040490263615491025;  // std dev = 21.940, 2,188.000 (wgt'ed) examples reached here.  /* #neg=1,473 #pos=715 */
%   | | | else return 0.043179017634233825;  // std dev = 4.652, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0429016658315261;  // std dev = 2.858, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.07226280572273236;  // std dev = 2.583, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.020736094678175644;  // std dev = 3.852, 150.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=17 */
%   | | | else return 0.1813486619407006;  // std dev = 2.537, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.01671718112290031;  // std dev = 3.575, 103.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | | else return -0.1023843927301381;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 164.000 (wgt'ed) examples reached here.  /* #pos=164 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.032135437219999126;  // std dev = 21.923, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,470 #pos=714 */
%   | | | else return 0.034177041362223805;  // std dev = 4.731, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03161916439399105;  // std dev = 2.903, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.057174062569434206;  // std dev = 2.532, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07501181308120863;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07365529274797834;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.00898019620427643;  // std dev = 5.806, 254.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=41 */


Results
   AUC ROC   = 0.659522
   AUC PR    = 0.69945
   CLL	      = -0.721486
   Precision = 0.978723 at threshold = 0.5
   Recall    = 0.167273
   F1        = 0.285714


Total learning time: 384.574 seconds
Total inference time: 1.596 seconds
AUC ROC: 0.659522


Results scoring model
   AUC ROC   = 0.626506
   AUC PR    = 0.55942
   CLL	      = -0.581676
   Precision = 0.942708 at threshold = 0.5
   Recall    = 0.18357
   F1        = 0.307301


Total scoring time: 11.118 seconds
Refined model CLL: -0.581676


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.659522
   AUC PR    = 0.69945
   CLL	      = -0.721486
   Precision = 0.978723 at threshold = 0.5
   Recall    = 0.167273
   F1        = 0.285714


Total learning time: 399.726 seconds
Total inference time: 1.596 seconds
AUC ROC: 0.659522
Total revision time: 399.726
Best scored revision CLL: -0.581676


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:06:52
{'AUC ROC': 0.659522, 'AUC PR': 0.69945, 'CLL': -0.721486, 'Precision': [0.978723, 0.5], 'Recall': 0.167273, 'F1': 0.285714, 'Learning time': 399.726, 'Inference time': 1.596, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726619, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 2.907, 'Inference time': 0.687}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.1706172574512558;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.14855338549913835;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.07e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.12716613986028427;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.10719619647467606;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.0891560087922312;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.07331209074746266;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.059718318179929605;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.04827389229615336;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.0387834646179739;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else return 0.031006747330538553;  // std dev = 29.116, 3,946.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,233 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726685
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.193 seconds
Total inference time: 0.745 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583446
   AUC PR    = 0.528742
   CLL	      = -0.59333
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166892
   F1        = 0.286045


Total scoring time: 1.253 seconds
Parameter learned model CLL: -0.59333


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.07e-08, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 247], 'false': [29.116, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 247], 'false': [29.116, 2, 1]}]]
[{'': [4.717773630148034e-15, 0.2148318698784584]}, {'': [-4.315036856842713e-15, 0.214831869878421]}, {'': [9.205411961264456e-16, 0.21483186987845337]}, {'': [-2.8766912378951425e-16, 0.2148318698784526]}, {'': [2.301352990316114e-16, 0.21483186987840797]}, {'': [3.8835331711584425e-16, 0.21483186987845734]}, {'': [3.380112204526792e-16, 0.21483186987846187]}, {'': [-3.595864047368928e-17, 0.21483186987846326]}, {'': [-1.797932023684464e-16, 0.21483186987845312]}, {'': [1.0787592142106784e-17, 0.21483186987843855]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18495432065642275;  // std dev = 26.814, 3,268.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,068 */
%   | | | else return 0.17602972980149936;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3396304165809927;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.3716624486130258;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08278661625893156;  // std dev = 4.903, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.01604367194161722;  // std dev = 4.496, 152.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=24 */
%   | | else return -0.02541270873610409;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16091612020638915;  // std dev = 26.814, 3,268.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,068 */
%   | | | else return 0.1532227457247513;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2930706765796854;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.3201556683650765;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.07240723542827104;  // std dev = 4.903, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.014079441960181443;  // std dev = 4.496, 152.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=24 */
%   | | else return -0.022347301347776932;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13746880179319354;  // std dev = 26.776, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,194 #pos=1,065 */
%   | | | else return 0.13079482372350745;  // std dev = 5.896, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24413791494546347;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.265303516394226;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06282553153730612;  // std dev = 4.903, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.012337096821794577;  // std dev = 4.496, 152.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=24 */
%   | | else return -0.019697755894109124;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11546541214097741;  // std dev = 26.776, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,194 #pos=1,065 */
%   | | | else return 0.11001354631317177;  // std dev = 5.896, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1954569385398932;  // std dev = 3.564, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return 0.21360890969418717;  // std dev = 3.165, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.07193186178885062;  // std dev = 1.341, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.039481299755588097;  // std dev = 6.507, 269.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=53 */
%   | | else return -0.017397798164982232;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0955894285005507;  // std dev = 26.813, 3,268.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,068 */
%   | | | else return 0.09081438763164039;  // std dev = 5.723, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15319073765818295;  // std dev = 3.670, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.169387887893142;  // std dev = 3.041, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.05049909726100354;  // std dev = 4.897, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return 0.006046092123366272;  // std dev = 4.494, 152.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=24 */
%   | | else return -0.015393792105007104;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07817200256008891;  // std dev = 26.776, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,194 #pos=1,065 */
%   | | | else return 0.07451557724743345;  // std dev = 5.896, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11586949598948955;  // std dev = 3.563, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return 0.13278219236745784;  // std dev = 3.166, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09008483783485825;  // std dev = 0.274, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03108304011079663;  // std dev = 6.499, 270.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=53 */
%   | | | else return -0.010361944902022234;  // std dev = 3.868, 142.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.013569540662492014;  // std dev = 3.648, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.7364181042081914;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(I, D) )
%   | | | then return 0.06420057750997073;  // std dev = 27.150, 3,347.000 (wgt'ed) examples reached here.  /* #neg=2,251 #pos=1,096 */
%   | | | else return 0.09395616827680674;  // std dev = 4.716, 89.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=44 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return -0.07248938836327781;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.027382673062416457;  // std dev = 6.497, 269.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=53 */
%   | | else return -0.012235734223791709;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05081179136196858;  // std dev = 26.801, 3,268.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,068 */
%   | | | else return 0.048039452005020675;  // std dev = 5.721, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0666188819196748;  // std dev = 3.666, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
%   | | | else return 0.07970808916795673;  // std dev = 3.046, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08060187554705898;  // std dev = 0.274, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02394192635693069;  // std dev = 6.495, 270.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=53 */
%   | | | else return -0.007826111270426867;  // std dev = 3.868, 142.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.354125777805689;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.09448429246633544;  // std dev = 2.828, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04132011618463346;  // std dev = 27.150, 3,347.000 (wgt'ed) examples reached here.  /* #neg=2,251 #pos=1,096 */
%   | | | else return 0.05356808412078679;  // std dev = 4.716, 89.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06582606847157406;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.021132772899686427;  // std dev = 6.492, 269.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=53 */
%   | | else return -0.00980121861080444;  // std dev = 0.321, 146.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.16e-08, 247.000 (wgt'ed) examples reached here.  /* #pos=247 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.032144578873974955;  // std dev = 26.746, 3,259.000 (wgt'ed) examples reached here.  /* #neg=2,194 #pos=1,065 */
%   | | | else return 0.030540750007987345;  // std dev = 5.890, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.036427936469857904;  // std dev = 3.563, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else return 0.04876565005711868;  // std dev = 3.167, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0721275984459139;  // std dev = 0.274, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02098855078821404;  // std dev = 6.073, 259.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=46 */
%   | | | else return -0.008640627218079856;  // std dev = 4.492, 153.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=24 */


Results
   AUC ROC   = 0.682365
   AUC PR    = 0.714353
   CLL	      = -0.718968
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.273556


Total learning time: 548.181 seconds
Total inference time: 1.556 seconds
AUC ROC: 0.682365


Results scoring model
   AUC ROC   = 0.630914
   AUC PR    = 0.562938
   CLL	      = -0.583531
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.166892
   F1        = 0.286045


Total scoring time: 15.122 seconds
Refined model CLL: -0.583531


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682365
   AUC PR    = 0.714353
   CLL	      = -0.718968
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.163636
   F1        = 0.273556


Total learning time: 568.749 seconds
Total inference time: 1.556 seconds
AUC ROC: 0.682365
Total revision time: 568.749
Best scored revision CLL: -0.583531


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:16:24
{'AUC ROC': 0.682365, 'AUC PR': 0.714353, 'CLL': -0.718968, 'Precision': [0.833333, 0.5], 'Recall': 0.163636, 'F1': 0.273556, 'Learning time': 568.749, 'Inference time': 1.556, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726685, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.193, 'Inference time': 0.745}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.17128983901139475;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.14913377105145248;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.12764949229538697;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.10758537775503225;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.08945971835320601;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.0735423718576863;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.05988827818289372;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.04839607369700133;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.03886892452039502;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else return 0.03106469686379009;  // std dev = 33.655, 5,266.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,649 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726127
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.571 seconds
Total inference time: 0.7 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582108
   AUC PR    = 0.526527
   CLL	      = -0.594301
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164217
   F1        = 0.282107


Total scoring time: 1.357 seconds
Parameter learned model CLL: -0.594301


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.73e-07, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 324], 'false': [33.655, 3, 1]}]]
[{'': [3.333410365294297e-15, 0.21508367820907648]}, {'': [-5.000115547941446e-15, 0.21508367820907803]}, {'': [-4.386066270124075e-16, 0.2150836782091018]}, {'': [-9.430042480766762e-16, 0.21508367820907714]}, {'': [-5.701886151161297e-16, 0.2150836782091325]}, {'': [4.605369583630279e-16, 0.2150836782091118]}, {'': [1.9189039931792828e-16, 0.21508367820916938]}, {'': [2.3026847918151394e-16, 0.215083678209115]}, {'': [-2.2478589634385887e-16, 0.21508367820913832]}, {'': [-2.0285556499323847e-16, 0.21508367820915578]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18733862202400073;  // std dev = 30.972, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,914 #pos=1,430 */
%   | | | else return 0.1389371124394147;  // std dev = 6.403, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.37869688030499077;  // std dev = 4.268, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.3142892859767042;  // std dev = 3.760, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.030562728202960642;  // std dev = 6.747, 319.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=55 */
%   | | | else return 0.10430278125335853;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.006851064900488149;  // std dev = 4.833, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1630821732517479;  // std dev = 30.928, 4,332.000 (wgt'ed) examples reached here.  /* #neg=2,906 #pos=1,426 */
%   | | | else return 0.12124664531915834;  // std dev = 6.612, 215.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3260905683893191;  // std dev = 4.268, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.27157395208895474;  // std dev = 3.760, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026801469463012706;  // std dev = 6.747, 319.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=55 */
%   | | | else return 0.09112577722453409;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else return -0.008931951041626465;  // std dev = 0.338, 205.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1392594445826298;  // std dev = 30.971, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,914 #pos=1,430 */
%   | | | else return 0.10176630302506072;  // std dev = 6.405, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.26990995281288577;  // std dev = 4.268, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.22717043371593848;  // std dev = 3.760, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0489784480291492;  // std dev = 1.643, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.03973980359485773;  // std dev = 7.405, 354.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=68 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12446800336772659;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.004940647399970149;  // std dev = 4.833, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11700693587022382;  // std dev = 30.927, 4,332.000 (wgt'ed) examples reached here.  /* #neg=2,906 #pos=1,426 */
%   | | | else return 0.08596003914627767;  // std dev = 6.614, 215.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18909585492051115;  // std dev = 4.372, 76.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=36 */
%   | | | else return 0.22062749194699535;  // std dev = 3.639, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.060702859997590806;  // std dev = 0.282, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035061188174467975;  // std dev = 7.402, 355.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=68 */
%   | | | else return -0.004347061755979473;  // std dev = 4.833, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09679585115501516;  // std dev = 30.970, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,914 #pos=1,430 */
%   | | | else return 0.07040874510093709;  // std dev = 6.407, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17021981920850165;  // std dev = 4.262, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.14434869495032937;  // std dev = 3.766, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.050819037903260804;  // std dev = 0.296, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03138838522804952;  // std dev = 7.398, 353.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=68 */
%   | | | else return -0.006310063631645437;  // std dev = 4.838, 205.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.48294025590588496;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return -0.008014374476127536;  // std dev = 3.777, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07696945027380875;  // std dev = 31.228, 4,441.000 (wgt'ed) examples reached here.  /* #neg=2,994 #pos=1,447 */
%   | | | else return 0.12246413605065747;  // std dev = 5.641, 128.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.04385734173296041;  // std dev = 5.604, 192.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=40 */
%   | | | else return -0.0012235844202679745;  // std dev = 5.097, 192.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10505634432025004;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.003073864098369784;  // std dev = 4.833, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0641339693501874;  // std dev = 30.893, 4,332.000 (wgt'ed) examples reached here.  /* #neg=2,906 #pos=1,426 */
%   | | | else return 0.04447961273968446;  // std dev = 6.614, 215.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08658037720110338;  // std dev = 4.380, 76.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=36 */
%   | | | else return 0.10505164906097642;  // std dev = 3.629, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.037751089393473936;  // std dev = 5.604, 192.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=40 */
%   | | | else return -0.0010569934015798236;  // std dev = 5.097, 192.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09558086218834858;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0027084519675691227;  // std dev = 4.833, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05144955569480416;  // std dev = 30.936, 4,344.000 (wgt'ed) examples reached here.  /* #neg=2,914 #pos=1,430 */
%   | | | else return 0.03559087524148608;  // std dev = 6.406, 203.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07760284163153895;  // std dev = 4.255, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.06369297636652267;  // std dev = 3.775, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06279259454997138;  // std dev = 0.282, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0216909841116223;  // std dev = 7.207, 360.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=64 */
%   | | | else return -0.002836448017761519;  // std dev = 5.101, 195.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=31 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0410823302983621;  // std dev = 30.891, 4,332.000 (wgt'ed) examples reached here.  /* #neg=2,906 #pos=1,426 */
%   | | | else return 0.02826734080980508;  // std dev = 6.615, 215.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04909845725324992;  // std dev = 4.383, 76.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=36 */
%   | | | else return 0.06092367625281176;  // std dev = 3.624, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.052673951877671515;  // std dev = 1.641, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.020917535936170517;  // std dev = 7.387, 354.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=68 */
%   | | else return -0.00680330800550657;  // std dev = 0.338, 205.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.34561442469294956;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return -0.03681437127113567;  // std dev = 3.774, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.031245626207211316;  // std dev = 31.227, 4,441.000 (wgt'ed) examples reached here.  /* #neg=2,994 #pos=1,447 */
%   | | | else return 0.03994792211109286;  // std dev = 5.639, 128.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02910224332377719;  // std dev = 5.595, 192.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=40 */
%   | | | else return -0.0032216072574821706;  // std dev = 5.096, 192.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=31 */
%   | | else return -0.005994021372751668;  // std dev = 0.338, 205.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=27 */


Results
   AUC ROC   = 0.681975
   AUC PR    = 0.715268
   CLL	      = -0.712278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 712.081 seconds
Total inference time: 1.464 seconds
AUC ROC: 0.681975


Results scoring model
   AUC ROC   = 0.631515
   AUC PR    = 0.563764
   CLL	      = -0.584024
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.164217
   F1        = 0.282107


Total scoring time: 18.746 seconds
Refined model CLL: -0.584024


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.681975
   AUC PR    = 0.715268
   CLL	      = -0.712278
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 737.755 seconds
Total inference time: 1.464 seconds
AUC ROC: 0.681975
Total revision time: 737.755
Best scored revision CLL: -0.584024


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:28:44
{'AUC ROC': 0.681975, 'AUC PR': 0.715268, 'CLL': -0.712278, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 737.755, 'Inference time': 1.464, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726127, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.571, 'Inference time': 0.7}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.384 seconds
Total inference time: 0.704 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 1.535 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612194;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532775;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06261940488996087;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03202730931021601;  // std dev = 8.056, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0018577779361544022;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1390268379046686;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.1005128805374948;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2650732416269155;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010989996147000438;  // std dev = 7.219, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08270525667997496;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.001233926135723015;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1256485940144704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218116;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729197;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611724;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2030841315177579;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05693425515345133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06811469957179603;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.021355002072136683;  // std dev = 9.623, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09665825156236615;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566584;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.059674091048261685;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05029980582617525;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.018630038197199546;  // std dev = 9.623, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07907700488650463;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419637;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12986669782561094;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05261097069177872;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02436320511010442;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007287388306101269;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06396870506991835;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441126;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180408;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201678;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04663463972057045;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021178994441702067;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006354479092923129;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.056022259671483624;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.050075187510864316;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.07261257093281719;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005656199541339723;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06116308559148284;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005717389797900918;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1151381613390915;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4261700229423525;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.06460647078590845;  // std dev = 4.007, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07995593567864748;  // std dev = 5.125, 121.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=46 */
%   | | | else return 0.039298643688495116;  // std dev = 35.082, 5,594.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,844 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.04250212786486718;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.049518354610151465;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011971511135166148;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03250813322556239;  // std dev = 34.527, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.020329860952721768;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04881624957903102;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.040950853940945636;  // std dev = 4.056, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03129833688142076;  // std dev = 6.045, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.005177107996497232;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006420208125913444;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10503740885211353;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.682411
   AUC PR    = 0.714904
   CLL	      = -0.711993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 863.923 seconds
Total inference time: 1.575 seconds
AUC ROC: 0.682411


Results scoring model
   AUC ROC   = 0.63918
   AUC PR    = 0.572123
   CLL	      = -0.582189
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 22.287 seconds
Refined model CLL: -0.582189


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.682411
   AUC PR    = 0.714904
   CLL	      = -0.711993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.152727
   F1        = 0.264984


Total learning time: 895.129 seconds
Total inference time: 1.575 seconds
AUC ROC: 0.682411
Total revision time: 895.129
Best scored revision CLL: -0.582189


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 11:43:42
{'AUC ROC': 0.682411, 'AUC PR': 0.714904, 'CLL': -0.711993, 'Precision': [1.0, 0.5], 'Recall': 0.152727, 'F1': 0.264984, 'Learning time': 895.129, 'Inference time': 1.575, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.384, 'Inference time': 0.704}}


Starting fold 1

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos	 examples: 368
Target test neg examples: 688

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.20505692906632492;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.17821841636279911;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.47e-08, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.15173242597377215;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.126792288894272;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.1042569864559025;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.08458759912325187;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.06789351001881408;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.05403305346010772;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 5.96e-08, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.042718980772464304;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else return 0.03360229096888991;  // std dev = 17.333, 1,326.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=460 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.556384
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.102 seconds
Total inference time: 0.689 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.565217
   AUC PR    = 0.520947
   CLL	      = -0.621353
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.130435
   F1        = 0.230769


Total scoring time: 1.046 seconds
Parameter learned model CLL: -0.621353


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.69e-07, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.47e-08, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 69], 'false': [17.333, 866, 460]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.94e-08, 0, 69], 'false': [17.333, 866, 460]}]]
[{'': [-1.1327492888929132e-15, 0.2265628376887209]}, {'': [4.1190883232469576e-16, 0.22656283768872357]}, {'': [6.178632484870436e-16, 0.22656283768875013]}, {'': [-1.0297720808117394e-16, 0.226562837688752]}, {'': [-3.2180377525366856e-16, 0.22656283768871974]}, {'': [-2.5744302020293485e-17, 0.2265628376887535]}, {'': [-7.723290606088045e-17, 0.2265628376887461]}, {'': [0.0, 0.2265628376887314]}, {'': [5.148860404058697e-17, 0.22656283768873137]}, {'': [3.539841527790354e-17, 0.2265628376887346]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0.23203881076558208;  // std dev = 0.484, 1,126.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=421 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.027267731567154344;  // std dev = 3.121, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.15814893509951236;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109541;  // std dev = 1.69e-07, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19822203999778354;  // std dev = 0.483, 1,164.000 (wgt'ed) examples reached here.  /* #neg=733 #pos=431 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.11418623766746651;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.02398075259120948;  // std dev = 3.121, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.13778665478297927;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 2.06e-07, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22618600506310776;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.07335178236507607;  // std dev = 1.336, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return 0.17122788160059327;  // std dev = 0.484, 1,126.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=421 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09835299714676603;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.02114304396475175;  // std dev = 3.121, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.11817988627418394;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.13955758260351742;  // std dev = 0.482, 1,164.000 (wgt'ed) examples reached here.  /* #neg=733 #pos=431 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.083737008556944;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.01868191190767693;  // std dev = 3.121, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.17544826889199938;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10177514366260375;  // std dev = 3.224, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3578751577689779;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.1961101692343189;  // std dev = 0.970, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else return 0.11545268548880104;  // std dev = 0.482, 1,135.000 (wgt'ed) examples reached here.  /* #neg=713 #pos=422 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.021613096095509186;  // std dev = 3.772, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | | else return 0.1724981192259821;  // std dev = 1.880, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.026955458268186752;  // std dev = 2.116, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return -0.10634862921472117;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948967;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09149785592449765;  // std dev = 0.481, 1,164.000 (wgt'ed) examples reached here.  /* #neg=733 #pos=431 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004273769197078385;  // std dev = 3.307, 94.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | | | else return -0.05625628169680219;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.15208407615166078;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08293512384600647;  // std dev = 3.219, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325357;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07275290697604933;  // std dev = 0.481, 1,164.000 (wgt'ed) examples reached here.  /* #neg=733 #pos=431 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.006007070595267123;  // std dev = 2.708, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.027551399542905326;  // std dev = 2.126, 49.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.1337228459271619;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06888110696211644;  // std dev = 3.217, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527722;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.057342589238213844;  // std dev = 0.481, 1,164.000 (wgt'ed) examples reached here.  /* #neg=733 #pos=431 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.006534475408360645;  // std dev = 3.740, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | | else return 0.1506612598951393;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.020286791483923275;  // std dev = 2.116, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return -0.10472563174942909;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367064;  // std dev = 5.96e-08, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.46226251116620787;  // std dev = 9.449, 534.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=419 */
%   | | | else return -0.2982038063128292;  // std dev = 3.389, 640.000 (wgt'ed) examples reached here.  /* #neg=629 #pos=11 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.07824749733627365;  // std dev = 3.102, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.1461065496948444;  // std dev = 2.463, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.002833686668804214;  // std dev = 2.383, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | | else return -0.12054904143136236;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.095350866203216;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 4.94e-08, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.35474850293141597;  // std dev = 9.444, 534.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=419 */
%   | | | else return -0.23794616788647005;  // std dev = 3.356, 640.000 (wgt'ed) examples reached here.  /* #neg=629 #pos=11 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06361284501990001;  // std dev = 3.105, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.11943874915164568;  // std dev = 2.464, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.07365023544437387;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.01704514009075721;  // std dev = 2.115, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return -0.08747248278747657;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.8667
   AUC PR    = 0.807973
   CLL	      = -0.439102
   Precision = 0.731235 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.773367


Total learning time: 366.841 seconds
Total inference time: 1.214 seconds
AUC ROC: 0.8667


Results scoring model
   AUC ROC   = 0.917728
   AUC PR    = 0.857499
   CLL	      = -0.431656
   Precision = 0.817863 at threshold = 0.5
   Recall    = 0.882798
   F1        = 0.849091


Total scoring time: 5.237 seconds
Refined model CLL: -0.431656


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.8667
   AUC PR    = 0.807973
   CLL	      = -0.439102
   Precision = 0.731235 at threshold = 0.5
   Recall    = 0.820652
   F1        = 0.773367


Total learning time: 375.22600000000006 seconds
Total inference time: 1.214 seconds
AUC ROC: 0.8667
Total revision time: 375.22600000000006
Best scored revision CLL: -0.431656


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 11:50:00
{'AUC ROC': 0.8667, 'AUC PR': 0.807973, 'CLL': -0.439102, 'Precision': [0.731235, 0.5], 'Recall': 0.820652, 'F1': 0.773367, 'Learning time': 375.22600000000006, 'Inference time': 1.214, 'parameter_0.2': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.556384, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.102, 'Inference time': 0.689}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.51e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.20467985515983908;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.17789421420798174;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 4.21e-08, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.15146548641209664;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.21e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.12658137846972675;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.35e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.104096536548241;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949017;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.08446966187838233;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253526;  // std dev = 2.31e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.06780954288225273;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.05397511695601875;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.0426803302667977;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else return 0.0335775316310324;  // std dev = 24.506, 2,652.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=919 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.556328
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 2.833 seconds
Total inference time: 0.713 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.5661
   AUC PR    = 0.522516
   CLL	      = -0.620771
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.1322
   F1        = 0.233528


Total scoring time: 1.2 seconds
Parameter learned model CLL: -0.620771


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.51e-07, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-07, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.35e-07, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.31e-07, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 140], 'false': [24.506, 1, 919]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 140], 'false': [24.506, 1, 919]}]]
[{'': [5.1768113605378725e-15, 0.22644724150249682]}, {'': [-2.1316282072803005e-15, 0.22644724150245596]}, {'': [1.827109891954543e-15, 0.22644724150249668]}, {'': [1.2688263138573218e-15, 0.22644724150244627]}, {'': [3.9333615729576973e-16, 0.22644724150244738]}, {'': [-1.1419436824715895e-16, 0.22644724150248716]}, {'': [3.806478941571965e-16, 0.22644724150245232]}, {'': [-2.91830052187184e-16, 0.22644724150248555]}, {'': [-4.123685520036296e-17, 0.2264472415024846]}, {'': [2.5376526277146434e-17, 0.22644724150248857]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995101;  // std dev = 8.51e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22739936099388547;  // std dev = 0.483, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.011558026008602713;  // std dev = 4.781, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.10546076305650105;  // std dev = 4.161, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109558;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19740445983492105;  // std dev = 0.483, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.010145242645838522;  // std dev = 4.781, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.05448744112577215;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0921320093319598;  // std dev = 4.161, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462834;  // std dev = 5.06e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.324534166816952;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.04388688581462751;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else return 0.16837682804748624;  // std dev = 0.483, 2,272.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=841 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.055486419291950424;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.005842678206306318;  // std dev = 4.548, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15104672177637193;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.08383094057570482;  // std dev = 4.140, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158309;  // std dev = 4.21e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1390933351251571;  // std dev = 0.482, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.00852020449517023;  // std dev = 4.779, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.047618533318748366;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.13276307341373128;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0720604457564528;  // std dev = 4.139, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014994;  // std dev = 2.35e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11353507142834213;  // std dev = 0.482, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.007461449632136396;  // std dev = 4.779, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.04241040075726285;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.11826686536101265;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.061418696950986076;  // std dev = 4.138, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256949017;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09133943839494918;  // std dev = 0.482, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.006528998982044474;  // std dev = 4.779, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.037926886800508104;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05325150279117194;  // std dev = 4.132, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return -0.11852222314165044;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253526;  // std dev = 2.31e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3699227378854608;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.1649353337890615;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else return 0.07308650685565092;  // std dev = 0.482, 2,283.000 (wgt'ed) examples reached here.  /* #neg=1,439 #pos=844 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.005709035227759878;  // std dev = 4.779, 176.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=27 */
%   | | | else return -0.034038538407856825;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1080698026910537;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.04495366405019422;  // std dev = 4.131, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527816;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18949755217289352;  // std dev = 3.002, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return -0.1263099467169076;  // std dev = 2.271, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.051984338126821;  // std dev = 3.595, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.05808417381537757;  // std dev = 22.696, 2,209.000 (wgt'ed) examples reached here.  /* #neg=1,391 #pos=818 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.035220595751752425;  // std dev = 4.799, 137.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=30 */
%   | | | else return -0.018735319567164312;  // std dev = 2.755, 70.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.00227312427077312;  // std dev = 3.325, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | | else return -0.10818959975761817;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367144;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15597361765930323;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | else return -0.1036904520791585;  // std dev = 2.273, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else return 0.04534962169165765;  // std dev = 0.482, 2,272.000 (wgt'ed) examples reached here.  /* #neg=1,431 #pos=841 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0035994965580366683;  // std dev = 5.013, 175.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=32 */
%   | | | else return 0.07263127810063054;  // std dev = 2.336, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0019876619478064574;  // std dev = 3.325, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | | else return -0.09826711041609178;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 5.96e-08, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034750975591425586;  // std dev = 0.481, 2,348.000 (wgt'ed) examples reached here.  /* #neg=1,481 #pos=867 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.04083216752349644;  // std dev = 1.997, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.007597874086377302;  // std dev = 4.538, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03260944222690613;  // std dev = 4.128, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return -0.08995997328395086;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.68108
   AUC PR    = 0.623827
   CLL	      = -0.543316
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 102.068 seconds
Total inference time: 0.929 seconds
AUC ROC: 0.68108


Results scoring model
   AUC ROC   = 0.624629
   AUC PR    = 0.564158
   CLL	      = -0.606353
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.1322
   F1        = 0.233528


Total scoring time: 1.767 seconds
Refined model CLL: -0.606353


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.68108
   AUC PR    = 0.623827
   CLL	      = -0.543316
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 107.868 seconds
Total inference time: 0.929 seconds
AUC ROC: 0.68108
Total revision time: 107.868
Best scored revision CLL: -0.606353


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 11:51:50
{'AUC ROC': 0.68108, 'AUC PR': 0.623827, 'CLL': -0.543316, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 107.868, 'Inference time': 0.929, 'parameter_0.4': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.556328, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 2.833, 'Inference time': 0.713}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.2024112301814744;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.1759434076947243;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.94e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.14985852278207445;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.12531076697812338;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601495;  // std dev = 3.37e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.10312896375976227;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.08375761152897267;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.0673019031542934;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 2.98e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.05362432104547808;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.04244590623598047;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else return 0.03342705335086993;  // std dev = 29.918, 3,965.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,365 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.556002
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 3.971 seconds
Total inference time: 0.683 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.570485
   AUC PR    = 0.529898
   CLL	      = -0.617662
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.140969
   F1        = 0.247104


Total scoring time: 1.38 seconds
Parameter learned model CLL: -0.617662


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.94e-08, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.37e-07, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.8e-07, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.01e-07, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 224], 'false': [29.918, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.46e-07, 0, 224], 'false': [29.918, 2, 1]}]]
[{'': [5.075305255429287e-15, 0.22574576726684203]}, {'': [-4.0602442043434294e-15, 0.22574576726686316]}, {'': [1.522591576628786e-15, 0.2257457672668273]}, {'': [0.0, 0.22574576726685883]}, {'': [5.075305255429287e-16, 0.22574576726688428]}, {'': [3.489272363107635e-16, 0.2257457672668361]}, {'': [4.044383875420213e-16, 0.2257457672668279]}, {'': [3.96508223080413e-18, 0.22574576726684184]}, {'': [-1.5067312477055697e-16, 0.22574576726684353]}, {'': [9.516197353929913e-17, 0.22574576726689952]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22335028769710943;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.14386322081379788;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3766674536180297;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.4797705567211331;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.03736040463356231;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=50 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013704490655067729;  // std dev = 4.211, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109573;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1939308646855804;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.12543301544918353;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3243788415113003;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.4108414989934923;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.058859988424897494;  // std dev = 5.843, 209.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=43 */
%   | | | else return 0.004632644922939131;  // std dev = 3.671, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012028049898475678;  // std dev = 4.211, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.84e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16462865674278562;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.10782354562777491;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2685825285923573;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.33449652251717626;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10488651577495751;  // std dev = 2.573, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.027177216094602226;  // std dev = 6.401, 279.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=50 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010543124503115762;  // std dev = 4.211, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13692863647505485;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.09150383240113845;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21495192589405884;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.2615126990046287;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026959691175552733;  // std dev = 5.577, 214.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=38 */
%   | | | else return -0.02872947130760137;  // std dev = 3.225, 94.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05602279167442187;  // std dev = 4.858, 140.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=30 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601495;  // std dev = 3.37e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11191508637885883;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.07678249969777642;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.29202059337548913;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17675799799944888;  // std dev = 4.642, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04354074693574052;  // std dev = 5.841, 209.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=43 */
%   | | | else return -0.004421021264525738;  // std dev = 3.655, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006037195585311374;  // std dev = 4.210, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694882;  // std dev = 2.80e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0901706300047293;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.06380835741947614;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12542933294758848;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.1549464019774512;  // std dev = 2.946, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03753858247858628;  // std dev = 5.841, 209.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=43 */
%   | | | else return -0.003833489137369776;  // std dev = 3.655, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12600337852014074;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0050141931961940845;  // std dev = 4.204, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253492;  // std dev = 3.01e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07183202802456451;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.05259581166798498;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09356327714235677;  // std dev = 3.793, 60.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   | | | else return 0.12340764158703656;  // std dev = 2.788, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08457579216474151;  // std dev = 2.575, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.012591866612640331;  // std dev = 6.385, 279.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=50 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11287721338613874;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.004388963120955947;  // std dev = 4.204, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452776;  // std dev = 2.98e-08, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05672321873890006;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.04306139954285884;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06805408597094766;  // std dev = 3.669, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.09270466647348603;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.021173019562622398;  // std dev = 5.564, 214.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=38 */
%   | | | else return -0.03483502173780407;  // std dev = 3.212, 94.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07717358069127493;  // std dev = 0.950, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.03544344004840749;  // std dev = 4.768, 139.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.044493475418099566;  // std dev = 27.462, 3,253.000 (wgt'ed) examples reached here.  /* #neg=2,065 #pos=1,188 */
%   | | | else return 0.03506047229230461;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.049786591560023206;  // std dev = 3.790, 60.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   | | | else return 0.07592926064221911;  // std dev = 2.790, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.028736872318841002;  // std dev = 5.837, 209.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=43 */
%   | | | else return -0.009020977337217753;  // std dev = 3.640, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0026265619364777637;  // std dev = 4.204, 135.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.08245109834971502;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801098;  // std dev = 1.46e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034756155643178535;  // std dev = 27.461, 3,263.000 (wgt'ed) examples reached here.  /* #neg=2,076 #pos=1,187 */
%   | | | else return 0.02730652795352344;  // std dev = 5.733, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.035122221369234916;  // std dev = 3.667, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.05723651497760579;  // std dev = 2.949, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06951660494478393;  // std dev = 2.574, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.0069869787802911455;  // std dev = 6.375, 279.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=50 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10019459076990198;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0013883600917594533;  // std dev = 4.202, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */


Results
   AUC ROC   = 0.678072
   AUC PR    = 0.622262
   CLL	      = -0.546765
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 586.99 seconds
Total inference time: 1.677 seconds
AUC ROC: 0.678072


Results scoring model
   AUC ROC   = 0.623313
   AUC PR    = 0.566173
   CLL	      = -0.605438
   Precision = 0.942966 at threshold = 0.5
   Recall    = 0.156073
   F1        = 0.267819


Total scoring time: 17.924 seconds
Refined model CLL: -0.605438


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678072
   AUC PR    = 0.622262
   CLL	      = -0.546765
   Precision = 0.878261 at threshold = 0.5
   Recall    = 0.274457
   F1        = 0.418219


Total learning time: 610.265 seconds
Total inference time: 1.677 seconds
AUC ROC: 0.678072
Total revision time: 610.265
Best scored revision CLL: -0.605438


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:02:04
{'AUC ROC': 0.678072, 'AUC PR': 0.622262, 'CLL': -0.546765, 'Precision': [0.878261, 0.5], 'Recall': 0.274457, 'F1': 0.418219, 'Learning time': 610.265, 'Inference time': 1.677, 'parameter_0.6': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.556002, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 3.971, 'Inference time': 0.683}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.20189301989981;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.1754977279789736;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.1494912237600678;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.12502012049705738;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.10290740537916632;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.58e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.08359435951016501;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.06718535050139647;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.46e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.05354365073237722;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.04239189943973323;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else return 0.033392311029868144;  // std dev = 34.522, 5,283.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=1,816 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.55593
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 5.658 seconds
Total inference time: 0.737 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.571496
   AUC PR    = 0.531589
   CLL	      = -0.616945
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.142992
   F1        = 0.250206


Total scoring time: 1.442 seconds
Parameter learned model CLL: -0.616945


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.58e-07, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.49e-07, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 303], 'false': [34.522, 3, 1]}]]
[{'': [3.6582398276757634e-15, 0.22558408896504786]}, {'': [-4.877653103567684e-15, 0.22558408896508014]}, {'': [-1.407015318336832e-16, 0.22558408896509055]}, {'': [-7.738584250852576e-16, 0.22558408896504883]}, {'': [-3.0485331897298027e-16, 0.2255840889650622]}, {'': [4.221045955010496e-16, 0.225584088965075]}, {'': [2.0518973392412133e-16, 0.22558408896507828]}, {'': [1.9932717009771787e-16, 0.22558408896511759]}, {'': [-2.110522977505248e-16, 0.2255840889650915]}, {'': [-1.5242665948649013e-16, 0.2255840889651156]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995086;  // std dev = 1.05e-06, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22224794041988655;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.15907486102543963;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.40609414057896404;  // std dev = 4.252, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.46684458727342437;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06455462904969052;  // std dev = 6.784, 281.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=58 */
%   | | | else return 0.009228071790159656;  // std dev = 4.222, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.01439893509951166;  // std dev = 5.031, 192.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19298492447858226;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.13858670785306096;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34916026481482515;  // std dev = 4.252, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.40005775023242374;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05651331237559676;  // std dev = 6.784, 281.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=58 */
%   | | | else return 0.00810102778944679;  // std dev = 4.222, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012768881829738217;  // std dev = 5.028, 193.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=30 */
%   | | | else return -0.13907082939265794;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16385453719750775;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.11884891185353615;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4842493028123731;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.29634933338833536;  // std dev = 5.311, 115.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11477319084851091;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.02641166910589149;  // std dev = 7.456, 378.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=68 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12318592281148154;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.011896198062603771;  // std dev = 5.026, 192.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831147;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1363231151510106;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.10047677358369428;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6788291521540112;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.227865799736499;  // std dev = 5.331, 116.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09978437370015099;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.022949592714345164;  // std dev = 7.456, 378.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=68 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01046932108823858;  // std dev = 5.024, 193.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=30 */
%   | | | else return -0.12134755655786438;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601509;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11146052271450654;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.08388810190423994;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.325554936962301;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17927182819659956;  // std dev = 5.286, 115.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02361572764357383;  // std dev = 6.467, 293.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=51 */
%   | | | else return -0.019567517799976255;  // std dev = 4.023, 135.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0465534254472804;  // std dev = 5.551, 185.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=39 */
%   | | | else return -0.1090090176968193;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.58e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08984173171205405;  // std dev = 31.637, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.06929495181819022;  // std dev = 6.741, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24479683690788245;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13609462861432964;  // std dev = 5.285, 115.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03840359319850417;  // std dev = 6.784, 281.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=58 */
%   | | | else return -0.006270635198562038;  // std dev = 4.195, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10815538888114705;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.007558179917096464;  // std dev = 5.020, 192.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.49e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07164654111732491;  // std dev = 31.634, 4,331.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,573 */
%   | | | else return 0.055233200098310814;  // std dev = 6.753, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08991247200350627;  // std dev = 4.215, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.12967011242403687;  // std dev = 3.299, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08178948984221564;  // std dev = 2.855, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.01341952720386876;  // std dev = 7.445, 378.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=68 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006014321975672133;  // std dev = 5.022, 193.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=30 */
%   | | | else return -0.09749620420742759;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.46e-07, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05663360585798409;  // std dev = 31.634, 4,331.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,573 */
%   | | | else return 0.044443328303610495;  // std dev = 6.754, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06760730273263545;  // std dev = 4.215, 73.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=40 */
%   | | | else return 0.09729979020809836;  // std dev = 3.299, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10627993051756784;  // std dev = 2.785, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.005614651685994442;  // std dev = 7.055, 386.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=59 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03241906237381442;  // std dev = 5.554, 185.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=39 */
%   | | | else return -0.08926507441855237;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04447797964992068;  // std dev = 31.636, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,574 */
%   | | | else return 0.03567471318790094;  // std dev = 6.746, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.400515146902076;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05056812768612648;  // std dev = 5.321, 116.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09187463693577587;  // std dev = 2.781, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.0048681612022331705;  // std dev = 7.055, 386.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=59 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09373381677937953;  // std dev = 0.929, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.028362237456211546;  // std dev = 5.473, 185.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801165;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #pos=303 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034769081345201236;  // std dev = 31.633, 4,331.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,573 */
%   | | | else return 0.027597856657422423;  // std dev = 6.758, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.12982125838087405;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04186276561358005;  // std dev = 5.269, 115.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018588759542814585;  // std dev = 6.461, 293.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=51 */
%   | | | else return -0.02796975983630999;  // std dev = 3.973, 135.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06800742374702386;  // std dev = 1.328, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.027512583641729607;  // std dev = 5.386, 177.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=37 */


Results
   AUC ROC   = 0.678167
   AUC PR    = 0.622734
   CLL	      = -0.546063
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 776.27 seconds
Total inference time: 1.499 seconds
AUC ROC: 0.678167


Results scoring model
   AUC ROC   = 0.62444
   AUC PR    = 0.568256
   CLL	      = -0.604541
   Precision = 0.879147 at threshold = 0.5
   Recall    = 0.175083
   F1        = 0.292011


Total scoring time: 20.466 seconds
Refined model CLL: -0.604541


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678167
   AUC PR    = 0.622734
   CLL	      = -0.546063
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 803.836 seconds
Total inference time: 1.499 seconds
AUC ROC: 0.678167
Total revision time: 803.836
Best scored revision CLL: -0.604541


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:15:30
{'AUC ROC': 0.678167, 'AUC PR': 0.622734, 'CLL': -0.546063, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 803.836, 'Inference time': 1.499, 'parameter_0.8': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.55593, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 5.658, 'Inference time': 0.737}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.1737717959937126;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.14806821941656678;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.12389329084872439;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.10204761663458749;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.08296011566026197;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.06673194779607057;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.05322937612792513;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.04218115016513352;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.03325646718745018;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */


Results
   AUC ROC   = 0.630435
   AUC PR    = 0.597315
   CLL	      = -0.555661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.26087
   F1        = 0.413793


Total learning time: 7.358 seconds
Total inference time: 0.735 seconds
AUC ROC: 0.630435


Results scoring model
   AUC ROC   = 0.575311
   AUC PR    = 0.53787
   CLL	      = -0.614208
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150623
   F1        = 0.261811


Total scoring time: 1.508 seconds
Parameter learned model CLL: -0.614208


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.58e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.93e-07, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 399], 'false': [38.485, 4, 2]}]]
[{'': [6.268447192670558e-15, 0.22495299551614867]}, {'': [-5.342426584662407e-15, 0.22495299551622477]}, {'': [-1.2109500258568123e-15, 0.2249529955161559]}, {'': [-1.887657393247384e-15, 0.22495299551629439]}, {'': [-1.6383441526298048e-15, 0.22495299551627468]}, {'': [5.2533861415847e-16, 0.2249529955162649]}, {'': [1.5136875323210153e-16, 0.22495299551615353]}, {'': [9.349246523159212e-17, 0.2249529955162331]}, {'': [-2.62669307079235e-16, 0.2249529955162289]}, {'': [-3.227716061566871e-16, 0.2249529955162422]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18888365934027515;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.13188754443331543;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6400564718493374;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3688128454606151;  // std dev = 5.906, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016269;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16051920012347037;  // std dev = 35.212, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.1128987945995776;  // std dev = 7.459, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5129955701164898;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3023360730984742;  // std dev = 5.904, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423053;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.052694590022659825;  // std dev = 3.529, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030722231617225662;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13386601732359515;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.09262066068403076;  // std dev = 7.466, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3905744438928558;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23871483852813377;  // std dev = 5.903, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.032120849294061074;  // std dev = 8.405, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07218185171731774;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026422875570003525;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362258592065522;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1096499869996321;  // std dev = 35.209, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.07715451667816062;  // std dev = 7.467, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1734862185569677;  // std dev = 4.745, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.21455656526977807;  // std dev = 3.630, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1139907991720874;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07066317458273079;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.024871103009733653;  // std dev = 8.434, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.02323508897436421;  // std dev = 5.850, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.58e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08867203675809346;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.06140774263889945;  // std dev = 7.472, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2504553626660282;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13787125816150692;  // std dev = 5.900, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10872876603971615;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01920718089889118;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07790838565269889;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022051654841524885;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07082566939367406;  // std dev = 35.207, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.050179477894514456;  // std dev = 7.473, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09123057213395494;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1358988597047798;  // std dev = 3.624, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09366806310469768;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06586444147269822;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017191040660526603;  // std dev = 8.477, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.018490579275643623;  // std dev = 5.774, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452769;  // std dev = 1.93e-07, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05614201621630109;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03947145161643926;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0669469546528129;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10496454161308354;  // std dev = 3.633, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08930346370261281;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01326305552205603;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014677324036342162;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10343373853542533;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04415728299393086;  // std dev = 35.206, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.03185889646502917;  // std dev = 7.477, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04659725098562426;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.08520710231000136;  // std dev = 3.628, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0745636356383509;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01135737452590509;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10834522542463992;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01450065961548835;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080122;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03460159906773534;  // std dev = 35.205, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.02464033529771533;  // std dev = 7.480, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2189359337781951;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.037458953677520355;  // std dev = 5.884, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07675399550132439;  // std dev = 3.332, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0599139993269056;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008558744902418026;  // std dev = 8.420, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.012481721477254668;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */


Results
   AUC ROC   = 0.678092
   AUC PR    = 0.622382
   CLL	      = -0.546011
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 934.279 seconds
Total inference time: 1.584 seconds
AUC ROC: 0.678092


Results scoring model
   AUC ROC   = 0.625157
   AUC PR    = 0.573651
   CLL	      = -0.603282
   Precision = 0.887067 at threshold = 0.5
   Recall    = 0.183843
   F1        = 0.304565


Total scoring time: 28.296 seconds
Refined model CLL: -0.603282


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.678092
   AUC PR    = 0.622382
   CLL	      = -0.546011
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.282609
   F1        = 0.42623


Total learning time: 971.441 seconds
Total inference time: 1.584 seconds
AUC ROC: 0.678092
Total revision time: 971.441
Best scored revision CLL: -0.603282


Dataset: 3_imdb_cora, Fold: 1, Type: Transfer (trRDN-B), Time: 12:31:45
{'AUC ROC': 0.678092, 'AUC PR': 0.622382, 'CLL': -0.546011, 'Precision': [0.866667, 0.5], 'Recall': 0.282609, 'F1': 0.42623, 'Learning time': 971.441, 'Inference time': 1.584, 'parameter_1.0': {'AUC ROC': 0.630435, 'AUC PR': 0.597315, 'CLL': -0.555661, 'Precision': [1.0, 0.5], 'Recall': 0.26087, 'F1': 0.413793, 'Learning time': 7.358, 'Inference time': 0.735}}


Starting fold 2

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos	 examples: 771
Target test neg examples: 544

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.14556931726511252;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2.92e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.12690935324721206;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.15e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.10906374780323803;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.63e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.0925168821582966;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.07758876831819868;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.06443482436858822;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.66e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.053071761073398595;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.04341525308537813;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.035317864635627236;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else return 0.028600680783340167;  // std dev = 16.039, 1,256.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=361 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.812817
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 1.814 seconds
Total inference time: 0.716 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.597996
   AUC PR    = 0.536512
   CLL	      = -0.570119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.195991
   F1        = 0.327747


Total scoring time: 1.033 seconds
Parameter learned model CLL: -0.570119


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.15e-08, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.63e-07, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 88], 'false': [16.039, 895, 361]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.96e-08, 0, 88], 'false': [16.039, 895, 361]}]]
[{'': [0.0, 0.20480990608136385]}, {'': [9.689219124001365e-16, 0.20480990608136937]}, {'': [1.6956133467002392e-15, 0.20480990608137184]}, {'': [3.0278809762504267e-16, 0.2048099060813804]}, {'': [-3.431598439750484e-16, 0.20480990608138963]}, {'': [-4.0371746350005693e-17, 0.20480990608138394]}, {'': [1.0597583416876495e-16, 0.20480990608137892]}, {'': [1.0092936587501423e-16, 0.20480990608137475]}, {'': [-7.065055611250996e-17, 0.20480990608137525]}, {'': [4.0371746350005693e-17, 0.20480990608139243]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.858148935099512;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1728342497848222;  // std dev = 14.693, 1,001.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=315 */
%   | | | else return 0.14981560176617903;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.041482268432845706;  // std dev = 2.997, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.01685106490048769;  // std dev = 2.475, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0892194859531193;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109536;  // std dev = 2.92e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14859558092592423;  // std dev = 14.690, 1,004.000 (wgt'ed) examples reached here.  /* #neg=690 #pos=314 */
%   | | | else return 0.170995317800374;  // std dev = 3.161, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08168328864042035;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.3087411357856349;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15445670559415206;  // std dev = 1.446, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0018170968009524212;  // std dev = 3.587, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.050922032513554226;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07870190981914446;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.86e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12898050736279137;  // std dev = 14.692, 1,001.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=315 */
%   | | | else return 0.10758728200323509;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4757815700149441;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10971263907658829;  // std dev = 2.307, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.033829405374493506;  // std dev = 2.987, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.01530258420446244;  // std dev = 2.477, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04434629760466851;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06998074573501527;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831014;  // std dev = 1.63e-07, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10696146214812315;  // std dev = 14.690, 1,004.000 (wgt'ed) examples reached here.  /* #neg=690 #pos=314 */
%   | | | else return 0.12806680251153393;  // std dev = 3.160, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.39245002486099906;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09189785382393931;  // std dev = 2.305, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13077316560189214;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.006851365120580072;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0013538191613115624;  // std dev = 3.584, 105.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=15 */
%   | | | else return -0.0626489429971458;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015033;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2760211591366643;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.09329016749162994;  // std dev = 1.769, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09319308226928397;  // std dev = 14.781, 1,009.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=320 */
%   | | | else return 0.08357727856636321;  // std dev = 2.413, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11159041799155582;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.002608848911144326;  // std dev = 3.587, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03749838153019074;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05641169128985607;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0744035359412292;  // std dev = 14.676, 1,001.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=315 */
%   | | | else return 0.055351478723133306;  // std dev = 3.146, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012408962700921719;  // std dev = 1.718, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.19083657953082214;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09393640257028446;  // std dev = 1.442, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.0022874653915829915;  // std dev = 3.587, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.032330244682418234;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05105078928598938;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325358;  // std dev = 9.66e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05902391219076482;  // std dev = 14.673, 1,004.000 (wgt'ed) examples reached here.  /* #neg=690 #pos=314 */
%   | | | else return 0.07855198242377247;  // std dev = 3.155, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.010274301786130337;  // std dev = 1.718, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.14886625398887923;  // std dev = 1.702, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02304589343516877;  // std dev = 2.965, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return -0.014534287786369707;  // std dev = 2.484, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.027769743133865866;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.046401593968278775;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 9.42e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3792159313889505;  // std dev = 1.360, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.0014966834624615525;  // std dev = 2.071, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return 0.04661186863171851;  // std dev = 0.463, 1,047.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=327 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.015597680739241978;  // std dev = 3.306, 82.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
%   | | | else return -0.023522013218384423;  // std dev = 2.005, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.032681580884766886;  // std dev = 1.907, 59.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return -0.12205467251702695;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367122;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03956770877968467;  // std dev = 14.663, 1,001.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=315 */
%   | | | else return 0.023080314692370707;  // std dev = 3.145, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24143206637941908;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.017672857977368336;  // std dev = 2.275, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07881607924604137;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.003348624300491087;  // std dev = 3.584, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.030934975214709493;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.03931260446024886;  // std dev = 1.685, 57.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.96e-08, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17852466641001508;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.12445262982046822;  // std dev = 1.712, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03404569624147215;  // std dev = 14.768, 1,009.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=320 */
%   | | | else return 0.020309340248691337;  // std dev = 2.385, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.013923640652169063;  // std dev = 3.307, 82.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=13 */
%   | | | else return -0.023627199880877296;  // std dev = 1.998, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02706180062161714;  // std dev = 1.905, 59.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=4 */
%   | | | else return -0.1091131517695258;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.57666
   AUC PR    = 0.710456
   CLL	      = -0.791546
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 161.39 seconds
Total inference time: 1.92 seconds
AUC ROC: 0.57666


Results scoring model
   AUC ROC   = 0.668464
   AUC PR    = 0.586103
   CLL	      = -0.552805
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.198218
   F1        = 0.330855


Total scoring time: 4.319 seconds
Refined model CLL: -0.552805


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.57666
   AUC PR    = 0.710456
   CLL	      = -0.791546
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 168.55599999999998 seconds
Total inference time: 1.92 seconds
AUC ROC: 0.57666
Total revision time: 168.55599999999998
Best scored revision CLL: -0.552805


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:34:37
{'AUC ROC': 0.57666, 'AUC PR': 0.710456, 'CLL': -0.791546, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 168.55599999999998, 'Inference time': 1.92, 'parameter_0.2': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.812817, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 1.814, 'Inference time': 0.716}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.14968374522608954;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.13046859870502306;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.11205085620563453;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.09495301867841573;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.0795234444158043;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.06593399258305213;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.05420707040091153;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.04425616124400145;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.03592687779873437;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else return 0.029031176076922915;  // std dev = 22.850, 2,528.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=737 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.807684
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 2.975 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.589644
   AUC PR    = 0.522815
   CLL	      = -0.576271
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.179287
   F1        = 0.30406


Total scoring time: 1.144 seconds
Parameter learned model CLL: -0.576271


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.97e-07, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 161], 'false': [22.85, 1, 737]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 161], 'false': [22.85, 1, 737]}]]
[{'': [6.178632484870436e-15, 0.2065422646110648]}, {'': [-2.7362515290140504e-15, 0.20654226461102107]}, {'': [1.897722834638777e-15, 0.20654226461104747]}, {'': [1.2136599523852642e-15, 0.2065422646110242]}, {'': [6.178632484870436e-16, 0.2065422646110355]}, {'': [-2.3169871818264136e-16, 0.20654226461102906]}, {'': [4.3029761948204827e-16, 0.20654226461103609]}, {'': [-3.1444826039072757e-16, 0.20654226461105368]}, {'': [-2.372153543298471e-16, 0.20654226461102623]}, {'': [5.516636147205747e-17, 0.20654226461103248]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 9.97e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17474933271382143;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.1273797043302805;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3287371703936289;  // std dev = 3.565, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.020542097492674747;  // std dev = 3.989, 117.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=19 */
%   | | | else return 0.0010060779566552149;  // std dev = 3.703, 112.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.058517731567154334;  // std dev = 3.028, 120.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15211838623849563;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.11115563121567716;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35716758063244713;  // std dev = 2.766, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.22799186687385298;  // std dev = 2.404, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.196469983860842;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07414226111546778;  // std dev = 2.160, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0659655944086878;  // std dev = 2.176, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.03451977276052659;  // std dev = 5.264, 294.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=31 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13013340815440014;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.09579419157416352;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4539816909908587;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2339612995157165;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1649142903773372;  // std dev = 2.178, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.05959836928653999;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05557473645724826;  // std dev = 2.169, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.030416492939553105;  // std dev = 5.264, 294.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1095830700414362;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.08162919635455543;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24432020805670177;  // std dev = 2.763, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.14504722462705777;  // std dev = 2.391, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14227151062360613;  // std dev = 2.177, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.0029648381556815428;  // std dev = 4.906, 207.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=28 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04829244590174865;  // std dev = 3.035, 124.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=10 */
%   | | | else return -0.13273869847917558;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09101625804431913;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.06887003201680404;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.29808428611707405;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14682829378167864;  // std dev = 3.543, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.15420759344711732;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09819286934982195;  // std dev = 2.390, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03363062265394014;  // std dev = 2.154, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.0246351581248944;  // std dev = 5.262, 294.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07472032348614824;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.05760797484163206;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1527507665437281;  // std dev = 2.763, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.0822350215020886;  // std dev = 2.382, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018121514780925455;  // std dev = 4.651, 166.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=26 */
%   | | | else return -0.012180007009852358;  // std dev = 2.698, 63.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14418693245781722;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.03722138283897461;  // std dev = 3.026, 120.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.060755715032035425;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.04783712226512366;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19055300917325207;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08560915801068532;  // std dev = 3.537, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1325017304082414;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08676136119521664;  // std dev = 2.375, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02644730729325729;  // std dev = 4.396, 213.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=22 */
%   | | | else return 0.002750605439175998;  // std dev = 3.603, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452782;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.049018040628214535;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.03948125962869671;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09272088267511798;  // std dev = 2.764, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.042983392058963794;  // std dev = 2.377, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.015028949832517168;  // std dev = 4.640, 166.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=26 */
%   | | | else return -0.008329489793560114;  // std dev = 2.697, 63.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.034668445039286115;  // std dev = 3.036, 124.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=10 */
%   | | | else return -0.11639785429638148;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.039302646148320144;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.03242004672125653;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.12566370492542367;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04814286712590654;  // std dev = 3.534, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.11843948732536014;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07379046351810978;  // std dev = 2.367, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.021679986858386423;  // std dev = 4.397, 213.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=22 */
%   | | | else return 0.0012031046569575398;  // std dev = 3.601, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 161.000 (wgt'ed) examples reached here.  /* #pos=161 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03135773264681839;  // std dev = 20.864, 2,012.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=637 */
%   | | | else return 0.02651082262561333;  // std dev = 4.523, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05637103267611258;  // std dev = 2.765, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.020764610834296288;  // std dev = 2.374, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1223823240279675;  // std dev = 2.143, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.03095051539653564;  // std dev = 0.952, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02532473425569433;  // std dev = 4.304, 211.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=21 */
%   | | | else return 0.005692331226749987;  // std dev = 3.692, 112.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=16 */


Results
   AUC ROC   = 0.566708
   AUC PR    = 0.701231
   CLL	      = -0.791055
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 353.374 seconds
Total inference time: 2.146 seconds
AUC ROC: 0.566708


Results scoring model
   AUC ROC   = 0.646944
   AUC PR    = 0.559941
   CLL	      = -0.560691
   Precision = 0.993939 at threshold = 0.5
   Recall    = 0.182628
   F1        = 0.308561


Total scoring time: 9.207 seconds
Refined model CLL: -0.560691


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566708
   AUC PR    = 0.701231
   CLL	      = -0.791055
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 366.70000000000005 seconds
Total inference time: 2.146 seconds
AUC ROC: 0.566708
Total revision time: 366.70000000000005
Best scored revision CLL: -0.560691


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:40:47
{'AUC ROC': 0.566708, 'AUC PR': 0.701231, 'CLL': -0.791055, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 366.70000000000005, 'Inference time': 2.146, 'parameter_0.4': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.807684, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 2.975, 'Inference time': 0.712}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.15056200148517632;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.1312281462361867;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.33e-08, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.11268778735023077;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.09547176125743476;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.07993463976577515;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.95e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.06625188390256061;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.05444714113552824;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1.07e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.04443340528227821;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.03605476182697925;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else return 0.029121171388779864;  // std dev = 28.025, 3,796.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,110 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806601
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 4.022 seconds
Total inference time: 0.695 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587973
   AUC PR    = 0.52009
   CLL	      = -0.577537
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.175947
   F1        = 0.299242


Total scoring time: 1.318 seconds
Parameter learned model CLL: -0.577537


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.33e-08, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-07, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 237], 'false': [28.025, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 237], 'false': [28.025, 2, 1]}]]
[{'': [4.916835808635292e-15, 0.2069076649926254]}, {'': [-4.137337448729697e-15, 0.2069076649926292]}, {'': [1.1992282460086079e-15, 0.2069076649925593]}, {'': [-1.4990353075107598e-16, 0.20690766499262986]}, {'': [3.4477812072747475e-16, 0.20690766499259297]}, {'': [3.6726365034013617e-16, 0.20690766499260832]}, {'': [3.5976847380258237e-16, 0.20690766499256466]}, {'': [4.87186474940997e-17, 0.20690766499262456]}, {'': [-1.686414720949605e-16, 0.20690766499261767]}, {'': [4.4971059225322796e-17, 0.2069076649926109]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17158177092040275;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.11545887661997963;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.32650336547925785;  // std dev = 4.435, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.02007120541571022;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14938567260253655;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.10081485628755102;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2819427059534217;  // std dev = 4.435, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1950582455007289;  // std dev = 2.776, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.08399958923252551;  // std dev = 0.963, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006189557499048965;  // std dev = 6.159, 303.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=45 */
%   | | | else return -0.02033208948731605;  // std dev = 4.297, 175.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12785924542689148;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.08704154259987701;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2996746684450043;  // std dev = 3.501, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.17878357379467832;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1722520738938311;  // std dev = 3.128, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.0657029868260198;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.09801231516288271;  // std dev = 2.802, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.017151545657026968;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10775421981944618;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.0743894354473726;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2582200939413458;  // std dev = 3.356, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return 0.1362712555748594;  // std dev = 3.011, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14671513046612047;  // std dev = 3.126, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.05811667447897613;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0833112709835202;  // std dev = 2.801, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.015112433752376848;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716014983;  // std dev = 2.86e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08959143162554388;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.06300793467457028;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.34500840748747885;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.14506623953974124;  // std dev = 4.413, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12273328596056089;  // std dev = 3.124, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.05170669020640654;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07009899529240435;  // std dev = 2.799, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.013336670487389292;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948806;  // std dev = 2.95e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07364219579919244;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.052953791236835475;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16799270987454618;  // std dev = 3.349, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return 0.0698372759381425;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1886307461250217;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08950259779567259;  // std dev = 3.249, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.058468813343673445;  // std dev = 2.799, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.011785746841055262;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.92e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05996191485750415;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.04420892309636616;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13224718576383845;  // std dev = 3.512, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.03688045241838485;  // std dev = 2.792, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1617305126762711;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07442227984931805;  // std dev = 3.245, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0484093200038407;  // std dev = 2.798, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.01042773809978852;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 1.07e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0484489776252285;  // std dev = 25.472, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.0367015774174318;  // std dev = 5.716, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10769198395665733;  // std dev = 3.365, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return 0.028965205857151198;  // std dev = 2.962, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.14118185779263898;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.061333016132259374;  // std dev = 3.242, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03983443434577542;  // std dev = 2.797, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.009235980949788364;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24271444546656754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return -0.09496654364412724;  // std dev = 2.827, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07801204353615625;  // std dev = 4.581, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.03821876929653639;  // std dev = 25.751, 3,091.000 (wgt'ed) examples reached here.  /* #neg=2,121 #pos=970 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.10402764509598873;  // std dev = 2.723, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 6.028591171991504E-6;  // std dev = 6.072, 304.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=45 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.12419203889562395;  // std dev = 0.914, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.013867901524971101;  // std dev = 4.312, 177.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 1.03e-07, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031007642864500293;  // std dev = 25.455, 3,015.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=945 */
%   | | | else return 0.023954234203110526;  // std dev = 5.714, 171.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.271787701515509;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03478529776261824;  // std dev = 4.391, 81.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06848893123677806;  // std dev = 3.072, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.059962355239821595;  // std dev = 0.956, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.017991208515680174;  // std dev = 2.786, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.007585628261876464;  // std dev = 6.758, 427.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=52 */


Results
   AUC ROC   = 0.583503
   AUC PR    = 0.715389
   CLL	      = -0.791451
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 474.855 seconds
Total inference time: 2.235 seconds
AUC ROC: 0.583503


Results scoring model
   AUC ROC   = 0.648867
   AUC PR    = 0.564798
   CLL	      = -0.563816
   Precision = 0.991837 at threshold = 0.5
   Recall    = 0.180401
   F1        = 0.305276


Total scoring time: 11.869 seconds
Refined model CLL: -0.563816


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.583503
   AUC PR    = 0.715389
   CLL	      = -0.791451
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 492.06399999999996 seconds
Total inference time: 2.235 seconds
AUC ROC: 0.583503
Total revision time: 492.06399999999996
Best scored revision CLL: -0.563816


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 12:49:02
{'AUC ROC': 0.583503, 'AUC PR': 0.715389, 'CLL': -0.791451, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 492.06399999999996, 'Inference time': 2.235, 'parameter_0.6': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806601, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 4.022, 'Inference time': 0.695}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.1502437967595862;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.13095295953276814;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.11245704619898667;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.095283865019047;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.07978572990757042;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.06613679313253427;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.05436025184633637;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.044369278166983835;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.036008512700136955;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else return 0.029088640941063396;  // std dev = 32.346, 5,060.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,478 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806993
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 5.448 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.58853
   AUC PR    = 0.520976
   CLL	      = -0.577096
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.17706
   F1        = 0.300851


Total scoring time: 1.314 seconds
Parameter learned model CLL: -0.577096


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.77e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 318], 'false': [32.346, 3, 1]}]]
[{'': [3.4856813452382273e-15, 0.2067754534518024]}, {'': [-5.005080905983095e-15, 0.20677545345192766]}, {'': [-3.5750577899879257e-16, 0.20677545345186688]}, {'': [-9.161085586844059e-16, 0.20677545345189413]}, {'': [-4.692263349359152e-16, 0.20677545345181506]}, {'': [4.468822237484907e-16, 0.20677545345184778]}, {'': [1.8992494509310855e-16, 0.20677545345188436]}, {'': [2.2344111187424534e-16, 0.20677545345182985]}, {'': [-2.2344111187424534e-16, 0.20677545345183407]}, {'': [-1.8992494509310855e-16, 0.20677545345188839]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17035257872316578;  // std dev = 29.333, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.13762491763226478;  // std dev = 6.791, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3303711573217355;  // std dev = 5.188, 108.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05489454316135737;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003148935099512459;  // std dev = 7.042, 400.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=58 */
%   | | | else return -0.008230375245315877;  // std dev = 5.182, 232.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=31 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14832497692521335;  // std dev = 29.333, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.12003255455330514;  // std dev = 6.791, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.28522318761487725;  // std dev = 5.188, 108.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15169119213302604;  // std dev = 3.244, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.09227217731118179;  // std dev = 0.977, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.074927587297015;  // std dev = 3.496, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.01011492525893452;  // std dev = 8.071, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12697588864590617;  // std dev = 29.333, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.10328098436912037;  // std dev = 6.791, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5761036071443223;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.23158104030530455;  // std dev = 5.153, 108.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.022695051621734963;  // std dev = 6.624, 318.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=53 */
%   | | | else return -0.0012627595750347672;  // std dev = 4.176, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003539973742407452;  // std dev = 5.337, 241.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=33 */
%   | | | else return -0.1374445298162036;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10706208821110266;  // std dev = 29.361, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,253 */
%   | | | else return 0.08655528175976888;  // std dev = 6.668, 219.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.239397632921154;  // std dev = 4.073, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   | | | else return 0.1422577759952616;  // std dev = 3.301, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12991434297206986;  // std dev = 3.241, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.08064424874367589;  // std dev = 0.974, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004350457362955296;  // std dev = 7.039, 416.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=58 */
%   | | | else return 0.0035332934571884874;  // std dev = 5.301, 224.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015105;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08910277307249052;  // std dev = 29.333, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.07270613250767399;  // std dev = 6.791, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.33214986622270487;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.14847847818527116;  // std dev = 5.158, 108.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12014920344416734;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.059908450776341805;  // std dev = 1.357, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.059058946831997916;  // std dev = 3.247, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return -0.009595922967332051;  // std dev = 8.067, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.77e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07332312370336766;  // std dev = 29.361, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,253 */
%   | | | else return 0.059134457727178256;  // std dev = 6.669, 219.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.35784472890611746;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1092483146004928;  // std dev = 5.133, 108.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10247038129592535;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05256603030161299;  // std dev = 1.357, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05073681205082246;  // std dev = 3.245, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return -0.00843656103698621;  // std dev = 8.067, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05974890178735612;  // std dev = 29.361, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,253 */
%   | | | else return 0.048693458033296805;  // std dev = 6.669, 219.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11974812702652401;  // std dev = 4.051, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   | | | else return 0.053797304810462826;  // std dev = 3.291, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1628919705499355;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06469015573114843;  // std dev = 3.610, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005828720131606831;  // std dev = 6.896, 403.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=56 */
%   | | | else return 0.00351034231485739;  // std dev = 5.308, 229.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527655;  // std dev = 2.67e-07, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04834372378386463;  // std dev = 29.332, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.039728046634936606;  // std dev = 6.792, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10159986221532619;  // std dev = 3.939, 64.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | | else return 0.032652606503182253;  // std dev = 3.415, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09696621942077566;  // std dev = 3.213, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.08332099858643235;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03509396880596504;  // std dev = 3.470, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.007152294770268829;  // std dev = 8.067, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.038861276812141674;  // std dev = 29.360, 4,017.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,253 */
%   | | | else return 0.03185815762935506;  // std dev = 6.670, 219.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07578651396768235;  // std dev = 4.061, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   | | | else return 0.02105485964025471;  // std dev = 3.268, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08120394435911975;  // std dev = 3.211, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.07383212821029889;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.029604859652162047;  // std dev = 3.469, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.0062999898400233414;  // std dev = 8.067, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801176;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #pos=318 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031087696265671663;  // std dev = 29.332, 4,007.000 (wgt'ed) examples reached here.  /* #neg=2,756 #pos=1,251 */
%   | | | else return 0.025917082336432834;  // std dev = 6.792, 229.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06572521091219566;  // std dev = 3.949, 64.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=33 */
%   | | | else return 0.009357863742758977;  // std dev = 3.397, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17474415572068405;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005615019930655249;  // std dev = 3.227, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02619961727795949;  // std dev = 3.222, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return -0.005552897413427461;  // std dev = 8.067, 570.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=75 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.701308
   CLL	      = -0.792885
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 701.278 seconds
Total inference time: 2.158 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.639883
   AUC PR    = 0.55602
   CLL	      = -0.565199
   Precision = 0.993921 at threshold = 0.5
   Recall    = 0.182071
   F1        = 0.307765


Total scoring time: 17.0 seconds
Refined model CLL: -0.565199


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566796
   AUC PR    = 0.701308
   CLL	      = -0.792885
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 725.04 seconds
Total inference time: 2.158 seconds
AUC ROC: 0.566796
Total revision time: 725.04
Best scored revision CLL: -0.565199


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 13:01:11
{'AUC ROC': 0.566796, 'AUC PR': 0.701308, 'CLL': -0.792885, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 725.04, 'Inference time': 2.158, 'parameter_0.8': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806993, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 5.448, 'Inference time': 0.728}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.13156144681667495;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.11296722409584808;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.09569926740405453;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.08011489349675985;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.06639115431393357;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.05455224419867554;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.044510939579579446;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.03611065081960995;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.029160457625170288;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */


Results
   AUC ROC   = 0.566796
   AUC PR    = 0.695289
   CLL	      = -0.806128
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 6.844 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.566796


Results scoring model
   AUC ROC   = 0.587266
   AUC PR    = 0.518945
   CLL	      = -0.578083
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174533
   F1        = 0.297195


Total scoring time: 1.342 seconds
Parameter learned model CLL: -0.578083


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.19e-07, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 392], 'false': [36.21, 4, 1]}]]
[{'': [5.945357584931451e-15, 0.20706753172221312]}, {'': [-5.3653226985966745e-15, 0.20706753172227102]}, {'': [-1.1600697726695512e-15, 0.2070675317222332]}, {'': [-1.740104659004327e-15, 0.2070675317222026]}, {'': [-1.5407176668267478e-15, 0.20706753172225198]}, {'': [5.075305255429287e-16, 0.20706753172219156]}, {'': [1.5407176668267478e-16, 0.20706753172232314]}, {'': [1.2235110883624173e-16, 0.20706753172235484]}, {'': [-2.628283078704452e-16, 0.20706753172222936]}, {'': [-3.149408171895852e-16, 0.20706753172219938]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.003742804831313513;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14911870422593332;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.1169706002890261;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2857709517384712;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12691587628979484;  // std dev = 3.517, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06817424577221033;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05424854493746689;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018445117067542802;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1276485314069231;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.10053750494117948;  // std dev = 7.457, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4289562725350853;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23839303675809836;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11065493322241758;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06006093605344258;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0014421425053627902;  // std dev = 8.037, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.00670208653180559;  // std dev = 6.047, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583121;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10767405144022599;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.08395534636649281;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4597587391218463;  // std dev = 1.204, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18363892904189036;  // std dev = 5.637, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09528119155838943;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05324031672351531;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04678342314390636;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002038962012724746;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601517;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08954710073117461;  // std dev = 32.851, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.07049037196827355;  // std dev = 7.459, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3556793387635001;  // std dev = 1.202, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14478101904829427;  // std dev = 5.636, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09809379090256486;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08355279709044004;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03923455699960431;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017899523786452558;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07369162312032779;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.05745028465583282;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15742499732269002;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07312591770868236;  // std dev = 3.691, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1991413744217467;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014623903809692583;  // std dev = 3.406, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.033252881037424624;  // std dev = 3.639, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015716523941721658;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06002025943316851;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.04741904647039121;  // std dev = 7.460, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1285929869305706;  // std dev = 4.432, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.044699887682278415;  // std dev = 3.664, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07035600085195431;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05818969852155347;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -6.64257137652106E-4;  // std dev = 8.020, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005793506729019559;  // std dev = 6.049, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452768;  // std dev = 2.19e-07, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.048549832200982676;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03818605419664084;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2110874933469985;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.06179747959001596;  // std dev = 5.619, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07818421280115909;  // std dev = 3.487, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07903897838185031;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00254630595580599;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006677206355380756;  // std dev = 6.111, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.038999069347985034;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.03115348690401467;  // std dev = 7.461, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08171958041902562;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.01542197033127088;  // std dev = 3.657, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.16912124744997095;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.039480009332646136;  // std dev = 3.742, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002668830768371046;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006555971394557375;  // std dev = 6.119, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.031204273276859807;  // std dev = 32.850, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.024756729702290252;  // std dev = 7.462, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06939780931821535;  // std dev = 4.440, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 9.287771967296517E-4;  // std dev = 3.634, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1629446194923914;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0017689363307019606;  // std dev = 3.379, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.022532762552377888;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018179223546075434;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */


Results
   AUC ROC   = 0.566401
   AUC PR    = 0.701211
   CLL	      = -0.791287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 841.235 seconds
Total inference time: 2.281 seconds
AUC ROC: 0.566401


Results scoring model
   AUC ROC   = 0.638421
   AUC PR    = 0.553461
   CLL	      = -0.566893
   Precision = 0.990196 at threshold = 0.5
   Recall    = 0.179875
   F1        = 0.304446


Total scoring time: 20.809 seconds
Refined model CLL: -0.566893


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.566401
   AUC PR    = 0.701211
   CLL	      = -0.791287
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.133593
   F1        = 0.235698


Total learning time: 870.23 seconds
Total inference time: 2.281 seconds
AUC ROC: 0.566401
Total revision time: 870.23
Best scored revision CLL: -0.566893


Dataset: 3_imdb_cora, Fold: 2, Type: Transfer (trRDN-B), Time: 13:15:45
{'AUC ROC': 0.566401, 'AUC PR': 0.701211, 'CLL': -0.791287, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 870.23, 'Inference time': 2.281, 'parameter_1.0': {'AUC ROC': 0.566796, 'AUC PR': 0.695289, 'CLL': -0.806128, 'Precision': [1.0, 0.5], 'Recall': 0.133593, 'F1': 0.235698, 'Learning time': 6.844, 'Inference time': 0.728}}


Starting fold 3

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos	 examples: 581
Target test neg examples: 2222

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.277838054270492;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.24054573667173298;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.87e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.20241388454068837;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1.03e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1660321201504989;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.1333375654941537;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.10533316183361205;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.08219905325577377;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.06358191464949182;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.04887329417696434;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else return 0.03740044304012806;  // std dev = 15.331, 965.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=405 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.559237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 1.681 seconds
Total inference time: 0.92 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.584189
   AUC PR    = 0.621851
   CLL	      = -0.638423
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.168378
   F1        = 0.288225


Total scoring time: 0.949 seconds
Parameter learned model CLL: -0.638423


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.67e-07, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.87e-08, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 82], 'false': [15.331, 560, 405]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.77e-08, 0, 82], 'false': [15.331, 560, 405]}]]
[{'': [-6.932124251318051e-16, 0.24355016242045432]}, {'': [8.665155314147563e-16, 0.24355016242045652]}, {'': [1.4730764034050857e-15, 0.243550162420472]}, {'': [1.2997732971221344e-16, 0.24355016242047156]}, {'': [-3.4660621256590254e-16, 0.24355016242047386]}, {'': [-5.415722071342227e-17, 0.2435501624204633]}, {'': [-1.408087738548979e-16, 0.24355016242046343]}, {'': [2.166288828536891e-17, 0.2435501624204624]}, {'': [-5.144935967775116e-17, 0.2435501624204759]}, {'': [4.06179155350667e-17, 0.24355016242047478]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2868914500695675;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.11455919150976876;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.1020513741239026;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109537;  // std dev = 2.67e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2482639519156716;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.30874113578563506;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.1425669118109345;  // std dev = 3.408, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.558741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.08916906274226533;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 3.48e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20860146587870457;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.386198448632422;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2564123687585864;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2700648380324508;  // std dev = 2.205, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.08029237333758675;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.07714431488789134;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831036;  // std dev = 1.03e-07, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17071446360308443;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3115167615498599;  // std dev = 1.860, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.20328545752910473;  // std dev = 1.595, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09915259708806794;  // std dev = 3.391, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.3986351152035168;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0661478836011006;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601502;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1367091005765299;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23453254634512932;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.14503532872811725;  // std dev = 1.558, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1843506735586938;  // std dev = 2.181, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.05627295753424449;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.18980953945785073;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.09696302886637342;  // std dev = 2.637, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10766394952896159;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19143348221785234;  // std dev = 1.874, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.10271609815803799;  // std dev = 1.566, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.4283580951737492;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.033940464687994;  // std dev = 3.183, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1625310307309706;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08123649850793277;  // std dev = 2.635, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253587;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08375715796311264;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.14465485494013344;  // std dev = 1.875, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.07746348129839281;  // std dev = 1.565, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3354224766089445;  // std dev = 1.154, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.027886133227690107;  // std dev = 3.183, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14174105029841372;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06737549711021151;  // std dev = 2.635, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527714;  // std dev = 4.21e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.06459289578276653;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.30019990491263304;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04737562917828645;  // std dev = 3.695, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.06069504685369498;  // std dev = 0.436, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return -0.25519289689727004;  // std dev = 0.391, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936712;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04950964358988563;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10267855429452105;  // std dev = 1.905, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.04801763578640083;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.24322044653443722;  // std dev = 1.153, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.009199897614119476;  // std dev = 3.166, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1288025429412658;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.045421790216061214;  // std dev = 2.623, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03778661690137603;  // std dev = 0.495, 835.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=358 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.07847940483219293;  // std dev = 1.904, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.036299839727658094;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1837610169551507;  // std dev = 1.152, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.007467989621204529;  // std dev = 3.166, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11513492476615593;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03691779500465522;  // std dev = 2.623, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */


Results
   AUC ROC   = 0.621233
   AUC PR    = 0.419312
   CLL	      = -0.544341
   Precision = 0.867769 at threshold = 0.5
   Recall    = 0.180723
   F1        = 0.299145


Total learning time: 136.362 seconds
Total inference time: 1.483 seconds
AUC ROC: 0.621233


Results scoring model
   AUC ROC   = 0.633833
   AUC PR    = 0.660895
   CLL	      = -0.624944
   Precision = 0.921739 at threshold = 0.5
   Recall    = 0.217659
   F1        = 0.352159


Total scoring time: 1.503 seconds
Refined model CLL: -0.624944


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.621233
   AUC PR    = 0.419312
   CLL	      = -0.544341
   Precision = 0.867769 at threshold = 0.5
   Recall    = 0.180723
   F1        = 0.299145


Total learning time: 140.49499999999998 seconds
Total inference time: 1.483 seconds
AUC ROC: 0.621233
Total revision time: 140.49499999999998
Best scored revision CLL: -0.624944


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:18:08
{'AUC ROC': 0.621233, 'AUC PR': 0.419312, 'CLL': -0.544341, 'Precision': [0.867769, 0.5], 'Recall': 0.180723, 'F1': 0.299145, 'Learning time': 140.49499999999998, 'Inference time': 1.483, 'parameter_0.2': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.559237, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 1.681, 'Inference time': 0.92}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.2760283529789252;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.23900199931512098;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.20117395078665268;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830936;  // std dev = 4.13e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.16509102933421846;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.82e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.13265751717011087;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.10486136547109239;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.76e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.0818827187911755;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.06337626044314552;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.04874379912421105;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else return 0.03732201439994498;  // std dev = 21.634, 1,924.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=804 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.55772
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 2.37 seconds
Total inference time: 0.91 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.587269
   AUC PR    = 0.626094
   CLL	      = -0.636285
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.174538
   F1        = 0.297203


Total scoring time: 1.064 seconds
Parameter learned model CLL: -0.636285


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.07e-06, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.13e-07, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.82e-07, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 170], 'false': [21.634, 1, 804]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.66e-08, 0, 170], 'false': [21.634, 1, 804]}]]
[{'': [6.687461042448002e-15, 0.2432562099922006]}, {'': [-3.0093574691016007e-15, 0.24325620999219086]}, {'': [1.9226450497038004e-15, 0.243256209992188]}, {'': [1.0031191563672002e-15, 0.24325620999217598]}, {'': [8.568309460636502e-16, 0.24325620999217573]}, {'': [-2.716781048494501e-16, 0.24325620999218667]}, {'': [4.493137887894751e-16, 0.2432562099921864]}, {'': [-3.2392389424357507e-16, 0.24325620999218744]}, {'': [-2.481674996220938e-16, 0.243256209992165]}, {'': [5.4858078863831267e-17, 0.2432562099921643]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29406187343082535;  // std dev = 0.496, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661785;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2217852987358757;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.08183314562582816;  // std dev = 3.633, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07436515131572859;  // std dev = 3.541, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109565;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25437139542823745;  // std dev = 0.496, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7939614083110431;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3379077983064818;  // std dev = 3.496, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3325029720276044;  // std dev = 1.995, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09314888168141702;  // std dev = 4.648, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.052065985520047396;  // std dev = 3.564, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return -0.1425794011581524;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.72e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.48693023441808125;  // std dev = 2.219, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.014276424703915382;  // std dev = 1.426, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.21152156928703816;  // std dev = 19.948, 1,620.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=703 */
%   | | | else return 0.2781045980672458;  // std dev = 3.491, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.2809333669658538;  // std dev = 1.994, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.08030097863634797;  // std dev = 4.648, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12782736923928598;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.05957541220524829;  // std dev = 3.536, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830936;  // std dev = 4.13e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3899658613112484;  // std dev = 2.216, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.011722733594655825;  // std dev = 1.426, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.17280933728439432;  // std dev = 19.948, 1,620.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=703 */
%   | | | else return 0.2210891903447654;  // std dev = 3.487, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.14793530084573453;  // std dev = 3.526, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.04495186591753094;  // std dev = 3.628, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11424759867518385;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.051545205431884705;  // std dev = 3.535, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601492;  // std dev = 3.82e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13898953800214767;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2677563975744059;  // std dev = 2.564, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.08748044907640928;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2027687572327347;  // std dev = 1.989, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.055448112819149874;  // std dev = 4.641, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10319069254961839;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.044333617724250256;  // std dev = 3.535, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694907;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10921096863953983;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20253701675898575;  // std dev = 2.564, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.06754679711451524;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03548999344159089;  // std dev = 4.651, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | else return 0.3739194647262024;  // std dev = 1.530, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.028579379132881375;  // std dev = 3.628, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return -0.12884940389997862;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253512;  // std dev = 2.76e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08477463232514333;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15222907420765994;  // std dev = 2.564, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return 0.051833310009992875;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02979066106869756;  // std dev = 4.649, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | else return 0.30208111138931715;  // std dev = 1.526, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024064880314923588;  // std dev = 3.628, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return -0.11519220128189471;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06524485709687428;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.377345235007926;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06430175800249421;  // std dev = 3.437, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05568195822987695;  // std dev = 4.793, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return -0.08919082908160583;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09617197389530552;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.028697510902698415;  // std dev = 3.536, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.0499169338654389;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.23408723859370623;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.03121957734773027;  // std dev = 5.217, 152.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=50 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.053030086248953646;  // std dev = 4.106, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return -0.18614554837390287;  // std dev = 0.584, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return -0.40159959218132846;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10429772478842947;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.66e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03803365349645861;  // std dev = 0.495, 1,654.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=721 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.305536197874462;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0523886484067505;  // std dev = 3.356, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.19096340327825773;  // std dev = 1.745, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.010294102338255371;  // std dev = 4.532, 122.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0745460919034473;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.012608329529474355;  // std dev = 3.366, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */


Results
   AUC ROC   = 0.619098
   AUC PR    = 0.416603
   CLL	      = -0.543495
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 234.493 seconds
Total inference time: 1.287 seconds
AUC ROC: 0.619098


Results scoring model
   AUC ROC   = 0.638496
   AUC PR    = 0.66266
   CLL	      = -0.620668
   Precision = 0.924107 at threshold = 0.5
   Recall    = 0.212526
   F1        = 0.345576


Total scoring time: 2.188 seconds
Refined model CLL: -0.620668


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.619098
   AUC PR    = 0.416603
   CLL	      = -0.543495
   Precision = 0.910714 at threshold = 0.5
   Recall    = 0.175559
   F1        = 0.294372


Total learning time: 240.11499999999998 seconds
Total inference time: 1.287 seconds
AUC ROC: 0.619098
Total revision time: 240.11499999999998
Best scored revision CLL: -0.620668


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:22:11
{'AUC ROC': 0.619098, 'AUC PR': 0.416603, 'CLL': -0.543495, 'Precision': [0.910714, 0.5], 'Recall': 0.175559, 'F1': 0.294372, 'Learning time': 240.11499999999998, 'Inference time': 1.287, 'parameter_0.4': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.55772, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 2.37, 'Inference time': 0.91}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.27683405620677365;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.2396893300010392;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 2.89e-08, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.20172611296310872;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.16551022751535902;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1.98e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.1329605376162265;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.15e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.10507166234426467;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.0820237617775703;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.06346797356751407;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.04880155264920975;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else return 0.037356988330422725;  // std dev = 26.522, 2,890.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,210 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.558395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.106 seconds
Total inference time: 0.92 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.5859
   AUC PR    = 0.624213
   CLL	      = -0.637237
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.1718
   F1        = 0.293224


Total scoring time: 1.2 seconds
Parameter learned model CLL: -0.637237


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-08, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.98e-07, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.86e-07, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 251], 'false': [26.522, 1, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 251], 'false': [26.522, 1, 1]}]]
[{'': [4.642589986639698e-15, 0.24338789047068535]}, {'': [-4.416122182413372e-15, 0.2433878904706841]}, {'': [8.492542658487254e-16, 0.2433878904706465]}, {'': [-3.113932308111993e-16, 0.24338789047065715]}, {'': [1.5569661540559965e-16, 0.24338789047063378]}, {'': [3.963186573960718e-16, 0.24338789047069925]}, {'': [3.255474685753447e-16, 0.24338789047066725]}, {'': [-2.1231356646218133e-17, 0.24338789047068382]}, {'': [-1.6277373428767236e-16, 0.24338789047063802]}, {'': [-3.5385594410363554e-18, 0.24338789047067386]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29335281075554276;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5185262935900773;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return 0.324815601766179;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.24638422921715805;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.0794604105093476;  // std dev = 4.585, 122.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0599033210644242;  // std dev = 4.285, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109575;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25376766448210414;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7889292456284485;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35838211722859703;  // std dev = 4.358, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2136706422151508;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.06950980123111437;  // std dev = 4.585, 122.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05245373103904785;  // std dev = 4.285, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.62e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21300179830916863;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6295911970011929;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2937995766399604;  // std dev = 4.353, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1807162118262204;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.060341656090733144;  // std dev = 4.585, 122.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04566831900047928;  // std dev = 4.285, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583109;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1740302882879071;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2986279998600273;  // std dev = 3.392, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return 0.15551632025489856;  // std dev = 2.703, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07554156447690548;  // std dev = 6.055, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.2650548167442782;  // std dev = 2.106, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03955783241573998;  // std dev = 4.285, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015005;  // std dev = 1.98e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.13908477788990017;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.22802290553697233;  // std dev = 3.392, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return 0.12141898770779663;  // std dev = 2.702, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1279383726987875;  // std dev = 4.475, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.040890665515622544;  // std dev = 4.587, 122.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05640118086090411;  // std dev = 1.330, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.04060557414598326;  // std dev = 4.070, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.15e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.10929833468798064;  // std dev = 0.496, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17199790116535082;  // std dev = 3.393, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return 0.09362041740214118;  // std dev = 2.702, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.050647951543494524;  // std dev = 6.047, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.18829215260755136;  // std dev = 2.100, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030375596839086628;  // std dev = 4.281, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | | else return -0.09346064865579395;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253484;  // std dev = 2.86e-07, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27413965451016564;  // std dev = 2.838, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return -0.2029805650596801;  // std dev = 1.427, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10995908989153405;  // std dev = 3.956, 63.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=29 */
%   | | | else return 0.08417832672224924;  // std dev = 24.477, 2,441.000 (wgt'ed) examples reached here.  /* #neg=1,371 #pos=1,070 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.21513975297587684;  // std dev = 2.441, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.11176739284863699;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03938563402891053;  // std dev = 5.830, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
%   | | | else return 0.020175190916800985;  // std dev = 4.196, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452773;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06511842767115861;  // std dev = 0.495, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2895373373628233;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07388534543364625;  // std dev = 4.315, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.17173732941535078;  // std dev = 2.436, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.09643395616454302;  // std dev = 0.961, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03233546812488712;  // std dev = 5.830, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
%   | | | else return 0.017303396091041846;  // std dev = 4.195, 115.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367158;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04981762083248291;  // std dev = 0.495, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23438562703308846;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05570567721835077;  // std dev = 4.314, 78.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=44 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.024691468935137614;  // std dev = 5.990, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.1301411998079798;  // std dev = 2.098, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06190202071889134;  // std dev = 1.341, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.02475341624363162;  // std dev = 4.062, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080111;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #pos=251 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.03795533199149179;  // std dev = 24.651, 2,477.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=1,078 */
%   | | | else return 0.02764807406583568;  // std dev = 4.915, 106.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=45 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return 0.053059910872315166;  // std dev = 5.202, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | | else return -0.2893425673300354;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.049463816867654005;  // std dev = 4.841, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | | else return -0.18097435827074046;  // std dev = 0.510, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return -0.4406122538108694;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08238675678440839;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.619448
   AUC PR    = 0.41698
   CLL	      = -0.543774
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.290276


Total learning time: 375.063 seconds
Total inference time: 1.417 seconds
AUC ROC: 0.619448


Results scoring model
   AUC ROC   = 0.638102
   AUC PR    = 0.661919
   CLL	      = -0.623524
   Precision = 0.944079 at threshold = 0.5
   Recall    = 0.196441
   F1        = 0.325212


Total scoring time: 3.348 seconds
Refined model CLL: -0.623524


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.619448
   AUC PR    = 0.41698
   CLL	      = -0.543774
   Precision = 0.925926 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.290276


Total learning time: 382.717 seconds
Total inference time: 1.417 seconds
AUC ROC: 0.619448
Total revision time: 382.717
Best scored revision CLL: -0.623524


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:28:37
{'AUC ROC': 0.619448, 'AUC PR': 0.41698, 'CLL': -0.543774, 'Precision': [0.925926, 0.5], 'Recall': 0.172117, 'F1': 0.290276, 'Learning time': 382.717, 'Inference time': 1.417, 'parameter_0.6': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.558395, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.106, 'Inference time': 0.92}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.27813857777169776;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.24080206362088238;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.2026196914101287;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.1661882339611981;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.13345029727693639;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.105411316462149;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.08225142312454468;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.06361594670494396;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.04889472022051601;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else return 0.03741342341647067;  // std dev = 30.672, 3,862.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,622 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.55949
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 3.934 seconds
Total inference time: 0.874 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.583676
   AUC PR    = 0.621135
   CLL	      = -0.638778
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167351
   F1        = 0.286719


Total scoring time: 1.253 seconds
Parameter learned model CLL: -0.638778


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 326], 'false': [30.672, 2, 1]}]]
[{'': [3.400143152717044e-15, 0.24359834272022948]}, {'': [-5.056623150194578e-15, 0.24359834272031694]}, {'': [-4.795073676908651e-16, 0.2435983427202726]}, {'': [-9.372189459412364e-16, 0.2435983427202801]}, {'': [-6.102821043338284e-16, 0.24359834272029984]}, {'': [4.577115782503713e-16, 0.2435983427202814]}, {'': [1.852642102441979e-16, 0.24359834272030492]}, {'': [2.343047364853091e-16, 0.24359834272027686]}, {'': [-2.261313154451239e-16, 0.24359834272025793]}, {'': [-2.0705999968469176e-16, 0.24359834272030392]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2964429459887994;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.46378273791641417;  // std dev = 4.118, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   | | | else return 0.3465210281227675;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.27481560176618003;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=50 */
%   | | | else return 0.051898935099511434;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0423594614153011;  // std dev = 4.779, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25639840989328233;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3975009861058094;  // std dev = 4.118, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   | | | else return 0.29890536680643803;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2379673079836205;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=50 */
%   | | | else return 0.045463130646690095;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03712443430138824;  // std dev = 4.779, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.21510163225093973;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.32447408104451897;  // std dev = 4.118, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   | | | else return 0.24871740581779708;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2003424470315355;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=50 */
%   | | | else return 0.039628950338883064;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03240582820575276;  // std dev = 4.779, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17560850698497016;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.37222840561382575;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.22513434349487707;  // std dev = 5.116, 107.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=59 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16445940647707114;  // std dev = 5.401, 120.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=50 */
%   | | | else return 0.03439150994087696;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028186007424758477;  // std dev = 4.779, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14021212245753822;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.20584276783052954;  // std dev = 3.991, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return 0.14891712806060092;  // std dev = 3.420, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.055967345341777046;  // std dev = 6.936, 256.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=68 */
%   | | | else return 0.26221922894042377;  // std dev = 2.417, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.059715678640333406;  // std dev = 1.339, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.029296166828844828;  // std dev = 4.586, 140.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11007171594347465;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23566950859218153;  // std dev = 1.217, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.13127867546824049;  // std dev = 5.110, 107.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=59 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03856782859451817;  // std dev = 6.623, 243.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=62 */
%   | | | else return 0.25573017885699545;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10710403724470269;  // std dev = 0.969, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.030329293914807032;  // std dev = 4.886, 151.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=30 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08535942592048774;  // std dev = 0.496, 3,306.000 (wgt'ed) examples reached here.  /* #neg=1,857 #pos=1,449 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12133165282079236;  // std dev = 4.126, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   | | | else return 0.07519134716606905;  // std dev = 3.248, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03674331566497199;  // std dev = 6.888, 256.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=68 */
%   | | | else return 0.19814101091386435;  // std dev = 2.413, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05694842887307405;  // std dev = 1.339, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.02042925917109673;  // std dev = 4.584, 140.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2790193474730287;  // std dev = 3.519, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | | | else return -0.22623826465379648;  // std dev = 1.759, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06452663326091908;  // std dev = 28.200, 3,232.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,413 */
%   | | | else return 0.07354260049500594;  // std dev = 5.106, 107.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=59 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024579531464195843;  // std dev = 6.595, 243.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=62 */
%   | | | else return 0.1914038777261176;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07953206492039697;  // std dev = 0.945, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.014717554189064029;  // std dev = 4.904, 157.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=30 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2340639804560489;  // std dev = 3.507, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | | else return -0.17884346208607113;  // std dev = 2.402, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04965389140025345;  // std dev = 28.132, 3,223.000 (wgt'ed) examples reached here.  /* #neg=1,812 #pos=1,411 */
%   | | | else return 0.05734480409712204;  // std dev = 5.140, 109.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16674298145827593;  // std dev = 2.477, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.01941801782864599;  // std dev = 6.823, 253.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=69 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011547317714524547;  // std dev = 4.773, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
%   | | | else return -0.09103546091378648;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.29735904180119094;  // std dev = 2.940, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return 0.040368364674770826;  // std dev = 3.051, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.03532174676210846;  // std dev = 28.249, 3,257.000 (wgt'ed) examples reached here.  /* #neg=1,841 #pos=1,416 */
%   | | | else return 0.025556637727348466;  // std dev = 7.621, 300.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=98 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04186025710217844;  // std dev = 5.790, 193.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=57 */
%   | | | else return -0.14462873923392652;  // std dev = 0.786, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return -0.4515407647267661;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08378414183578352;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.621713
   AUC PR    = 0.420038
   CLL	      = -0.541762
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.291971


Total learning time: 464.936 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.621713


Results scoring model
   AUC ROC   = 0.646563
   AUC PR    = 0.666873
   CLL	      = -0.623119
   Precision = 0.91954 at threshold = 0.5
   Recall    = 0.205339
   F1        = 0.335711


Total scoring time: 4.442 seconds
Refined model CLL: -0.623119


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.621713
   AUC PR    = 0.420038
   CLL	      = -0.541762
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.172117
   F1        = 0.291971


Total learning time: 474.565 seconds
Total inference time: 1.523 seconds
AUC ROC: 0.621713
Total revision time: 474.565
Best scored revision CLL: -0.623119


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:36:34
{'AUC ROC': 0.621713, 'AUC PR': 0.420038, 'CLL': -0.541762, 'Precision': [0.961538, 0.5], 'Recall': 0.172117, 'F1': 0.291971, 'Learning time': 474.565, 'Inference time': 1.523, 'parameter_0.8': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.55949, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 3.934, 'Inference time': 0.874}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.24207959923017422;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.20364511353948764;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.16696567952717362;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.13401136815756037;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.10580006371527743;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.0825117821198669;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.06378508002019012;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.04900119355721013;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.037477945353494156;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */


Results
   AUC ROC   = 0.585198
   AUC PR    = 0.401731
   CLL	      = -0.560755
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.170396
   F1        = 0.291176


Total learning time: 5.047 seconds
Total inference time: 0.98 seconds
AUC ROC: 0.585198


Results scoring model
   AUC ROC   = 0.581281
   AUC PR    = 0.617874
   CLL	      = -0.64045
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.162562
   F1        = 0.279661


Total scoring time: 1.374 seconds
Parameter learned model CLL: -0.64045


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.5e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 396], 'false': [34.354, 2, 2]}]]
[{'': [6.172391441956426e-15, 0.24383580356527565]}, {'': [-5.311127519822971e-15, 0.24383580356539872]}, {'': [-1.2201238896890609e-15, 0.24383580356531276]}, {'': [-1.8301858345335913e-15, 0.2438358035653368]}, {'': [-1.5969268556224474e-15, 0.24383580356530532]}, {'': [5.113754537667388e-16, 0.24383580356530396]}, {'': [1.525154862111326e-16, 0.2438358035653564]}, {'': [1.0765799026668185e-16, 0.24383580356534296]}, {'': [-2.6017347647781446e-16, 0.24383580356532567]}, {'': [-3.1848822120560044e-16, 0.24383580356532103]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25783391681959594;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.39055105437540644;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.35220854356048176;  // std dev = 3.871, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2162464844181642;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5037114772652433;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2952259901994808;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831213;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.17646786068010342;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.39325944816541963;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.23313484933112671;  // std dev = 5.923, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601518;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.14082506190596625;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19831463579529052;  // std dev = 4.690, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1687606244030425;  // std dev = 3.838, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598676;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694873;  // std dev = 4.50e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11049163082472004;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.15191855266038512;  // std dev = 4.682, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.125485444875221;  // std dev = 3.847, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0410339214949601;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157908;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.08563819689605111;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.28437630146921894;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.09515810294676735;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03421308315076522;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797175400585821;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015042597374062692;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527686;  // std dev = 2.06e-07, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25672695652096145;  // std dev = 4.030, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.19851008910922233;  // std dev = 2.232, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06520486116477162;  // std dev = 31.519, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=1,772 */
%   | | | else return 0.07145177990334133;  // std dev = 5.909, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026161070506565392;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721803758904671;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07792878242720494;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015642052933667362;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05021555780351299;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06799912449990074;  // std dev = 4.687, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.050233900072386116;  // std dev = 3.829, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13654634729460013;  // std dev = 2.867, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021231468761347207;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07934944324624664;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014293238860480348;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801217;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.35110703486448425;  // std dev = 21.461, 2,481.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=1,857 */
%   | | | else return -0.3584406453867968;  // std dev = 7.782, 1,956.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=58 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1487091263436539;  // std dev = 2.842, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return -0.02657155548730943;  // std dev = 4.722, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04344745724715508;  // std dev = 6.304, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return -0.17821086237395758;  // std dev = 0.999, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return -0.5017962971647519;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0726195965332764;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.897131
   AUC PR    = 0.775491
   CLL	      = -0.450246
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1064.313 seconds
Total inference time: 2.015 seconds
AUC ROC: 0.897131


Results scoring model
   AUC ROC   = 0.873825
   AUC PR    = 0.845642
   CLL	      = -0.53264
   Precision = 0.935599 at threshold = 0.5
   Recall    = 0.214696
   F1        = 0.349249


Total scoring time: 9.717 seconds
Refined model CLL: -0.53264


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897131
   AUC PR    = 0.775491
   CLL	      = -0.450246
   Precision = 0.896552 at threshold = 0.5
   Recall    = 0.179002
   F1        = 0.298422


Total learning time: 1080.4510000000002 seconds
Total inference time: 2.015 seconds
AUC ROC: 0.897131
Total revision time: 1080.4510000000002
Best scored revision CLL: -0.53264


Dataset: 3_imdb_cora, Fold: 3, Type: Transfer (trRDN-B), Time: 13:54:38
{'AUC ROC': 0.897131, 'AUC PR': 0.775491, 'CLL': -0.450246, 'Precision': [0.896552, 0.5], 'Recall': 0.179002, 'F1': 0.298422, 'Learning time': 1080.4510000000002, 'Inference time': 2.015, 'parameter_1.0': {'AUC ROC': 0.585198, 'AUC PR': 0.401731, 'CLL': -0.560755, 'Precision': [1.0, 0.5], 'Recall': 0.170396, 'F1': 0.291176, 'Learning time': 5.047, 'Inference time': 0.98}}


Starting fold 4

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos	 examples: 747
Target test neg examples: 1068

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.18235766050583765;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.15867844831509775;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.73e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.13558287889635307;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.11395239428428304;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.09440655937727047;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.07727291783898009;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.06262419325407872;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.05034855453178066;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.04022305365990118;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else return 0.03197362090564601;  // std dev = 16.004, 1,169.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=379 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637513
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 1.746 seconds
Total inference time: 0.812 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.582599
   AUC PR    = 0.537509
   CLL	      = -0.601086
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 0.967 seconds
Parameter learned model CLL: -0.601086


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.06e-07, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.73e-08, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.11e-08, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.6e-08, 0, 75], 'false': [16.004, 790, 379]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [5.16e-08, 0, 75], 'false': [16.004, 790, 379]}]]
[{'': [-1.4210854715202005e-15, 0.2190974277767158]}, {'': [5.684341886080802e-16, 0.219097427776724]}, {'': [1.3737159558028603e-15, 0.21909742777674132]}, {'': [-1.1842378929335003e-16, 0.21909742777673213]}, {'': [-3.789561257387201e-16, 0.21909742777673064]}, {'': [-1.1842378929335004e-17, 0.21909742777672966]}, {'': [-1.0066022089934752e-16, 0.21909742777673413]}, {'': [5.921189464667502e-18, 0.21909742777672717]}, {'': [7.697546304067752e-17, 0.21909742777674002]}, {'': [3.552713678800501e-17, 0.21909742777673513]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2039249665336922;  // std dev = 0.476, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.048022352821031365;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.033155412726574685;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210954;  // std dev = 2.06e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17724513326269722;  // std dev = 0.476, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.11077028534201087;  // std dev = 3.085, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.021730234454313227;  // std dev = 2.734, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.030873558037129753;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.044261957806911334;  // std dev = 1.904, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462836;  // std dev = 3.21e-07, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4480120589930414;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.11549974372210549;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.2866363976173795;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.1437625110726131;  // std dev = 14.571, 948.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=321 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.09574467135633391;  // std dev = 3.085, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.0189679753714723;  // std dev = 2.734, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.024956205959673957;  // std dev = 2.109, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.12340282017242221;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5277935853623708;  // std dev = 1.524, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.06680841288929018;  // std dev = 1.843, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.12175230598874594;  // std dev = 0.474, 989.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=337 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.0614364665331421;  // std dev = 0.963, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.1320219580043138;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.054447808445969435;  // std dev = 4.118, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | | else return -0.015028369591557407;  // std dev = 1.881, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1035691522917485;  // std dev = 0.474, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.022239789844245857;  // std dev = 3.479, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return 0.10388578102373684;  // std dev = 2.203, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.018280586226371433;  // std dev = 2.107, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.10774522070068633;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694895;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08407890601585337;  // std dev = 0.474, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.06464971047558596;  // std dev = 3.078, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.006356860103091203;  // std dev = 2.734, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01626820749499593;  // std dev = 2.107, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.09781846381576896;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06753132812479325;  // std dev = 0.474, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.05167496291491456;  // std dev = 3.392, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | | else return -0.014875432553015431;  // std dev = 2.325, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.014500402775383359;  // std dev = 2.107, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.08952081756963103;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452772;  // std dev = 2.11e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2880056293290685;  // std dev = 1.795, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.02361601493477419;  // std dev = 2.468, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.051319215786888854;  // std dev = 0.474, 975.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=334 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.009133506999641513;  // std dev = 3.470, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return 0.07852503903066242;  // std dev = 2.202, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0466961502054391;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.026116616257679096;  // std dev = 1.898, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367058;  // std dev = 7.60e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042463597304470385;  // std dev = 0.474, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.05220760180737268;  // std dev = 0.965, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.11195137798129395;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.030622254095358757;  // std dev = 1.602, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.02805465996338029;  // std dev = 4.214, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033433567350192865;  // std dev = 0.474, 1,018.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=352 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return -0.046494781413569414;  // std dev = 0.965, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.10129962682222704;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.02641869501324465;  // std dev = 1.602, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.023982106691115748;  // std dev = 4.213, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */


Results
   AUC ROC   = 0.601222
   AUC PR    = 0.58466
   CLL	      = -0.630145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 47.243 seconds
Total inference time: 1.07 seconds
AUC ROC: 0.601222


Results scoring model
   AUC ROC   = 0.634053
   AUC PR    = 0.578345
   CLL	      = -0.587923
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165198
   F1        = 0.283554


Total scoring time: 1.379 seconds
Refined model CLL: -0.587923


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.601222
   AUC PR    = 0.58466
   CLL	      = -0.630145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 51.335 seconds
Total inference time: 1.07 seconds
AUC ROC: 0.601222
Total revision time: 51.335
Best scored revision CLL: -0.587923


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:55:32
{'AUC ROC': 0.601222, 'AUC PR': 0.58466, 'CLL': -0.630145, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 51.335, 'Inference time': 1.07, 'parameter_0.2': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637513, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 1.746, 'Inference time': 0.812}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.01e-06, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.1787333785889787;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.155554181803288;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.34e-08, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.13298926656184162;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.11187516627576001;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.09279719192524323;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.0760634480111317;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.06174078900212034;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.04972106682614294;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.03979023945699213;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else return 0.031685021204348844;  // std dev = 22.513, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=746 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638664
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 2.659 seconds
Total inference time: 0.789 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.589207
   AUC PR    = 0.547971
   CLL	      = -0.596138
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178414
   F1        = 0.302804


Total scoring time: 1.117 seconds
Parameter learned model CLL: -0.596138


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.01e-06, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-08, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.15e-07, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 162], 'false': [22.513, 1, 746]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 162], 'false': [22.513, 1, 746]}]]
[{'': [6.315935428978668e-15, 0.21781005808204196]}, {'': [-2.807082412879408e-15, 0.21781005808201676]}, {'': [1.8860084961533524e-15, 0.21781005808203416]}, {'': [1.2061682242841207e-15, 0.21781005808201856]}, {'': [6.140492778173705e-16, 0.21781005808201456]}, {'': [-2.3026847918151394e-16, 0.21781005808202128]}, {'': [4.276414613370973e-16, 0.21781005808199863]}, {'': [-3.1798980458399544e-16, 0.21781005808203283]}, {'': [-2.412336448568241e-16, 0.2178100580819993]}, {'': [5.482582837655094e-17, 0.2178100580820108]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.01e-06, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19979482038629034;  // std dev = 0.474, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05511863206920829;  // std dev = 5.596, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return 0.004490398514146492;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3804341566354363;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.07014229795648137;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else return 0.1726267700061558;  // std dev = 0.474, 1,932.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=658 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13778665478297925;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.05154258263854086;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.048275726081013264;  // std dev = 5.596, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return 0.003942905690172599;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36160561744106884;  // std dev = 2.422, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.07711913412954843;  // std dev = 3.056, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return 0.14710343364276746;  // std dev = 0.474, 1,932.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=658 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.028830675535146708;  // std dev = 4.933, 166.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=30 */
%   | | | else return 0.13314820757489695;  // std dev = 2.801, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02362746444088906;  // std dev = 4.047, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   | | | else return -0.14705286460107267;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583091;  // std dev = 4.42e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2686930137185668;  // std dev = 2.765, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.04514737427283698;  // std dev = 2.739, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else return 0.12311032713869394;  // std dev = 0.474, 1,932.000 (wgt'ed) examples reached here.  /* #neg=1,274 #pos=658 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11370796683401108;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.047139700862918375;  // std dev = 0.956, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.035989282523975506;  // std dev = 5.587, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return 9.006994378597505E-4;  // std dev = 3.197, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601496;  // std dev = 3.15e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10181044574242573;  // std dev = 0.474, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.02108400761089279;  // std dev = 4.924, 166.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=30 */
%   | | | else return 0.1088413396078833;  // std dev = 2.805, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.015562152109191476;  // std dev = 4.045, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   | | | else return -0.1315318436236904;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08278206533699418;  // std dev = 0.474, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01824384617270847;  // std dev = 4.923, 166.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=30 */
%   | | | else return 0.09218039275881906;  // std dev = 2.806, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01342941271868911;  // std dev = 4.045, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   | | | else return -0.11727242642398288;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.63e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4098822249989566;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.057534869733203514;  // std dev = 2.617, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else return 0.06586795312970492;  // std dev = 0.473, 1,945.000 (wgt'ed) examples reached here.  /* #neg=1,282 #pos=663 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.23838735157076524;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02572539499664865;  // std dev = 2.452, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02167021391069844;  // std dev = 5.572, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return -0.0027396285847723304;  // std dev = 3.193, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05308509406582941;  // std dev = 0.473, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04512591713771913;  // std dev = 4.882, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.025928887252332014;  // std dev = 2.852, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.007587053442306169;  // std dev = 4.041, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   | | | else return -0.10641485285079848;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042082279734792435;  // std dev = 0.473, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03877404892665414;  // std dev = 4.880, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.021853965812470864;  // std dev = 2.853, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006510313434764587;  // std dev = 4.041, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   | | | else return -0.09674367438371546;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03319186136393043;  // std dev = 0.473, 2,005.000 (wgt'ed) examples reached here.  /* #neg=1,320 #pos=685 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19775767971198474;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.012688727607285892;  // std dev = 2.436, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016907889136734196;  // std dev = 5.562, 198.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=39 */
%   | | | else return -0.011483483929433987;  // std dev = 3.193, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */


Results
   AUC ROC   = 0.600704
   AUC PR    = 0.584003
   CLL	      = -0.630883
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 85.85300000000001 seconds
Total inference time: 1.137 seconds
AUC ROC: 0.600704


Results scoring model
   AUC ROC   = 0.640829
   AUC PR    = 0.585019
   CLL	      = -0.585796
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.178414
   F1        = 0.302804


Total scoring time: 1.661 seconds
Refined model CLL: -0.585796


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600704
   AUC PR    = 0.584003
   CLL	      = -0.630883
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 91.29 seconds
Total inference time: 1.137 seconds
AUC ROC: 0.600704
Total revision time: 91.29
Best scored revision CLL: -0.585796


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:57:06
{'AUC ROC': 0.600704, 'AUC PR': 0.584003, 'CLL': -0.630883, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 91.29, 'Inference time': 1.137, 'parameter_0.4': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638664, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 2.659, 'Inference time': 0.789}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.177712905265887;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.15467427681944373;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 2.98e-08, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.13225824509330403;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.11128893477720696;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.0923422048636644;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.07572078249635923;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.061489876048379404;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.04954232793964523;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.039666540393634285;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4.21e-08, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else return 0.031602206477694884;  // std dev = 27.532, 3,486.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,114 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.638998
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 3.715 seconds
Total inference time: 0.786 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.591043
   AUC PR    = 0.550831
   CLL	      = -0.594749
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.182085
   F1        = 0.308075


Total scoring time: 1.271 seconds
Parameter learned model CLL: -0.594749


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.98e-08, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.1e-07, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 248], 'false': [27.532, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 248], 'false': [27.532, 2, 1]}]]
[{'': [4.6987503493813075e-15, 0.2174428391379067]}, {'': [-4.354939348207066e-15, 0.2174428391379002]}, {'': [9.168293364646454e-16, 0.2174428391378723]}, {'': [-3.1516008440972187e-16, 0.21744283913785417]}, {'': [2.2920733411616134e-16, 0.21744283913787046]}, {'': [3.867873763210223e-16, 0.21744283913785073]}, {'': [3.36648271983112e-16, 0.2174428391378482]}, {'': [-3.223228136008519e-17, 0.2174428391378638]}, {'': [-1.7906822977825104e-16, 0.21744283913788062]}, {'': [7.162729191130042e-18, 0.217442839137888]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995087;  // std dev = 1.08e-06, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20194065739590242;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.026087866397221746;  // std dev = 6.051, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.11346808403568258;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.022854817452452887;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17553869900134403;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.022882440030604485;  // std dev = 6.051, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.09908667735687045;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.020049878064587197;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 4.77e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1495249919915035;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.050084194521749385;  // std dev = 5.934, 222.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=44 */
%   | | | else return -0.021275784593813536;  // std dev = 3.192, 87.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01755137659095108;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831086;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12504684507032213;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.043652980285368806;  // std dev = 5.934, 222.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=44 */
%   | | | else return -0.018450890985517825;  // std dev = 3.192, 87.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.01533500892393803;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015;  // std dev = 2.38e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10292778097487135;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.010561709836291896;  // std dev = 6.037, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.0902862054044546;  // std dev = 2.980, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.013376060034144727;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.255172242569488;  // std dev = 3.10e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0836093761449985;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09751352273593752;  // std dev = 2.853, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.09562265250735594;  // std dev = 0.966, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.016803311095904164;  // std dev = 6.586, 304.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=53 */
%   | | | else return -0.003972934715742952;  // std dev = 4.002, 125.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253487;  // std dev = 2.89e-07, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0671960741124725;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0841017317707358;  // std dev = 2.852, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.08380468734187257;  // std dev = 0.966, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.014561983755415692;  // std dev = 6.585, 304.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=53 */
%   | | | else return -0.0034520313091674017;  // std dev = 4.002, 125.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527733;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05355107494141015;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07182547756598477;  // std dev = 2.852, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.07409026665162359;  // std dev = 0.966, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012598807402750095;  // std dev = 6.585, 304.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=53 */
%   | | | else return -0.003000574690509367;  // std dev = 4.002, 125.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042396871297029425;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.031549031962975184;  // std dev = 5.900, 222.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=44 */
%   | | | else return -0.030655807247307633;  // std dev = 3.190, 87.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00582412400242979;  // std dev = 4.831, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.08335635100325468;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801104;  // std dev = 4.21e-08, 248.000 (wgt'ed) examples reached here.  /* #pos=248 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.033395510579506946;  // std dev = 0.475, 2,996.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,030 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 9.989844256156333E-4;  // std dev = 6.006, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.07368440182827295;  // std dev = 2.980, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0050445829968704435;  // std dev = 4.831, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.07721186159580663;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.597969
   AUC PR    = 0.578175
   CLL	      = -0.631173
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 112.69200000000001 seconds
Total inference time: 0.949 seconds
AUC ROC: 0.597969


Results scoring model
   AUC ROC   = 0.631399
   AUC PR    = 0.571357
   CLL	      = -0.585053
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.182085
   F1        = 0.308075


Total scoring time: 1.754 seconds
Refined model CLL: -0.585053


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.597969
   AUC PR    = 0.578175
   CLL	      = -0.631173
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 119.43200000000002 seconds
Total inference time: 0.949 seconds
AUC ROC: 0.597969
Total revision time: 119.43200000000002
Best scored revision CLL: -0.585053


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 13:59:08
{'AUC ROC': 0.597969, 'AUC PR': 0.578175, 'CLL': -0.631173, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 119.43200000000002, 'Inference time': 0.949, 'parameter_0.6': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.638998, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 3.715, 'Inference time': 0.786}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.1802663804488428;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.1568758347629451;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.13408682177753592;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.11275471033786566;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.0934791695115142;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.07657646136486622;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.06211591896290638;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.60e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.049987868300463166;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.039974543433555484;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else return 0.03180813630987383;  // std dev = 31.920, 4,666.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,503 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.63817
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 4.82 seconds
Total inference time: 0.789 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.586178
   AUC PR    = 0.543085
   CLL	      = -0.598332
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172357
   F1        = 0.294035


Total scoring time: 1.262 seconds
Parameter learned model CLL: -0.598332


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.05e-06, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.67e-07, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.6e-07, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 313], 'false': [31.92, 3, 1]}]]
[{'': [3.541363155865036e-15, 0.21835779675089997]}, {'': [-4.994230091604538e-15, 0.21835779675103462]}, {'': [-2.724125504511566e-16, 0.21835779675099262]}, {'': [-8.626397430953293e-16, 0.21835779675095127]}, {'': [-3.859177798058052e-16, 0.21835779675095313]}, {'': [4.3131987154766463e-16, 0.21835779675096878]}, {'': [2.0430941283836746e-16, 0.21835779675095487]}, {'': [2.1565993577383232e-16, 0.2183577967509409]}, {'': [-2.1565993577383232e-16, 0.2183577967509845]}, {'': [-1.7877073623357154e-16, 0.21835779675096864]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.05e-06, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.4344201215401891;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.0636283871543069;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else return 0.20357074579909568;  // std dev = 0.476, 3,888.000 (wgt'ed) examples reached here.  /* #neg=2,545 #pos=1,343 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.15226658215833588;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.09639651944594235;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02008075328133062;  // std dev = 6.912, 352.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=57 */
%   | | | else return 0.030094636456977443;  // std dev = 5.609, 221.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=38 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109578;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3729362641053732;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.05570505826463439;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else return 0.17694054302649953;  // std dev = 0.476, 3,888.000 (wgt'ed) examples reached here.  /* #neg=2,545 #pos=1,343 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13270212707734708;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.08506231566734805;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0486424529362853;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.01734246382967869;  // std dev = 8.289, 506.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=82 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.40260865520628913;  // std dev = 3.363, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return 0.04397072541925581;  // std dev = 4.070, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.16874012465477983;  // std dev = 5.082, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.15002167364821845;  // std dev = 29.152, 3,762.000 (wgt'ed) examples reached here.  /* #neg=2,465 #pos=1,297 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.11392329431478496;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.07570886566219236;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.04249379462875627;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.015182721419007962;  // std dev = 8.289, 506.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=82 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583116;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12624158409321973;  // std dev = 0.475, 4,020.000 (wgt'ed) examples reached here.  /* #neg=2,628 #pos=1,392 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09647729905356218;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.06787558065369831;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03694898270381436;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.013270098113321131;  // std dev = 8.289, 506.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=82 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.320711847160151;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.24720496430752464;  // std dev = 3.787, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.013385094390095324;  // std dev = 3.780, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11693749982236712;  // std dev = 5.054, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.10303476754825865;  // std dev = 29.152, 3,762.000 (wgt'ed) examples reached here.  /* #neg=2,465 #pos=1,297 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08448255415587679;  // std dev = 3.096, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.07178812048888526;  // std dev = 1.354, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.004731491246659909;  // std dev = 6.822, 352.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=55 */
%   | | | else return 0.02790272139449392;  // std dev = 5.715, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694876;  // std dev = 3.67e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.26111580343192625;  // std dev = 3.362, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return 0.004036362898951308;  // std dev = 4.046, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | else return 0.08397676195548011;  // std dev = 0.475, 3,881.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,342 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.23970047237370018;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0024550384402934867;  // std dev = 2.986, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004122652882589916;  // std dev = 6.822, 352.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=55 */
%   | | | else return 0.024169129606246863;  // std dev = 5.714, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253473;  // std dev = 2.53e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.0439491867792478;  // std dev = 4.993, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
%   | | | else return 0.32368709866576784;  // std dev = 1.743, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.06744003857668451;  // std dev = 0.475, 3,881.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,342 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07255798176638908;  // std dev = 3.234, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.0674042530782707;  // std dev = 0.979, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012893484616744862;  // std dev = 7.456, 400.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=67 */
%   | | | else return 0.003855259562603567;  // std dev = 4.841, 173.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527658;  // std dev = 2.60e-07, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05379989234967926;  // std dev = 0.474, 4,020.000 (wgt'ed) examples reached here.  /* #neg=2,628 #pos=1,392 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20314719302492232;  // std dev = 1.496, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 1.8080786235668677E-4;  // std dev = 2.983, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0017757092281545455;  // std dev = 6.824, 352.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=55 */
%   | | | else return 0.01864549990776104;  // std dev = 5.706, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.042565965480872874;  // std dev = 0.474, 4,020.000 (wgt'ed) examples reached here.  /* #neg=2,628 #pos=1,392 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06538081965880772;  // std dev = 3.062, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.08388833526749362;  // std dev = 1.289, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0118168886617784;  // std dev = 7.548, 400.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=70 */
%   | | | else return -0.003793542661745205;  // std dev = 4.705, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801173;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #pos=313 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0335080016024533;  // std dev = 0.474, 4,020.000 (wgt'ed) examples reached here.  /* #neg=2,628 #pos=1,392 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17299443162574302;  // std dev = 1.484, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.004604316692365464;  // std dev = 2.966, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 9.351244623594833E-4;  // std dev = 6.824, 352.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=55 */
%   | | | else return 0.014481253295768182;  // std dev = 5.704, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */


Results
   AUC ROC   = 0.600551
   AUC PR    = 0.584022
   CLL	      = -0.630215
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 134.899 seconds
Total inference time: 1.215 seconds
AUC ROC: 0.600551


Results scoring model
   AUC ROC   = 0.642197
   AUC PR    = 0.582649
   CLL	      = -0.585686
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.172357
   F1        = 0.294035


Total scoring time: 2.413 seconds
Refined model CLL: -0.585686


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.600551
   AUC PR    = 0.584022
   CLL	      = -0.630215
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 143.394 seconds
Total inference time: 1.215 seconds
AUC ROC: 0.600551
Total revision time: 143.394
Best scored revision CLL: -0.585686


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 14:01:34
{'AUC ROC': 0.600551, 'AUC PR': 0.584022, 'CLL': -0.630215, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 143.394, 'Inference time': 1.215, 'parameter_0.8': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.63817, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 4.82, 'Inference time': 0.789}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1579888355441824;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.13501066693370514;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.11349446848461645;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.09405215095389685;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.07700692094694342;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.06243020376198097;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.050211004029869985;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.04012837034389238;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.031910641244302186;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */


Results
   AUC ROC   = 0.576975
   AUC PR    = 0.567681
   CLL	      = -0.637762
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 6.13 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.576975


Results scoring model
   AUC ROC   = 0.5837
   AUC PR    = 0.539088
   CLL	      = -0.600145
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 1.34 seconds
Parameter learned model CLL: -0.600145


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.34e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.63e-07, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 380], 'false': [35.76, 3, 1]}]]
[{'': [5.235578052969159e-15, 0.2188154860035915]}, {'': [-5.310372025154433e-15, 0.21881548600360856]}, {'': [-1.009718624501195e-15, 0.218815486003702]}, {'': [-1.495879443705474e-15, 0.21881548600370446]}, {'': [-1.402386978473882e-15, 0.21881548600371675]}, {'': [4.9551006572743825e-16, 0.21881548600370093]}, {'': [1.6828643741686584e-16, 0.21881548600365155]}, {'': [1.8231030720160465e-16, 0.2188154860035957]}, {'': [-2.5710427938687837e-16, 0.21881548600369433]}, {'': [-2.945012654795152e-16, 0.21881548600364006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.22656998773109246;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.20479294529491923;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109581;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1789285302411183;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3627424497706838;  // std dev = 4.226, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.00704806712957777;  // std dev = 3.895, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.15193379666523268;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10814740147793037;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04892593448380706;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.417513584158312;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3018643027203644;  // std dev = 4.224, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.008665329003896802;  // std dev = 3.895, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.12684320197236867;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09262847396831721;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06138231358907974;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010675893514520687;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029805890535890212;  // std dev = 6.436, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601516;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10445140518902135;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.004806318172686111;  // std dev = 7.697, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07924398651202538;  // std dev = 3.726, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03581513040579376;  // std dev = 6.498, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15505589199222597;  // std dev = 0.090, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.25517224256948734;  // std dev = 4.34e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29256606968471904;  // std dev = 3.659, 56.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=33 */
%   | | | else return -0.009896807623219749;  // std dev = 4.412, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09447070385559946;  // std dev = 5.700, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.08415080807777092;  // std dev = 32.654, 4,708.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,632 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.20483182480755538;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.010882882459694883;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005162370975333862;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026265581314862004;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253462;  // std dev = 2.53e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24857488892152357;  // std dev = 3.495, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.022690107361910225;  // std dev = 4.467, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.06778111255951366;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09379614989824717;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08327463700327613;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003419324470911796;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02155966481042664;  // std dev = 6.404, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527664;  // std dev = 2.63e-07, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.053992820413052874;  // std dev = 0.475, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0795341494241753;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07270861797453718;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.002966672278040259;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018631721936831824;  // std dev = 6.403, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.18165952059767;  // std dev = 4.180, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return -0.05879358518867784;  // std dev = 3.870, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.04254130642735931;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.004797380968922223;  // std dev = 7.658, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07607960167201801;  // std dev = 3.732, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026518026694844068;  // std dev = 6.487, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1415512257946044;  // std dev = 0.104, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080121;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1843826990421718;  // std dev = 3.414, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | | else return -0.04654936044178875;  // std dev = 4.492, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | else return 0.03346309079708887;  // std dev = 0.475, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06600535100984341;  // std dev = 3.470, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06534911410995388;  // std dev = 1.333, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 2.9319606779360977E-5;  // std dev = 7.761, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016308757612758244;  // std dev = 6.401, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */


Results
   AUC ROC   = 0.602903
   AUC PR    = 0.586349
   CLL	      = -0.629136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 188.784 seconds
Total inference time: 1.216 seconds
AUC ROC: 0.602903


Results scoring model
   AUC ROC   = 0.640325
   AUC PR    = 0.579258
   CLL	      = -0.586837
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.167401
   F1        = 0.286792


Total scoring time: 2.89 seconds
Refined model CLL: -0.586837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.602903
   AUC PR    = 0.586349
   CLL	      = -0.629136
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.153949
   F1        = 0.266821


Total learning time: 199.14399999999998 seconds
Total inference time: 1.216 seconds
AUC ROC: 0.602903
Total revision time: 199.14399999999998
Best scored revision CLL: -0.586837


Dataset: 3_imdb_cora, Fold: 4, Type: Transfer (trRDN-B), Time: 14:04:56
{'AUC ROC': 0.602903, 'AUC PR': 0.586349, 'CLL': -0.629136, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 199.14399999999998, 'Inference time': 1.216, 'parameter_1.0': {'AUC ROC': 0.576975, 'AUC PR': 0.567681, 'CLL': -0.637762, 'Precision': [1.0, 0.5], 'Recall': 0.153949, 'F1': 0.266821, 'Learning time': 6.13, 'Inference time': 0.828}}


Starting fold 5

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos	 examples: 550
Target test neg examples: 500

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 2.38e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.16542862858609747;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.53e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.14407460233760902;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.21e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.12343251667860648;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1.88e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.10418511875159071;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.08680102990446205;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.07152159727151398;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 1.12e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.05839257724175102;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 8.94e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.047317281690357274;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.038111448837894794;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else return 0.03054867349017676;  // std dev = 16.667, 1,305.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=401 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.731063
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 1.829 seconds
Total inference time: 0.709 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.593306
   AUC PR    = 0.54461
   CLL	      = -0.585986
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.186613
   F1        = 0.31453


Total scoring time: 0.988 seconds
Parameter learned model CLL: -0.585986


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.38e-07, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.53e-07, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.21e-08, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.88e-07, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.12e-07, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [8.94e-08, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 92], 'false': [16.667, 904, 401]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [6.14e-08, 0, 92], 'false': [16.667, 904, 401]}]]
[{'': [6.178632484870436e-16, 0.2128588834573599]}, {'': [6.950961545479241e-16, 0.2128588834573868]}, {'': [1.7377403863698103e-15, 0.21285888345735918]}, {'': [3.8616453030440226e-16, 0.21285888345738443]}, {'': [-3.4754807727396206e-16, 0.21285888345737175]}, {'': [-3.8616453030440226e-17, 0.21285888345737947]}, {'': [1.351575856065408e-16, 0.21285888345736775]}, {'': [8.688701931849052e-17, 0.21285888345737902]}, {'': [-8.688701931849052e-17, 0.21285888345738185]}, {'': [4.102998134484274e-17, 0.21285888345738416]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995117;  // std dev = 2.38e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.1868267749505317;  // std dev = 15.394, 1,074.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=353 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.04185106490048778;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01814893509951195;  // std dev = 4.490, 150.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109538;  // std dev = 2.53e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16422660100310435;  // std dev = 0.470, 1,137.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=376 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.023262525025932557;  // std dev = 3.872, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.009459330923376193;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462835;  // std dev = 4.00e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3645204072511306;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06149151618012723;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.13964498171898426;  // std dev = 0.470, 1,106.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=365 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.020381304066845875;  // std dev = 3.872, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.008296755641606531;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415831;  // std dev = 1.88e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6545385826178433;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.03141651855850939;  // std dev = 2.010, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return 0.11728518128340382;  // std dev = 0.470, 1,102.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=364 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.04206943705606644;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.013108399656557548;  // std dev = 4.488, 150.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601504;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09704528642890525;  // std dev = 0.469, 1,137.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=376 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01676563647779692;  // std dev = 3.871, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.008887138792059586;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694897;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5001335817364386;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.042751385984240005;  // std dev = 2.009, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return 0.07917768190528607;  // std dev = 0.470, 1,102.000 (wgt'ed) examples reached here.  /* #neg=738 #pos=364 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.020951637822699855;  // std dev = 3.269, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.018362266579732854;  // std dev = 2.081, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else return -0.007798281500204494;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253573;  // std dev = 1.12e-07, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06385469475328093;  // std dev = 0.468, 1,137.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=376 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.01829915287845156;  // std dev = 3.269, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.01608460172800532;  // std dev = 2.081, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else return -0.006848514969351417;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527716;  // std dev = 8.94e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05121384770975965;  // std dev = 0.468, 1,137.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=376 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.08685489982880448;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01270932873907105;  // std dev = 3.868, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.006018790637080954;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367125;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1997749204595939;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.01055169738748784;  // std dev = 1.936, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return 0.04035300640671094;  // std dev = 0.468, 1,106.000 (wgt'ed) examples reached here.  /* #neg=741 #pos=365 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.014907822061338453;  // std dev = 3.267, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.015294231237478978;  // std dev = 2.080, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else return -0.005292954584550943;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080109;  // std dev = 6.14e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return -0.007879082565903153;  // std dev = 2.129, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.2544527928982853;  // std dev = 1.206, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.051539635456597455;  // std dev = 2.391, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.031416198065449034;  // std dev = 15.394, 1,074.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=353 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.03589694302465903;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08078474128450058;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.00825000665412559;  // std dev = 4.484, 150.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=24 */


Results
   AUC ROC   = 0.661395
   AUC PR    = 0.69476
   CLL	      = -0.726647
   Precision = 0.726619 at threshold = 0.5
   Recall    = 0.183636
   F1        = 0.293179


Total learning time: 49.215 seconds
Total inference time: 0.997 seconds
AUC ROC: 0.661395


Results scoring model
   AUC ROC   = 0.651103
   AUC PR    = 0.587196
   CLL	      = -0.571701
   Precision = 0.99 at threshold = 0.5
   Recall    = 0.200811
   F1        = 0.333895


Total scoring time: 1.457 seconds
Refined model CLL: -0.571701


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.661395
   AUC PR    = 0.69476
   CLL	      = -0.726647
   Precision = 0.726619 at threshold = 0.5
   Recall    = 0.183636
   F1        = 0.293179


Total learning time: 53.489000000000004 seconds
Total inference time: 0.997 seconds
AUC ROC: 0.661395
Total revision time: 53.489000000000004
Best scored revision CLL: -0.571701


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:05:52
{'AUC ROC': 0.661395, 'AUC PR': 0.69476, 'CLL': -0.726647, 'Precision': [0.726619, 0.5], 'Recall': 0.183636, 'F1': 0.293179, 'Learning time': 53.489000000000004, 'Inference time': 0.997, 'parameter_0.2': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.731063, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 1.829, 'Inference time': 0.709}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.17095775303945404;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.14884721190613562;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 4.41e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.12741085573221364;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.10739325264565866;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.08930980683802438;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.07342872273268869;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.05980441455669402;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.048335798517006194;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.0388267755560896;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else return 0.031036124671879918;  // std dev = 23.781, 2,631.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=823 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726402
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 2.951 seconds
Total inference time: 0.679 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582657
   AUC PR    = 0.527387
   CLL	      = -0.593866
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165314
   F1        = 0.283725


Total scoring time: 1.14 seconds
Parameter learned model CLL: -0.593866


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.02e-06, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.41e-08, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.38e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.63e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.65e-07, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 163], 'false': [23.781, 1, 823]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.42e-08, 0, 163], 'false': [23.781, 1, 823]}]]
[{'': [6.3643705166242106e-15, 0.21495946135898503]}, {'': [-2.7898610483832155e-15, 0.21495946135894697]}, {'': [1.8744378918824727e-15, 0.214959461358933]}, {'': [1.176972629786669e-15, 0.21495946135893965]}, {'': [8.064442092982732e-16, 0.2149594613589722]}, {'': [-2.3975368384543257e-16, 0.21495946135897828]}, {'': [4.3046684144975393e-16, 0.21495946135897198]}, {'': [-3.1603894688716113e-16, 0.21495946135895924]}, {'': [-2.424781575254943e-16, 0.21495946135895314]}, {'': [5.4489473601234677e-17, 0.21495946135894933]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995097;  // std dev = 1.02e-06, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else return 0.19118858267659977;  // std dev = 0.471, 2,270.000 (wgt'ed) examples reached here.  /* #neg=1,514 #pos=756 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.033331416851336726;  // std dev = 4.449, 137.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=24 */
%   | | | else return -0.05413176665487368;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007681645379886196;  // std dev = 3.689, 107.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109564;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5291399941450576;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.07272278883431886;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17286894346088338;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.16612857529382677;  // std dev = 22.189, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,479 #pos=738 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.05427959505745472;  // std dev = 0.287, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.13714994353061435;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01656279191346859;  // std dev = 6.007, 270.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462833;  // std dev = 5.53e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14257171587594797;  // std dev = 0.471, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.12171392521305342;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.04767216899400191;  // std dev = 1.347, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.014524867069298644;  // std dev = 6.007, 270.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.41751358415830914;  // std dev = 4.38e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11952874582734829;  // std dev = 0.471, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.10929145240788467;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.014027989923714224;  // std dev = 4.929, 182.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=29 */
%   | | | else return -4.091863117518524E-4;  // std dev = 3.695, 110.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601493;  // std dev = 3.63e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09870973315278583;  // std dev = 0.471, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.013349134744351109;  // std dev = 4.366, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.08921419536143131;  // std dev = 2.608, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0032791313268371145;  // std dev = 3.441, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return -0.12884917481806013;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694906;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08049444857794828;  // std dev = 0.471, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.011739209913389715;  // std dev = 4.366, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.0776443145609274;  // std dev = 2.607, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.002859354629522518;  // std dev = 3.441, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return -0.11506451560448457;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.20975771563253515;  // std dev = 2.65e-07, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0649694926059492;  // std dev = 0.471, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.10021977538455557;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.040661657203268975;  // std dev = 1.347, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.01029674773812824;  // std dev = 5.993, 270.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527822;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36406681711276223;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.10040656191972193;  // std dev = 2.388, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09483170178028424;  // std dev = 3.304, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.05125593563371173;  // std dev = 22.189, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,479 #pos=738 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.010347680463682752;  // std dev = 4.364, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.06611673613792549;  // std dev = 2.605, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.0012769070012355736;  // std dev = 3.441, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return -0.10481912614653383;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367147;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04131710123596856;  // std dev = 0.470, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,549 #pos=778 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.03494232868882131;  // std dev = 0.287, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.007177915043334119;  // std dev = 4.910, 188.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=29 */
%   | | | else return -0.001967836512054004;  // std dev = 3.444, 94.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1340070300080108;  // std dev = 9.42e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27520788341951385;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.0886597009209607;  // std dev = 2.389, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06639430988004383;  // std dev = 3.295, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return 0.03215471011036777;  // std dev = 22.189, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,479 #pos=738 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.009384489562981869;  // std dev = 4.364, 172.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=22 */
%   | | | else return 0.05550658651225738;  // std dev = 2.604, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.001366189229572674;  // std dev = 3.441, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return -0.09521356618118403;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.660564
   AUC PR    = 0.693862
   CLL	      = -0.7188
   Precision = 0.816667 at threshold = 0.5
   Recall    = 0.178182
   F1        = 0.292537


Total learning time: 93.303 seconds
Total inference time: 1.05 seconds
AUC ROC: 0.660564


Results scoring model
   AUC ROC   = 0.634326
   AUC PR    = 0.563968
   CLL	      = -0.580942
   Precision = 0.977778 at threshold = 0.5
   Recall    = 0.178499
   F1        = 0.301887


Total scoring time: 1.798 seconds
Refined model CLL: -0.580942


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.660564
   AUC PR    = 0.693862
   CLL	      = -0.7188
   Precision = 0.816667 at threshold = 0.5
   Recall    = 0.178182
   F1        = 0.292537


Total learning time: 99.192 seconds
Total inference time: 1.05 seconds
AUC ROC: 0.660564
Total revision time: 99.192
Best scored revision CLL: -0.580942


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:07:33
{'AUC ROC': 0.660564, 'AUC PR': 0.693862, 'CLL': -0.7188, 'Precision': [0.816667, 0.5], 'Recall': 0.178182, 'F1': 0.292537, 'Learning time': 99.192, 'Inference time': 1.05, 'parameter_0.4': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726402, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 2.951, 'Inference time': 0.679}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.17252851558977758;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.1502025434888525;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 3.49e-08, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.128539296417794;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.10830144350917699;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.92e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.09001812054524555;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.07396539233676895;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.89e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.06020016462729555;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 9.88e-08, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.04862001342927917;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.039025339627995044;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else return 0.03117058163219269;  // std dev = 29.205, 3,957.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,244 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.725107
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 4.076 seconds
Total inference time: 0.681 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.57973
   AUC PR    = 0.522605
   CLL	      = -0.596052
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.159459
   F1        = 0.275058


Total scoring time: 1.183 seconds
Parameter learned model CLL: -0.596052


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.08e-06, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.49e-08, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.92e-07, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.95e-07, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.89e-07, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [9.88e-08, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 236], 'false': [29.205, 2, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.03e-07, 0, 236], 'false': [29.205, 2, 1]}]]
[{'': [4.937669858671883e-15, 0.21554505986105807]}, {'': [-4.215084025695509e-15, 0.21554505986101954]}, {'': [1.2043097216272884e-15, 0.21554505986105618]}, {'': [-1.5053871520341105e-16, 0.21554505986105563]}, {'': [3.6129291648818656e-16, 0.21554505986101938]}, {'': [3.688198522483571e-16, 0.21554505986105213]}, {'': [3.53765980728016e-16, 0.21554505986105446]}, {'': [4.139814668093804e-17, 0.2155450598609976]}, {'': [-1.6559258672375216e-16, 0.21554505986106479]}, {'': [4.516161456102332e-17, 0.21554505986099484]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995088;  // std dev = 1.08e-06, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.597279369882121;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1863954940462457;  // std dev = 27.146, 3,342.000 (wgt'ed) examples reached here.  /* #neg=2,245 #pos=1,097 */
%   | | | else return 0.3753903144098579;  // std dev = 4.661, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05489454316135737;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03190780034773903;  // std dev = 6.363, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return 0.0050020819526590266;  // std dev = 4.233, 143.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109574;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16701148792203344;  // std dev = 0.471, 3,509.000 (wgt'ed) examples reached here.  /* #neg=2,337 #pos=1,172 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.04834272337445018;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.030222590716493303;  // std dev = 6.161, 264.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=46 */
%   | | | else return 0.003350418854433591;  // std dev = 4.519, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 5.33e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5094735422904366;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.029527728149610147;  // std dev = 3.176, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else return 0.14228460498367904;  // std dev = 0.471, 3,430.000 (wgt'ed) examples reached here.  /* #neg=2,285 #pos=1,145 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.04278599648722911;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.026072404822286187;  // std dev = 6.361, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return 7.295759390626929E-4;  // std dev = 4.232, 143.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583107;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11940969864511959;  // std dev = 0.471, 3,509.000 (wgt'ed) examples reached here.  /* #neg=2,337 #pos=1,172 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.036029903912798825;  // std dev = 5.486, 201.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=37 */
%   | | | else return -0.018138958868677835;  // std dev = 3.095, 86.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | else return -2.9218004959753627E-4;  // std dev = 0.356, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601498;  // std dev = 2.92e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3937499732074973;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.005475358579882208;  // std dev = 3.175, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else return 0.09849429127464662;  // std dev = 0.471, 3,430.000 (wgt'ed) examples reached here.  /* #neg=2,285 #pos=1,145 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.04109730853139396;  // std dev = 0.319, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.023810117049190047;  // std dev = 6.287, 278.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=48 */
%   | | | else return -0.004455083925741298;  // std dev = 4.234, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694881;  // std dev = 2.95e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4018686326011408;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.003967195334703569;  // std dev = 3.161, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07568799987975228;  // std dev = 27.108, 3,342.000 (wgt'ed) examples reached here.  /* #neg=2,245 #pos=1,097 */
%   | | | else return 0.22858790963419454;  // std dev = 4.661, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03574921618328038;  // std dev = 0.319, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02076974905842487;  // std dev = 6.287, 278.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=48 */
%   | | | else return -0.003887073870029453;  // std dev = 4.234, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325349;  // std dev = 2.89e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30711965887057885;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.003261247825083759;  // std dev = 3.161, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06114601914373855;  // std dev = 27.107, 3,342.000 (wgt'ed) examples reached here.  /* #neg=2,245 #pos=1,097 */
%   | | | else return 0.17950276466827475;  // std dev = 4.661, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03195949638665649;  // std dev = 5.477, 201.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=37 */
%   | | | else return -0.020722342848183136;  // std dev = 3.094, 86.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | else return -0.005694819484290244;  // std dev = 0.356, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527747;  // std dev = 9.88e-08, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.051581202121865184;  // std dev = 0.469, 3,509.000 (wgt'ed) examples reached here.  /* #neg=2,337 #pos=1,172 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.03441887009475857;  // std dev = 0.319, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.018556313086738937;  // std dev = 6.281, 278.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=48 */
%   | | | else return -0.0071743750099007774;  // std dev = 4.234, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936717;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2178810053294643;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.011961631618716271;  // std dev = 3.161, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.038526754101020154;  // std dev = 27.106, 3,342.000 (wgt'ed) examples reached here.  /* #neg=2,245 #pos=1,097 */
%   | | | else return 0.12606070470312733;  // std dev = 4.661, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04192474649552851;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018680431000780963;  // std dev = 6.144, 264.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=46 */
%   | | | else return -0.007247840130139591;  // std dev = 4.516, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801092;  // std dev = 1.03e-07, 236.000 (wgt'ed) examples reached here.  /* #pos=236 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.032375538494562095;  // std dev = 0.469, 3,509.000 (wgt'ed) examples reached here.  /* #neg=2,337 #pos=1,172 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.03729109163901732;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.015506228853121093;  // std dev = 6.343, 282.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */
%   | | | else return -0.007736152499051754;  // std dev = 4.232, 143.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=21 */


Results
   AUC ROC   = 0.66488
   AUC PR    = 0.698672
   CLL	      = -0.716161
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.18
   F1        = 0.295082


Total learning time: 136.222 seconds
Total inference time: 1.034 seconds
AUC ROC: 0.66488


Results scoring model
   AUC ROC   = 0.633125
   AUC PR    = 0.566325
   CLL	      = -0.583688
   Precision = 0.976834 at threshold = 0.5
   Recall    = 0.170946
   F1        = 0.290972


Total scoring time: 2.773 seconds
Refined model CLL: -0.583688


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.66488
   AUC PR    = 0.698672
   CLL	      = -0.716161
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.18
   F1        = 0.295082


Total learning time: 144.254 seconds
Total inference time: 1.034 seconds
AUC ROC: 0.66488
Total revision time: 144.254
Best scored revision CLL: -0.583688


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:10:00
{'AUC ROC': 0.66488, 'AUC PR': 0.698672, 'CLL': -0.716161, 'Precision': [0.818182, 0.5], 'Recall': 0.18, 'F1': 0.295082, 'Learning time': 144.254, 'Inference time': 1.034, 'parameter_0.6': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.725107, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 4.076, 'Inference time': 0.681}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.1708983175809816;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.1487959235904721;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.12736814181097986;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.10735886015745626;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.08928296708962676;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.86e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.07340837160152462;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.05978939389674025;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.04832500007059421;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.03881922229121612;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else return 0.0310310026477342;  // std dev = 33.634, 5,263.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,646 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726451
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 5.428 seconds
Total inference time: 0.683 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.582869
   AUC PR    = 0.527779
   CLL	      = -0.593743
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.165737
   F1        = 0.284348


Total scoring time: 1.333 seconds
Parameter learned model CLL: -0.593743


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.04e-06, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [3.86e-07, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.76e-07, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 327], 'false': [33.634, 3, 1]}]]
[{'': [3.3028286188237073e-15, 0.2149372062388738]}, {'': [-5.041159470836185e-15, 0.21493720623898313]}, {'': [-4.3458271300311937e-16, 0.21493720623885915]}, {'': [-9.560819686068626e-16, 0.21493720623888626]}, {'': [-6.301449338545231e-16, 0.2149372062389152]}, {'': [4.563118486532754e-16, 0.2149372062388933]}, {'': [1.8469765302632573e-16, 0.21493720623891746]}, {'': [2.3358820823917666e-16, 0.21493720623892382]}, {'': [-2.281559243266377e-16, 0.21493720623895254]}, {'': [-2.091429306327512e-16, 0.21493720623890614]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995085;  // std dev = 1.04e-06, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18649339745271923;  // std dev = 30.948, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.14588478415611736;  // std dev = 6.592, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4010060779566542;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.338918165868742;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.045076871352100686;  // std dev = 0.296, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.038476803951971755;  // std dev = 7.355, 366.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=66 */
%   | | | else return 0.0010060779566546882;  // std dev = 4.811, 189.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.719473412210958;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1623545578108998;  // std dev = 30.947, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.124879033816564;  // std dev = 6.594, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3448813335003234;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.2924673135019249;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01387449561050073;  // std dev = 6.608, 326.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=52 */
%   | | | else return 0.09283694684488533;  // std dev = 3.596, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.14197357824080592;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0031877120817749693;  // std dev = 4.804, 186.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.5553664367462832;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13864508691892022;  // std dev = 30.947, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.10713053991980773;  // std dev = 6.594, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28442098958734796;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.24366372329094393;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04708931084164423;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029008283113637567;  // std dev = 7.354, 370.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=66 */
%   | | | else return 0.0027989509417602984;  // std dev = 4.804, 186.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583117;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11650576577030683;  // std dev = 30.946, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.08882575090777095;  // std dev = 6.596, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22631131947886626;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.19681902068369744;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04128211830027031;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02695416927665722;  // std dev = 7.077, 348.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=61 */
%   | | | else return 0.0020800319687336675;  // std dev = 5.202, 208.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.32071184716015116;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09640171458751774;  // std dev = 30.946, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.07429553537776253;  // std dev = 6.596, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17545554879562364;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.15516440078791646;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04772355165684146;  // std dev = 0.296, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025816136675042286;  // std dev = 7.344, 366.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=66 */
%   | | | else return -0.002637395994315917;  // std dev = 4.808, 189.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694875;  // std dev = 3.86e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.49092579295375555;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.007908423566329719;  // std dev = 3.835, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07670982485364058;  // std dev = 31.255, 4,453.000 (wgt'ed) examples reached here.  /* #neg=3,005 #pos=1,448 */
%   | | | else return 0.12823241585994014;  // std dev = 5.460, 120.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0058165211251283;  // std dev = 6.604, 326.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=52 */
%   | | | else return 0.07053449990899685;  // std dev = 3.592, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else return -0.0023098429216220433;  // std dev = 0.350, 189.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325347;  // std dev = 2.46e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06389695810549922;  // std dev = 30.915, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.046421947665669906;  // std dev = 6.596, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10459632091061778;  // std dev = 4.203, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.08843568390737995;  // std dev = 3.561, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02700189651297309;  // std dev = 6.171, 263.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=47 */
%   | | | else return -0.009573618729901178;  // std dev = 3.816, 115.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=17 */
%   | | else return -0.002140852994784458;  // std dev = 0.361, 208.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1770964977452765;  // std dev = 2.76e-07, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05128624938926717;  // std dev = 30.915, 4,343.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,426 */
%   | | | else return 0.03782471731050753;  // std dev = 6.597, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07941710327990303;  // std dev = 4.166, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.06630305948914209;  // std dev = 3.604, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04013986964034341;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01802866298643538;  // std dev = 7.341, 370.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=66 */
%   | | | else return -0.003377173158876577;  // std dev = 4.804, 186.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.1527438580936716;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3616690948604778;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.016014235887987664;  // std dev = 3.833, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039465940851770034;  // std dev = 31.255, 4,453.000 (wgt'ed) examples reached here.  /* #neg=3,005 #pos=1,448 */
%   | | | else return 0.0553257019145343;  // std dev = 5.458, 120.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04736690665626424;  // std dev = 0.295, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.03537610444869399;  // std dev = 1.644, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.012737992967825471;  // std dev = 8.613, 525.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=90 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801184;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #pos=327 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.40808315539174483;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return -0.07304957824398417;  // std dev = 3.596, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.031516154079902964;  // std dev = 31.228, 4,454.000 (wgt'ed) examples reached here.  /* #neg=3,002 #pos=1,452 */
%   | | | else return 0.042795009384231884;  // std dev = 5.463, 120.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.02959544343914257;  // std dev = 5.427, 191.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=37 */
%   | | | else return -0.0047711944428389125;  // std dev = 4.803, 187.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=27 */
%   | | else return -0.005759096343445393;  // std dev = 0.361, 208.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=32 */


Results
   AUC ROC   = 0.680716
   AUC PR    = 0.711918
   CLL	      = -0.712066
   Precision = 0.967033 at threshold = 0.5
   Recall    = 0.16
   F1        = 0.274571


Total learning time: 646.451 seconds
Total inference time: 1.399 seconds
AUC ROC: 0.680716


Results scoring model
   AUC ROC   = 0.63665
   AUC PR    = 0.570677
   CLL	      = -0.582659
   Precision = 0.923858 at threshold = 0.5
   Recall    = 0.184491
   F1        = 0.307562


Total scoring time: 17.636 seconds
Refined model CLL: -0.582659


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.680716
   AUC PR    = 0.711918
   CLL	      = -0.712066
   Precision = 0.967033 at threshold = 0.5
   Recall    = 0.16
   F1        = 0.274571


Total learning time: 670.848 seconds
Total inference time: 1.399 seconds
AUC ROC: 0.680716
Total revision time: 670.848
Best scored revision CLL: -0.582659


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:21:13
{'AUC ROC': 0.680716, 'AUC PR': 0.711918, 'CLL': -0.712066, 'Precision': [0.967033, 0.5], 'Recall': 0.16, 'F1': 0.274571, 'Learning time': 670.848, 'Inference time': 1.399, 'parameter_0.8': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726451, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 5.428, 'Inference time': 0.683}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- actor(B).;false;true
2;false;movie(C, A), movie(C, B).;true;false
2;false,true;female(A).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- actor(A), director(B).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- director(B), actor(A).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- actor(A), director(B).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- director(B), actor(A).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.14844949348678393;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.1270796058619745;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.10712650654861984;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.08910160789144565;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.07327082725656957;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.059687850274182615;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.04825197845490163;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.038768128017127645;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.030996340439887384;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */


Results
   AUC ROC   = 0.574545
   AUC PR    = 0.655418
   CLL	      = -0.726785
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.149091
   F1        = 0.259494


Total learning time: 7.269 seconds
Total inference time: 0.705 seconds
AUC ROC: 0.574545


Results scoring model
   AUC ROC   = 0.583705
   AUC PR    = 0.529179
   CLL	      = -0.593149
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 1.541 seconds
Parameter learned model CLL: -0.593149


Structure after Parameter Learning
[['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [4.42e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [2.46e-07, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [7.3e-08, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}], ['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [0.0, 0, 413], 'false': [37.582, 4, 2]}]]
[{'': [7.157040631385029e-15, 0.21478670132777686]}, {'': [-5.4365981719174735e-15, 0.21478670132780867]}, {'': [-1.3419451183846928e-15, 0.21478670132786787]}, {'': [-2.1677574989291194e-15, 0.21478670132778852]}, {'': [-1.4623760905474218e-15, 0.2147867013277946]}, {'': [4.731216763535776e-16, 0.21478670132780514]}, {'': [1.4623760905474217e-16, 0.2147867013278788]}, {'': [1.2903318446006663e-17, 0.21478670132789268]}, {'': [-3.5699181033951763e-16, 0.21478670132780694]}, {'': [-3.4193793881917656e-16, 0.2147867013278169]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
1;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
2;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
3;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
4;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
5;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
6;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
7;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
8;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true
9;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.7194734122109582;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16281165607612197;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.11705241862532781;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.319423271370676;  // std dev = 4.690, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3072979576662547;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01408015333877794;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780367;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0027510083643892155;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.555366436746283;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13902683790466866;  // std dev = 34.601, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.1005128805374948;  // std dev = 7.306, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26507324162691565;  // std dev = 4.691, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2548459349960114;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0663708377176686;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.030817106258793164;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0016902463891608228;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.4175135841583122;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11683219078218116;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.08298829629729206;  // std dev = 7.308, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21386078766611724;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.20308413151775795;  // std dev = 4.058, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008420771579378717;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07848518521315012;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0012548140304437653;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12546624155873398;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.3207118471601514;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0966582515623662;  // std dev = 34.600, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.06957095584068729;  // std dev = 7.309, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16750919730103575;  // std dev = 4.693, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15878233815566578;  // std dev = 4.057, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.059864411903200146;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02482291379456216;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0025328273287383487;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2551722425694871;  // std dev = 4.42e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0790770048865047;  // std dev = 34.599, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.05588637066419637;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1298666978256107;  // std dev = 4.694, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12081726203224821;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.062418258982099094;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0239462291957876;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004991879719896078;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.2097577156325346;  // std dev = 2.46e-07, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06396870506991839;  // std dev = 34.598, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.04604740227441123;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09903318180180415;  // std dev = 4.695, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09166851495201697;  // std dev = 4.054, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055129556941216094;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021151916019013166;  // std dev = 8.037, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004937583411461064;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.17709649774527705;  // std dev = 7.30e-08, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4363307661888433;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return -0.0560222596714836;  // std dev = 4.015, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05007518751086453;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.07261257093281742;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004615290545750633;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05927485308427525;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.003351986811219011;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11109717050710886;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.15274385809367164;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04103059210227441;  // std dev = 34.563, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.027527883231084554;  // std dev = 7.311, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05850328953639903;  // std dev = 4.696, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05030428589983236;  // std dev = 4.053, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05757400211521619;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.018271579524092894;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0060456868720041345;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.13400703000801226;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23599209298141793;  // std dev = 2.996, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return -0.03173374212288632;  // std dev = 4.009, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.031639069288798546;  // std dev = 34.950, 5,563.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=1,813 */
%   | | | else return 0.041058818459403054;  // std dev = 6.162, 152.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=77 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.001603320815050085;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.056053215381370064;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0036064843459702144;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10004492093787608;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.672056
   AUC PR    = 0.710045
   CLL	      = -0.710545
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 876.577 seconds
Total inference time: 1.509 seconds
AUC ROC: 0.672056


Results scoring model
   AUC ROC   = 0.633719
   AUC PR    = 0.565654
   CLL	      = -0.582758
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.16741
   F1        = 0.286806


Total scoring time: 22.521 seconds
Refined model CLL: -0.582758


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.672056
   AUC PR    = 0.710045
   CLL	      = -0.710545
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.150909
   F1        = 0.262243


Total learning time: 907.9079999999999 seconds
Total inference time: 1.509 seconds
AUC ROC: 0.672056
Total revision time: 907.9079999999999
Best scored revision CLL: -0.582758


Dataset: 3_imdb_cora, Fold: 5, Type: Transfer (trRDN-B), Time: 14:36:24
{'AUC ROC': 0.672056, 'AUC PR': 0.710045, 'CLL': -0.710545, 'Precision': [1.0, 0.5], 'Recall': 0.150909, 'F1': 0.262243, 'Learning time': 907.9079999999999, 'Inference time': 1.509, 'parameter_1.0': {'AUC ROC': 0.574545, 'AUC PR': 0.655418, 'CLL': -0.726785, 'Precision': [1.0, 0.5], 'Recall': 0.149091, 'F1': 0.259494, 'Learning time': 7.269, 'Inference time': 0.705}}


